<?php

use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\InactiveScopeException;
use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;

/**
 * appDevDebugProjectContainer.
 *
 * This class has been auto-generated
 * by the Symfony Dependency Injection Component.
 */
class appDevDebugProjectContainer extends Container
{
    private $parameters;
    private $targetDirs = array();

    /**
     * Constructor.
     */
    public function __construct()
    {
        $this->parameters = $this->getDefaultParameters();

        $this->services =
        $this->scopedServices =
        $this->scopeStacks = array();
        $this->scopes = array('request' => 'container');
        $this->scopeChildren = array('request' => array());
        $this->methodMap = array(
            'a2lix_translation_form.default.listener.translations' => 'getA2lixTranslationForm_Default_Listener_TranslationsService',
            'a2lix_translation_form.default.service.translation' => 'getA2lixTranslationForm_Default_Service_TranslationService',
            'a2lix_translation_form.default.type.translations' => 'getA2lixTranslationForm_Default_Type_TranslationsService',
            'a2lix_translation_form.default.type.translationsfields' => 'getA2lixTranslationForm_Default_Type_TranslationsfieldsService',
            'a2lix_translation_form.default.type.translationsforms' => 'getA2lixTranslationForm_Default_Type_TranslationsformsService',
            'a2lix_translation_form.default.type.translationslocalesselector' => 'getA2lixTranslationForm_Default_Type_TranslationslocalesselectorService',
            'a2lix_translation_form.gedmo.listener.translations' => 'getA2lixTranslationForm_Gedmo_Listener_TranslationsService',
            'a2lix_translation_form.gedmo.service.translation' => 'getA2lixTranslationForm_Gedmo_Service_TranslationService',
            'a2lix_translation_form.gedmo.type.translations' => 'getA2lixTranslationForm_Gedmo_Type_TranslationsService',
            'a2lix_translation_form.gedmo.type.translationslocales' => 'getA2lixTranslationForm_Gedmo_Type_TranslationslocalesService',
            'a2lix_translation_form.listener.controller' => 'getA2lixTranslationForm_Listener_ControllerService',
            'akeneo_batch.connectors' => 'getAkeneoBatch_ConnectorsService',
            'akeneo_batch.job_factory' => 'getAkeneoBatch_JobFactoryService',
            'akeneo_batch.job_repository' => 'getAkeneoBatch_JobRepositoryService',
            'akeneo_batch.launcher.simple_job_launcher' => 'getAkeneoBatch_Launcher_SimpleJobLauncherService',
            'akeneo_batch.logger.batch_log_handler' => 'getAkeneoBatch_Logger_BatchLogHandlerService',
            'akeneo_batch.logger_subscriber' => 'getAkeneoBatch_LoggerSubscriberService',
            'akeneo_batch.mail_notifier' => 'getAkeneoBatch_MailNotifierService',
            'akeneo_batch.manager.job_execution' => 'getAkeneoBatch_Manager_JobExecutionService',
            'akeneo_batch.notification_subscriber' => 'getAkeneoBatch_NotificationSubscriberService',
            'akeneo_batch.set_job_execution_log_file_subscriber' => 'getAkeneoBatch_SetJobExecutionLogFileSubscriberService',
            'akeneo_batch.step_factory' => 'getAkeneoBatch_StepFactoryService',
            'annotation_reader' => 'getAnnotationReaderService',
            'assetic.asset_factory' => 'getAssetic_AssetFactoryService',
            'assetic.asset_manager' => 'getAssetic_AssetManagerService',
            'assetic.filter.cssmin' => 'getAssetic_Filter_CssminService',
            'assetic.filter.cssrewrite' => 'getAssetic_Filter_CssrewriteService',
            'assetic.filter.lessphp' => 'getAssetic_Filter_LessphpService',
            'assetic.filter_manager' => 'getAssetic_FilterManagerService',
            'assetic.helper.static' => 'getAssetic_Helper_StaticService',
            'assets.context' => 'getAssets_ContextService',
            'assets.packages' => 'getAssets_PackagesService',
            'attachments_filesystem' => 'getAttachmentsFilesystemService',
            'besimple.soap.cache' => 'getBesimple_Soap_CacheService',
            'besimple.soap.context.soap' => 'getBesimple_Soap_Context_SoapService',
            'besimple.soap.converter.collection' => 'getBesimple_Soap_Converter_CollectionService',
            'besimple.soap.definition.loader' => 'getBesimple_Soap_Definition_LoaderService',
            'besimple.soap.exception_listener' => 'getBesimple_Soap_ExceptionListenerService',
            'besimple.soap.request_format.listener' => 'getBesimple_Soap_RequestFormat_ListenerService',
            'besimple.soap.response' => 'getBesimple_Soap_ResponseService',
            'besimple.soap.response.listener' => 'getBesimple_Soap_Response_ListenerService',
            'besimple.soap.type.repository' => 'getBesimple_Soap_Type_RepositoryService',
            'cache_clearer' => 'getCacheClearerService',
            'cache_warmer' => 'getCacheWarmerService',
            'clank.client_event.listener' => 'getClank_ClientEvent_ListenerService',
            'controller_name_converter' => 'getControllerNameConverterService',
            'data_collector.form' => 'getDataCollector_FormService',
            'data_collector.form.extractor' => 'getDataCollector_Form_ExtractorService',
            'data_collector.request' => 'getDataCollector_RequestService',
            'data_collector.router' => 'getDataCollector_RouterService',
            'data_collector.translation' => 'getDataCollector_TranslationService',
            'debug.controller_resolver' => 'getDebug_ControllerResolverService',
            'debug.debug_handlers_listener' => 'getDebug_DebugHandlersListenerService',
            'debug.event_dispatcher' => 'getDebug_EventDispatcherService',
            'debug.stopwatch' => 'getDebug_StopwatchService',
            'debug.templating.engine.php' => 'getDebug_Templating_Engine_PhpService',
            'doctrine' => 'getDoctrineService',
            'doctrine.dbal.connection_factory' => 'getDoctrine_Dbal_ConnectionFactoryService',
            'doctrine.dbal.default_connection' => 'getDoctrine_Dbal_DefaultConnectionService',
            'doctrine.dbal.logger' => 'getDoctrine_Dbal_LoggerService',
            'doctrine.dbal.logger.profiling.default' => 'getDoctrine_Dbal_Logger_Profiling_DefaultService',
            'doctrine.dbal.logger.profiling.report_source' => 'getDoctrine_Dbal_Logger_Profiling_ReportSourceService',
            'doctrine.dbal.logger.profiling.report_target' => 'getDoctrine_Dbal_Logger_Profiling_ReportTargetService',
            'doctrine.dbal.logger.profiling.session' => 'getDoctrine_Dbal_Logger_Profiling_SessionService',
            'doctrine.dbal.report_source_connection' => 'getDoctrine_Dbal_ReportSourceConnectionService',
            'doctrine.dbal.report_target_connection' => 'getDoctrine_Dbal_ReportTargetConnectionService',
            'doctrine.dbal.session_connection' => 'getDoctrine_Dbal_SessionConnectionService',
            'doctrine.dbal.session_connection.wrapped' => 'getDoctrine_Dbal_SessionConnection_WrappedService',
            'doctrine.metadata.cache' => 'getDoctrine_Metadata_CacheService',
            'doctrine.orm.default_entity_listener_resolver' => 'getDoctrine_Orm_DefaultEntityListenerResolverService',
            'doctrine.orm.default_entity_manager' => 'getDoctrine_Orm_DefaultEntityManagerService',
            'doctrine.orm.default_manager_configurator' => 'getDoctrine_Orm_DefaultManagerConfiguratorService',
            'doctrine.orm.listeners.resolve_target_entity' => 'getDoctrine_Orm_Listeners_ResolveTargetEntityService',
            'doctrine.orm.validator.unique' => 'getDoctrine_Orm_Validator_UniqueService',
            'doctrine.orm.validator_initializer' => 'getDoctrine_Orm_ValidatorInitializerService',
            'doctrine_cache.providers.doctrine.orm.default_query_cache' => 'getDoctrineCache_Providers_Doctrine_Orm_DefaultQueryCacheService',
            'doctrine_cache.providers.doctrine.orm.default_result_cache' => 'getDoctrineCache_Providers_Doctrine_Orm_DefaultResultCacheService',
            'escape_wsse_authentication.encoder' => 'getEscapeWsseAuthentication_EncoderService',
            'escape_wsse_authentication.encoder.wsse_secured' => 'getEscapeWsseAuthentication_Encoder_WsseSecuredService',
            'escape_wsse_authentication.entry_point' => 'getEscapeWsseAuthentication_EntryPointService',
            'escape_wsse_authentication.entry_point.wsse_secured' => 'getEscapeWsseAuthentication_EntryPoint_WsseSecuredService',
            'escape_wsse_authentication.listener' => 'getEscapeWsseAuthentication_ListenerService',
            'escape_wsse_authentication.listener.wsse_secured' => 'getEscapeWsseAuthentication_Listener_WsseSecuredService',
            'escape_wsse_authentication.nonce_cache' => 'getEscapeWsseAuthentication_NonceCacheService',
            'escape_wsse_authentication.provider' => 'getEscapeWsseAuthentication_ProviderService',
            'escape_wsse_authentication.provider.wsse_secured' => 'getEscapeWsseAuthentication_Provider_WsseSecuredService',
            'file_locator' => 'getFileLocatorService',
            'filesystem' => 'getFilesystemService',
            'form.csrf_provider' => 'getForm_CsrfProviderService',
            'form.factory' => 'getForm_FactoryService',
            'form.registry' => 'getForm_RegistryService',
            'form.resolved_type_factory' => 'getForm_ResolvedTypeFactoryService',
            'form.type.birthday' => 'getForm_Type_BirthdayService',
            'form.type.button' => 'getForm_Type_ButtonService',
            'form.type.checkbox' => 'getForm_Type_CheckboxService',
            'form.type.choice' => 'getForm_Type_ChoiceService',
            'form.type.collection' => 'getForm_Type_CollectionService',
            'form.type.country' => 'getForm_Type_CountryService',
            'form.type.currency' => 'getForm_Type_CurrencyService',
            'form.type.date' => 'getForm_Type_DateService',
            'form.type.datetime' => 'getForm_Type_DatetimeService',
            'form.type.email' => 'getForm_Type_EmailService',
            'form.type.entity' => 'getForm_Type_EntityService',
            'form.type.file' => 'getForm_Type_FileService',
            'form.type.form' => 'getForm_Type_FormService',
            'form.type.hidden' => 'getForm_Type_HiddenService',
            'form.type.integer' => 'getForm_Type_IntegerService',
            'form.type.language' => 'getForm_Type_LanguageService',
            'form.type.locale' => 'getForm_Type_LocaleService',
            'form.type.money' => 'getForm_Type_MoneyService',
            'form.type.number' => 'getForm_Type_NumberService',
            'form.type.password' => 'getForm_Type_PasswordService',
            'form.type.percent' => 'getForm_Type_PercentService',
            'form.type.radio' => 'getForm_Type_RadioService',
            'form.type.repeated' => 'getForm_Type_RepeatedService',
            'form.type.reset' => 'getForm_Type_ResetService',
            'form.type.search' => 'getForm_Type_SearchService',
            'form.type.submit' => 'getForm_Type_SubmitService',
            'form.type.text' => 'getForm_Type_TextService',
            'form.type.textarea' => 'getForm_Type_TextareaService',
            'form.type.time' => 'getForm_Type_TimeService',
            'form.type.timezone' => 'getForm_Type_TimezoneService',
            'form.type.url' => 'getForm_Type_UrlService',
            'form.type_extension.csrf' => 'getForm_TypeExtension_CsrfService',
            'form.type_extension.form.data_collector' => 'getForm_TypeExtension_Form_DataCollectorService',
            'form.type_extension.form.http_foundation' => 'getForm_TypeExtension_Form_HttpFoundationService',
            'form.type_extension.form.validator' => 'getForm_TypeExtension_Form_ValidatorService',
            'form.type_extension.repeated.validator' => 'getForm_TypeExtension_Repeated_ValidatorService',
            'form.type_extension.submit.validator' => 'getForm_TypeExtension_Submit_ValidatorService',
            'form.type_guesser.doctrine' => 'getForm_TypeGuesser_DoctrineService',
            'form.type_guesser.validator' => 'getForm_TypeGuesser_ValidatorService',
            'fos_js_routing.controller' => 'getFosJsRouting_ControllerService',
            'fos_js_routing.extractor' => 'getFosJsRouting_ExtractorService',
            'fos_js_routing.serializer' => 'getFosJsRouting_SerializerService',
            'fos_rest.body_listener' => 'getFosRest_BodyListenerService',
            'fos_rest.decoder.json' => 'getFosRest_Decoder_JsonService',
            'fos_rest.decoder.jsontoform' => 'getFosRest_Decoder_JsontoformService',
            'fos_rest.decoder.xml' => 'getFosRest_Decoder_XmlService',
            'fos_rest.decoder_provider' => 'getFosRest_DecoderProviderService',
            'fos_rest.exception_format_negotiator' => 'getFosRest_ExceptionFormatNegotiatorService',
            'fos_rest.format_listener' => 'getFosRest_FormatListenerService',
            'fos_rest.format_negotiator' => 'getFosRest_FormatNegotiatorService',
            'fos_rest.inflector.doctrine' => 'getFosRest_Inflector_DoctrineService',
            'fos_rest.normalizer.camel_keys' => 'getFosRest_Normalizer_CamelKeysService',
            'fos_rest.request.param_fetcher' => 'getFosRest_Request_ParamFetcherService',
            'fos_rest.request.param_fetcher.reader' => 'getFosRest_Request_ParamFetcher_ReaderService',
            'fos_rest.request_matcher.0dfc4cce134bee15f08405cb5cea4845b13ff7d8c8f779004218432a2c552bd0cd9f9d27' => 'getFosRest_RequestMatcher_0dfc4cce134bee15f08405cb5cea4845b13ff7d8c8f779004218432a2c552bd0cd9f9d27Service',
            'fos_rest.request_matcher.113eaebe4b0f43058a028904ffe5ac13f47c9c6add959b79cc6cfe86c113ae5131da5524' => 'getFosRest_RequestMatcher_113eaebe4b0f43058a028904ffe5ac13f47c9c6add959b79cc6cfe86c113ae5131da5524Service',
            'fos_rest.request_matcher.23fd25bbfcedbffe3e33ba20fa663bbc40b82f2b723fb0ffbd7027cee94f4dac389a22fa' => 'getFosRest_RequestMatcher_23fd25bbfcedbffe3e33ba20fa663bbc40b82f2b723fb0ffbd7027cee94f4dac389a22faService',
            'fos_rest.request_matcher.50d7031fd332f324b33953b2158cded5b34cf57c3cd709fdaa24d6818252fd77ab4624ee' => 'getFosRest_RequestMatcher_50d7031fd332f324b33953b2158cded5b34cf57c3cd709fdaa24d6818252fd77ab4624eeService',
            'fos_rest.routing.loader.controller' => 'getFosRest_Routing_Loader_ControllerService',
            'fos_rest.routing.loader.processor' => 'getFosRest_Routing_Loader_ProcessorService',
            'fos_rest.routing.loader.reader.action' => 'getFosRest_Routing_Loader_Reader_ActionService',
            'fos_rest.routing.loader.reader.controller' => 'getFosRest_Routing_Loader_Reader_ControllerService',
            'fos_rest.routing.loader.xml_collection' => 'getFosRest_Routing_Loader_XmlCollectionService',
            'fos_rest.routing.loader.yaml_collection' => 'getFosRest_Routing_Loader_YamlCollectionService',
            'fos_rest.serializer.exception_wrapper_serialize_handler' => 'getFosRest_Serializer_ExceptionWrapperSerializeHandlerService',
            'fos_rest.view.exception_wrapper_handler' => 'getFosRest_View_ExceptionWrapperHandlerService',
            'fos_rest.view_handler' => 'getFosRest_ViewHandlerService',
            'fos_rest.violation_formatter' => 'getFosRest_ViolationFormatterService',
            'fragment.handler' => 'getFragment_HandlerService',
            'fragment.listener' => 'getFragment_ListenerService',
            'fragment.renderer.esi' => 'getFragment_Renderer_EsiService',
            'fragment.renderer.hinclude' => 'getFragment_Renderer_HincludeService',
            'fragment.renderer.inline' => 'getFragment_Renderer_InlineService',
            'fragment.renderer.ssi' => 'getFragment_Renderer_SsiService',
            'genemu.form.core.type.captcha' => 'getGenemu_Form_Core_Type_CaptchaService',
            'genemu.form.core.type.plain' => 'getGenemu_Form_Core_Type_PlainService',
            'genemu.form.core.type.recaptcha' => 'getGenemu_Form_Core_Type_RecaptchaService',
            'genemu.form.core.type.tinymce' => 'getGenemu_Form_Core_Type_TinymceService',
            'genemu.form.entity.type.ajaxentity' => 'getGenemu_Form_Entity_Type_AjaxentityService',
            'genemu.form.jquery.type.autocomplete.document' => 'getGenemu_Form_Jquery_Type_Autocomplete_DocumentService',
            'genemu.form.jquery.type.autocomplete.entity' => 'getGenemu_Form_Jquery_Type_Autocomplete_EntityService',
            'genemu.form.jquery.type.autocomplete.text' => 'getGenemu_Form_Jquery_Type_Autocomplete_TextService',
            'genemu.form.jquery.type.autocompleter.choice' => 'getGenemu_Form_Jquery_Type_Autocompleter_ChoiceService',
            'genemu.form.jquery.type.autocompleter.country' => 'getGenemu_Form_Jquery_Type_Autocompleter_CountryService',
            'genemu.form.jquery.type.autocompleter.currency' => 'getGenemu_Form_Jquery_Type_Autocompleter_CurrencyService',
            'genemu.form.jquery.type.autocompleter.document' => 'getGenemu_Form_Jquery_Type_Autocompleter_DocumentService',
            'genemu.form.jquery.type.autocompleter.entity' => 'getGenemu_Form_Jquery_Type_Autocompleter_EntityService',
            'genemu.form.jquery.type.autocompleter.language' => 'getGenemu_Form_Jquery_Type_Autocompleter_LanguageService',
            'genemu.form.jquery.type.autocompleter.locale' => 'getGenemu_Form_Jquery_Type_Autocompleter_LocaleService',
            'genemu.form.jquery.type.autocompleter.model' => 'getGenemu_Form_Jquery_Type_Autocompleter_ModelService',
            'genemu.form.jquery.type.autocompleter.timezone' => 'getGenemu_Form_Jquery_Type_Autocompleter_TimezoneService',
            'genemu.form.jquery.type.chosen.choice' => 'getGenemu_Form_Jquery_Type_Chosen_ChoiceService',
            'genemu.form.jquery.type.chosen.country' => 'getGenemu_Form_Jquery_Type_Chosen_CountryService',
            'genemu.form.jquery.type.chosen.currency' => 'getGenemu_Form_Jquery_Type_Chosen_CurrencyService',
            'genemu.form.jquery.type.chosen.document' => 'getGenemu_Form_Jquery_Type_Chosen_DocumentService',
            'genemu.form.jquery.type.chosen.entity' => 'getGenemu_Form_Jquery_Type_Chosen_EntityService',
            'genemu.form.jquery.type.chosen.language' => 'getGenemu_Form_Jquery_Type_Chosen_LanguageService',
            'genemu.form.jquery.type.chosen.locale' => 'getGenemu_Form_Jquery_Type_Chosen_LocaleService',
            'genemu.form.jquery.type.chosen.model' => 'getGenemu_Form_Jquery_Type_Chosen_ModelService',
            'genemu.form.jquery.type.chosen.timezone' => 'getGenemu_Form_Jquery_Type_Chosen_TimezoneService',
            'genemu.form.jquery.type.color' => 'getGenemu_Form_Jquery_Type_ColorService',
            'genemu.form.jquery.type.date' => 'getGenemu_Form_Jquery_Type_DateService',
            'genemu.form.jquery.type.file' => 'getGenemu_Form_Jquery_Type_FileService',
            'genemu.form.jquery.type.geolocation' => 'getGenemu_Form_Jquery_Type_GeolocationService',
            'genemu.form.jquery.type.image' => 'getGenemu_Form_Jquery_Type_ImageService',
            'genemu.form.jquery.type.rating' => 'getGenemu_Form_Jquery_Type_RatingService',
            'genemu.form.jquery.type.select2.choice' => 'getGenemu_Form_Jquery_Type_Select2_ChoiceService',
            'genemu.form.jquery.type.select2.country' => 'getGenemu_Form_Jquery_Type_Select2_CountryService',
            'genemu.form.jquery.type.select2.currency' => 'getGenemu_Form_Jquery_Type_Select2_CurrencyService',
            'genemu.form.jquery.type.select2.document' => 'getGenemu_Form_Jquery_Type_Select2_DocumentService',
            'genemu.form.jquery.type.select2.entity' => 'getGenemu_Form_Jquery_Type_Select2_EntityService',
            'genemu.form.jquery.type.select2.hidden' => 'getGenemu_Form_Jquery_Type_Select2_HiddenService',
            'genemu.form.jquery.type.select2.language' => 'getGenemu_Form_Jquery_Type_Select2_LanguageService',
            'genemu.form.jquery.type.select2.locale' => 'getGenemu_Form_Jquery_Type_Select2_LocaleService',
            'genemu.form.jquery.type.select2.model' => 'getGenemu_Form_Jquery_Type_Select2_ModelService',
            'genemu.form.jquery.type.select2.timezone' => 'getGenemu_Form_Jquery_Type_Select2_TimezoneService',
            'genemu.form.jquery.type.slider' => 'getGenemu_Form_Jquery_Type_SliderService',
            'genemu.form.jquery.type.tokeninput.choice' => 'getGenemu_Form_Jquery_Type_Tokeninput_ChoiceService',
            'genemu.form.jquery.type.tokeninput.country' => 'getGenemu_Form_Jquery_Type_Tokeninput_CountryService',
            'genemu.form.jquery.type.tokeninput.currency' => 'getGenemu_Form_Jquery_Type_Tokeninput_CurrencyService',
            'genemu.form.jquery.type.tokeninput.document' => 'getGenemu_Form_Jquery_Type_Tokeninput_DocumentService',
            'genemu.form.jquery.type.tokeninput.entity' => 'getGenemu_Form_Jquery_Type_Tokeninput_EntityService',
            'genemu.form.jquery.type.tokeninput.language' => 'getGenemu_Form_Jquery_Type_Tokeninput_LanguageService',
            'genemu.form.jquery.type.tokeninput.locale' => 'getGenemu_Form_Jquery_Type_Tokeninput_LocaleService',
            'genemu.form.jquery.type.tokeninput.model' => 'getGenemu_Form_Jquery_Type_Tokeninput_ModelService',
            'genemu.form.jquery.type.tokeninput.timezone' => 'getGenemu_Form_Jquery_Type_Tokeninput_TimezoneService',
            'genemu.form.model.type.ajaxmodel' => 'getGenemu_Form_Model_Type_AjaxmodelService',
            'genemu.form.type_recaptcha.validator' => 'getGenemu_Form_TypeRecaptcha_ValidatorService',
            'genemu.gd.captcha' => 'getGenemu_Gd_CaptchaService',
            'genemu.twig.extension.form' => 'getGenemu_Twig_Extension_FormService',
            'http_kernel' => 'getHttpKernelService',
            'hwi_oauth.resource_owner.google' => 'getHwiOauth_ResourceOwner_GoogleService',
            'hwi_oauth.resource_ownermap.main' => 'getHwiOauth_ResourceOwnermap_MainService',
            'hwi_oauth.security.oauth_utils' => 'getHwiOauth_Security_OauthUtilsService',
            'hwi_oauth.templating.helper.oauth' => 'getHwiOauth_Templating_Helper_OauthService',
            'jdare_clank.clank_app' => 'getJdareClank_ClankAppService',
            'jdare_clank.clank_handler_rpc' => 'getJdareClank_ClankHandlerRpcService',
            'jdare_clank.clank_handler_topic' => 'getJdareClank_ClankHandlerTopicService',
            'jdare_clank.entry_point' => 'getJdareClank_EntryPointService',
            'jdare_clank.periodic_sample_service' => 'getJdareClank_PeriodicSampleServiceService',
            'jdare_clank.rpc_sample_service' => 'getJdareClank_RpcSampleServiceService',
            'jdare_clank.topic_sample_service' => 'getJdareClank_TopicSampleServiceService',
            'jdare_clank.twig.clank_extension' => 'getJdareClank_Twig_ClankExtensionService',
            'jdare_clank.web_socket_server' => 'getJdareClank_WebSocketServerService',
            'jms_job_queue.entity.many_to_any_listener' => 'getJmsJobQueue_Entity_ManyToAnyListenerService',
            'jms_job_queue.entity.statistics_listener' => 'getJmsJobQueue_Entity_StatisticsListenerService',
            'jms_job_queue.twig.extension' => 'getJmsJobQueue_Twig_ExtensionService',
            'jms_serializer' => 'getJmsSerializerService',
            'jms_serializer.array_collection_handler' => 'getJmsSerializer_ArrayCollectionHandlerService',
            'jms_serializer.constraint_violation_handler' => 'getJmsSerializer_ConstraintViolationHandlerService',
            'jms_serializer.datetime_handler' => 'getJmsSerializer_DatetimeHandlerService',
            'jms_serializer.doctrine_proxy_subscriber' => 'getJmsSerializer_DoctrineProxySubscriberService',
            'jms_serializer.form_error_handler' => 'getJmsSerializer_FormErrorHandlerService',
            'jms_serializer.handler_registry' => 'getJmsSerializer_HandlerRegistryService',
            'jms_serializer.json_deserialization_visitor' => 'getJmsSerializer_JsonDeserializationVisitorService',
            'jms_serializer.json_serialization_visitor' => 'getJmsSerializer_JsonSerializationVisitorService',
            'jms_serializer.metadata_driver' => 'getJmsSerializer_MetadataDriverService',
            'jms_serializer.metadata_factory' => 'getJmsSerializer_MetadataFactoryService',
            'jms_serializer.naming_strategy' => 'getJmsSerializer_NamingStrategyService',
            'jms_serializer.object_constructor' => 'getJmsSerializer_ObjectConstructorService',
            'jms_serializer.php_collection_handler' => 'getJmsSerializer_PhpCollectionHandlerService',
            'jms_serializer.stopwatch_subscriber' => 'getJmsSerializer_StopwatchSubscriberService',
            'jms_serializer.templating.helper.serializer' => 'getJmsSerializer_Templating_Helper_SerializerService',
            'jms_serializer.unserialize_object_constructor' => 'getJmsSerializer_UnserializeObjectConstructorService',
            'jms_serializer.xml_deserialization_visitor' => 'getJmsSerializer_XmlDeserializationVisitorService',
            'jms_serializer.xml_serialization_visitor' => 'getJmsSerializer_XmlSerializationVisitorService',
            'jms_serializer.yaml_serialization_visitor' => 'getJmsSerializer_YamlSerializationVisitorService',
            'kernel' => 'getKernelService',
            'kernel.listener.hashnav_response' => 'getKernel_Listener_HashnavResponseService',
            'kernel.listener.install.event' => 'getKernel_Listener_Install_EventService',
            'kernel.listener.maintenance.event' => 'getKernel_Listener_Maintenance_EventService',
            'kernel.listener.nav_history_response' => 'getKernel_Listener_NavHistoryResponseService',
            'kernel.listener.title_service.request_listener' => 'getKernel_Listener_TitleService_RequestListenerService',
            'knp_gaufrette.filesystem_map' => 'getKnpGaufrette_FilesystemMapService',
            'knp_menu.factory' => 'getKnpMenu_FactoryService',
            'knp_menu.helper' => 'getKnpMenu_HelperService',
            'knp_menu.listener.voters' => 'getKnpMenu_Listener_VotersService',
            'knp_menu.matcher' => 'getKnpMenu_MatcherService',
            'knp_menu.menu_provider' => 'getKnpMenu_MenuProviderService',
            'knp_menu.renderer.list' => 'getKnpMenu_Renderer_ListService',
            'knp_menu.renderer.twig' => 'getKnpMenu_Renderer_TwigService',
            'knp_menu.renderer_provider' => 'getKnpMenu_RendererProviderService',
            'knp_menu.voter.router' => 'getKnpMenu_Voter_RouterService',
            'knp_voter_request' => 'getKnpVoterRequestService',
            'lexik_maintenance.driver.factory' => 'getLexikMaintenance_Driver_FactoryService',
            'lexik_maintenance.listener' => 'getLexikMaintenance_ListenerService',
            'liip_imagine' => 'getLiipImagineService',
            'liip_imagine.cache.clearer' => 'getLiipImagine_Cache_ClearerService',
            'liip_imagine.cache.manager' => 'getLiipImagine_Cache_ManagerService',
            'liip_imagine.cache.resolver.no_cache' => 'getLiipImagine_Cache_Resolver_NoCacheService',
            'liip_imagine.cache.resolver.web_path' => 'getLiipImagine_Cache_Resolver_WebPathService',
            'liip_imagine.controller' => 'getLiipImagine_ControllerService',
            'liip_imagine.data.loader.filesystem' => 'getLiipImagine_Data_Loader_FilesystemService',
            'liip_imagine.data.manager' => 'getLiipImagine_Data_ManagerService',
            'liip_imagine.filter.configuration' => 'getLiipImagine_Filter_ConfigurationService',
            'liip_imagine.filter.loader.background' => 'getLiipImagine_Filter_Loader_BackgroundService',
            'liip_imagine.filter.loader.crop' => 'getLiipImagine_Filter_Loader_CropService',
            'liip_imagine.filter.loader.paste' => 'getLiipImagine_Filter_Loader_PasteService',
            'liip_imagine.filter.loader.relative_resize' => 'getLiipImagine_Filter_Loader_RelativeResizeService',
            'liip_imagine.filter.loader.resize' => 'getLiipImagine_Filter_Loader_ResizeService',
            'liip_imagine.filter.loader.strip' => 'getLiipImagine_Filter_Loader_StripService',
            'liip_imagine.filter.loader.thumbnail' => 'getLiipImagine_Filter_Loader_ThumbnailService',
            'liip_imagine.filter.loader.upscale' => 'getLiipImagine_Filter_Loader_UpscaleService',
            'liip_imagine.filter.loader.watermark' => 'getLiipImagine_Filter_Loader_WatermarkService',
            'liip_imagine.filter.manager' => 'getLiipImagine_Filter_ManagerService',
            'liip_imagine.form.type.image' => 'getLiipImagine_Form_Type_ImageService',
            'liip_imagine.routing.loader' => 'getLiipImagine_Routing_LoaderService',
            'liip_imagine.templating.helper' => 'getLiipImagine_Templating_HelperService',
            'locale_listener' => 'getLocaleListenerService',
            'logger' => 'getLoggerService',
            'monolog.handler.chromephp' => 'getMonolog_Handler_ChromephpService',
            'monolog.handler.debug' => 'getMonolog_Handler_DebugService',
            'monolog.handler.firephp' => 'getMonolog_Handler_FirephpService',
            'monolog.handler.main' => 'getMonolog_Handler_MainService',
            'monolog.logger.batch' => 'getMonolog_Logger_BatchService',
            'monolog.logger.doctrine' => 'getMonolog_Logger_DoctrineService',
            'monolog.logger.event' => 'getMonolog_Logger_EventService',
            'monolog.logger.oro_distribution' => 'getMonolog_Logger_OroDistributionService',
            'monolog.logger.php' => 'getMonolog_Logger_PhpService',
            'monolog.logger.profiler' => 'getMonolog_Logger_ProfilerService',
            'monolog.logger.request' => 'getMonolog_Logger_RequestService',
            'monolog.logger.router' => 'getMonolog_Logger_RouterService',
            'monolog.logger.security' => 'getMonolog_Logger_SecurityService',
            'monolog.logger.templating' => 'getMonolog_Logger_TemplatingService',
            'monolog.logger.translation' => 'getMonolog_Logger_TranslationService',
            'nelmio_api_doc.doc_comment_extractor' => 'getNelmioApiDoc_DocCommentExtractorService',
            'nelmio_api_doc.event_listener.request' => 'getNelmioApiDoc_EventListener_RequestService',
            'nelmio_api_doc.extractor.api_doc_extractor' => 'getNelmioApiDoc_Extractor_ApiDocExtractorService',
            'nelmio_api_doc.form.extension.description_form_type_extension' => 'getNelmioApiDoc_Form_Extension_DescriptionFormTypeExtensionService',
            'nelmio_api_doc.formatter.html_formatter' => 'getNelmioApiDoc_Formatter_HtmlFormatterService',
            'nelmio_api_doc.formatter.markdown_formatter' => 'getNelmioApiDoc_Formatter_MarkdownFormatterService',
            'nelmio_api_doc.formatter.simple_formatter' => 'getNelmioApiDoc_Formatter_SimpleFormatterService',
            'nelmio_api_doc.formatter.swagger_formatter' => 'getNelmioApiDoc_Formatter_SwaggerFormatterService',
            'nelmio_api_doc.parser.collection_parser' => 'getNelmioApiDoc_Parser_CollectionParserService',
            'nelmio_api_doc.parser.form_errors_parser' => 'getNelmioApiDoc_Parser_FormErrorsParserService',
            'nelmio_api_doc.parser.form_type_parser' => 'getNelmioApiDoc_Parser_FormTypeParserService',
            'nelmio_api_doc.parser.jms_metadata_parser' => 'getNelmioApiDoc_Parser_JmsMetadataParserService',
            'nelmio_api_doc.parser.validation_parser' => 'getNelmioApiDoc_Parser_ValidationParserService',
            'nelmio_api_doc.twig.extension.extra_markdown' => 'getNelmioApiDoc_Twig_Extension_ExtraMarkdownService',
            'oro_activity.entity_config_dumper.extension' => 'getOroActivity_EntityConfigDumper_ExtensionService',
            'oro_activity.entity_generator.extension' => 'getOroActivity_EntityGenerator_ExtensionService',
            'oro_activity.form.activity_entity.api' => 'getOroActivity_Form_ActivityEntity_ApiService',
            'oro_activity.form.handler.activity_entity.api' => 'getOroActivity_Form_Handler_ActivityEntity_ApiService',
            'oro_activity.handler.delete.activity_entity' => 'getOroActivity_Handler_Delete_ActivityEntityService',
            'oro_activity.manager' => 'getOroActivity_ManagerService',
            'oro_activity.manager.activity.api' => 'getOroActivity_Manager_Activity_ApiService',
            'oro_activity.manager.activity_entity.api' => 'getOroActivity_Manager_ActivityEntity_ApiService',
            'oro_activity.manager.activity_search.api' => 'getOroActivity_Manager_ActivitySearch_ApiService',
            'oro_activity.manager.activity_target.api' => 'getOroActivity_Manager_ActivityTarget_ApiService',
            'oro_activity.migration.extension.activity' => 'getOroActivity_Migration_Extension_ActivityService',
            'oro_activity.widget_provider.actions' => 'getOroActivity_WidgetProvider_ActionsService',
            'oro_activity.widget_provider.activities' => 'getOroActivity_WidgetProvider_ActivitiesService',
            'oro_activity.widget_provider.activities.main' => 'getOroActivity_WidgetProvider_Activities_MainService',
            'oro_activity_list.collect_manager' => 'getOroActivityList_CollectManagerService',
            'oro_activity_list.entity_config_dumper.extension' => 'getOroActivityList_EntityConfigDumper_ExtensionService',
            'oro_activity_list.entity_generator.extension' => 'getOroActivityList_EntityGenerator_ExtensionService',
            'oro_activity_list.event_listener.actitity_list_changes_listener' => 'getOroActivityList_EventListener_ActitityListChangesListenerService',
            'oro_activity_list.event_listener.actitity_list_listener' => 'getOroActivityList_EventListener_ActitityListListenerService',
            'oro_activity_list.event_listener.segment_condition_builder_options_listener' => 'getOroActivityList_EventListener_SegmentConditionBuilderOptionsListenerService',
            'oro_activity_list.event_listener.segment_widget_options_listener' => 'getOroActivityList_EventListener_SegmentWidgetOptionsListenerService',
            'oro_activity_list.filter.activity_list' => 'getOroActivityList_Filter_ActivityListService',
            'oro_activity_list.filter.datagrid_helper' => 'getOroActivityList_Filter_DatagridHelperService',
            'oro_activity_list.filter.helper' => 'getOroActivityList_Filter_HelperService',
            'oro_activity_list.form.type.activity_list_filter' => 'getOroActivityList_Form_Type_ActivityListFilterService',
            'oro_activity_list.helper.acl_criteria' => 'getOroActivityList_Helper_AclCriteriaService',
            'oro_activity_list.manager' => 'getOroActivityList_ManagerService',
            'oro_activity_list.manager.api' => 'getOroActivityList_Manager_ApiService',
            'oro_activity_list.migration.activity_list.post_up.listener' => 'getOroActivityList_Migration_ActivityList_PostUp_ListenerService',
            'oro_activity_list.migration.extension.activity_list' => 'getOroActivityList_Migration_Extension_ActivityListService',
            'oro_activity_list.placeholder.filter' => 'getOroActivityList_Placeholder_FilterService',
            'oro_activity_list.provider.chain' => 'getOroActivityList_Provider_ChainService',
            'oro_activity_list.provider.email_recipients' => 'getOroActivityList_Provider_EmailRecipientsService',
            'oro_address.address.manager' => 'getOroAddress_Address_ManagerService',
            'oro_address.address.provider' => 'getOroAddress_Address_ProviderService',
            'oro_address.form.address' => 'getOroAddress_Form_AddressService',
            'oro_address.form.handler.address' => 'getOroAddress_Form_Handler_AddressService',
            'oro_address.form.listener.address' => 'getOroAddress_Form_Listener_AddressService',
            'oro_address.form.type.address' => 'getOroAddress_Form_Type_AddressService',
            'oro_address.form.type.country' => 'getOroAddress_Form_Type_CountryService',
            'oro_address.form.type.email' => 'getOroAddress_Form_Type_EmailService',
            'oro_address.form.type.phone' => 'getOroAddress_Form_Type_PhoneService',
            'oro_address.form.type.region' => 'getOroAddress_Form_Type_RegionService',
            'oro_address.form.type.typed_address' => 'getOroAddress_Form_Type_TypedAddressService',
            'oro_address.importexport.template_fixture.address' => 'getOroAddress_Importexport_TemplateFixture_AddressService',
            'oro_address.importexport.template_fixture.address_type' => 'getOroAddress_Importexport_TemplateFixture_AddressTypeService',
            'oro_address.importexport.template_fixture.country' => 'getOroAddress_Importexport_TemplateFixture_CountryService',
            'oro_address.importexport.template_fixture.region' => 'getOroAddress_Importexport_TemplateFixture_RegionService',
            'oro_address.provider.phone' => 'getOroAddress_Provider_PhoneService',
            'oro_address.type.address_collection' => 'getOroAddress_Type_AddressCollectionService',
            'oro_address.type.email_collection' => 'getOroAddress_Type_EmailCollectionService',
            'oro_address.type.phone_collection' => 'getOroAddress_Type_PhoneCollectionService',
            'oro_assetic.configuration' => 'getOroAssetic_ConfigurationService',
            'oro_assetic.twig.extension' => 'getOroAssetic_Twig_ExtensionService',
            'oro_attachment.config' => 'getOroAttachment_ConfigService',
            'oro_attachment.datagrid.action.dialog' => 'getOroAttachment_Datagrid_Action_DialogService',
            'oro_attachment.entity_config_dumper.extension' => 'getOroAttachment_EntityConfigDumper_ExtensionService',
            'oro_attachment.entity_config_dumper.extension.file' => 'getOroAttachment_EntityConfigDumper_Extension_FileService',
            'oro_attachment.entity_generator.extension' => 'getOroAttachment_EntityGenerator_ExtensionService',
            'oro_attachment.event_listener.attachment_grid_listener' => 'getOroAttachment_EventListener_AttachmentGridListenerService',
            'oro_attachment.form.file_subscriber' => 'getOroAttachment_Form_FileSubscriberService',
            'oro_attachment.form.handler.attachment' => 'getOroAttachment_Form_Handler_AttachmentService',
            'oro_attachment.form.type.file' => 'getOroAttachment_Form_Type_FileService',
            'oro_attachment.form.type.file_config' => 'getOroAttachment_Form_Type_FileConfigService',
            'oro_attachment.form.type.image' => 'getOroAttachment_Form_Type_ImageService',
            'oro_attachment.formatter.image_encoded' => 'getOroAttachment_Formatter_ImageEncodedService',
            'oro_attachment.formatter.image_link' => 'getOroAttachment_Formatter_ImageLinkService',
            'oro_attachment.formatter.image_src' => 'getOroAttachment_Formatter_ImageSrcService',
            'oro_attachment.listener.file_listener' => 'getOroAttachment_Listener_FileListenerService',
            'oro_attachment.manager' => 'getOroAttachment_ManagerService',
            'oro_attachment.manager.api' => 'getOroAttachment_Manager_ApiService',
            'oro_attachment.manager.file.api' => 'getOroAttachment_Manager_File_ApiService',
            'oro_attachment.migration.extension.attachment' => 'getOroAttachment_Migration_Extension_AttachmentService',
            'oro_attachment.placeholder.filter' => 'getOroAttachment_Placeholder_FilterService',
            'oro_attachment.provider.attachment' => 'getOroAttachment_Provider_AttachmentService',
            'oro_attachment.serializer.file_normalizer' => 'getOroAttachment_Serializer_FileNormalizerService',
            'oro_attachment.twig.file_extension' => 'getOroAttachment_Twig_FileExtensionService',
            'oro_attachment.validator.file_config_validator' => 'getOroAttachment_Validator_FileConfigValidatorService',
            'oro_attachment.widget_provider.actions' => 'getOroAttachment_WidgetProvider_ActionsService',
            'oro_batch.orm.query_builder.count_query_optimizer' => 'getOroBatch_Orm_QueryBuilder_CountQueryOptimizerService',
            'oro_cache.oro_data_cache_manager' => 'getOroCache_OroDataCacheManagerService',
            'oro_cache.provider.validation' => 'getOroCache_Provider_ValidationService',
            'oro_calendar.activity_list.provider' => 'getOroCalendar_ActivityList_ProviderService',
            'oro_calendar.autocomplete.user_calendar_handler' => 'getOroCalendar_Autocomplete_UserCalendarHandlerService',
            'oro_calendar.calendar_choice.form.type' => 'getOroCalendar_CalendarChoice_Form_TypeService',
            'oro_calendar.calendar_choice_template.form.type' => 'getOroCalendar_CalendarChoiceTemplate_Form_TypeService',
            'oro_calendar.calendar_event.form' => 'getOroCalendar_CalendarEvent_FormService',
            'oro_calendar.calendar_event.form.api' => 'getOroCalendar_CalendarEvent_Form_ApiService',
            'oro_calendar.calendar_event.form.handler' => 'getOroCalendar_CalendarEvent_Form_HandlerService',
            'oro_calendar.calendar_event.form.handler.api' => 'getOroCalendar_CalendarEvent_Form_Handler_ApiService',
            'oro_calendar.calendar_event.form.template' => 'getOroCalendar_CalendarEvent_Form_TemplateService',
            'oro_calendar.calendar_event.form.type' => 'getOroCalendar_CalendarEvent_Form_TypeService',
            'oro_calendar.calendar_event.form.type.api' => 'getOroCalendar_CalendarEvent_Form_Type_ApiService',
            'oro_calendar.calendar_event.handler.delete' => 'getOroCalendar_CalendarEvent_Handler_DeleteService',
            'oro_calendar.calendar_event.manager.api' => 'getOroCalendar_CalendarEvent_Manager_ApiService',
            'oro_calendar.calendar_event.transformer.events_to_users' => 'getOroCalendar_CalendarEvent_Transformer_EventsToUsersService',
            'oro_calendar.calendar_event_invitees.form.type' => 'getOroCalendar_CalendarEventInvitees_Form_TypeService',
            'oro_calendar.calendar_event_manager' => 'getOroCalendar_CalendarEventManagerService',
            'oro_calendar.calendar_event_normalizer.public' => 'getOroCalendar_CalendarEventNormalizer_PublicService',
            'oro_calendar.calendar_event_normalizer.system' => 'getOroCalendar_CalendarEventNormalizer_SystemService',
            'oro_calendar.calendar_event_normalizer.user' => 'getOroCalendar_CalendarEventNormalizer_UserService',
            'oro_calendar.calendar_manager' => 'getOroCalendar_CalendarManagerService',
            'oro_calendar.calendar_property.form.api' => 'getOroCalendar_CalendarProperty_Form_ApiService',
            'oro_calendar.calendar_property.form.handler.api' => 'getOroCalendar_CalendarProperty_Form_Handler_ApiService',
            'oro_calendar.calendar_property.form.handler.soap.api' => 'getOroCalendar_CalendarProperty_Form_Handler_Soap_ApiService',
            'oro_calendar.calendar_property.form.soap.api' => 'getOroCalendar_CalendarProperty_Form_Soap_ApiService',
            'oro_calendar.calendar_property.form.type.api' => 'getOroCalendar_CalendarProperty_Form_Type_ApiService',
            'oro_calendar.calendar_property.manager.api' => 'getOroCalendar_CalendarProperty_Manager_ApiService',
            'oro_calendar.calendar_property_provider' => 'getOroCalendar_CalendarPropertyProviderService',
            'oro_calendar.calendar_provider.public' => 'getOroCalendar_CalendarProvider_PublicService',
            'oro_calendar.calendar_provider.system' => 'getOroCalendar_CalendarProvider_SystemService',
            'oro_calendar.calendar_provider.user' => 'getOroCalendar_CalendarProvider_UserService',
            'oro_calendar.datagrid.action_permission_provider' => 'getOroCalendar_Datagrid_ActionPermissionProviderService',
            'oro_calendar.event_listener.navigation' => 'getOroCalendar_EventListener_NavigationService',
            'oro_calendar.extension.acl_label' => 'getOroCalendar_Extension_AclLabelService',
            'oro_calendar.listener.datagrid.activity' => 'getOroCalendar_Listener_Datagrid_ActivityService',
            'oro_calendar.listener.datagrid.system_calendar' => 'getOroCalendar_Listener_Datagrid_SystemCalendarService',
            'oro_calendar.listener.entity_listener' => 'getOroCalendar_Listener_EntityListenerService',
            'oro_calendar.owner_assignment_checker.calendar' => 'getOroCalendar_OwnerAssignmentChecker_CalendarService',
            'oro_calendar.provider.calendar_config' => 'getOroCalendar_Provider_CalendarConfigService',
            'oro_calendar.send_processor.email' => 'getOroCalendar_SendProcessor_EmailService',
            'oro_calendar.system_calendar.form' => 'getOroCalendar_SystemCalendar_FormService',
            'oro_calendar.system_calendar.form.handler' => 'getOroCalendar_SystemCalendar_Form_HandlerService',
            'oro_calendar.system_calendar.form.type' => 'getOroCalendar_SystemCalendar_Form_TypeService',
            'oro_calendar.system_calendar.handler.delete' => 'getOroCalendar_SystemCalendar_Handler_DeleteService',
            'oro_calendar.system_calendar.manager.api' => 'getOroCalendar_SystemCalendar_Manager_ApiService',
            'oro_calendar.system_calendar_config' => 'getOroCalendar_SystemCalendarConfigService',
            'oro_calendar.system_calendar_event.datagrid_helper' => 'getOroCalendar_SystemCalendarEvent_DatagridHelperService',
            'oro_calendar.system_calendar_event.form.handler' => 'getOroCalendar_SystemCalendarEvent_Form_HandlerService',
            'oro_calendar.twig.dateformat' => 'getOroCalendar_Twig_DateformatService',
            'oro_calendar.widget_provider.actions.assign_calendar_event' => 'getOroCalendar_WidgetProvider_Actions_AssignCalendarEventService',
            'oro_chart.config_provider' => 'getOroChart_ConfigProviderService',
            'oro_chart.data_transformer.factory' => 'getOroChart_DataTransformer_FactoryService',
            'oro_chart.data_transformer.pie_chart' => 'getOroChart_DataTransformer_PieChartService',
            'oro_chart.form.event_listener.chart' => 'getOroChart_Form_EventListener_ChartService',
            'oro_chart.form.type' => 'getOroChart_Form_TypeService',
            'oro_chart.form.type.settings' => 'getOroChart_Form_Type_SettingsService',
            'oro_chart.form.type.settings.collection' => 'getOroChart_Form_Type_Settings_CollectionService',
            'oro_chart.options_builder' => 'getOroChart_OptionsBuilderService',
            'oro_chart.view_builder' => 'getOroChart_ViewBuilderService',
            'oro_comment.api.form.handler' => 'getOroComment_Api_Form_HandlerService',
            'oro_comment.comment.api_manager' => 'getOroComment_Comment_ApiManagerService',
            'oro_comment.comment_lifecycle_listener' => 'getOroComment_CommentLifecycleListenerService',
            'oro_comment.entity_config_dumper.extension' => 'getOroComment_EntityConfigDumper_ExtensionService',
            'oro_comment.entity_generator.extension' => 'getOroComment_EntityGenerator_ExtensionService',
            'oro_comment.form.comment.api' => 'getOroComment_Form_Comment_ApiService',
            'oro_comment.form.type.comment_api' => 'getOroComment_Form_Type_CommentApiService',
            'oro_comment.migration.extension.comment' => 'getOroComment_Migration_Extension_CommentService',
            'oro_comment.placeholder.filter' => 'getOroComment_Placeholder_FilterService',
            'oro_config.config_bag' => 'getOroConfig_ConfigBagService',
            'oro_config.config_definition_bag' => 'getOroConfig_ConfigDefinitionBagService',
            'oro_config.form.config_subscriber' => 'getOroConfig_Form_ConfigSubscriberService',
            'oro_config.form.handler.config' => 'getOroConfig_Form_Handler_ConfigService',
            'oro_config.global' => 'getOroConfig_GlobalService',
            'oro_config.manager' => 'getOroConfig_ManagerService',
            'oro_config.manager.api' => 'getOroConfig_Manager_ApiService',
            'oro_config.provider.system_configuration.form_provider' => 'getOroConfig_Provider_SystemConfiguration_FormProviderService',
            'oro_config.scope.global' => 'getOroConfig_Scope_GlobalService',
            'oro_config.scope.user' => 'getOroConfig_Scope_UserService',
            'oro_config.twig.config_extension' => 'getOroConfig_Twig_ConfigExtensionService',
            'oro_config.type.config_checkbox' => 'getOroConfig_Type_ConfigCheckboxService',
            'oro_config.type.form' => 'getOroConfig_Type_FormService',
            'oro_config.type.form_field' => 'getOroConfig_Type_FormFieldService',
            'oro_config.type.parent_scope_checkbox' => 'getOroConfig_Type_ParentScopeCheckboxService',
            'oro_config.user' => 'getOroConfig_UserService',
            'oro_config.user_config_manager' => 'getOroConfig_UserConfigManagerService',
            'oro_cron.command_with_args_string_filter' => 'getOroCron_CommandWithArgsStringFilterService',
            'oro_cron.job_daemon' => 'getOroCron_JobDaemonService',
            'oro_cron.job_manager' => 'getOroCron_JobManagerService',
            'oro_dashboard.config_provider' => 'getOroDashboard_ConfigProviderService',
            'oro_dashboard.config_resolver' => 'getOroDashboard_ConfigResolverService',
            'oro_dashboard.datetime.helper' => 'getOroDashboard_Datetime_HelperService',
            'oro_dashboard.event_listener.widget_configuration_load' => 'getOroDashboard_EventListener_WidgetConfigurationLoadService',
            'oro_dashboard.event_listener.widget_items_form_subscriber' => 'getOroDashboard_EventListener_WidgetItemsFormSubscriberService',
            'oro_dashboard.event_listener.widget_items_load_data' => 'getOroDashboard_EventListener_WidgetItemsLoadDataService',
            'oro_dashboard.factory' => 'getOroDashboard_FactoryService',
            'oro_dashboard.form.type.edit' => 'getOroDashboard_Form_Type_EditService',
            'oro_dashboard.form.type.select' => 'getOroDashboard_Form_Type_SelectService',
            'oro_dashboard.form.type.widget_date_range' => 'getOroDashboard_Form_Type_WidgetDateRangeService',
            'oro_dashboard.form.type.widget_date_range_value' => 'getOroDashboard_Form_Type_WidgetDateRangeValueService',
            'oro_dashboard.form.type.widget_item' => 'getOroDashboard_Form_Type_WidgetItemService',
            'oro_dashboard.form.type.widget_items' => 'getOroDashboard_Form_Type_WidgetItemsService',
            'oro_dashboard.form.type.widget_items_choice' => 'getOroDashboard_Form_Type_WidgetItemsChoiceService',
            'oro_dashboard.form.type.widget_previous_date_range' => 'getOroDashboard_Form_Type_WidgetPreviousDateRangeService',
            'oro_dashboard.form.type.widget_widget_title' => 'getOroDashboard_Form_Type_WidgetWidgetTitleService',
            'oro_dashboard.manager' => 'getOroDashboard_ManagerService',
            'oro_dashboard.manager.state' => 'getOroDashboard_Manager_StateService',
            'oro_dashboard.navigation_listener' => 'getOroDashboard_NavigationListenerService',
            'oro_dashboard.provider.widget_configuration_form_provider' => 'getOroDashboard_Provider_WidgetConfigurationFormProviderService',
            'oro_dashboard.widget_config_value.date_range.converter' => 'getOroDashboard_WidgetConfigValue_DateRange_ConverterService',
            'oro_dashboard.widget_config_value.previous_date_range.converter' => 'getOroDashboard_WidgetConfigValue_PreviousDateRange_ConverterService',
            'oro_dashboard.widget_config_value.provider' => 'getOroDashboard_WidgetConfigValue_ProviderService',
            'oro_dashboard.widget_config_value.widget_items_choice.converter' => 'getOroDashboard_WidgetConfigValue_WidgetItemsChoice_ConverterService',
            'oro_dashboard.widget_config_value.widget_title.converter' => 'getOroDashboard_WidgetConfigValue_WidgetTitle_ConverterService',
            'oro_dashboard.widget_configs' => 'getOroDashboard_WidgetConfigsService',
            'oro_dataaudit.audit.manager.api' => 'getOroDataaudit_Audit_Manager_ApiService',
            'oro_dataaudit.dataaudit_grid_service' => 'getOroDataaudit_DataauditGridServiceService',
            'oro_dataaudit.event_listener.dataaudit_history_grid_listener' => 'getOroDataaudit_EventListener_DataauditHistoryGridListenerService',
            'oro_dataaudit.event_listener.segment_condition_builder_options_listener' => 'getOroDataaudit_EventListener_SegmentConditionBuilderOptionsListenerService',
            'oro_dataaudit.event_listener.segment_widget_options_listener' => 'getOroDataaudit_EventListener_SegmentWidgetOptionsListenerService',
            'oro_dataaudit.filter.audit' => 'getOroDataaudit_Filter_AuditService',
            'oro_dataaudit.form.type.filter' => 'getOroDataaudit_Form_Type_FilterService',
            'oro_dataaudit.listener.deprecated_audit_data_listener' => 'getOroDataaudit_Listener_DeprecatedAuditDataListenerService',
            'oro_dataaudit.listener.entity_listener' => 'getOroDataaudit_Listener_EntityListenerService',
            'oro_dataaudit.listener.kernel_listener' => 'getOroDataaudit_Listener_KernelListenerService',
            'oro_dataaudit.loggable.audit_entity_mapper' => 'getOroDataaudit_Loggable_AuditEntityMapperService',
            'oro_dataaudit.loggable.loggable_manager' => 'getOroDataaudit_Loggable_LoggableManagerService',
            'oro_dataaudit.migration.extension.audit_field' => 'getOroDataaudit_Migration_Extension_AuditFieldService',
            'oro_dataaudit.placeholder.filter' => 'getOroDataaudit_Placeholder_FilterService',
            'oro_datagrid.configuration.provider' => 'getOroDatagrid_Configuration_ProviderService',
            'oro_datagrid.configuration.provider.chain' => 'getOroDatagrid_Configuration_Provider_ChainService',
            'oro_datagrid.datagrid.builder' => 'getOroDatagrid_Datagrid_BuilderService',
            'oro_datagrid.datagrid.column_options_guesser' => 'getOroDatagrid_Datagrid_ColumnOptionsGuesserService',
            'oro_datagrid.datagrid.guesser' => 'getOroDatagrid_Datagrid_GuesserService',
            'oro_datagrid.datagrid.manager' => 'getOroDatagrid_Datagrid_ManagerService',
            'oro_datagrid.datagrid.manager.link' => 'getOroDatagrid_Datagrid_Manager_LinkService',
            'oro_datagrid.datagrid.name_strategy' => 'getOroDatagrid_Datagrid_NameStrategyService',
            'oro_datagrid.datagrid.request_parameters_factory' => 'getOroDatagrid_Datagrid_RequestParametersFactoryService',
            'oro_datagrid.datasource.orm' => 'getOroDatagrid_Datasource_OrmService',
            'oro_datagrid.datasource.orm.parameter_binder' => 'getOroDatagrid_Datasource_Orm_ParameterBinderService',
            'oro_datagrid.event.dispatcher' => 'getOroDatagrid_Event_DispatcherService',
            'oro_datagrid.event_listener.cell_selection' => 'getOroDatagrid_EventListener_CellSelectionService',
            'oro_datagrid.event_listener.datasource_bind_parameters' => 'getOroDatagrid_EventListener_DatasourceBindParametersService',
            'oro_datagrid.event_listener.grid_views_load' => 'getOroDatagrid_EventListener_GridViewsLoadService',
            'oro_datagrid.event_listener.ormdatasource_acl' => 'getOroDatagrid_EventListener_OrmdatasourceAclService',
            'oro_datagrid.event_listener.row_selection' => 'getOroDatagrid_EventListener_RowSelectionService',
            'oro_datagrid.extension.action' => 'getOroDatagrid_Extension_ActionService',
            'oro_datagrid.extension.action.type.ajax' => 'getOroDatagrid_Extension_Action_Type_AjaxService',
            'oro_datagrid.extension.action.type.ajaxdelete' => 'getOroDatagrid_Extension_Action_Type_AjaxdeleteService',
            'oro_datagrid.extension.action.type.delete' => 'getOroDatagrid_Extension_Action_Type_DeleteService',
            'oro_datagrid.extension.action.type.navigate' => 'getOroDatagrid_Extension_Action_Type_NavigateService',
            'oro_datagrid.extension.export' => 'getOroDatagrid_Extension_ExportService',
            'oro_datagrid.extension.formatter' => 'getOroDatagrid_Extension_FormatterService',
            'oro_datagrid.extension.formatter.field_property' => 'getOroDatagrid_Extension_Formatter_FieldPropertyService',
            'oro_datagrid.extension.formatter.property.callback_property' => 'getOroDatagrid_Extension_Formatter_Property_CallbackPropertyService',
            'oro_datagrid.extension.formatter.property.link_property' => 'getOroDatagrid_Extension_Formatter_Property_LinkPropertyService',
            'oro_datagrid.extension.formatter.property.localized_number_property' => 'getOroDatagrid_Extension_Formatter_Property_LocalizedNumberPropertyService',
            'oro_datagrid.extension.formatter.property.translatable_property' => 'getOroDatagrid_Extension_Formatter_Property_TranslatablePropertyService',
            'oro_datagrid.extension.formatter.property.twig_property' => 'getOroDatagrid_Extension_Formatter_Property_TwigPropertyService',
            'oro_datagrid.extension.formatter.property.url_property' => 'getOroDatagrid_Extension_Formatter_Property_UrlPropertyService',
            'oro_datagrid.extension.gridparams' => 'getOroDatagrid_Extension_GridparamsService',
            'oro_datagrid.extension.mass_action' => 'getOroDatagrid_Extension_MassActionService',
            'oro_datagrid.extension.mass_action.handler.delete' => 'getOroDatagrid_Extension_MassAction_Handler_DeleteService',
            'oro_datagrid.extension.mass_action.type.ajax' => 'getOroDatagrid_Extension_MassAction_Type_AjaxService',
            'oro_datagrid.extension.mass_action.type.delete' => 'getOroDatagrid_Extension_MassAction_Type_DeleteService',
            'oro_datagrid.extension.mass_action.type.redirect' => 'getOroDatagrid_Extension_MassAction_Type_RedirectService',
            'oro_datagrid.extension.mass_action.type.widget' => 'getOroDatagrid_Extension_MassAction_Type_WidgetService',
            'oro_datagrid.extension.mass_action.type.window' => 'getOroDatagrid_Extension_MassAction_Type_WindowService',
            'oro_datagrid.extension.orm_pager' => 'getOroDatagrid_Extension_OrmPagerService',
            'oro_datagrid.extension.orm_sorter' => 'getOroDatagrid_Extension_OrmSorterService',
            'oro_datagrid.extension.pager.orm.pager' => 'getOroDatagrid_Extension_Pager_Orm_PagerService',
            'oro_datagrid.extension.toolbar' => 'getOroDatagrid_Extension_ToolbarService',
            'oro_datagrid.extension.totals' => 'getOroDatagrid_Extension_TotalsService',
            'oro_datagrid.extension.views' => 'getOroDatagrid_Extension_ViewsService',
            'oro_datagrid.form.grid_view.api' => 'getOroDatagrid_Form_GridView_ApiService',
            'oro_datagrid.form.type.grid_view_type' => 'getOroDatagrid_Form_Type_GridViewTypeService',
            'oro_datagrid.form.type.sorting_type' => 'getOroDatagrid_Form_Type_SortingTypeService',
            'oro_datagrid.grid_view.form.handler.api' => 'getOroDatagrid_GridView_Form_Handler_ApiService',
            'oro_datagrid.grid_view.manager.api' => 'getOroDatagrid_GridView_Manager_ApiService',
            'oro_datagrid.importexport.data_converter' => 'getOroDatagrid_Importexport_DataConverterService',
            'oro_datagrid.importexport.export_connector' => 'getOroDatagrid_Importexport_ExportConnectorService',
            'oro_datagrid.importexport.export_reader' => 'getOroDatagrid_Importexport_ExportReaderService',
            'oro_datagrid.importexport.processor.export' => 'getOroDatagrid_Importexport_Processor_ExportService',
            'oro_datagrid.mass_action.dispatcher' => 'getOroDatagrid_MassAction_DispatcherService',
            'oro_datagrid.mass_action.parameters_parser' => 'getOroDatagrid_MassAction_ParametersParserService',
            'oro_datagrid.provider.resolver' => 'getOroDatagrid_Provider_ResolverService',
            'oro_datagrid.twig.datagrid' => 'getOroDatagrid_Twig_DatagridService',
            'oro_distribution.composer' => 'getOroDistribution_ComposerService',
            'oro_distribution.composer.io' => 'getOroDistribution_Composer_IoService',
            'oro_distribution.composer.json_file' => 'getOroDistribution_Composer_JsonFileService',
            'oro_distribution.expose_routing_loader' => 'getOroDistribution_ExposeRoutingLoaderService',
            'oro_distribution.form.type.composer_config' => 'getOroDistribution_Form_Type_ComposerConfigService',
            'oro_distribution.form.type.composer_repository' => 'getOroDistribution_Form_Type_ComposerRepositoryService',
            'oro_distribution.listener.navigation_listener' => 'getOroDistribution_Listener_NavigationListenerService',
            'oro_distribution.package_manager' => 'getOroDistribution_PackageManagerService',
            'oro_distribution.routing_loader' => 'getOroDistribution_RoutingLoaderService',
            'oro_distribution.routing_options_resolver' => 'getOroDistribution_RoutingOptionsResolverService',
            'oro_email.acl.voter.email_voter' => 'getOroEmail_Acl_Voter_EmailVoterService',
            'oro_email.activity_list.provider' => 'getOroEmail_ActivityList_ProviderService',
            'oro_email.autocomplete.mailbox_user_search_handler' => 'getOroEmail_Autocomplete_MailboxUserSearchHandlerService',
            'oro_email.autoresponserule_manager' => 'getOroEmail_AutoresponseruleManagerService',
            'oro_email.cache' => 'getOroEmail_CacheService',
            'oro_email.context_email_recipients.provider' => 'getOroEmail_ContextEmailRecipients_ProviderService',
            'oro_email.datagrid.origin_folder.provider' => 'getOroEmail_Datagrid_OriginFolder_ProviderService',
            'oro_email.datagrid_query_factory' => 'getOroEmail_DatagridQueryFactoryService',
            'oro_email.direct_mailer' => 'getOroEmail_DirectMailerService',
            'oro_email.email.activity.manager' => 'getOroEmail_Email_Activity_ManagerService',
            'oro_email.email.address.helper' => 'getOroEmail_Email_Address_HelperService',
            'oro_email.email.address.manager' => 'getOroEmail_Email_Address_ManagerService',
            'oro_email.email.cache.manager' => 'getOroEmail_Email_Cache_ManagerService',
            'oro_email.email.entity.builder' => 'getOroEmail_Email_Entity_BuilderService',
            'oro_email.email.flag.manager' => 'getOroEmail_Email_Flag_ManagerService',
            'oro_email.email.manager' => 'getOroEmail_Email_ManagerService',
            'oro_email.email.model.builder' => 'getOroEmail_Email_Model_BuilderService',
            'oro_email.email.model.builder.helper' => 'getOroEmail_Email_Model_Builder_HelperService',
            'oro_email.email.owner.provider' => 'getOroEmail_Email_Owner_ProviderService',
            'oro_email.email.owner.provider.storage' => 'getOroEmail_Email_Owner_Provider_StorageService',
            'oro_email.email.thread.manager' => 'getOroEmail_Email_Thread_ManagerService',
            'oro_email.email.thread.provider' => 'getOroEmail_Email_Thread_ProviderService',
            'oro_email.email_attachment_transformer' => 'getOroEmail_EmailAttachmentTransformerService',
            'oro_email.email_body_type_transformer' => 'getOroEmail_EmailBodyTypeTransformerService',
            'oro_email.email_holder_helper' => 'getOroEmail_EmailHolderHelperService',
            'oro_email.email_importance_transformer' => 'getOroEmail_EmailImportanceTransformerService',
            'oro_email.email_recipients.provider' => 'getOroEmail_EmailRecipients_ProviderService',
            'oro_email.email_renderer' => 'getOroEmail_EmailRendererService',
            'oro_email.email_synchronization_manager' => 'getOroEmail_EmailSynchronizationManagerService',
            'oro_email.email_websocket.processor' => 'getOroEmail_EmailWebsocket_ProcessorService',
            'oro_email.emailfolder.datagrid_view_list' => 'getOroEmail_Emailfolder_DatagridViewListService',
            'oro_email.emailseen.datagrid_view_list' => 'getOroEmail_Emailseen_DatagridViewListService',
            'oro_email.emailtemplate.datagrid_helper' => 'getOroEmail_Emailtemplate_DatagridHelperService',
            'oro_email.emailtemplate.datagrid_view_list' => 'getOroEmail_Emailtemplate_DatagridViewListService',
            'oro_email.emailtemplate.variable_provider' => 'getOroEmail_Emailtemplate_VariableProviderService',
            'oro_email.emailtemplate.variable_provider.entity' => 'getOroEmail_Emailtemplate_VariableProvider_EntityService',
            'oro_email.emailtemplate.variable_provider.system' => 'getOroEmail_Emailtemplate_VariableProvider_SystemService',
            'oro_email.emailtemplate.variable_provider.user' => 'getOroEmail_Emailtemplate_VariableProvider_UserService',
            'oro_email.entity.cache.clearer' => 'getOroEmail_Entity_Cache_ClearerService',
            'oro_email.entity.cache.warmer' => 'getOroEmail_Entity_Cache_WarmerService',
            'oro_email.event_listener.email_user_listener' => 'getOroEmail_EventListener_EmailUserListenerService',
            'oro_email.form.email' => 'getOroEmail_Form_EmailService',
            'oro_email.form.email.api' => 'getOroEmail_Form_Email_ApiService',
            'oro_email.form.emailtemplate' => 'getOroEmail_Form_EmailtemplateService',
            'oro_email.form.extension.mailbox_unbound_rules' => 'getOroEmail_Form_Extension_MailboxUnboundRulesService',
            'oro_email.form.factory' => 'getOroEmail_Form_FactoryService',
            'oro_email.form.handler.email' => 'getOroEmail_Form_Handler_EmailService',
            'oro_email.form.handler.email.api' => 'getOroEmail_Form_Handler_Email_ApiService',
            'oro_email.form.handler.emailtemplate' => 'getOroEmail_Form_Handler_EmailtemplateService',
            'oro_email.form.handler.mailbox' => 'getOroEmail_Form_Handler_MailboxService',
            'oro_email.form.subscriber.autoresponserule' => 'getOroEmail_Form_Subscriber_AutoresponseruleService',
            'oro_email.form.subscriber.emailtemplate' => 'getOroEmail_Form_Subscriber_EmailtemplateService',
            'oro_email.form.type.attachment' => 'getOroEmail_Form_Type_AttachmentService',
            'oro_email.form.type.attachments' => 'getOroEmail_Form_Type_AttachmentsService',
            'oro_email.form.type.autoresponse_template' => 'getOroEmail_Form_Type_AutoresponseTemplateService',
            'oro_email.form.type.autoresponse_template_choice' => 'getOroEmail_Form_Type_AutoresponseTemplateChoiceService',
            'oro_email.form.type.autoresponserule' => 'getOroEmail_Form_Type_AutoresponseruleService',
            'oro_email.form.type.autoresponserule_condition' => 'getOroEmail_Form_Type_AutoresponseruleConditionService',
            'oro_email.form.type.contexts_select' => 'getOroEmail_Form_Type_ContextsSelectService',
            'oro_email.form.type.email' => 'getOroEmail_Form_Type_EmailService',
            'oro_email.form.type.email.api' => 'getOroEmail_Form_Type_Email_ApiService',
            'oro_email.form.type.email_address' => 'getOroEmail_Form_Type_EmailAddressService',
            'oro_email.form.type.email_address.api' => 'getOroEmail_Form_Type_EmailAddress_ApiService',
            'oro_email.form.type.email_address_from' => 'getOroEmail_Form_Type_EmailAddressFromService',
            'oro_email.form.type.email_address_recipients' => 'getOroEmail_Form_Type_EmailAddressRecipientsService',
            'oro_email.form.type.email_folder' => 'getOroEmail_Form_Type_EmailFolderService',
            'oro_email.form.type.email_folder.api' => 'getOroEmail_Form_Type_EmailFolder_ApiService',
            'oro_email.form.type.email_folder_tree' => 'getOroEmail_Form_Type_EmailFolderTreeService',
            'oro_email.form.type.email_link_to_scope' => 'getOroEmail_Form_Type_EmailLinkToScopeService',
            'oro_email.form.type.emailtemplate' => 'getOroEmail_Form_Type_EmailtemplateService',
            'oro_email.form.type.emailtemplate_select' => 'getOroEmail_Form_Type_EmailtemplateSelectService',
            'oro_email.form.type.emailtemplate_translation' => 'getOroEmail_Form_Type_EmailtemplateTranslationService',
            'oro_email.form.type.filter.originfolder' => 'getOroEmail_Form_Type_Filter_OriginfolderService',
            'oro_email.form.type.mailbox' => 'getOroEmail_Form_Type_MailboxService',
            'oro_email.form.type.mailbox_grid' => 'getOroEmail_Form_Type_MailboxGridService',
            'oro_email.helper.datagrid.emails' => 'getOroEmail_Helper_Datagrid_EmailsService',
            'oro_email.listener.auto_response_listener' => 'getOroEmail_Listener_AutoResponseListenerService',
            'oro_email.listener.config_subscriber' => 'getOroEmail_Listener_ConfigSubscriberService',
            'oro_email.listener.datagrid.activity' => 'getOroEmail_Listener_Datagrid_ActivityService',
            'oro_email.listener.datagrid.context.user' => 'getOroEmail_Listener_Datagrid_Context_UserService',
            'oro_email.listener.datagrid.email' => 'getOroEmail_Listener_Datagrid_EmailService',
            'oro_email.listener.datagrid.mailbox_grid' => 'getOroEmail_Listener_Datagrid_MailboxGridService',
            'oro_email.listener.datagrid.recent_emails.inbox' => 'getOroEmail_Listener_Datagrid_RecentEmails_InboxService',
            'oro_email.listener.datagrid.recent_emails.new' => 'getOroEmail_Listener_Datagrid_RecentEmails_NewService',
            'oro_email.listener.datagrid.recent_emails.sent' => 'getOroEmail_Listener_Datagrid_RecentEmails_SentService',
            'oro_email.listener.email_body_add_listener' => 'getOroEmail_Listener_EmailBodyAddListenerService',
            'oro_email.listener.entity_listener' => 'getOroEmail_Listener_EntityListenerService',
            'oro_email.listener.mailbox.authorization' => 'getOroEmail_Listener_Mailbox_AuthorizationService',
            'oro_email.listener.mailbox_process_trigger_listener' => 'getOroEmail_Listener_MailboxProcessTriggerListenerService',
            'oro_email.listener.replace_embedded_attachments_listener' => 'getOroEmail_Listener_ReplaceEmbeddedAttachmentsListenerService',
            'oro_email.listener.search_listener' => 'getOroEmail_Listener_SearchListenerService',
            'oro_email.mailbox.entity_name_provider' => 'getOroEmail_Mailbox_EntityNameProviderService',
            'oro_email.mailbox.manager.api' => 'getOroEmail_Mailbox_Manager_ApiService',
            'oro_email.mailbox.process_storage' => 'getOroEmail_Mailbox_ProcessStorageService',
            'oro_email.mailbox_choice_list' => 'getOroEmail_MailboxChoiceListService',
            'oro_email.mailbox_email_owner_provider' => 'getOroEmail_MailboxEmailOwnerProviderService',
            'oro_email.mailer.processor' => 'getOroEmail_Mailer_ProcessorService',
            'oro_email.manager.autoresponserule.api' => 'getOroEmail_Manager_Autoresponserule_ApiService',
            'oro_email.manager.email.api' => 'getOroEmail_Manager_Email_ApiService',
            'oro_email.manager.email_activity.api' => 'getOroEmail_Manager_EmailActivity_ApiService',
            'oro_email.manager.email_activity_search.api' => 'getOroEmail_Manager_EmailActivitySearch_ApiService',
            'oro_email.manager.email_attachment_manager' => 'getOroEmail_Manager_EmailAttachmentManagerService',
            'oro_email.manager.email_origin.api' => 'getOroEmail_Manager_EmailOrigin_ApiService',
            'oro_email.manager.emailtemplate.api' => 'getOroEmail_Manager_Emailtemplate_ApiService',
            'oro_email.manager.notification' => 'getOroEmail_Manager_NotificationService',
            'oro_email.mass_action.mark.read' => 'getOroEmail_MassAction_Mark_ReadService',
            'oro_email.mass_action.mark.unread' => 'getOroEmail_MassAction_Mark_UnreadService',
            'oro_email.mass_action.mark_handler' => 'getOroEmail_MassAction_MarkHandlerService',
            'oro_email.provider.email_attachment_provider' => 'getOroEmail_Provider_EmailAttachmentProviderService',
            'oro_email.provider.email_recipients.helper' => 'getOroEmail_Provider_EmailRecipients_HelperService',
            'oro_email.provider.emailowners.provider' => 'getOroEmail_Provider_Emailowners_ProviderService',
            'oro_email.recent_email_recipients.provider' => 'getOroEmail_RecentEmailRecipients_ProviderService',
            'oro_email.related_emails.provider' => 'getOroEmail_RelatedEmails_ProviderService',
            'oro_email.twig.email_sandbox' => 'getOroEmail_Twig_EmailSandboxService',
            'oro_email.twig.email_security_policy' => 'getOroEmail_Twig_EmailSecurityPolicyService',
            'oro_email.twig.extension.email' => 'getOroEmail_Twig_Extension_EmailService',
            'oro_email.twig.string_loader' => 'getOroEmail_Twig_StringLoaderService',
            'oro_email.validator.email_address_validator' => 'getOroEmail_Validator_EmailAddressValidatorService',
            'oro_email.validator.email_recipients' => 'getOroEmail_Validator_EmailRecipientsService',
            'oro_email.validator.email_template_syntax' => 'getOroEmail_Validator_EmailTemplateSyntaxService',
            'oro_email.workflow.action.add_activity_target' => 'getOroEmail_Workflow_Action_AddActivityTargetService',
            'oro_email.workflow.action.parse_first_name' => 'getOroEmail_Workflow_Action_ParseFirstNameService',
            'oro_email.workflow.action.parse_last_name' => 'getOroEmail_Workflow_Action_ParseLastNameService',
            'oro_email.workflow.action.request_mailboxes' => 'getOroEmail_Workflow_Action_RequestMailboxesService',
            'oro_email.workflow.action.send_email' => 'getOroEmail_Workflow_Action_SendEmailService',
            'oro_email.workflow.action.send_email_template' => 'getOroEmail_Workflow_Action_SendEmailTemplateService',
            'oro_email.workflow.action.strip_html_tags' => 'getOroEmail_Workflow_Action_StripHtmlTagsService',
            'oro_email.workflow.condition.has_count' => 'getOroEmail_Workflow_Condition_HasCountService',
            'oro_email.workflow.condition.instanceof' => 'getOroEmail_Workflow_Condition_InstanceofService',
            'oro_email_filter.filter_massage_type' => 'getOroEmailFilter_FilterMassageTypeService',
            'oro_email_filter.filter_origin_folder' => 'getOroEmailFilter_FilterOriginFolderService',
            'oro_embedded_form.back_link.twig.extension' => 'getOroEmbeddedForm_BackLink_Twig_ExtensionService',
            'oro_embedded_form.embed_form_layout_manager' => 'getOroEmbeddedForm_EmbedFormLayoutManagerService',
            'oro_embedded_form.form_type' => 'getOroEmbeddedForm_FormTypeService',
            'oro_embedded_form.form_type.available_embedded_form' => 'getOroEmbeddedForm_FormType_AvailableEmbeddedFormService',
            'oro_embedded_form.grid.formatter.embedded_form_type_property' => 'getOroEmbeddedForm_Grid_Formatter_EmbeddedFormTypePropertyService',
            'oro_embedded_form.layout.block_type.default_form' => 'getOroEmbeddedForm_Layout_BlockType_DefaultFormService',
            'oro_embedded_form.layout.block_type.success_message' => 'getOroEmbeddedForm_Layout_BlockType_SuccessMessageService',
            'oro_embedded_form.manager' => 'getOroEmbeddedForm_ManagerService',
            'oro_entity.datagrid_helper' => 'getOroEntity_DatagridHelperService',
            'oro_entity.dictionary_value_list_provider' => 'getOroEntity_DictionaryValueListProviderService',
            'oro_entity.doctrine_helper' => 'getOroEntity_DoctrineHelperService',
            'oro_entity.entity_alias.cache.warmer' => 'getOroEntity_EntityAlias_Cache_WarmerService',
            'oro_entity.entity_alias_resolver' => 'getOroEntity_EntityAliasResolverService',
            'oro_entity.entity_class_name_helper' => 'getOroEntity_EntityClassNameHelperService',
            'oro_entity.entity_context_provider' => 'getOroEntity_EntityContextProviderService',
            'oro_entity.entity_field_list_provider' => 'getOroEntity_EntityFieldListProviderService',
            'oro_entity.entity_field_provider' => 'getOroEntity_EntityFieldProviderService',
            'oro_entity.entity_hierarchy_provider' => 'getOroEntity_EntityHierarchyProviderService',
            'oro_entity.entity_identifier_accessor' => 'getOroEntity_EntityIdentifierAccessorService',
            'oro_entity.entity_name_resolver' => 'getOroEntity_EntityNameResolverService',
            'oro_entity.entity_provider' => 'getOroEntity_EntityProviderService',
            'oro_entity.event_listener.custom_entity_grid_listener' => 'getOroEntity_EventListener_CustomEntityGridListenerService',
            'oro_entity.event_listener.entity_relation_grid_listener' => 'getOroEntity_EventListener_EntityRelationGridListenerService',
            'oro_entity.exclusion_provider' => 'getOroEntity_ExclusionProviderService',
            'oro_entity.exclusion_provider.config' => 'getOroEntity_ExclusionProvider_ConfigService',
            'oro_entity.exclusion_provider.dictionary' => 'getOroEntity_ExclusionProvider_DictionaryService',
            'oro_entity.extension.unique_entity_extension' => 'getOroEntity_Extension_UniqueEntityExtensionService',
            'oro_entity.form.guesser.doctrine_type' => 'getOroEntity_Form_Guesser_DoctrineTypeService',
            'oro_entity.form.guesser.form_config' => 'getOroEntity_Form_Guesser_FormConfigService',
            'oro_entity.form.handler.entity_select' => 'getOroEntity_Form_Handler_EntitySelectService',
            'oro_entity.form.type.custom_entity' => 'getOroEntity_Form_Type_CustomEntityService',
            'oro_entity.form.type.entity_choice' => 'getOroEntity_Form_Type_EntityChoiceService',
            'oro_entity.form.type.entity_field_choice' => 'getOroEntity_Form_Type_EntityFieldChoiceService',
            'oro_entity.form.type.entity_field_select' => 'getOroEntity_Form_Type_EntityFieldSelectService',
            'oro_entity.form.type.entity_select' => 'getOroEntity_Form_Type_EntitySelectService',
            'oro_entity.form.type.option_select' => 'getOroEntity_Form_Type_OptionSelectService',
            'oro_entity.helper.dictionary' => 'getOroEntity_Helper_DictionaryService',
            'oro_entity.listener.navigation_listener' => 'getOroEntity_Listener_NavigationListenerService',
            'oro_entity.listener.orm.generated_value_strategy_listener' => 'getOroEntity_Listener_Orm_GeneratedValueStrategyListenerService',
            'oro_entity.manager.dictionary.api' => 'getOroEntity_Manager_Dictionary_ApiService',
            'oro_entity.migration.extension.change_type' => 'getOroEntity_Migration_Extension_ChangeTypeService',
            'oro_entity.orm.entity_class_resolver' => 'getOroEntity_Orm_EntityClassResolverService',
            'oro_entity.owner.entity_config_subscriber' => 'getOroEntity_Owner_EntityConfigSubscriberService',
            'oro_entity.query_hint_resolver' => 'getOroEntity_QueryHintResolverService',
            'oro_entity.routing_helper' => 'getOroEntity_RoutingHelperService',
            'oro_entity.twig.extension.entity' => 'getOroEntity_Twig_Extension_EntityService',
            'oro_entity.virtual_field_provider' => 'getOroEntity_VirtualFieldProviderService',
            'oro_entity.virtual_field_provider.chain' => 'getOroEntity_VirtualFieldProvider_ChainService',
            'oro_entity.virtual_field_provider.dictionary' => 'getOroEntity_VirtualFieldProvider_DictionaryService',
            'oro_entity.virtual_field_provider.enum' => 'getOroEntity_VirtualFieldProvider_EnumService',
            'oro_entity.virtual_relation_provider.chain' => 'getOroEntity_VirtualRelationProvider_ChainService',
            'oro_entity.virtual_relation_provider.config' => 'getOroEntity_VirtualRelationProvider_ConfigService',
            'oro_entity_config.config_cache_impl' => 'getOroEntityConfig_ConfigCacheImplService',
            'oro_entity_config.config_loader' => 'getOroEntityConfig_ConfigLoaderService',
            'oro_entity_config.config_manager' => 'getOroEntityConfig_ConfigManagerService',
            'oro_entity_config.config_type_helper' => 'getOroEntityConfig_ConfigTypeHelperService',
            'oro_entity_config.event_listener.audit_log_grid_listener' => 'getOroEntityConfig_EventListener_AuditLogGridListenerService',
            'oro_entity_config.event_listener.entityconfig_grid_listener' => 'getOroEntityConfig_EventListener_EntityconfigGridListenerService',
            'oro_entity_config.event_listener.entityfields_grid_listener' => 'getOroEntityConfig_EventListener_EntityfieldsGridListenerService',
            'oro_entity_config.event_listener.option_set_listener' => 'getOroEntityConfig_EventListener_OptionSetListenerService',
            'oro_entity_config.extension.config' => 'getOroEntityConfig_Extension_ConfigService',
            'oro_entity_config.link.entity_manager' => 'getOroEntityConfig_Link_EntityManagerService',
            'oro_entity_config.link.security_context' => 'getOroEntityConfig_Link_SecurityContextService',
            'oro_entity_config.metadata.annotation_metadata_factory' => 'getOroEntityConfig_Metadata_AnnotationMetadataFactoryService',
            'oro_entity_config.migration.post_up.listener' => 'getOroEntityConfig_Migration_PostUp_ListenerService',
            'oro_entity_config.model_cache_impl' => 'getOroEntityConfig_ModelCacheImplService',
            'oro_entity_config.provider.activity' => 'getOroEntityConfig_Provider_ActivityService',
            'oro_entity_config.provider.attachment' => 'getOroEntityConfig_Provider_AttachmentService',
            'oro_entity_config.provider.comment' => 'getOroEntityConfig_Provider_CommentService',
            'oro_entity_config.provider.dataaudit' => 'getOroEntityConfig_Provider_DataauditService',
            'oro_entity_config.provider.datagrid' => 'getOroEntityConfig_Provider_DatagridService',
            'oro_entity_config.provider.dictionary' => 'getOroEntityConfig_Provider_DictionaryService',
            'oro_entity_config.provider.email' => 'getOroEntityConfig_Provider_EmailService',
            'oro_entity_config.provider.entity' => 'getOroEntityConfig_Provider_EntityService',
            'oro_entity_config.provider.entity_config' => 'getOroEntityConfig_Provider_EntityConfigService',
            'oro_entity_config.provider.enum' => 'getOroEntityConfig_Provider_EnumService',
            'oro_entity_config.provider.extend' => 'getOroEntityConfig_Provider_ExtendService',
            'oro_entity_config.provider.form' => 'getOroEntityConfig_Provider_FormService',
            'oro_entity_config.provider.grouping' => 'getOroEntityConfig_Provider_GroupingService',
            'oro_entity_config.provider.importexport' => 'getOroEntityConfig_Provider_ImportexportService',
            'oro_entity_config.provider.merge' => 'getOroEntityConfig_Provider_MergeService',
            'oro_entity_config.provider.note' => 'getOroEntityConfig_Provider_NoteService',
            'oro_entity_config.provider.ownership' => 'getOroEntityConfig_Provider_OwnershipService',
            'oro_entity_config.provider.reminder' => 'getOroEntityConfig_Provider_ReminderService',
            'oro_entity_config.provider.search' => 'getOroEntityConfig_Provider_SearchService',
            'oro_entity_config.provider.security' => 'getOroEntityConfig_Provider_SecurityService',
            'oro_entity_config.provider.view' => 'getOroEntityConfig_Provider_ViewService',
            'oro_entity_config.provider.workflow' => 'getOroEntityConfig_Provider_WorkflowService',
            'oro_entity_config.provider_bag' => 'getOroEntityConfig_ProviderBagService',
            'oro_entity_config.tools.command_executor' => 'getOroEntityConfig_Tools_CommandExecutorService',
            'oro_entity_config.twig.extension.config' => 'getOroEntityConfig_Twig_Extension_ConfigService',
            'oro_entity_config.type.choice' => 'getOroEntityConfig_Type_ChoiceService',
            'oro_entity_config.type.config' => 'getOroEntityConfig_Type_ConfigService',
            'oro_entity_config.type.integer' => 'getOroEntityConfig_Type_IntegerService',
            'oro_entity_config.type.text' => 'getOroEntityConfig_Type_TextService',
            'oro_entity_config.type.textarea' => 'getOroEntityConfig_Type_TextareaService',
            'oro_entity_extend.association_builder' => 'getOroEntityExtend_AssociationBuilderService',
            'oro_entity_extend.association_manager' => 'getOroEntityExtend_AssociationManagerService',
            'oro_entity_extend.association_type_helper' => 'getOroEntityExtend_AssociationTypeHelperService',
            'oro_entity_extend.datagrid.action.type.ajaxdeletefield' => 'getOroEntityExtend_Datagrid_Action_Type_AjaxdeletefieldService',
            'oro_entity_extend.datagrid.column_options_guesser' => 'getOroEntityExtend_Datagrid_ColumnOptionsGuesserService',
            'oro_entity_extend.datagrid.extension.additional_fields' => 'getOroEntityExtend_Datagrid_Extension_AdditionalFieldsService',
            'oro_entity_extend.datagrid.extension.dynamic_fields' => 'getOroEntityExtend_Datagrid_Extension_DynamicFieldsService',
            'oro_entity_extend.dictionary_filter' => 'getOroEntityExtend_DictionaryFilterService',
            'oro_entity_extend.entity_config_dumper.extension.enum' => 'getOroEntityExtend_EntityConfigDumper_Extension_EnumService',
            'oro_entity_extend.entity_config_dumper.extension.index' => 'getOroEntityExtend_EntityConfigDumper_Extension_IndexService',
            'oro_entity_extend.entity_config_dumper.extension.relation' => 'getOroEntityExtend_EntityConfigDumper_Extension_RelationService',
            'oro_entity_extend.entity_config_type.extension.enum' => 'getOroEntityExtend_EntityConfigType_Extension_EnumService',
            'oro_entity_extend.entity_generator' => 'getOroEntityExtend_EntityGeneratorService',
            'oro_entity_extend.entity_generator.extension' => 'getOroEntityExtend_EntityGenerator_ExtensionService',
            'oro_entity_extend.entity_metadata_builder' => 'getOroEntityExtend_EntityMetadataBuilderService',
            'oro_entity_extend.entity_metadata_builder.indices' => 'getOroEntityExtend_EntityMetadataBuilder_IndicesService',
            'oro_entity_extend.entity_metadata_builder.relations' => 'getOroEntityExtend_EntityMetadataBuilder_RelationsService',
            'oro_entity_extend.enum_filter' => 'getOroEntityExtend_EnumFilterService',
            'oro_entity_extend.enum_synchronizer' => 'getOroEntityExtend_EnumSynchronizerService',
            'oro_entity_extend.enum_type_helper' => 'getOroEntityExtend_EnumTypeHelperService',
            'oro_entity_extend.enum_value_provider' => 'getOroEntityExtend_EnumValueProviderService',
            'oro_entity_extend.extend.entity_processor' => 'getOroEntityExtend_Extend_EntityProcessorService',
            'oro_entity_extend.extend.entity_proxy_generator' => 'getOroEntityExtend_Extend_EntityProxyGeneratorService',
            'oro_entity_extend.extend.field_type_helper' => 'getOroEntityExtend_Extend_FieldTypeHelperService',
            'oro_entity_extend.form.extension.dynamic_fields' => 'getOroEntityExtend_Form_Extension_DynamicFieldsService',
            'oro_entity_extend.form.guesser.extend_field' => 'getOroEntityExtend_Form_Guesser_ExtendFieldService',
            'oro_entity_extend.importexport.normalizer.enum' => 'getOroEntityExtend_Importexport_Normalizer_EnumService',
            'oro_entity_extend.listener.before_map_object_search_listener' => 'getOroEntityExtend_Listener_BeforeMapObjectSearchListenerService',
            'oro_entity_extend.listener.config_subscriber' => 'getOroEntityExtend_Listener_ConfigSubscriberService',
            'oro_entity_extend.listener.entity_listener' => 'getOroEntityExtend_Listener_EntityListenerService',
            'oro_entity_extend.listener.extend_field_value_render' => 'getOroEntityExtend_Listener_ExtendFieldValueRenderService',
            'oro_entity_extend.listener.search_entity_config_listener' => 'getOroEntityExtend_Listener_SearchEntityConfigListenerService',
            'oro_entity_extend.manager.multi_enum_entity' => 'getOroEntityExtend_Manager_MultiEnumEntityService',
            'oro_entity_extend.migration.config_processor' => 'getOroEntityExtend_Migration_ConfigProcessorService',
            'oro_entity_extend.migration.entity_metadata_helper' => 'getOroEntityExtend_Migration_EntityMetadataHelperService',
            'oro_entity_extend.migration.extension.extend' => 'getOroEntityExtend_Migration_Extension_ExtendService',
            'oro_entity_extend.migration.extension.rename' => 'getOroEntityExtend_Migration_Extension_RenameService',
            'oro_entity_extend.migration.options_manager' => 'getOroEntityExtend_Migration_OptionsManagerService',
            'oro_entity_extend.migration.options_parser' => 'getOroEntityExtend_Migration_OptionsParserService',
            'oro_entity_extend.migration.refresh_cache_before_entity_config_update.post_up.listener' => 'getOroEntityExtend_Migration_RefreshCacheBeforeEntityConfigUpdate_PostUp_ListenerService',
            'oro_entity_extend.migration.update_config.post_up.listener' => 'getOroEntityExtend_Migration_UpdateConfig_PostUp_ListenerService',
            'oro_entity_extend.migration.update_indices.post_up.listener' => 'getOroEntityExtend_Migration_UpdateIndices_PostUp_ListenerService',
            'oro_entity_extend.multi_enum_filter' => 'getOroEntityExtend_MultiEnumFilterService',
            'oro_entity_extend.relation_builder' => 'getOroEntityExtend_RelationBuilderService',
            'oro_entity_extend.tools.dumper' => 'getOroEntityExtend_Tools_DumperService',
            'oro_entity_extend.twig.extension.dynamic_fields' => 'getOroEntityExtend_Twig_Extension_DynamicFieldsService',
            'oro_entity_extend.twig.extension.enum' => 'getOroEntityExtend_Twig_Extension_EnumService',
            'oro_entity_extend.type.association.choice' => 'getOroEntityExtend_Type_Association_ChoiceService',
            'oro_entity_extend.type.association.integer' => 'getOroEntityExtend_Type_Association_IntegerService',
            'oro_entity_extend.type.association.text' => 'getOroEntityExtend_Type_Association_TextService',
            'oro_entity_extend.type.association.textarea' => 'getOroEntityExtend_Type_Association_TextareaService',
            'oro_entity_extend.type.association_choice' => 'getOroEntityExtend_Type_AssociationChoiceService',
            'oro_entity_extend.type.choice' => 'getOroEntityExtend_Type_ChoiceService',
            'oro_entity_extend.type.dictionary_filter' => 'getOroEntityExtend_Type_DictionaryFilterService',
            'oro_entity_extend.type.entity' => 'getOroEntityExtend_Type_EntityService',
            'oro_entity_extend.type.enum_choice' => 'getOroEntityExtend_Type_EnumChoiceService',
            'oro_entity_extend.type.enum_filter' => 'getOroEntityExtend_Type_EnumFilterService',
            'oro_entity_extend.type.enum_name' => 'getOroEntityExtend_Type_EnumNameService',
            'oro_entity_extend.type.enum_public' => 'getOroEntityExtend_Type_EnumPublicService',
            'oro_entity_extend.type.enum_select' => 'getOroEntityExtend_Type_EnumSelectService',
            'oro_entity_extend.type.enum_value' => 'getOroEntityExtend_Type_EnumValueService',
            'oro_entity_extend.type.enum_value_collection' => 'getOroEntityExtend_Type_EnumValueCollectionService',
            'oro_entity_extend.type.field' => 'getOroEntityExtend_Type_FieldService',
            'oro_entity_extend.type.integer' => 'getOroEntityExtend_Type_IntegerService',
            'oro_entity_extend.type.multiple_association_choice' => 'getOroEntityExtend_Type_MultipleAssociationChoiceService',
            'oro_entity_extend.type.multiple_entity' => 'getOroEntityExtend_Type_MultipleEntityService',
            'oro_entity_extend.type.option_set' => 'getOroEntityExtend_Type_OptionSetService',
            'oro_entity_extend.type.option_set_collection' => 'getOroEntityExtend_Type_OptionSetCollectionService',
            'oro_entity_extend.type.relation' => 'getOroEntityExtend_Type_RelationService',
            'oro_entity_extend.type.target_field_type' => 'getOroEntityExtend_Type_TargetFieldTypeService',
            'oro_entity_extend.type.text' => 'getOroEntityExtend_Type_TextService',
            'oro_entity_extend.type.textarea' => 'getOroEntityExtend_Type_TextareaService',
            'oro_entity_extend.type.unique_key_collection_type' => 'getOroEntityExtend_Type_UniqueKeyCollectionTypeService',
            'oro_entity_extend.validator.not_sql_keyword' => 'getOroEntityExtend_Validator_NotSqlKeywordService',
            'oro_entity_extend.validator.unique_enum_name' => 'getOroEntityExtend_Validator_UniqueEnumNameService',
            'oro_entity_extend.validator.unique_keys' => 'getOroEntityExtend_Validator_UniqueKeysService',
            'oro_entity_merge.accessor.default' => 'getOroEntityMerge_Accessor_DefaultService',
            'oro_entity_merge.accessor.delegate' => 'getOroEntityMerge_Accessor_DelegateService',
            'oro_entity_merge.accessor.inverse_association' => 'getOroEntityMerge_Accessor_InverseAssociationService',
            'oro_entity_merge.data.entity_data_factory' => 'getOroEntityMerge_Data_EntityDataFactoryService',
            'oro_entity_merge.doctrine_helper' => 'getOroEntityMerge_DoctrineHelperService',
            'oro_entity_merge.form.type.merge' => 'getOroEntityMerge_Form_Type_MergeService',
            'oro_entity_merge.form.type.merge_field' => 'getOroEntityMerge_Form_Type_MergeFieldService',
            'oro_entity_merge.listener.merge_field.cascade_remove_association' => 'getOroEntityMerge_Listener_MergeField_CascadeRemoveAssociationService',
            'oro_entity_merge.listener.metadata.default_label' => 'getOroEntityMerge_Listener_Metadata_DefaultLabelService',
            'oro_entity_merge.listener.metadata.entity_config' => 'getOroEntityMerge_Listener_Metadata_EntityConfigService',
            'oro_entity_merge.listener.metadata.entity_config.helper' => 'getOroEntityMerge_Listener_Metadata_EntityConfig_HelperService',
            'oro_entity_merge.listener.metadata.merge_modes' => 'getOroEntityMerge_Listener_Metadata_MergeModesService',
            'oro_entity_merge.listener.render.localized_value_render' => 'getOroEntityMerge_Listener_Render_LocalizedValueRenderService',
            'oro_entity_merge.mass_action.data_handler' => 'getOroEntityMerge_MassAction_DataHandlerService',
            'oro_entity_merge.mass_action.merge' => 'getOroEntityMerge_MassAction_MergeService',
            'oro_entity_merge.mass_action.merge_mass_action_listener' => 'getOroEntityMerge_MassAction_MergeMassActionListenerService',
            'oro_entity_merge.merger' => 'getOroEntityMerge_MergerService',
            'oro_entity_merge.metadata.builder' => 'getOroEntityMerge_Metadata_BuilderService',
            'oro_entity_merge.metadata.factory' => 'getOroEntityMerge_Metadata_FactoryService',
            'oro_entity_merge.metadata.registry' => 'getOroEntityMerge_Metadata_RegistryService',
            'oro_entity_merge.step.merge_fields' => 'getOroEntityMerge_Step_MergeFieldsService',
            'oro_entity_merge.step.remove_entities' => 'getOroEntityMerge_Step_RemoveEntitiesService',
            'oro_entity_merge.step.validate' => 'getOroEntityMerge_Step_ValidateService',
            'oro_entity_merge.strategy.delegate' => 'getOroEntityMerge_Strategy_DelegateService',
            'oro_entity_merge.strategy.replace' => 'getOroEntityMerge_Strategy_ReplaceService',
            'oro_entity_merge.strategy.unite' => 'getOroEntityMerge_Strategy_UniteService',
            'oro_entity_merge.twig.extension' => 'getOroEntityMerge_Twig_ExtensionService',
            'oro_entity_merge.twig.renderer' => 'getOroEntityMerge_Twig_RendererService',
            'oro_entity_merge.validator.master_entity' => 'getOroEntityMerge_Validator_MasterEntityService',
            'oro_entity_merge.validator.max_entities_validator' => 'getOroEntityMerge_Validator_MaxEntitiesValidatorService',
            'oro_entity_merge.validator.source_entity' => 'getOroEntityMerge_Validator_SourceEntityService',
            'oro_entity_merge.validator.unique_entity' => 'getOroEntityMerge_Validator_UniqueEntityService',
            'oro_entity_pagination.datagrid.extension.orm_entity_pagination' => 'getOroEntityPagination_Datagrid_Extension_OrmEntityPaginationService',
            'oro_entity_pagination.event_listener.entity_pagination' => 'getOroEntityPagination_EventListener_EntityPaginationService',
            'oro_entity_pagination.manager' => 'getOroEntityPagination_ManagerService',
            'oro_entity_pagination.message_manager' => 'getOroEntityPagination_MessageManagerService',
            'oro_entity_pagination.navigation' => 'getOroEntityPagination_NavigationService',
            'oro_entity_pagination.storage' => 'getOroEntityPagination_StorageService',
            'oro_entity_pagination.storage.data_collector' => 'getOroEntityPagination_Storage_DataCollectorService',
            'oro_entity_pagination.twig_extension.entity_pagination' => 'getOroEntityPagination_TwigExtension_EntityPaginationService',
            'oro_filter.boolean_filter' => 'getOroFilter_BooleanFilterService',
            'oro_filter.builder.many_relation' => 'getOroFilter_Builder_ManyRelationService',
            'oro_filter.builder.many_relation.orm' => 'getOroFilter_Builder_ManyRelation_OrmService',
            'oro_filter.choice_filter' => 'getOroFilter_ChoiceFilterService',
            'oro_filter.currency_filter' => 'getOroFilter_CurrencyFilterService',
            'oro_filter.datagrid.column_options_guesser' => 'getOroFilter_Datagrid_ColumnOptionsGuesserService',
            'oro_filter.date_filter_utility' => 'getOroFilter_DateFilterUtilityService',
            'oro_filter.date_range_filter' => 'getOroFilter_DateRangeFilterService',
            'oro_filter.datetime_range_filter' => 'getOroFilter_DatetimeRangeFilterService',
            'oro_filter.dictionary_filter' => 'getOroFilter_DictionaryFilterService',
            'oro_filter.entity_filter' => 'getOroFilter_EntityFilterService',
            'oro_filter.expression.date.compiler' => 'getOroFilter_Expression_Date_CompilerService',
            'oro_filter.expression.date.lexer' => 'getOroFilter_Expression_Date_LexerService',
            'oro_filter.expression.date.parser' => 'getOroFilter_Expression_Date_ParserService',
            'oro_filter.extension.orm_filter' => 'getOroFilter_Extension_OrmFilterService',
            'oro_filter.filter_utility' => 'getOroFilter_FilterUtilityService',
            'oro_filter.form.event_subscriber.date' => 'getOroFilter_Form_EventSubscriber_DateService',
            'oro_filter.form.type.date_range' => 'getOroFilter_Form_Type_DateRangeService',
            'oro_filter.form.type.datetime_range' => 'getOroFilter_Form_Type_DatetimeRangeService',
            'oro_filter.form.type.filter' => 'getOroFilter_Form_Type_FilterService',
            'oro_filter.form.type.filter.boolean' => 'getOroFilter_Form_Type_Filter_BooleanService',
            'oro_filter.form.type.filter.choice' => 'getOroFilter_Form_Type_Filter_ChoiceService',
            'oro_filter.form.type.filter.date_range' => 'getOroFilter_Form_Type_Filter_DateRangeService',
            'oro_filter.form.type.filter.datetime_range' => 'getOroFilter_Form_Type_Filter_DatetimeRangeService',
            'oro_filter.form.type.filter.dictionary' => 'getOroFilter_Form_Type_Filter_DictionaryService',
            'oro_filter.form.type.filter.entity' => 'getOroFilter_Form_Type_Filter_EntityService',
            'oro_filter.form.type.filter.many_to_many' => 'getOroFilter_Form_Type_Filter_ManyToManyService',
            'oro_filter.form.type.filter.number' => 'getOroFilter_Form_Type_Filter_NumberService',
            'oro_filter.form.type.filter.selectrow' => 'getOroFilter_Form_Type_Filter_SelectrowService',
            'oro_filter.form.type.filter.text' => 'getOroFilter_Form_Type_Filter_TextService',
            'oro_filter.many_to_many_filter' => 'getOroFilter_ManyToManyFilterService',
            'oro_filter.number_filter' => 'getOroFilter_NumberFilterService',
            'oro_filter.percent_filter' => 'getOroFilter_PercentFilterService',
            'oro_filter.provider.datemodifierprovider' => 'getOroFilter_Provider_DatemodifierproviderService',
            'oro_filter.select_row_filter' => 'getOroFilter_SelectRowFilterService',
            'oro_filter.single_choice_filter' => 'getOroFilter_SingleChoiceFilterService',
            'oro_filter.string_filter' => 'getOroFilter_StringFilterService',
            'oro_form.autocomplete.search_registry' => 'getOroForm_Autocomplete_SearchRegistryService',
            'oro_form.autocomplete.security' => 'getOroForm_Autocomplete_SecurityService',
            'oro_form.extension.client_validation' => 'getOroForm_Extension_ClientValidationService',
            'oro_form.extension.constraint_as_option' => 'getOroForm_Extension_ConstraintAsOptionService',
            'oro_form.extension.data_block' => 'getOroForm_Extension_DataBlockService',
            'oro_form.extension.data_transformer' => 'getOroForm_Extension_DataTransformerService',
            'oro_form.extension.js_validation' => 'getOroForm_Extension_JsValidationService',
            'oro_form.extension.js_validation.constraints_provider' => 'getOroForm_Extension_JsValidation_ConstraintsProviderService',
            'oro_form.extension.js_validation.repeated' => 'getOroForm_Extension_JsValidation_RepeatedService',
            'oro_form.extension.random_id' => 'getOroForm_Extension_RandomIdService',
            'oro_form.extension.sortable' => 'getOroForm_Extension_SortableService',
            'oro_form.form_handler.api' => 'getOroForm_FormHandler_ApiService',
            'oro_form.importexport.primary_item_collection_normalizer' => 'getOroForm_Importexport_PrimaryItemCollectionNormalizerService',
            'oro_form.model.update_handler' => 'getOroForm_Model_UpdateHandlerService',
            'oro_form.provider.html_tag_provider' => 'getOroForm_Provider_HtmlTagProviderService',
            'oro_form.related_entity.form.type.api' => 'getOroForm_RelatedEntity_Form_Type_ApiService',
            'oro_form.related_entity_collection.form.type.api' => 'getOroForm_RelatedEntityCollection_Form_Type_ApiService',
            'oro_form.related_entity_standalone_collection.form.type.api' => 'getOroForm_RelatedEntityStandaloneCollection_Form_Type_ApiService',
            'oro_form.twig.form_extension' => 'getOroForm_Twig_FormExtensionService',
            'oro_form.twig.js_validation_extension' => 'getOroForm_Twig_JsValidationExtensionService',
            'oro_form.type.collection' => 'getOroForm_Type_CollectionService',
            'oro_form.type.color_table' => 'getOroForm_Type_ColorTableService',
            'oro_form.type.date' => 'getOroForm_Type_DateService',
            'oro_form.type.datetime' => 'getOroForm_Type_DatetimeService',
            'oro_form.type.download_links' => 'getOroForm_Type_DownloadLinksService',
            'oro_form.type.encoded_password' => 'getOroForm_Type_EncodedPasswordService',
            'oro_form.type.entity_changeset' => 'getOroForm_Type_EntityChangesetService',
            'oro_form.type.entity_create_or_select' => 'getOroForm_Type_EntityCreateOrSelectService',
            'oro_form.type.entity_create_or_select_choice' => 'getOroForm_Type_EntityCreateOrSelectChoiceService',
            'oro_form.type.entity_identifier' => 'getOroForm_Type_EntityIdentifierService',
            'oro_form.type.icon' => 'getOroForm_Type_IconService',
            'oro_form.type.jqueryselect2_hidden' => 'getOroForm_Type_Jqueryselect2HiddenService',
            'oro_form.type.link' => 'getOroForm_Type_LinkService',
            'oro_form.type.money' => 'getOroForm_Type_MoneyService',
            'oro_form.type.multiple_entity' => 'getOroForm_Type_MultipleEntityService',
            'oro_form.type.oro_entity_create_or_select_inline' => 'getOroForm_Type_OroEntityCreateOrSelectInlineService',
            'oro_form.type.percent' => 'getOroForm_Type_PercentService',
            'oro_form.type.resizeable_rich_text' => 'getOroForm_Type_ResizeableRichTextService',
            'oro_form.type.rich_text' => 'getOroForm_Type_RichTextService',
            'oro_form.type.simple_color_choice' => 'getOroForm_Type_SimpleColorChoiceService',
            'oro_form.type.simple_color_picker' => 'getOroForm_Type_SimpleColorPickerService',
            'oro_form.type.textlist' => 'getOroForm_Type_TextlistService',
            'oro_form.type.time_interval' => 'getOroForm_Type_TimeIntervalService',
            'oro_form.validator.constraint_factory' => 'getOroForm_Validator_ConstraintFactoryService',
            'oro_form.validator.entity_class' => 'getOroForm_Validator_EntityClassService',
            'oro_form.validator.related_entity' => 'getOroForm_Validator_RelatedEntityService',
            'oro_help.form.tooltip_extension' => 'getOroHelp_Form_TooltipExtensionService',
            'oro_help.help_link.cache' => 'getOroHelp_HelpLink_CacheService',
            'oro_help.listener.help_link' => 'getOroHelp_Listener_HelpLinkService',
            'oro_help.model.help_link_provider' => 'getOroHelp_Model_HelpLinkProviderService',
            'oro_help.twig.extension' => 'getOroHelp_Twig_ExtensionService',
            'oro_imap.connector.factory' => 'getOroImap_Connector_FactoryService',
            'oro_imap.email_synchronizer' => 'getOroImap_EmailSynchronizerService',
            'oro_imap.form.type.configuration' => 'getOroImap_Form_Type_ConfigurationService',
            'oro_imap.listener.user_email_origin' => 'getOroImap_Listener_UserEmailOriginService',
            'oro_imap.manager.clear' => 'getOroImap_Manager_ClearService',
            'oro_imap.workflow.action.dependency_job' => 'getOroImap_Workflow_Action_DependencyJobService',
            'oro_importexport.action.execute_job' => 'getOroImportexport_Action_ExecuteJobService',
            'oro_importexport.context_registry' => 'getOroImportexport_ContextRegistryService',
            'oro_importexport.data_converter.default' => 'getOroImportexport_DataConverter_DefaultService',
            'oro_importexport.data_converter.relation_calculator' => 'getOroImportexport_DataConverter_RelationCalculatorService',
            'oro_importexport.data_converter.template_fixture.relation_calculator' => 'getOroImportexport_DataConverter_TemplateFixture_RelationCalculatorService',
            'oro_importexport.field.database_helper' => 'getOroImportexport_Field_DatabaseHelperService',
            'oro_importexport.field.field_helper' => 'getOroImportexport_Field_FieldHelperService',
            'oro_importexport.file.file_system_operator' => 'getOroImportexport_File_FileSystemOperatorService',
            'oro_importexport.file.mime_type_guesser' => 'getOroImportexport_File_MimeTypeGuesserService',
            'oro_importexport.form.type.import' => 'getOroImportexport_Form_Type_ImportService',
            'oro_importexport.handler.abstract' => 'getOroImportexport_Handler_AbstractService',
            'oro_importexport.handler.export' => 'getOroImportexport_Handler_ExportService',
            'oro_importexport.handler.import.abstract' => 'getOroImportexport_Handler_Import_AbstractService',
            'oro_importexport.handler.import.cli' => 'getOroImportexport_Handler_Import_CliService',
            'oro_importexport.handler.import.http' => 'getOroImportexport_Handler_Import_HttpService',
            'oro_importexport.job_executor' => 'getOroImportexport_JobExecutorService',
            'oro_importexport.processor.export_delegate' => 'getOroImportexport_Processor_ExportDelegateService',
            'oro_importexport.processor.export_template_delegate' => 'getOroImportexport_Processor_ExportTemplateDelegateService',
            'oro_importexport.processor.import_delegate' => 'getOroImportexport_Processor_ImportDelegateService',
            'oro_importexport.processor.import_validation_delegate' => 'getOroImportexport_Processor_ImportValidationDelegateService',
            'oro_importexport.processor.registry' => 'getOroImportexport_Processor_RegistryService',
            'oro_importexport.reader.csv' => 'getOroImportexport_Reader_CsvService',
            'oro_importexport.reader.entity' => 'getOroImportexport_Reader_EntityService',
            'oro_importexport.reader.template_fixture' => 'getOroImportexport_Reader_TemplateFixtureService',
            'oro_importexport.serializer' => 'getOroImportexport_SerializerService',
            'oro_importexport.serializer.collection_normalizer' => 'getOroImportexport_Serializer_CollectionNormalizerService',
            'oro_importexport.serializer.configurable_entity_normalizer' => 'getOroImportexport_Serializer_ConfigurableEntityNormalizerService',
            'oro_importexport.serializer.datetime_normalizer' => 'getOroImportexport_Serializer_DatetimeNormalizerService',
            'oro_importexport.serializer.dummy_encoder' => 'getOroImportexport_Serializer_DummyEncoderService',
            'oro_importexport.strategy.import.helper' => 'getOroImportexport_Strategy_Import_HelperService',
            'oro_importexport.template_fixture.entity_registry' => 'getOroImportexport_TemplateFixture_EntityRegistryService',
            'oro_importexport.template_fixture.manager' => 'getOroImportexport_TemplateFixture_ManagerService',
            'oro_importexport.writer.csv' => 'getOroImportexport_Writer_CsvService',
            'oro_importexport.writer.doctrine_clear' => 'getOroImportexport_Writer_DoctrineClearService',
            'oro_importexport.writer.dummy' => 'getOroImportexport_Writer_DummyService',
            'oro_importexport.writer.echo.csv' => 'getOroImportexport_Writer_Echo_CsvService',
            'oro_importexport.writer.entity' => 'getOroImportexport_Writer_EntityService',
            'oro_importexport.writer.entity_detach_fixer' => 'getOroImportexport_Writer_EntityDetachFixerService',
            'oro_installer.form.type.configuration' => 'getOroInstaller_Form_Type_ConfigurationService',
            'oro_installer.form.type.configuration.database' => 'getOroInstaller_Form_Type_Configuration_DatabaseService',
            'oro_installer.form.type.configuration.mailer' => 'getOroInstaller_Form_Type_Configuration_MailerService',
            'oro_installer.form.type.configuration.system' => 'getOroInstaller_Form_Type_Configuration_SystemService',
            'oro_installer.form.type.configuration.websocket' => 'getOroInstaller_Form_Type_Configuration_WebsocketService',
            'oro_installer.form.type.setup' => 'getOroInstaller_Form_Type_SetupService',
            'oro_installer.scenario' => 'getOroInstaller_ScenarioService',
            'oro_installer.script_manager' => 'getOroInstaller_ScriptManagerService',
            'oro_installer.yaml_persister' => 'getOroInstaller_YamlPersisterService',
            'oro_integration.action.remove_fields_changes' => 'getOroIntegration_Action_RemoveFieldsChangesService',
            'oro_integration.action.save_fields_changes' => 'getOroIntegration_Action_SaveFieldsChangesService',
            'oro_integration.action.schedule_sync' => 'getOroIntegration_Action_ScheduleSyncService',
            'oro_integration.config_resolver' => 'getOroIntegration_ConfigResolverService',
            'oro_integration.datagrid.status_grid_helper' => 'getOroIntegration_Datagrid_StatusGridHelperService',
            'oro_integration.delete_manager' => 'getOroIntegration_DeleteManagerService',
            'oro_integration.event_listener.keep_avile' => 'getOroIntegration_EventListener_KeepAvileService',
            'oro_integration.form.channel' => 'getOroIntegration_Form_ChannelService',
            'oro_integration.form.handler.integration' => 'getOroIntegration_Form_Handler_IntegrationService',
            'oro_integration.form.subscriber.channel_subscriber' => 'getOroIntegration_Form_Subscriber_ChannelSubscriberService',
            'oro_integration.form.subscriber.default_owner_subscriber' => 'getOroIntegration_Form_Subscriber_DefaultOwnerSubscriberService',
            'oro_integration.form.type.channel' => 'getOroIntegration_Form_Type_ChannelService',
            'oro_integration.form.type.oro_integration_select' => 'getOroIntegration_Form_Type_OroIntegrationSelectService',
            'oro_integration.form.type.oro_integration_type_select' => 'getOroIntegration_Form_Type_OroIntegrationTypeSelectService',
            'oro_integration.helper.default_owner_helper' => 'getOroIntegration_Helper_DefaultOwnerHelperService',
            'oro_integration.job_executor' => 'getOroIntegration_JobExecutorService',
            'oro_integration.logger.strategy' => 'getOroIntegration_Logger_StrategyService',
            'oro_integration.manager.api' => 'getOroIntegration_Manager_ApiService',
            'oro_integration.manager.fields_changes' => 'getOroIntegration_Manager_FieldsChangesService',
            'oro_integration.manager.types_registry' => 'getOroIntegration_Manager_TypesRegistryService',
            'oro_integration.processor_registry' => 'getOroIntegration_ProcessorRegistryService',
            'oro_integration.provider.connector_context_mediator' => 'getOroIntegration_Provider_ConnectorContextMediatorService',
            'oro_integration.provider.settings_provider' => 'getOroIntegration_Provider_SettingsProviderService',
            'oro_integration.reader.entity.by_id' => 'getOroIntegration_Reader_Entity_ByIdService',
            'oro_integration.reverse_sync.processor' => 'getOroIntegration_ReverseSync_ProcessorService',
            'oro_integration.sync.processor' => 'getOroIntegration_Sync_ProcessorService',
            'oro_integration.sync_scheduler' => 'getOroIntegration_SyncSchedulerService',
            'oro_integration.transport.rest.guzzle.client_factory' => 'getOroIntegration_Transport_Rest_Guzzle_ClientFactoryService',
            'oro_integration.twig.integration' => 'getOroIntegration_Twig_IntegrationService',
            'oro_integration.utils.form_utils' => 'getOroIntegration_Utils_FormUtilsService',
            'oro_integration.workflow.action.populate_integration_owner' => 'getOroIntegration_Workflow_Action_PopulateIntegrationOwnerService',
            'oro_integration.workflow.condition.has_active_integration' => 'getOroIntegration_Workflow_Condition_HasActiveIntegrationService',
            'oro_integration.writer.persistent_batch_writer' => 'getOroIntegration_Writer_PersistentBatchWriterService',
            'oro_layout.block_type.base' => 'getOroLayout_BlockType_BaseService',
            'oro_layout.block_type.body' => 'getOroLayout_BlockType_BodyService',
            'oro_layout.block_type.button' => 'getOroLayout_BlockType_ButtonService',
            'oro_layout.block_type.button_group' => 'getOroLayout_BlockType_ButtonGroupService',
            'oro_layout.block_type.container' => 'getOroLayout_BlockType_ContainerService',
            'oro_layout.block_type.fieldset' => 'getOroLayout_BlockType_FieldsetService',
            'oro_layout.block_type.form' => 'getOroLayout_BlockType_FormService',
            'oro_layout.block_type.form_end' => 'getOroLayout_BlockType_FormEndService',
            'oro_layout.block_type.form_field' => 'getOroLayout_BlockType_FormFieldService',
            'oro_layout.block_type.form_start' => 'getOroLayout_BlockType_FormStartService',
            'oro_layout.block_type.head' => 'getOroLayout_BlockType_HeadService',
            'oro_layout.block_type.link' => 'getOroLayout_BlockType_LinkService',
            'oro_layout.block_type.list' => 'getOroLayout_BlockType_ListService',
            'oro_layout.block_type.list_item' => 'getOroLayout_BlockType_ListItemService',
            'oro_layout.block_type.meta' => 'getOroLayout_BlockType_MetaService',
            'oro_layout.block_type.ordered_list' => 'getOroLayout_BlockType_OrderedListService',
            'oro_layout.block_type.resource' => 'getOroLayout_BlockType_ResourceService',
            'oro_layout.block_type.root' => 'getOroLayout_BlockType_RootService',
            'oro_layout.block_type.script' => 'getOroLayout_BlockType_ScriptService',
            'oro_layout.block_type.style' => 'getOroLayout_BlockType_StyleService',
            'oro_layout.block_type.text' => 'getOroLayout_BlockType_TextService',
            'oro_layout.block_type_extension.class_attribute' => 'getOroLayout_BlockTypeExtension_ClassAttributeService',
            'oro_layout.block_type_extension.config_expression' => 'getOroLayout_BlockTypeExtension_ConfigExpressionService',
            'oro_layout.block_type_extension.visible' => 'getOroLayout_BlockTypeExtension_VisibleService',
            'oro_layout.data_provider.theme' => 'getOroLayout_DataProvider_ThemeService',
            'oro_layout.expression.andx' => 'getOroLayout_Expression_AndxService',
            'oro_layout.expression.assembler' => 'getOroLayout_Expression_AssemblerService',
            'oro_layout.expression.blank' => 'getOroLayout_Expression_BlankService',
            'oro_layout.expression.encoder_registry' => 'getOroLayout_Expression_EncoderRegistryService',
            'oro_layout.expression.equal_to' => 'getOroLayout_Expression_EqualToService',
            'oro_layout.expression.factory' => 'getOroLayout_Expression_FactoryService',
            'oro_layout.expression.false' => 'getOroLayout_Expression_FalseService',
            'oro_layout.expression.greater_than' => 'getOroLayout_Expression_GreaterThanService',
            'oro_layout.expression.greater_than_or_equal' => 'getOroLayout_Expression_GreaterThanOrEqualService',
            'oro_layout.expression.has_value' => 'getOroLayout_Expression_HasValueService',
            'oro_layout.expression.iif' => 'getOroLayout_Expression_IifService',
            'oro_layout.expression.join' => 'getOroLayout_Expression_JoinService',
            'oro_layout.expression.json_encoder' => 'getOroLayout_Expression_JsonEncoderService',
            'oro_layout.expression.less_than' => 'getOroLayout_Expression_LessThanService',
            'oro_layout.expression.less_than_or_equal' => 'getOroLayout_Expression_LessThanOrEqualService',
            'oro_layout.expression.not' => 'getOroLayout_Expression_NotService',
            'oro_layout.expression.not_blank' => 'getOroLayout_Expression_NotBlankService',
            'oro_layout.expression.not_equal_to' => 'getOroLayout_Expression_NotEqualToService',
            'oro_layout.expression.not_has_value' => 'getOroLayout_Expression_NotHasValueService',
            'oro_layout.expression.orx' => 'getOroLayout_Expression_OrxService',
            'oro_layout.expression.trim' => 'getOroLayout_Expression_TrimService',
            'oro_layout.expression.true' => 'getOroLayout_Expression_TrueService',
            'oro_layout.expression.value' => 'getOroLayout_Expression_ValueService',
            'oro_layout.form_layout_builder' => 'getOroLayout_FormLayoutBuilderService',
            'oro_layout.layout_context_configurator.action' => 'getOroLayout_LayoutContextConfigurator_ActionService',
            'oro_layout.layout_context_configurator.application' => 'getOroLayout_LayoutContextConfigurator_ApplicationService',
            'oro_layout.layout_context_configurator.config_expression' => 'getOroLayout_LayoutContextConfigurator_ConfigExpressionService',
            'oro_layout.layout_context_configurator.data' => 'getOroLayout_LayoutContextConfigurator_DataService',
            'oro_layout.layout_context_configurator.form' => 'getOroLayout_LayoutContextConfigurator_FormService',
            'oro_layout.layout_context_configurator.route' => 'getOroLayout_LayoutContextConfigurator_RouteService',
            'oro_layout.layout_context_configurator.theme' => 'getOroLayout_LayoutContextConfigurator_ThemeService',
            'oro_layout.layout_manager' => 'getOroLayout_LayoutManagerService',
            'oro_layout.loader' => 'getOroLayout_LoaderService',
            'oro_layout.php.renderer' => 'getOroLayout_Php_RendererService',
            'oro_layout.php.templating.helper' => 'getOroLayout_Php_Templating_HelperService',
            'oro_layout.request.listener.theme' => 'getOroLayout_Request_Listener_ThemeService',
            'oro_layout.text.helper' => 'getOroLayout_Text_HelperService',
            'oro_layout.theme_extension' => 'getOroLayout_ThemeExtensionService',
            'oro_layout.theme_manager' => 'getOroLayout_ThemeManagerService',
            'oro_layout.twig.renderer' => 'getOroLayout_Twig_RendererService',
            'oro_layout.view.listener' => 'getOroLayout_View_ListenerService',
            'oro_locale.cache' => 'getOroLocale_CacheService',
            'oro_locale.calendar' => 'getOroLocale_CalendarService',
            'oro_locale.calendar_factory' => 'getOroLocale_CalendarFactoryService',
            'oro_locale.dql.formatter.name' => 'getOroLocale_Dql_Formatter_NameService',
            'oro_locale.form.type.country' => 'getOroLocale_Form_Type_CountryService',
            'oro_locale.form.type.currency' => 'getOroLocale_Form_Type_CurrencyService',
            'oro_locale.form.type.language' => 'getOroLocale_Form_Type_LanguageService',
            'oro_locale.form.type.locale' => 'getOroLocale_Form_Type_LocaleService',
            'oro_locale.form.type.name_format' => 'getOroLocale_Form_Type_NameFormatService',
            'oro_locale.form.type.quarter' => 'getOroLocale_Form_Type_QuarterService',
            'oro_locale.form.type.timezone' => 'getOroLocale_Form_Type_TimezoneService',
            'oro_locale.format.datetime' => 'getOroLocale_Format_DatetimeService',
            'oro_locale.format_converter.date_time.intl' => 'getOroLocale_FormatConverter_DateTime_IntlService',
            'oro_locale.format_converter.date_time.moment' => 'getOroLocale_FormatConverter_DateTime_MomentService',
            'oro_locale.format_converter.date_time.php' => 'getOroLocale_FormatConverter_DateTime_PhpService',
            'oro_locale.format_converter.date_time.registry' => 'getOroLocale_FormatConverter_DateTime_RegistryService',
            'oro_locale.formatter.address' => 'getOroLocale_Formatter_AddressService',
            'oro_locale.formatter.date_time' => 'getOroLocale_Formatter_DateTimeService',
            'oro_locale.formatter.name' => 'getOroLocale_Formatter_NameService',
            'oro_locale.formatter.number' => 'getOroLocale_Formatter_NumberService',
            'oro_locale.locale_listener' => 'getOroLocale_LocaleListenerService',
            'oro_locale.settings' => 'getOroLocale_SettingsService',
            'oro_locale.twig.address' => 'getOroLocale_Twig_AddressService',
            'oro_locale.twig.calendar' => 'getOroLocale_Twig_CalendarService',
            'oro_locale.twig.date_format' => 'getOroLocale_Twig_DateFormatService',
            'oro_locale.twig.date_time' => 'getOroLocale_Twig_DateTimeService',
            'oro_locale.twig.locale' => 'getOroLocale_Twig_LocaleService',
            'oro_locale.twig.name' => 'getOroLocale_Twig_NameService',
            'oro_locale.twig.number' => 'getOroLocale_Twig_NumberService',
            'oro_menu.builder_chain' => 'getOroMenu_BuilderChainService',
            'oro_menu.cache' => 'getOroMenu_CacheService',
            'oro_menu.configuration_builder' => 'getOroMenu_ConfigurationBuilderService',
            'oro_menu.configuration_resolver' => 'getOroMenu_ConfigurationResolverService',
            'oro_menu.factory' => 'getOroMenu_FactoryService',
            'oro_menu.twig.extension' => 'getOroMenu_Twig_ExtensionService',
            'oro_menu_acl_extension' => 'getOroMenuAclExtensionService',
            'oro_migration.data_fixtures.loader' => 'getOroMigration_DataFixtures_LoaderService',
            'oro_migration.db_id_name_generator' => 'getOroMigration_DbIdNameGeneratorService',
            'oro_migration.listener.console_command_listener' => 'getOroMigration_Listener_ConsoleCommandListenerService',
            'oro_migration.listener.release_data_fixture' => 'getOroMigration_Listener_ReleaseDataFixtureService',
            'oro_migration.migration.extension.data_strore' => 'getOroMigration_Migration_Extension_DataStroreService',
            'oro_migration.migration.extension.rename' => 'getOroMigration_Migration_Extension_RenameService',
            'oro_migration.migration.pre_up.listener' => 'getOroMigration_Migration_PreUp_ListenerService',
            'oro_migration.migrations.executor' => 'getOroMigration_Migrations_ExecutorService',
            'oro_migration.migrations.extension_manager' => 'getOroMigration_Migrations_ExtensionManagerService',
            'oro_migration.migrations.loader' => 'getOroMigration_Migrations_LoaderService',
            'oro_migration.migrations.query_executor' => 'getOroMigration_Migrations_QueryExecutorService',
            'oro_migration.tools.schema_dumper' => 'getOroMigration_Tools_SchemaDumperService',
            'oro_migration.twig.schema_dumper' => 'getOroMigration_Twig_SchemaDumperService',
            'oro_navigation.breadcrumb_manager' => 'getOroNavigation_BreadcrumbManagerService',
            'oro_navigation.content.datagrid_tag_listener' => 'getOroNavigation_Content_DatagridTagListenerService',
            'oro_navigation.content.doctrine_tag_generator' => 'getOroNavigation_Content_DoctrineTagGeneratorService',
            'oro_navigation.content.simple_tag_generator' => 'getOroNavigation_Content_SimpleTagGeneratorService',
            'oro_navigation.content.tag_generator_chain' => 'getOroNavigation_Content_TagGeneratorChainService',
            'oro_navigation.content.topic_sender' => 'getOroNavigation_Content_TopicSenderService',
            'oro_navigation.content_provider.menu.application_menu' => 'getOroNavigation_ContentProvider_Menu_ApplicationMenuService',
            'oro_navigation.content_provider.menu.history_menu' => 'getOroNavigation_ContentProvider_Menu_HistoryMenuService',
            'oro_navigation.content_provider.menu.mostviewed_menu' => 'getOroNavigation_ContentProvider_Menu_MostviewedMenuService',
            'oro_navigation.content_provider.navigation_elements' => 'getOroNavigation_ContentProvider_NavigationElementsService',
            'oro_navigation.content_provider.title' => 'getOroNavigation_ContentProvider_TitleService',
            'oro_navigation.content_provider.title_serialized' => 'getOroNavigation_ContentProvider_TitleSerializedService',
            'oro_navigation.content_provider.title_short' => 'getOroNavigation_ContentProvider_TitleShortService',
            'oro_navigation.event.doctrine_tag_listener' => 'getOroNavigation_Event_DoctrineTagListenerService',
            'oro_navigation.event.master_request_route_listener' => 'getOroNavigation_Event_MasterRequestRouteListenerService',
            'oro_navigation.favorites_menu.builder' => 'getOroNavigation_FavoritesMenu_BuilderService',
            'oro_navigation.form.handler.pagestate' => 'getOroNavigation_Form_Handler_PagestateService',
            'oro_navigation.form.pagestate' => 'getOroNavigation_Form_PagestateService',
            'oro_navigation.form.type.pagestate' => 'getOroNavigation_Form_Type_PagestateService',
            'oro_navigation.history_menu.builder' => 'getOroNavigation_HistoryMenu_BuilderService',
            'oro_navigation.item.builder.favorite' => 'getOroNavigation_Item_Builder_FavoriteService',
            'oro_navigation.item.builder.history' => 'getOroNavigation_Item_Builder_HistoryService',
            'oro_navigation.item.builder.mostviewed' => 'getOroNavigation_Item_Builder_MostviewedService',
            'oro_navigation.item.builder.pinbar' => 'getOroNavigation_Item_Builder_PinbarService',
            'oro_navigation.item.factory' => 'getOroNavigation_Item_FactoryService',
            'oro_navigation.item.pinbar.post_persist_listener' => 'getOroNavigation_Item_Pinbar_PostPersistListenerService',
            'oro_navigation.mostviewed_menu.builder' => 'getOroNavigation_MostviewedMenu_BuilderService',
            'oro_navigation.pinbar_menu.builder' => 'getOroNavigation_PinbarMenu_BuilderService',
            'oro_navigation.title_annotations_reader' => 'getOroNavigation_TitleAnnotationsReaderService',
            'oro_navigation.title_config_reader' => 'getOroNavigation_TitleConfigReaderService',
            'oro_navigation.title_service' => 'getOroNavigation_TitleServiceService',
            'oro_navigation.title_service.twig.extension' => 'getOroNavigation_TitleService_Twig_ExtensionService',
            'oro_navigation.translation.extractor' => 'getOroNavigation_Translation_ExtractorService',
            'oro_navigation.twig.content_tags' => 'getOroNavigation_Twig_ContentTagsService',
            'oro_navigation.twig.hash_nav_extension' => 'getOroNavigation_Twig_HashNavExtensionService',
            'oro_note.activity_list.provider' => 'getOroNote_ActivityList_ProviderService',
            'oro_note.entity_config_dumper.extension' => 'getOroNote_EntityConfigDumper_ExtensionService',
            'oro_note.entity_generator.extension' => 'getOroNote_EntityGenerator_ExtensionService',
            'oro_note.form.handler.note' => 'getOroNote_Form_Handler_NoteService',
            'oro_note.form.handler.note_api' => 'getOroNote_Form_Handler_NoteApiService',
            'oro_note.form.note' => 'getOroNote_Form_NoteService',
            'oro_note.form.note.api' => 'getOroNote_Form_Note_ApiService',
            'oro_note.form.type.note' => 'getOroNote_Form_Type_NoteService',
            'oro_note.form.type.note_api' => 'getOroNote_Form_Type_NoteApiService',
            'oro_note.manager' => 'getOroNote_ManagerService',
            'oro_note.manager.api' => 'getOroNote_Manager_ApiService',
            'oro_note.migration.extension.note' => 'getOroNote_Migration_Extension_NoteService',
            'oro_note.note_lifecycle_listener' => 'getOroNote_NoteLifecycleListenerService',
            'oro_note.placeholder.filter' => 'getOroNote_Placeholder_FilterService',
            'oro_note.widget_provider.actions' => 'getOroNote_WidgetProvider_ActionsService',
            'oro_notification.docrine.event.listener' => 'getOroNotification_Docrine_Event_ListenerService',
            'oro_notification.email_handler' => 'getOroNotification_EmailHandlerService',
            'oro_notification.email_notification.manager.api' => 'getOroNotification_EmailNotification_Manager_ApiService',
            'oro_notification.email_notification_entity_provider' => 'getOroNotification_EmailNotificationEntityProviderService',
            'oro_notification.email_processor' => 'getOroNotification_EmailProcessorService',
            'oro_notification.entity_spool' => 'getOroNotification_EntitySpoolService',
            'oro_notification.event_listener.email_notification_service' => 'getOroNotification_EventListener_EmailNotificationServiceService',
            'oro_notification.form.email_notification' => 'getOroNotification_Form_EmailNotificationService',
            'oro_notification.form.email_notification.api' => 'getOroNotification_Form_EmailNotification_ApiService',
            'oro_notification.form.handler.email_notification' => 'getOroNotification_Form_Handler_EmailNotificationService',
            'oro_notification.form.handler.email_notification.api' => 'getOroNotification_Form_Handler_EmailNotification_ApiService',
            'oro_notification.form.type.email_notification' => 'getOroNotification_Form_Type_EmailNotificationService',
            'oro_notification.form.type.email_notification.api' => 'getOroNotification_Form_Type_EmailNotification_ApiService',
            'oro_notification.form.type.email_notification_entity_choice' => 'getOroNotification_Form_Type_EmailNotificationEntityChoiceService',
            'oro_notification.form.type.recipient_list' => 'getOroNotification_Form_Type_RecipientListService',
            'oro_notification.mailer.spool_db' => 'getOroNotification_Mailer_SpoolDbService',
            'oro_notification.manager' => 'getOroNotification_ManagerService',
            'oro_organization.autocomplete.organization.search_handler' => 'getOroOrganization_Autocomplete_Organization_SearchHandlerService',
            'oro_organization.autocomplete.organization_search_handler' => 'getOroOrganization_Autocomplete_OrganizationSearchHandlerService',
            'oro_organization.business_unit.listener' => 'getOroOrganization_BusinessUnit_ListenerService',
            'oro_organization.business_unit.manager.api' => 'getOroOrganization_BusinessUnit_Manager_ApiService',
            'oro_organization.business_unit_manager' => 'getOroOrganization_BusinessUnitManagerService',
            'oro_organization.entity_config_dumper.extension' => 'getOroOrganization_EntityConfigDumper_ExtensionService',
            'oro_organization.entity_ownership.listener' => 'getOroOrganization_EntityOwnership_ListenerService',
            'oro_organization.event.business_unit_grid_listener' => 'getOroOrganization_Event_BusinessUnitGridListenerService',
            'oro_organization.form.business_unit' => 'getOroOrganization_Form_BusinessUnitService',
            'oro_organization.form.business_unit.api' => 'getOroOrganization_Form_BusinessUnit_ApiService',
            'oro_organization.form.extension.organization' => 'getOroOrganization_Form_Extension_OrganizationService',
            'oro_organization.form.extension.owner' => 'getOroOrganization_Form_Extension_OwnerService',
            'oro_organization.form.handler.business_unit' => 'getOroOrganization_Form_Handler_BusinessUnitService',
            'oro_organization.form.handler.business_unit.api' => 'getOroOrganization_Form_Handler_BusinessUnit_ApiService',
            'oro_organization.form.handler.organization' => 'getOroOrganization_Form_Handler_OrganizationService',
            'oro_organization.form.listener' => 'getOroOrganization_Form_ListenerService',
            'oro_organization.form.organization' => 'getOroOrganization_Form_OrganizationService',
            'oro_organization.form.type.business_unit' => 'getOroOrganization_Form_Type_BusinessUnitService',
            'oro_organization.form.type.business_unit.api' => 'getOroOrganization_Form_Type_BusinessUnit_ApiService',
            'oro_organization.form.type.business_unit_select' => 'getOroOrganization_Form_Type_BusinessUnitSelectService',
            'oro_organization.form.type.business_unit_tree_select_type' => 'getOroOrganization_Form_Type_BusinessUnitTreeSelectTypeService',
            'oro_organization.form.type.business_unit_tree_type' => 'getOroOrganization_Form_Type_BusinessUnitTreeTypeService',
            'oro_organization.form.type.organization' => 'getOroOrganization_Form_Type_OrganizationService',
            'oro_organization.form.type.organization_select' => 'getOroOrganization_Form_Type_OrganizationSelectService',
            'oro_organization.form.type.organizations_select' => 'getOroOrganization_Form_Type_OrganizationsSelectService',
            'oro_organization.form.type.ownership_type' => 'getOroOrganization_Form_Type_OwnershipTypeService',
            'oro_organization.import_strategy.listener' => 'getOroOrganization_ImportStrategy_ListenerService',
            'oro_organization.importexport.template_fixture.business_unit' => 'getOroOrganization_Importexport_TemplateFixture_BusinessUnitService',
            'oro_organization.importexport.template_fixture.organization' => 'getOroOrganization_Importexport_TemplateFixture_OrganizationService',
            'oro_organization.link.security_context' => 'getOroOrganization_Link_SecurityContextService',
            'oro_organization.listener.config_subscriber' => 'getOroOrganization_Listener_ConfigSubscriberService',
            'oro_organization.organization.manager.api' => 'getOroOrganization_Organization_Manager_ApiService',
            'oro_organization.organization_manager' => 'getOroOrganization_OrganizationManagerService',
            'oro_organization.orm.validator.organization_unique' => 'getOroOrganization_Orm_Validator_OrganizationUniqueService',
            'oro_organization.owner_deletion_manager' => 'getOroOrganization_OwnerDeletionManagerService',
            'oro_organization.provider.business_units_grid' => 'getOroOrganization_Provider_BusinessUnitsGridService',
            'oro_organization.provider.phone.business_unit' => 'getOroOrganization_Provider_Phone_BusinessUnitService',
            'oro_organization.twig.business_units' => 'getOroOrganization_Twig_BusinessUnitsService',
            'oro_organization.twig.get_owner' => 'getOroOrganization_Twig_GetOwnerService',
            'oro_platform.composer.local_repo_factory' => 'getOroPlatform_Composer_LocalRepoFactoryService',
            'oro_platform.composer.version_helper' => 'getOroPlatform_Composer_VersionHelperService',
            'oro_platform.event_listener.driver_lock' => 'getOroPlatform_EventListener_DriverLockService',
            'oro_platform.event_listener.optional_listeners' => 'getOroPlatform_EventListener_OptionalListenersService',
            'oro_platform.maintenance' => 'getOroPlatform_MaintenanceService',
            'oro_platform.optional_listeners.manager' => 'getOroPlatform_OptionalListeners_ManagerService',
            'oro_platform.twig.platform_extension' => 'getOroPlatform_Twig_PlatformExtensionService',
            'oro_platform.version.cache' => 'getOroPlatform_Version_CacheService',
            'oro_query_designer.config.resolver' => 'getOroQueryDesigner_Config_ResolverService',
            'oro_query_designer.entity_field_list_provider' => 'getOroQueryDesigner_EntityFieldListProviderService',
            'oro_query_designer.entity_field_provider' => 'getOroQueryDesigner_EntityFieldProviderService',
            'oro_query_designer.entity_provider' => 'getOroQueryDesigner_EntityProviderService',
            'oro_query_designer.exclusion_provider' => 'getOroQueryDesigner_ExclusionProviderService',
            'oro_query_designer.form.type.field_choice' => 'getOroQueryDesigner_Form_Type_FieldChoiceService',
            'oro_query_designer.form.type.function_choice' => 'getOroQueryDesigner_Form_Type_FunctionChoiceService',
            'oro_query_designer.form.type.query_designer_column' => 'getOroQueryDesigner_Form_Type_QueryDesignerColumnService',
            'oro_query_designer.form.type.query_designer_filter' => 'getOroQueryDesigner_Form_Type_QueryDesignerFilterService',
            'oro_query_designer.form.type.query_designer_grouping' => 'getOroQueryDesigner_Form_Type_QueryDesignerGroupingService',
            'oro_query_designer.form.type.sorting_choice' => 'getOroQueryDesigner_Form_Type_SortingChoiceService',
            'oro_query_designer.grid.datagrid_configuration_builder' => 'getOroQueryDesigner_Grid_DatagridConfigurationBuilderService',
            'oro_query_designer.grid.extension.orm_datasource' => 'getOroQueryDesigner_Grid_Extension_OrmDatasourceService',
            'oro_query_designer.group_by_helper' => 'getOroQueryDesigner_GroupByHelperService',
            'oro_query_designer.query_designer.manager' => 'getOroQueryDesigner_QueryDesigner_ManagerService',
            'oro_query_designer.query_designer.restriction_builder' => 'getOroQueryDesigner_QueryDesigner_RestrictionBuilderService',
            'oro_query_designer.validator.grouping_validator' => 'getOroQueryDesigner_Validator_GroupingValidatorService',
            'oro_query_designer.validator.query_validator' => 'getOroQueryDesigner_Validator_QueryValidatorService',
            'oro_reminder.entity.manager' => 'getOroReminder_Entity_ManagerService',
            'oro_reminder.event_listener.reminder_listener' => 'getOroReminder_EventListener_ReminderListenerService',
            'oro_reminder.form.extension.reminder' => 'getOroReminder_Form_Extension_ReminderService',
            'oro_reminder.form.type.method' => 'getOroReminder_Form_Type_MethodService',
            'oro_reminder.form.type.reminder' => 'getOroReminder_Form_Type_ReminderService',
            'oro_reminder.form.type.reminder_collection' => 'getOroReminder_Form_Type_ReminderCollectionService',
            'oro_reminder.form.type.reminder_interval' => 'getOroReminder_Form_Type_ReminderIntervalService',
            'oro_reminder.form.type.reminder_interval.unit' => 'getOroReminder_Form_Type_ReminderInterval_UnitService',
            'oro_reminder.model.email_notification' => 'getOroReminder_Model_EmailNotificationService',
            'oro_reminder.send_processor.email' => 'getOroReminder_SendProcessor_EmailService',
            'oro_reminder.send_processor.web_socket' => 'getOroReminder_SendProcessor_WebSocketService',
            'oro_reminder.send_processor_registry' => 'getOroReminder_SendProcessorRegistryService',
            'oro_reminder.sender' => 'getOroReminder_SenderService',
            'oro_reminder.twig.extension' => 'getOroReminder_Twig_ExtensionService',
            'oro_reminder.url_provider' => 'getOroReminder_UrlProviderService',
            'oro_reminder.web_socket.message_params_provider' => 'getOroReminder_WebSocket_MessageParamsProviderService',
            'oro_report.datagrid.configuration.provider' => 'getOroReport_Datagrid_Configuration_ProviderService',
            'oro_report.form.handler.report' => 'getOroReport_Form_Handler_ReportService',
            'oro_report.form.report' => 'getOroReport_Form_ReportService',
            'oro_report.form.type.chart' => 'getOroReport_Form_Type_ChartService',
            'oro_report.form.type.chart.schema' => 'getOroReport_Form_Type_Chart_SchemaService',
            'oro_report.form.type.chart.schema.collection' => 'getOroReport_Form_Type_Chart_Schema_CollectionService',
            'oro_report.form.type.entity_choice' => 'getOroReport_Form_Type_EntityChoiceService',
            'oro_report.form.type.report' => 'getOroReport_Form_Type_ReportService',
            'oro_report.grid.base_configuration_builder' => 'getOroReport_Grid_BaseConfigurationBuilderService',
            'oro_report.grid.datagrid_configuration_builder' => 'getOroReport_Grid_DatagridConfigurationBuilderService',
            'oro_report.listener.navigation_listener' => 'getOroReport_Listener_NavigationListenerService',
            'oro_report.report.manager.api' => 'getOroReport_Report_Manager_ApiService',
            'oro_report.report_manager' => 'getOroReport_ReportManagerService',
            'oro_requirejs.cache' => 'getOroRequirejs_CacheService',
            'oro_requirejs.twig.requirejs_extension' => 'getOroRequirejs_Twig_RequirejsExtensionService',
            'oro_requirejs_config_provider' => 'getOroRequirejsConfigProviderService',
            'oro_search.datasource.search' => 'getOroSearch_Datasource_SearchService',
            'oro_search.event_listener.demo_data_listener' => 'getOroSearch_EventListener_DemoDataListenerService',
            'oro_search.event_listener.orm.fulltext_index_listener' => 'getOroSearch_EventListener_Orm_FulltextIndexListenerService',
            'oro_search.event_listener.search_results_grid_listener' => 'getOroSearch_EventListener_SearchResultsGridListenerService',
            'oro_search.event_listener.update_schema_listener' => 'getOroSearch_EventListener_UpdateSchemaListenerService',
            'oro_search.extension.formatter.property.search_result_property' => 'getOroSearch_Extension_Formatter_Property_SearchResultPropertyService',
            'oro_search.extension.pager.orm.pager' => 'getOroSearch_Extension_Pager_Orm_PagerService',
            'oro_search.extension.search_pager' => 'getOroSearch_Extension_SearchPagerService',
            'oro_search.extension.search_results' => 'getOroSearch_Extension_SearchResultsService',
            'oro_search.formatter.result_formatter' => 'getOroSearch_Formatter_ResultFormatterService',
            'oro_search.fulltext_index_manager' => 'getOroSearch_FulltextIndexManagerService',
            'oro_search.index' => 'getOroSearch_IndexService',
            'oro_search.index_listener' => 'getOroSearch_IndexListenerService',
            'oro_search.mapper' => 'getOroSearch_MapperService',
            'oro_search.prepare_result_item.listener' => 'getOroSearch_PrepareResultItem_ListenerService',
            'oro_search.provider.result_statistics_provider' => 'getOroSearch_Provider_ResultStatisticsProviderService',
            'oro_search.provider.search_mapping' => 'getOroSearch_Provider_SearchMappingService',
            'oro_search.search.engine' => 'getOroSearch_Search_EngineService',
            'oro_search.security_provider' => 'getOroSearch_SecurityProviderService',
            'oro_search.twig.search_extension' => 'getOroSearch_Twig_SearchExtensionService',
            'oro_security.acl.annotation_provider' => 'getOroSecurity_Acl_AnnotationProviderService',
            'oro_security.acl.annotation_provider.cache' => 'getOroSecurity_Acl_AnnotationProvider_CacheService',
            'oro_security.acl.extension_selector' => 'getOroSecurity_Acl_ExtensionSelectorService',
            'oro_security.acl.group_provider.chain' => 'getOroSecurity_Acl_GroupProvider_ChainService',
            'oro_security.acl.manager' => 'getOroSecurity_Acl_ManagerService',
            'oro_security.acl.object_id_accessor' => 'getOroSecurity_Acl_ObjectIdAccessorService',
            'oro_security.acl.object_identity_factory' => 'getOroSecurity_Acl_ObjectIdentityFactoryService',
            'oro_security.acl.permission_granting_strategy' => 'getOroSecurity_Acl_PermissionGrantingStrategyService',
            'oro_security.acl.privilege_repository' => 'getOroSecurity_Acl_PrivilegeRepositoryService',
            'oro_security.acl.sid_manager' => 'getOroSecurity_Acl_SidManagerService',
            'oro_security.acl_helper' => 'getOroSecurity_AclHelperService',
            'oro_security.action_metadata_provider' => 'getOroSecurity_ActionMetadataProviderService',
            'oro_security.action_metadata_provider.cache' => 'getOroSecurity_ActionMetadataProvider_CacheService',
            'oro_security.encoder.mcrypt' => 'getOroSecurity_Encoder_McryptService',
            'oro_security.entity_security_config_subscriber' => 'getOroSecurity_EntitySecurityConfigSubscriberService',
            'oro_security.entity_security_metadata_provider' => 'getOroSecurity_EntitySecurityMetadataProviderService',
            'oro_security.entity_security_metadata_provider.cache' => 'getOroSecurity_EntitySecurityMetadataProvider_CacheService',
            'oro_security.form.extension.aclprotected_type' => 'getOroSecurity_Form_Extension_AclprotectedTypeService',
            'oro_security.form.type.object_label_type' => 'getOroSecurity_Form_Type_ObjectLabelTypeService',
            'oro_security.form.type.oro_acl_access_level_selector' => 'getOroSecurity_Form_Type_OroAclAccessLevelSelectorService',
            'oro_security.form.type.oro_acl_collection' => 'getOroSecurity_Form_Type_OroAclCollectionService',
            'oro_security.form.type.oro_acl_privilege' => 'getOroSecurity_Form_Type_OroAclPrivilegeService',
            'oro_security.layout_expression.acl_granted' => 'getOroSecurity_LayoutExpression_AclGrantedService',
            'oro_security.listener.api_listener' => 'getOroSecurity_Listener_ApiListenerService',
            'oro_security.listener.console_context_listener' => 'getOroSecurity_Listener_ConsoleContextListenerService',
            'oro_security.listener.context_listener' => 'getOroSecurity_Listener_ContextListenerService',
            'oro_security.listener.controller' => 'getOroSecurity_Listener_ControllerService',
            'oro_security.listener.refresh_context_listener' => 'getOroSecurity_Listener_RefreshContextListenerService',
            'oro_security.listener.search_listener' => 'getOroSecurity_Listener_SearchListenerService',
            'oro_security.orm.ownership_sql_walker_builder' => 'getOroSecurity_Orm_OwnershipSqlWalkerBuilderService',
            'oro_security.owner.entity_owner_accessor' => 'getOroSecurity_Owner_EntityOwnerAccessorService',
            'oro_security.owner.entity_owner_accessor.link' => 'getOroSecurity_Owner_EntityOwnerAccessor_LinkService',
            'oro_security.owner.metadata_provider.chain' => 'getOroSecurity_Owner_MetadataProvider_ChainService',
            'oro_security.owner.ownership_config_subscriber' => 'getOroSecurity_Owner_OwnershipConfigSubscriberService',
            'oro_security.owner.ownership_decision_maker.chain' => 'getOroSecurity_Owner_OwnershipDecisionMaker_ChainService',
            'oro_security.owner.ownership_metadata_provider' => 'getOroSecurity_Owner_OwnershipMetadataProviderService',
            'oro_security.owner.ownership_metadata_provider.cache' => 'getOroSecurity_Owner_OwnershipMetadataProvider_CacheService',
            'oro_security.owner.ownership_metadata_provider.link' => 'getOroSecurity_Owner_OwnershipMetadataProvider_LinkService',
            'oro_security.ownership_tree_provider' => 'getOroSecurity_OwnershipTreeProviderService',
            'oro_security.ownership_tree_provider.cache' => 'getOroSecurity_OwnershipTreeProvider_CacheService',
            'oro_security.ownership_tree_provider.chain' => 'getOroSecurity_OwnershipTreeProvider_ChainService',
            'oro_security.ownership_tree_subscriber' => 'getOroSecurity_OwnershipTreeSubscriberService',
            'oro_security.search.acl_helper' => 'getOroSecurity_Search_AclHelperService',
            'oro_security.security_facade' => 'getOroSecurity_SecurityFacadeService',
            'oro_security.security_facade.link' => 'getOroSecurity_SecurityFacade_LinkService',
            'oro_security.twig.security_extension' => 'getOroSecurity_Twig_SecurityExtensionService',
            'oro_security.twig.security_organization_extension' => 'getOroSecurity_Twig_SecurityOrganizationExtensionService',
            'oro_security.wsse_nonce_cache' => 'getOroSecurity_WsseNonceCacheService',
            'oro_segment.datagrid.configuration.provider' => 'getOroSegment_Datagrid_Configuration_ProviderService',
            'oro_segment.entity_name_provider' => 'getOroSegment_EntityNameProviderService',
            'oro_segment.event_listener.doctrine_pre_remove' => 'getOroSegment_EventListener_DoctrinePreRemoveService',
            'oro_segment.filter.segment' => 'getOroSegment_Filter_SegmentService',
            'oro_segment.form.handler.segment' => 'getOroSegment_Form_Handler_SegmentService',
            'oro_segment.form.segment' => 'getOroSegment_Form_SegmentService',
            'oro_segment.form.type.entity_choice' => 'getOroSegment_Form_Type_EntityChoiceService',
            'oro_segment.form.type.segment' => 'getOroSegment_Form_Type_SegmentService',
            'oro_segment.grid.datagrid_configuration_builder' => 'getOroSegment_Grid_DatagridConfigurationBuilderService',
            'oro_segment.query.dynamic_segment.query_builder' => 'getOroSegment_Query_DynamicSegment_QueryBuilderService',
            'oro_segment.query.static_segment.query_builder' => 'getOroSegment_Query_StaticSegment_QueryBuilderService',
            'oro_segment.segment_manager' => 'getOroSegment_SegmentManagerService',
            'oro_segment.segment_manager.api' => 'getOroSegment_SegmentManager_ApiService',
            'oro_segment.static_segment_manager' => 'getOroSegment_StaticSegmentManagerService',
            'oro_segment.twig.extension.segment' => 'getOroSegment_Twig_Extension_SegmentService',
            'oro_sidebar.request.handler' => 'getOroSidebar_Request_HandlerService',
            'oro_sidebar.twig.extension' => 'getOroSidebar_Twig_ExtensionService',
            'oro_sidebar.widget_definition.registry' => 'getOroSidebar_WidgetDefinition_RegistryService',
            'oro_soap.entity_accessor' => 'getOroSoap_EntityAccessorService',
            'oro_soap.entity_data_transformer' => 'getOroSoap_EntityDataTransformerService',
            'oro_soap.entity_serializer' => 'getOroSoap_EntitySerializerService',
            'oro_soap.handler.delete' => 'getOroSoap_Handler_DeleteService',
            'oro_soap.handler.include_delegate' => 'getOroSoap_Handler_IncludeDelegateService',
            'oro_soap.handler.include_total_header' => 'getOroSoap_Handler_IncludeTotalHeaderService',
            'oro_soap.locale_listener' => 'getOroSoap_LocaleListenerService',
            'oro_soap.provider.metadata.chain' => 'getOroSoap_Provider_Metadata_ChainService',
            'oro_soap.provider.metadata.entity' => 'getOroSoap_Provider_Metadata_EntityService',
            'oro_sso.event_listener.user_email_change_listener.class' => 'getOroSso_EventListener_UserEmailChangeListener_ClassService',
            'oro_sso.oauth_provider' => 'getOroSso_OauthProviderService',
            'oro_tag.autocomplete.tag.search_handler' => 'getOroTag_Autocomplete_Tag_SearchHandlerService',
            'oro_tag.docrine.event.listener' => 'getOroTag_Docrine_Event_ListenerService',
            'oro_tag.event_listener.merge_listener' => 'getOroTag_EventListener_MergeListenerService',
            'oro_tag.event_listener.search_results_grid_listener' => 'getOroTag_EventListener_SearchResultsGridListenerService',
            'oro_tag.filter.tags' => 'getOroTag_Filter_TagsService',
            'oro_tag.form.handler.api' => 'getOroTag_Form_Handler_ApiService',
            'oro_tag.form.handler.tag' => 'getOroTag_Form_Handler_TagService',
            'oro_tag.form.subscriber.tag_select' => 'getOroTag_Form_Subscriber_TagSelectService',
            'oro_tag.form.tag' => 'getOroTag_Form_TagService',
            'oro_tag.form.tag.api' => 'getOroTag_Form_Tag_ApiService',
            'oro_tag.form.transformer.tag_select' => 'getOroTag_Form_Transformer_TagSelectService',
            'oro_tag.form.type.entity_tags_filter' => 'getOroTag_Form_Type_EntityTagsFilterService',
            'oro_tag.form.type.entity_tags_selector' => 'getOroTag_Form_Type_EntityTagsSelectorService',
            'oro_tag.form.type.tag' => 'getOroTag_Form_Type_TagService',
            'oro_tag.form.type.tag.api' => 'getOroTag_Form_Type_Tag_ApiService',
            'oro_tag.form.type.tag_autocomplete' => 'getOroTag_Form_Type_TagAutocompleteService',
            'oro_tag.form.type.tag_select' => 'getOroTag_Form_Type_TagSelectService',
            'oro_tag.grid.extension.tag_filter' => 'getOroTag_Grid_Extension_TagFilterService',
            'oro_tag.owner_assignment_checker.tag' => 'getOroTag_OwnerAssignmentChecker_TagService',
            'oro_tag.provider.search_provider' => 'getOroTag_Provider_SearchProviderService',
            'oro_tag.provider.virtual_relation.tags' => 'getOroTag_Provider_VirtualRelation_TagsService',
            'oro_tag.security_provider' => 'getOroTag_SecurityProviderService',
            'oro_tag.tag.manager' => 'getOroTag_Tag_ManagerService',
            'oro_tag.tag.manager.api' => 'getOroTag_Tag_Manager_ApiService',
            'oro_tag.twig.tag.extension' => 'getOroTag_Twig_Tag_ExtensionService',
            'oro_theme.event_listener.load_css' => 'getOroTheme_EventListener_LoadCssService',
            'oro_theme.registry' => 'getOroTheme_RegistryService',
            'oro_theme.twig.extension' => 'getOroTheme_Twig_ExtensionService',
            'oro_tracking.config.listener' => 'getOroTracking_Config_ListenerService',
            'oro_tracking.entity_config_dumper.visit_event_association.extension' => 'getOroTracking_EntityConfigDumper_VisitEventAssociation_ExtensionService',
            'oro_tracking.entity_config_dumper.visit_identifier.extension' => 'getOroTracking_EntityConfigDumper_VisitIdentifier_ExtensionService',
            'oro_tracking.entity_generator.visit_event_association.extension' => 'getOroTracking_EntityGenerator_VisitEventAssociation_ExtensionService',
            'oro_tracking.entity_generator.visit_identifie.extension' => 'getOroTracking_EntityGenerator_VisitIdentifie_ExtensionService',
            'oro_tracking.form.handler.tracking_website' => 'getOroTracking_Form_Handler_TrackingWebsiteService',
            'oro_tracking.form.tracking_website' => 'getOroTracking_Form_TrackingWebsiteService',
            'oro_tracking.form.type.tracking_website' => 'getOroTracking_Form_Type_TrackingWebsiteService',
            'oro_tracking.importexport.data_converter.data' => 'getOroTracking_Importexport_DataConverter_DataService',
            'oro_tracking.importexport.normalizer.data' => 'getOroTracking_Importexport_Normalizer_DataService',
            'oro_tracking.importexport.processor.import.data' => 'getOroTracking_Importexport_Processor_Import_DataService',
            'oro_tracking.importexport.reader.context' => 'getOroTracking_Importexport_Reader_ContextService',
            'oro_tracking.importexport.reader.log' => 'getOroTracking_Importexport_Reader_LogService',
            'oro_tracking.importexport.strategy.data' => 'getOroTracking_Importexport_Strategy_DataService',
            'oro_tracking.migration.extension.tracking_identifier' => 'getOroTracking_Migration_Extension_TrackingIdentifierService',
            'oro_tracking.migration.extension.visit_event_association' => 'getOroTracking_Migration_Extension_VisitEventAssociationService',
            'oro_tracking.processor.tracking_processor' => 'getOroTracking_Processor_TrackingProcessorService',
            'oro_tracking.provider.identifier_provider' => 'getOroTracking_Provider_IdentifierProviderService',
            'oro_tracking.tracking_website.manager.api' => 'getOroTracking_TrackingWebsite_Manager_ApiService',
            'oro_translation.cache' => 'getOroTranslation_CacheService',
            'oro_translation.controller' => 'getOroTranslation_ControllerService',
            'oro_translation.database_translation.loader' => 'getOroTranslation_DatabaseTranslation_LoaderService',
            'oro_translation.database_translation.metadata.cache' => 'getOroTranslation_DatabaseTranslation_Metadata_CacheService',
            'oro_translation.database_translation.metadata.cache_impl' => 'getOroTranslation_DatabaseTranslation_Metadata_CacheImplService',
            'oro_translation.database_translation.persister' => 'getOroTranslation_DatabaseTranslation_PersisterService',
            'oro_translation.empty_array.loader' => 'getOroTranslation_EmptyArray_LoaderService',
            'oro_translation.event_listener.language_change' => 'getOroTranslation_EventListener_LanguageChangeService',
            'oro_translation.extractor.php_code_extractor' => 'getOroTranslation_Extractor_PhpCodeExtractorService',
            'oro_translation.form.extension.translatable_choice' => 'getOroTranslation_Form_Extension_TranslatableChoiceService',
            'oro_translation.form.type.available_translations' => 'getOroTranslation_Form_Type_AvailableTranslationsService',
            'oro_translation.form.type.jqueryselect2_translatable_entity' => 'getOroTranslation_Form_Type_Jqueryselect2TranslatableEntityService',
            'oro_translation.form.type.translatable_entity' => 'getOroTranslation_Form_Type_TranslatableEntityService',
            'oro_translation.guzzle_crowdin_client' => 'getOroTranslation_GuzzleCrowdinClientService',
            'oro_translation.guzzle_oro_client' => 'getOroTranslation_GuzzleOroClientService',
            'oro_translation.js_dumper' => 'getOroTranslation_JsDumperService',
            'oro_translation.oro_translation_adapter' => 'getOroTranslation_OroTranslationAdapterService',
            'oro_translation.packages_provider' => 'getOroTranslation_PackagesProviderService',
            'oro_translation.service_provider' => 'getOroTranslation_ServiceProviderService',
            'oro_translation.statistic_provider' => 'getOroTranslation_StatisticProviderService',
            'oro_translation.twig.translation.extension' => 'getOroTranslation_Twig_Translation_ExtensionService',
            'oro_translation.twig.translation_status.extension' => 'getOroTranslation_Twig_TranslationStatus_ExtensionService',
            'oro_translation.uploader.crowdin_adapter' => 'getOroTranslation_Uploader_CrowdinAdapterService',
            'oro_ui.content_provider.current_route' => 'getOroUi_ContentProvider_CurrentRouteService',
            'oro_ui.content_provider.flash_messages' => 'getOroUi_ContentProvider_FlashMessagesService',
            'oro_ui.content_provider.manager' => 'getOroUi_ContentProvider_ManagerService',
            'oro_ui.format_converter.date_time.jquery_ui' => 'getOroUi_FormatConverter_DateTime_JqueryUiService',
            'oro_ui.formatter' => 'getOroUi_FormatterService',
            'oro_ui.html_tag_helper' => 'getOroUi_HtmlTagHelperService',
            'oro_ui.label_provider.action_button_group' => 'getOroUi_LabelProvider_ActionButtonGroupService',
            'oro_ui.placeholder.filter' => 'getOroUi_Placeholder_FilterService',
            'oro_ui.placeholder.provider' => 'getOroUi_Placeholder_ProviderService',
            'oro_ui.placeholder.resolver' => 'getOroUi_Placeholder_ResolverService',
            'oro_ui.provider.widget_context' => 'getOroUi_Provider_WidgetContextService',
            'oro_ui.router' => 'getOroUi_RouterService',
            'oro_ui.twig.block' => 'getOroUi_Twig_BlockService',
            'oro_ui.twig.ceil_extension' => 'getOroUi_Twig_CeilExtensionService',
            'oro_ui.twig.content_extension' => 'getOroUi_Twig_ContentExtensionService',
            'oro_ui.twig.date_extension' => 'getOroUi_Twig_DateExtensionService',
            'oro_ui.twig.extension.formatter' => 'getOroUi_Twig_Extension_FormatterService',
            'oro_ui.twig.form_extension' => 'getOroUi_Twig_FormExtensionService',
            'oro_ui.twig.formatter_extension' => 'getOroUi_Twig_FormatterExtensionService',
            'oro_ui.twig.html_tag' => 'getOroUi_Twig_HtmlTagService',
            'oro_ui.twig.js_template' => 'getOroUi_Twig_JsTemplateService',
            'oro_ui.twig.merge_recursive' => 'getOroUi_Twig_MergeRecursiveService',
            'oro_ui.twig.mobile_extension' => 'getOroUi_Twig_MobileExtensionService',
            'oro_ui.twig.placeholder_extension' => 'getOroUi_Twig_PlaceholderExtensionService',
            'oro_ui.twig.regex_extension' => 'getOroUi_Twig_RegexExtensionService',
            'oro_ui.twig.skype_button_extension' => 'getOroUi_Twig_SkypeButtonExtensionService',
            'oro_ui.twig.sort_by_extension' => 'getOroUi_Twig_SortByExtensionService',
            'oro_ui.twig.tab_extension' => 'getOroUi_Twig_TabExtensionService',
            'oro_ui.twig.ui_extension' => 'getOroUi_Twig_UiExtensionService',
            'oro_ui.twig.url_extension' => 'getOroUi_Twig_UrlExtensionService',
            'oro_ui.twig.widget_extension' => 'getOroUi_Twig_WidgetExtensionService',
            'oro_ui.view.content_provider.listener' => 'getOroUi_View_ContentProvider_ListenerService',
            'oro_ui.view.listener' => 'getOroUi_View_ListenerService',
            'oro_ui.widget_provider.update_actions' => 'getOroUi_WidgetProvider_UpdateActionsService',
            'oro_ui.widget_provider.view_actions' => 'getOroUi_WidgetProvider_ViewActionsService',
            'oro_user.activity_widget_provider' => 'getOroUser_ActivityWidgetProviderService',
            'oro_user.autocomplete.role.authenticated_search_handler' => 'getOroUser_Autocomplete_Role_AuthenticatedSearchHandlerService',
            'oro_user.autocomplete.role.search_handler' => 'getOroUser_Autocomplete_Role_SearchHandlerService',
            'oro_user.autocomplete.user.organization_search_handler' => 'getOroUser_Autocomplete_User_OrganizationSearchHandlerService',
            'oro_user.autocomplete.user.search_acl_handler' => 'getOroUser_Autocomplete_User_SearchAclHandlerService',
            'oro_user.autocomplete.user.search_handler' => 'getOroUser_Autocomplete_User_SearchHandlerService',
            'oro_user.autocomplete.user.search_without_current_handler' => 'getOroUser_Autocomplete_User_SearchWithoutCurrentHandlerService',
            'oro_user.cache' => 'getOroUser_CacheService',
            'oro_user.change_password.subscriber' => 'getOroUser_ChangePassword_SubscriberService',
            'oro_user.email.owner.provider' => 'getOroUser_Email_Owner_ProviderService',
            'oro_user.email_recipients_provider' => 'getOroUser_EmailRecipientsProviderService',
            'oro_user.event_listener.owner_user_grid_listener' => 'getOroUser_EventListener_OwnerUserGridListenerService',
            'oro_user.form.group' => 'getOroUser_Form_GroupService',
            'oro_user.form.group.api' => 'getOroUser_Form_Group_ApiService',
            'oro_user.form.handler.acl_role' => 'getOroUser_Form_Handler_AclRoleService',
            'oro_user.form.handler.group' => 'getOroUser_Form_Handler_GroupService',
            'oro_user.form.handler.group.api' => 'getOroUser_Form_Handler_Group_ApiService',
            'oro_user.form.handler.reset' => 'getOroUser_Form_Handler_ResetService',
            'oro_user.form.handler.role.api' => 'getOroUser_Form_Handler_Role_ApiService',
            'oro_user.form.handler.set_password' => 'getOroUser_Form_Handler_SetPasswordService',
            'oro_user.form.handler.status' => 'getOroUser_Form_Handler_StatusService',
            'oro_user.form.handler.user' => 'getOroUser_Form_Handler_UserService',
            'oro_user.form.handler.user.api' => 'getOroUser_Form_Handler_User_ApiService',
            'oro_user.form.reset' => 'getOroUser_Form_ResetService',
            'oro_user.form.role' => 'getOroUser_Form_RoleService',
            'oro_user.form.role.api' => 'getOroUser_Form_Role_ApiService',
            'oro_user.form.status' => 'getOroUser_Form_StatusService',
            'oro_user.form.type.change_password' => 'getOroUser_Form_Type_ChangePasswordService',
            'oro_user.form.type.email' => 'getOroUser_Form_Type_EmailService',
            'oro_user.form.type.gender' => 'getOroUser_Form_Type_GenderService',
            'oro_user.form.type.group' => 'getOroUser_Form_Type_GroupService',
            'oro_user.form.type.group.api' => 'getOroUser_Form_Type_Group_ApiService',
            'oro_user.form.type.organization_user_acl_select' => 'getOroUser_Form_Type_OrganizationUserAclSelectService',
            'oro_user.form.type.organization_user_multiselect' => 'getOroUser_Form_Type_OrganizationUserMultiselectService',
            'oro_user.form.type.reset' => 'getOroUser_Form_Type_ResetService',
            'oro_user.form.type.role.api' => 'getOroUser_Form_Type_Role_ApiService',
            'oro_user.form.type.role_multiselect' => 'getOroUser_Form_Type_RoleMultiselectService',
            'oro_user.form.type.set_password.form' => 'getOroUser_Form_Type_SetPassword_FormService',
            'oro_user.form.type.set_password.form.type' => 'getOroUser_Form_Type_SetPassword_Form_TypeService',
            'oro_user.form.type.status' => 'getOroUser_Form_Type_StatusService',
            'oro_user.form.type.user' => 'getOroUser_Form_Type_UserService',
            'oro_user.form.type.user.api' => 'getOroUser_Form_Type_User_ApiService',
            'oro_user.form.type.user_acl_select' => 'getOroUser_Form_Type_UserAclSelectService',
            'oro_user.form.type.user_multiselect' => 'getOroUser_Form_Type_UserMultiselectService',
            'oro_user.form.type.user_select' => 'getOroUser_Form_Type_UserSelectService',
            'oro_user.form.user' => 'getOroUser_Form_UserService',
            'oro_user.form.user.api' => 'getOroUser_Form_User_ApiService',
            'oro_user.gender_provider' => 'getOroUser_GenderProviderService',
            'oro_user.group_manager' => 'getOroUser_GroupManagerService',
            'oro_user.group_manager.api' => 'getOroUser_GroupManager_ApiService',
            'oro_user.handler.delete' => 'getOroUser_Handler_DeleteService',
            'oro_user.importexport.data_converter' => 'getOroUser_Importexport_DataConverterService',
            'oro_user.importexport.processor.export' => 'getOroUser_Importexport_Processor_ExportService',
            'oro_user.importexport.processor.export_template' => 'getOroUser_Importexport_Processor_ExportTemplateService',
            'oro_user.importexport.template_fixture.data_converter' => 'getOroUser_Importexport_TemplateFixture_DataConverterService',
            'oro_user.importexport.template_fixture.user' => 'getOroUser_Importexport_TemplateFixture_UserService',
            'oro_user.mailer.processor' => 'getOroUser_Mailer_ProcessorService',
            'oro_user.manager' => 'getOroUser_ManagerService',
            'oro_user.manager.api' => 'getOroUser_Manager_ApiService',
            'oro_user.password_change.widget_provider.actions' => 'getOroUser_PasswordChange_WidgetProvider_ActionsService',
            'oro_user.password_reset.widget_provider.actions' => 'getOroUser_PasswordReset_WidgetProvider_ActionsService',
            'oro_user.permission_manager.api' => 'getOroUser_PermissionManager_ApiService',
            'oro_user.placeholder.filter' => 'getOroUser_Placeholder_FilterService',
            'oro_user.role.handler.delete' => 'getOroUser_Role_Handler_DeleteService',
            'oro_user.role.listener' => 'getOroUser_Role_ListenerService',
            'oro_user.role_manager' => 'getOroUser_RoleManagerService',
            'oro_user.role_manager.api' => 'getOroUser_RoleManager_ApiService',
            'oro_user.security.login' => 'getOroUser_Security_LoginService',
            'oro_user.security.provider' => 'getOroUser_Security_ProviderService',
            'oro_user.status_manager' => 'getOroUser_StatusManagerService',
            'oro_user.twig.user_extension' => 'getOroUser_Twig_UserExtensionService',
            'oro_user.user_menu' => 'getOroUser_UserMenuService',
            'oro_wamp.ping.pdo' => 'getOroWamp_Ping_PdoService',
            'oro_wamp.publisher' => 'getOroWamp_PublisherService',
            'oro_wamp.twig.sync_extension' => 'getOroWamp_Twig_SyncExtensionService',
            'oro_windows.twig.extension' => 'getOroWindows_Twig_ExtensionService',
            'oro_workflow.action.assign_active_user' => 'getOroWorkflow_Action_AssignActiveUserService',
            'oro_workflow.action.assign_value' => 'getOroWorkflow_Action_AssignValueService',
            'oro_workflow.action.call_method' => 'getOroWorkflow_Action_CallMethodService',
            'oro_workflow.action.configurable' => 'getOroWorkflow_Action_ConfigurableService',
            'oro_workflow.action.create_date' => 'getOroWorkflow_Action_CreateDateService',
            'oro_workflow.action.create_datetime' => 'getOroWorkflow_Action_CreateDatetimeService',
            'oro_workflow.action.create_entity' => 'getOroWorkflow_Action_CreateEntityService',
            'oro_workflow.action.create_object' => 'getOroWorkflow_Action_CreateObjectService',
            'oro_workflow.action.create_related_entity' => 'getOroWorkflow_Action_CreateRelatedEntityService',
            'oro_workflow.action.flash_message' => 'getOroWorkflow_Action_FlashMessageService',
            'oro_workflow.action.format_name' => 'getOroWorkflow_Action_FormatNameService',
            'oro_workflow.action.format_string' => 'getOroWorkflow_Action_FormatStringService',
            'oro_workflow.action.redirect' => 'getOroWorkflow_Action_RedirectService',
            'oro_workflow.action.request_entity' => 'getOroWorkflow_Action_RequestEntityService',
            'oro_workflow.action.start_workflow' => 'getOroWorkflow_Action_StartWorkflowService',
            'oro_workflow.action.translate' => 'getOroWorkflow_Action_TranslateService',
            'oro_workflow.action.traverse' => 'getOroWorkflow_Action_TraverseService',
            'oro_workflow.action.tree' => 'getOroWorkflow_Action_TreeService',
            'oro_workflow.action.unset_value' => 'getOroWorkflow_Action_UnsetValueService',
            'oro_workflow.action_assembler' => 'getOroWorkflow_ActionAssemblerService',
            'oro_workflow.action_factory' => 'getOroWorkflow_ActionFactoryService',
            'oro_workflow.attribute_assembler' => 'getOroWorkflow_AttributeAssemblerService',
            'oro_workflow.attribute_guesser' => 'getOroWorkflow_AttributeGuesserService',
            'oro_workflow.cache.process_trigger' => 'getOroWorkflow_Cache_ProcessTriggerService',
            'oro_workflow.cache.provider.process_trigger' => 'getOroWorkflow_Cache_Provider_ProcessTriggerService',
            'oro_workflow.condition.configurable' => 'getOroWorkflow_Condition_ConfigurableService',
            'oro_workflow.configuration.builder.process_configuration' => 'getOroWorkflow_Configuration_Builder_ProcessConfigurationService',
            'oro_workflow.configuration.builder.workflow_definition' => 'getOroWorkflow_Configuration_Builder_WorkflowDefinitionService',
            'oro_workflow.configuration.builder.workflow_definition.handle' => 'getOroWorkflow_Configuration_Builder_WorkflowDefinition_HandleService',
            'oro_workflow.configuration.config.process_definition_list' => 'getOroWorkflow_Configuration_Config_ProcessDefinitionListService',
            'oro_workflow.configuration.config.process_definition_sole' => 'getOroWorkflow_Configuration_Config_ProcessDefinitionSoleService',
            'oro_workflow.configuration.config.process_trigger_list' => 'getOroWorkflow_Configuration_Config_ProcessTriggerListService',
            'oro_workflow.configuration.config.process_trigger_sole' => 'getOroWorkflow_Configuration_Config_ProcessTriggerSoleService',
            'oro_workflow.configuration.config.workflow_list' => 'getOroWorkflow_Configuration_Config_WorkflowListService',
            'oro_workflow.configuration.config.workflow_sole' => 'getOroWorkflow_Configuration_Config_WorkflowSoleService',
            'oro_workflow.configuration.handler.attribute' => 'getOroWorkflow_Configuration_Handler_AttributeService',
            'oro_workflow.configuration.handler.step' => 'getOroWorkflow_Configuration_Handler_StepService',
            'oro_workflow.configuration.handler.transition' => 'getOroWorkflow_Configuration_Handler_TransitionService',
            'oro_workflow.configuration.handler.workflow' => 'getOroWorkflow_Configuration_Handler_WorkflowService',
            'oro_workflow.configuration.provider.process_config' => 'getOroWorkflow_Configuration_Provider_ProcessConfigService',
            'oro_workflow.configuration.provider.workflow_config' => 'getOroWorkflow_Configuration_Provider_WorkflowConfigService',
            'oro_workflow.configuration_pass.replace_property_path' => 'getOroWorkflow_ConfigurationPass_ReplacePropertyPathService',
            'oro_workflow.context_accessor' => 'getOroWorkflow_ContextAccessorService',
            'oro_workflow.datagrid.action.workflow_activate' => 'getOroWorkflow_Datagrid_Action_WorkflowActivateService',
            'oro_workflow.datagrid.action_permission_provider' => 'getOroWorkflow_Datagrid_ActionPermissionProviderService',
            'oro_workflow.datagrid.listener.workflow_step_column' => 'getOroWorkflow_Datagrid_Listener_WorkflowStepColumnService',
            'oro_workflow.datagrid.process_definition_entity_name_provider' => 'getOroWorkflow_Datagrid_ProcessDefinitionEntityNameProviderService',
            'oro_workflow.datagrid.workflow_definition_entity_name_provider' => 'getOroWorkflow_Datagrid_WorkflowDefinitionEntityNameProviderService',
            'oro_workflow.entity_connector' => 'getOroWorkflow_EntityConnectorService',
            'oro_workflow.entity_field_list_provider' => 'getOroWorkflow_EntityFieldListProviderService',
            'oro_workflow.entity_field_provider' => 'getOroWorkflow_EntityFieldProviderService',
            'oro_workflow.entity_provider' => 'getOroWorkflow_EntityProviderService',
            'oro_workflow.exclusion_provider' => 'getOroWorkflow_ExclusionProviderService',
            'oro_workflow.expression.acl_granted' => 'getOroWorkflow_Expression_AclGrantedService',
            'oro_workflow.expression.andx' => 'getOroWorkflow_Expression_AndxService',
            'oro_workflow.expression.assembler' => 'getOroWorkflow_Expression_AssemblerService',
            'oro_workflow.expression.blank' => 'getOroWorkflow_Expression_BlankService',
            'oro_workflow.expression.context_accessor' => 'getOroWorkflow_Expression_ContextAccessorService',
            'oro_workflow.expression.equal_to' => 'getOroWorkflow_Expression_EqualToService',
            'oro_workflow.expression.extension' => 'getOroWorkflow_Expression_ExtensionService',
            'oro_workflow.expression.factory' => 'getOroWorkflow_Expression_FactoryService',
            'oro_workflow.expression.false' => 'getOroWorkflow_Expression_FalseService',
            'oro_workflow.expression.greater_than' => 'getOroWorkflow_Expression_GreaterThanService',
            'oro_workflow.expression.greater_than_or_equal' => 'getOroWorkflow_Expression_GreaterThanOrEqualService',
            'oro_workflow.expression.has_value' => 'getOroWorkflow_Expression_HasValueService',
            'oro_workflow.expression.less_than' => 'getOroWorkflow_Expression_LessThanService',
            'oro_workflow.expression.less_than_or_equal' => 'getOroWorkflow_Expression_LessThanOrEqualService',
            'oro_workflow.expression.not' => 'getOroWorkflow_Expression_NotService',
            'oro_workflow.expression.not_blank' => 'getOroWorkflow_Expression_NotBlankService',
            'oro_workflow.expression.not_equal_to' => 'getOroWorkflow_Expression_NotEqualToService',
            'oro_workflow.expression.not_has_value' => 'getOroWorkflow_Expression_NotHasValueService',
            'oro_workflow.expression.orx' => 'getOroWorkflow_Expression_OrxService',
            'oro_workflow.expression.true' => 'getOroWorkflow_Expression_TrueService',
            'oro_workflow.field_generator' => 'getOroWorkflow_FieldGeneratorService',
            'oro_workflow.form.event_listener.default_values' => 'getOroWorkflow_Form_EventListener_DefaultValuesService',
            'oro_workflow.form.event_listener.init_actions' => 'getOroWorkflow_Form_EventListener_InitActionsService',
            'oro_workflow.form.event_listener.required_attributes' => 'getOroWorkflow_Form_EventListener_RequiredAttributesService',
            'oro_workflow.form.type.applicable_entities' => 'getOroWorkflow_Form_Type_ApplicableEntitiesService',
            'oro_workflow.form.type.attributes' => 'getOroWorkflow_Form_Type_AttributesService',
            'oro_workflow.form.type.transition' => 'getOroWorkflow_Form_Type_TransitionService',
            'oro_workflow.form.type.workflow_definition' => 'getOroWorkflow_Form_Type_WorkflowDefinitionService',
            'oro_workflow.form.type.workflow_select' => 'getOroWorkflow_Form_Type_WorkflowSelectService',
            'oro_workflow.form.type.workflow_step_select' => 'getOroWorkflow_Form_Type_WorkflowStepSelectService',
            'oro_workflow.form.workflow_definition' => 'getOroWorkflow_Form_WorkflowDefinitionService',
            'oro_workflow.form_options_assembler' => 'getOroWorkflow_FormOptionsAssemblerService',
            'oro_workflow.listener.process_collector' => 'getOroWorkflow_Listener_ProcessCollectorService',
            'oro_workflow.listener.process_data_serialize' => 'getOroWorkflow_Listener_ProcessDataSerializeService',
            'oro_workflow.listener.workflow_data_serialize' => 'getOroWorkflow_Listener_WorkflowDataSerializeService',
            'oro_workflow.listener.workflow_item' => 'getOroWorkflow_Listener_WorkflowItemService',
            'oro_workflow.manager' => 'getOroWorkflow_ManagerService',
            'oro_workflow.process.logger' => 'getOroWorkflow_Process_LoggerService',
            'oro_workflow.process.process_factory' => 'getOroWorkflow_Process_ProcessFactoryService',
            'oro_workflow.process.process_handler' => 'getOroWorkflow_Process_ProcessHandlerService',
            'oro_workflow.process.schedule_policy.exclude_definitions' => 'getOroWorkflow_Process_SchedulePolicy_ExcludeDefinitionsService',
            'oro_workflow.prototype.attribute_manager' => 'getOroWorkflow_Prototype_AttributeManagerService',
            'oro_workflow.prototype.step_manager' => 'getOroWorkflow_Prototype_StepManagerService',
            'oro_workflow.prototype.transition_manager' => 'getOroWorkflow_Prototype_TransitionManagerService',
            'oro_workflow.prototype.workflow' => 'getOroWorkflow_Prototype_WorkflowService',
            'oro_workflow.registry' => 'getOroWorkflow_RegistryService',
            'oro_workflow.security.acl.manager' => 'getOroWorkflow_Security_Acl_ManagerService',
            'oro_workflow.security.acl.voter.entity' => 'getOroWorkflow_Security_Acl_Voter_EntityService',
            'oro_workflow.serializer.data.attribute_normalizer.entity' => 'getOroWorkflow_Serializer_Data_AttributeNormalizer_EntityService',
            'oro_workflow.serializer.data.attribute_normalizer.multiple_entity' => 'getOroWorkflow_Serializer_Data_AttributeNormalizer_MultipleEntityService',
            'oro_workflow.serializer.data.attribute_normalizer.standard' => 'getOroWorkflow_Serializer_Data_AttributeNormalizer_StandardService',
            'oro_workflow.serializer.data.normalizer' => 'getOroWorkflow_Serializer_Data_NormalizerService',
            'oro_workflow.serializer.data.serializer' => 'getOroWorkflow_Serializer_Data_SerializerService',
            'oro_workflow.serializer.handler.workflow_result' => 'getOroWorkflow_Serializer_Handler_WorkflowResultService',
            'oro_workflow.serializer.process.normalizer.entity' => 'getOroWorkflow_Serializer_Process_Normalizer_EntityService',
            'oro_workflow.serializer.process.normalizer.object' => 'getOroWorkflow_Serializer_Process_Normalizer_ObjectService',
            'oro_workflow.serializer.process.normalizer.process_data' => 'getOroWorkflow_Serializer_Process_Normalizer_ProcessDataService',
            'oro_workflow.serializer.process.normalizer.scalar' => 'getOroWorkflow_Serializer_Process_Normalizer_ScalarService',
            'oro_workflow.serializer.process.normalizer.traversable' => 'getOroWorkflow_Serializer_Process_Normalizer_TraversableService',
            'oro_workflow.serializer.process.serializer' => 'getOroWorkflow_Serializer_Process_SerializerService',
            'oro_workflow.step_assembler' => 'getOroWorkflow_StepAssemblerService',
            'oro_workflow.transition_assembler' => 'getOroWorkflow_TransitionAssemblerService',
            'oro_workflow.twig.extension.workflow' => 'getOroWorkflow_Twig_Extension_WorkflowService',
            'oro_workflow.validator.transition_is_allowed' => 'getOroWorkflow_Validator_TransitionIsAllowedService',
            'oro_workflow.workflow.action.assign_constant_value' => 'getOroWorkflow_Workflow_Action_AssignConstantValueService',
            'oro_workflow.workflow.action.copy_tagging.class' => 'getOroWorkflow_Workflow_Action_CopyTagging_ClassService',
            'oro_workflow.workflow.action.remove_entity' => 'getOroWorkflow_Workflow_Action_RemoveEntityService',
            'oro_workflow.workflow_assembler' => 'getOroWorkflow_WorkflowAssemblerService',
            'profiler' => 'getProfilerService',
            'profiler_listener' => 'getProfilerListenerService',
            'property_accessor' => 'getPropertyAccessorService',
            'request' => 'getRequestService',
            'request_stack' => 'getRequestStackService',
            'response_listener' => 'getResponseListenerService',
            'router' => 'getRouterService',
            'router.request_context' => 'getRouter_RequestContextService',
            'router_listener' => 'getRouterListenerService',
            'routing.loader' => 'getRouting_LoaderService',
            'routing.resolver' => 'getRouting_ResolverService',
            'security.access.decision_manager' => 'getSecurity_Access_DecisionManagerService',
            'security.access_listener' => 'getSecurity_AccessListenerService',
            'security.access_map' => 'getSecurity_AccessMapService',
            'security.acl.cache' => 'getSecurity_Acl_CacheService',
            'security.acl.cache.doctrine.cache_impl' => 'getSecurity_Acl_Cache_Doctrine_CacheImplService',
            'security.acl.dbal.provider' => 'getSecurity_Acl_Dbal_ProviderService',
            'security.acl.dbal.schema' => 'getSecurity_Acl_Dbal_SchemaService',
            'security.acl.dbal.schema_listener' => 'getSecurity_Acl_Dbal_SchemaListenerService',
            'security.acl.voter.basic_permissions' => 'getSecurity_Acl_Voter_BasicPermissionsService',
            'security.authentication.manager' => 'getSecurity_Authentication_ManagerService',
            'security.authentication.trust_resolver' => 'getSecurity_Authentication_TrustResolverService',
            'security.authentication_utils' => 'getSecurity_AuthenticationUtilsService',
            'security.authorization_checker' => 'getSecurity_AuthorizationCheckerService',
            'security.channel_listener' => 'getSecurity_ChannelListenerService',
            'security.context' => 'getSecurity_ContextService',
            'security.context.link' => 'getSecurity_Context_LinkService',
            'security.context_listener.0' => 'getSecurity_ContextListener_0Service',
            'security.csrf.token_manager' => 'getSecurity_Csrf_TokenManagerService',
            'security.encoder_factory' => 'getSecurity_EncoderFactoryService',
            'security.firewall' => 'getSecurity_FirewallService',
            'security.firewall.map.context.dev' => 'getSecurity_Firewall_Map_Context_DevService',
            'security.firewall.map.context.embedded_form' => 'getSecurity_Firewall_Map_Context_EmbeddedFormService',
            'security.firewall.map.context.install' => 'getSecurity_Firewall_Map_Context_InstallService',
            'security.firewall.map.context.login' => 'getSecurity_Firewall_Map_Context_LoginService',
            'security.firewall.map.context.main' => 'getSecurity_Firewall_Map_Context_MainService',
            'security.firewall.map.context.reset_password' => 'getSecurity_Firewall_Map_Context_ResetPasswordService',
            'security.firewall.map.context.tracking_data' => 'getSecurity_Firewall_Map_Context_TrackingDataService',
            'security.firewall.map.context.wsse_secured' => 'getSecurity_Firewall_Map_Context_WsseSecuredService',
            'security.http_utils' => 'getSecurity_HttpUtilsService',
            'security.logout_url_generator' => 'getSecurity_LogoutUrlGeneratorService',
            'security.password_encoder' => 'getSecurity_PasswordEncoderService',
            'security.rememberme.response_listener' => 'getSecurity_Rememberme_ResponseListenerService',
            'security.role_hierarchy' => 'getSecurity_RoleHierarchyService',
            'security.secure_random' => 'getSecurity_SecureRandomService',
            'security.token_storage' => 'getSecurity_TokenStorageService',
            'security.user.provider.concrete.chain_provider' => 'getSecurity_User_Provider_Concrete_ChainProviderService',
            'security.user.provider.concrete.in_memory' => 'getSecurity_User_Provider_Concrete_InMemoryService',
            'security.user_checker' => 'getSecurity_UserCheckerService',
            'security.validator.user_password' => 'getSecurity_Validator_UserPasswordService',
            'sensio_distribution.webconfigurator' => 'getSensioDistribution_WebconfiguratorService',
            'sensio_framework_extra.cache.listener' => 'getSensioFrameworkExtra_Cache_ListenerService',
            'sensio_framework_extra.controller.listener' => 'getSensioFrameworkExtra_Controller_ListenerService',
            'sensio_framework_extra.converter.datetime' => 'getSensioFrameworkExtra_Converter_DatetimeService',
            'sensio_framework_extra.converter.doctrine.orm' => 'getSensioFrameworkExtra_Converter_Doctrine_OrmService',
            'sensio_framework_extra.converter.listener' => 'getSensioFrameworkExtra_Converter_ListenerService',
            'sensio_framework_extra.converter.manager' => 'getSensioFrameworkExtra_Converter_ManagerService',
            'sensio_framework_extra.view.guesser' => 'getSensioFrameworkExtra_View_GuesserService',
            'sensio_framework_extra.view.listener' => 'getSensioFrameworkExtra_View_ListenerService',
            'serializer.encoder.json' => 'getSerializer_Encoder_JsonService',
            'service_container' => 'getServiceContainerService',
            'session' => 'getSessionService',
            'session.flash_bag' => 'getSession_FlashBagService',
            'session.handler' => 'getSession_HandlerService',
            'session.handler.pdo' => 'getSession_Handler_PdoService',
            'session.save_listener' => 'getSession_SaveListenerService',
            'session.storage.filesystem' => 'getSession_Storage_FilesystemService',
            'session.storage.metadata_bag' => 'getSession_Storage_MetadataBagService',
            'session.storage.native' => 'getSession_Storage_NativeService',
            'session.storage.php_bridge' => 'getSession_Storage_PhpBridgeService',
            'session_listener' => 'getSessionListenerService',
            'stof_doctrine_extensions.event_listener.locale' => 'getStofDoctrineExtensions_EventListener_LocaleService',
            'stof_doctrine_extensions.listener.translatable' => 'getStofDoctrineExtensions_Listener_TranslatableService',
            'stof_doctrine_extensions.uploadable.manager' => 'getStofDoctrineExtensions_Uploadable_ManagerService',
            'streamed_response_listener' => 'getStreamedResponseListenerService',
            'swiftmailer.email_sender.listener' => 'getSwiftmailer_EmailSender_ListenerService',
            'swiftmailer.mailer.db_spool_mailer' => 'getSwiftmailer_Mailer_DbSpoolMailerService',
            'swiftmailer.mailer.default' => 'getSwiftmailer_Mailer_DefaultService',
            'swiftmailer.mailer.default.plugin.messagelogger' => 'getSwiftmailer_Mailer_Default_Plugin_MessageloggerService',
            'swiftmailer.mailer.default.spool' => 'getSwiftmailer_Mailer_Default_SpoolService',
            'swiftmailer.mailer.default.transport' => 'getSwiftmailer_Mailer_Default_TransportService',
            'swiftmailer.mailer.default.transport.eventdispatcher' => 'getSwiftmailer_Mailer_Default_Transport_EventdispatcherService',
            'swiftmailer.mailer.default.transport.real' => 'getSwiftmailer_Mailer_Default_Transport_RealService',
            'sylius.controller.process' => 'getSylius_Controller_ProcessService',
            'sylius.process.builder' => 'getSylius_Process_BuilderService',
            'sylius.process.context' => 'getSylius_Process_ContextService',
            'sylius.process.coordinator' => 'getSylius_Process_CoordinatorService',
            'sylius.process_storage.session' => 'getSylius_ProcessStorage_SessionService',
            'sylius.process_storage.session.bag' => 'getSylius_ProcessStorage_Session_BagService',
            'templating' => 'getTemplatingService',
            'templating.filename_parser' => 'getTemplating_FilenameParserService',
            'templating.globals' => 'getTemplating_GlobalsService',
            'templating.helper.actions' => 'getTemplating_Helper_ActionsService',
            'templating.helper.assets' => 'getTemplating_Helper_AssetsService',
            'templating.helper.code' => 'getTemplating_Helper_CodeService',
            'templating.helper.form' => 'getTemplating_Helper_FormService',
            'templating.helper.logout_url' => 'getTemplating_Helper_LogoutUrlService',
            'templating.helper.request' => 'getTemplating_Helper_RequestService',
            'templating.helper.router' => 'getTemplating_Helper_RouterService',
            'templating.helper.security' => 'getTemplating_Helper_SecurityService',
            'templating.helper.session' => 'getTemplating_Helper_SessionService',
            'templating.helper.slots' => 'getTemplating_Helper_SlotsService',
            'templating.helper.stopwatch' => 'getTemplating_Helper_StopwatchService',
            'templating.helper.translator' => 'getTemplating_Helper_TranslatorService',
            'templating.loader' => 'getTemplating_LoaderService',
            'templating.locator' => 'getTemplating_LocatorService',
            'templating.name_parser' => 'getTemplating_NameParserService',
            'translation.dumper.csv' => 'getTranslation_Dumper_CsvService',
            'translation.dumper.ini' => 'getTranslation_Dumper_IniService',
            'translation.dumper.json' => 'getTranslation_Dumper_JsonService',
            'translation.dumper.mo' => 'getTranslation_Dumper_MoService',
            'translation.dumper.php' => 'getTranslation_Dumper_PhpService',
            'translation.dumper.po' => 'getTranslation_Dumper_PoService',
            'translation.dumper.qt' => 'getTranslation_Dumper_QtService',
            'translation.dumper.res' => 'getTranslation_Dumper_ResService',
            'translation.dumper.xliff' => 'getTranslation_Dumper_XliffService',
            'translation.dumper.yml' => 'getTranslation_Dumper_YmlService',
            'translation.extractor' => 'getTranslation_ExtractorService',
            'translation.extractor.php' => 'getTranslation_Extractor_PhpService',
            'translation.loader' => 'getTranslation_LoaderService',
            'translation.loader.csv' => 'getTranslation_Loader_CsvService',
            'translation.loader.dat' => 'getTranslation_Loader_DatService',
            'translation.loader.ini' => 'getTranslation_Loader_IniService',
            'translation.loader.json' => 'getTranslation_Loader_JsonService',
            'translation.loader.mo' => 'getTranslation_Loader_MoService',
            'translation.loader.php' => 'getTranslation_Loader_PhpService',
            'translation.loader.po' => 'getTranslation_Loader_PoService',
            'translation.loader.qt' => 'getTranslation_Loader_QtService',
            'translation.loader.res' => 'getTranslation_Loader_ResService',
            'translation.loader.xliff' => 'getTranslation_Loader_XliffService',
            'translation.loader.yml' => 'getTranslation_Loader_YmlService',
            'translation.writer' => 'getTranslation_WriterService',
            'translator' => 'getTranslatorService',
            'translator.default' => 'getTranslator_DefaultService',
            'translator_listener' => 'getTranslatorListenerService',
            'twig' => 'getTwigService',
            'twig.controller.exception' => 'getTwig_Controller_ExceptionService',
            'twig.controller.preview_error' => 'getTwig_Controller_PreviewErrorService',
            'twig.exception_listener' => 'getTwig_ExceptionListenerService',
            'twig.extension.httpkernel' => 'getTwig_Extension_HttpkernelService',
            'twig.extension.intl' => 'getTwig_Extension_IntlService',
            'twig.extension.routing' => 'getTwig_Extension_RoutingService',
            'twig.extension.text' => 'getTwig_Extension_TextService',
            'twig.form.renderer' => 'getTwig_Form_RendererService',
            'twig.loader' => 'getTwig_LoaderService',
            'twig.profile' => 'getTwig_ProfileService',
            'twig.translation.extractor' => 'getTwig_Translation_ExtractorService',
            'uri_signer' => 'getUriSignerService',
            'validator' => 'getValidatorService',
            'validator.builder' => 'getValidator_BuilderService',
            'validator.email' => 'getValidator_EmailService',
            'validator.expression' => 'getValidator_ExpressionService',
            'web_profiler.controller.exception' => 'getWebProfiler_Controller_ExceptionService',
            'web_profiler.controller.profiler' => 'getWebProfiler_Controller_ProfilerService',
            'web_profiler.controller.router' => 'getWebProfiler_Controller_RouterService',
            'web_profiler.debug_toolbar' => 'getWebProfiler_DebugToolbarService',
        );
        $this->aliases = array(
            'a2lix_translation_form.manager_registry' => 'doctrine',
            'database_connection' => 'doctrine.dbal.default_connection',
            'doctrine.orm.default_query_cache' => 'doctrine_cache.providers.doctrine.orm.default_query_cache',
            'doctrine.orm.default_result_cache' => 'doctrine_cache.providers.doctrine.orm.default_result_cache',
            'doctrine.orm.entity_manager' => 'doctrine.orm.default_entity_manager',
            'event_dispatcher' => 'debug.event_dispatcher',
            'fos_rest.exception_handler' => 'fos_rest.view.exception_wrapper_handler',
            'fos_rest.inflector' => 'fos_rest.inflector.doctrine',
            'fos_rest.router' => 'router',
            'fos_rest.serializer' => 'jms_serializer',
            'fos_rest.templating' => 'templating',
            'hwi_oauth.user.provider.entity.main' => 'oro_sso.oauth_provider',
            'hwi_oauth.user_checker' => 'security.user_checker',
            'mailer' => 'swiftmailer.mailer.default',
            'oro_entity_extend.db_id_name_generator' => 'oro_migration.db_id_name_generator',
            'oro_entity_merge.accessor' => 'oro_entity_merge.accessor.delegate',
            'oro_entity_merge.strategy' => 'oro_entity_merge.strategy.delegate',
            'oro_integration.transport.rest.client_factory' => 'oro_integration.transport.rest.guzzle.client_factory',
            'oro_query_designer.virtual_field_provider' => 'oro_entity.virtual_field_provider.chain',
            'oro_report.entity_provider' => 'oro_entity.entity_provider',
            'oro_segment.entity_provider' => 'oro_entity.entity_provider',
            'oro_soap.handler.include' => 'oro_soap.handler.include_delegate',
            'oro_soap.provider.metadata' => 'oro_soap.provider.metadata.chain',
            'oro_translation.uploader.default_adapter' => 'oro_translation.uploader.crowdin_adapter',
            'oro_workflow.process.schedule_policy' => 'oro_workflow.process.schedule_policy.exclude_definitions',
            'security.acl.dbal.connection' => 'doctrine.dbal.default_connection',
            'security.acl.provider' => 'security.acl.dbal.provider',
            'sensio.distribution.webconfigurator' => 'sensio_distribution.webconfigurator',
            'serializer' => 'jms_serializer',
            'session.storage' => 'session.storage.native',
            'swiftmailer.mailer' => 'swiftmailer.mailer.default',
            'swiftmailer.mailer.db_spool_mailer.transport.real' => 'swiftmailer.mailer.default.transport.real',
            'swiftmailer.plugin.messagelogger' => 'swiftmailer.mailer.default.plugin.messagelogger',
            'swiftmailer.spool' => 'swiftmailer.mailer.default.spool',
            'swiftmailer.transport' => 'swiftmailer.mailer.default.transport',
            'swiftmailer.transport.real' => 'swiftmailer.mailer.default.transport.real',
            'sylius.process_storage' => 'sylius.process_storage.session',
        );
    }

    /**
     * {@inheritdoc}
     */
    public function compile()
    {
        throw new LogicException('You cannot compile a dumped frozen container.');
    }

    /**
     * Gets the 'a2lix_translation_form.default.listener.translations' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \A2lix\TranslationFormBundle\Form\EventListener\DefaultTranslationsListener A A2lix\TranslationFormBundle\Form\EventListener\DefaultTranslationsListener instance.
     */
    protected function getA2lixTranslationForm_Default_Listener_TranslationsService()
    {
        return $this->services['a2lix_translation_form.default.listener.translations'] = new \A2lix\TranslationFormBundle\Form\EventListener\DefaultTranslationsListener($this->get('a2lix_translation_form.default.service.translation'));
    }

    /**
     * Gets the 'a2lix_translation_form.default.service.translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \A2lix\TranslationFormBundle\TranslationForm\DefaultTranslationForm A A2lix\TranslationFormBundle\TranslationForm\DefaultTranslationForm instance.
     */
    protected function getA2lixTranslationForm_Default_Service_TranslationService()
    {
        return $this->services['a2lix_translation_form.default.service.translation'] = new \A2lix\TranslationFormBundle\TranslationForm\DefaultTranslationForm($this->get('form.registry'), $this->get('doctrine'));
    }

    /**
     * Gets the 'a2lix_translation_form.default.type.translations' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \A2lix\TranslationFormBundle\Form\Type\TranslationsType A A2lix\TranslationFormBundle\Form\Type\TranslationsType instance.
     */
    protected function getA2lixTranslationForm_Default_Type_TranslationsService()
    {
        return $this->services['a2lix_translation_form.default.type.translations'] = new \A2lix\TranslationFormBundle\Form\Type\TranslationsType($this->get('a2lix_translation_form.default.listener.translations'), array(0 => 'en', 1 => 'fr'), true);
    }

    /**
     * Gets the 'a2lix_translation_form.default.type.translationsfields' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \A2lix\TranslationFormBundle\Form\Type\TranslationsFieldsType A A2lix\TranslationFormBundle\Form\Type\TranslationsFieldsType instance.
     */
    protected function getA2lixTranslationForm_Default_Type_TranslationsfieldsService()
    {
        return $this->services['a2lix_translation_form.default.type.translationsfields'] = new \A2lix\TranslationFormBundle\Form\Type\TranslationsFieldsType();
    }

    /**
     * Gets the 'a2lix_translation_form.default.type.translationsforms' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \A2lix\TranslationFormBundle\Form\Type\TranslationsFormsType A A2lix\TranslationFormBundle\Form\Type\TranslationsFormsType instance.
     */
    protected function getA2lixTranslationForm_Default_Type_TranslationsformsService()
    {
        return $this->services['a2lix_translation_form.default.type.translationsforms'] = new \A2lix\TranslationFormBundle\Form\Type\TranslationsFormsType(array(0 => 'en', 1 => 'fr'), true);
    }

    /**
     * Gets the 'a2lix_translation_form.default.type.translationslocalesselector' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \A2lix\TranslationFormBundle\Form\Type\TranslationsLocalesSelectorType A A2lix\TranslationFormBundle\Form\Type\TranslationsLocalesSelectorType instance.
     */
    protected function getA2lixTranslationForm_Default_Type_TranslationslocalesselectorService()
    {
        return $this->services['a2lix_translation_form.default.type.translationslocalesselector'] = new \A2lix\TranslationFormBundle\Form\Type\TranslationsLocalesSelectorType(array(0 => 'en', 1 => 'fr'));
    }

    /**
     * Gets the 'a2lix_translation_form.gedmo.listener.translations' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \A2lix\TranslationFormBundle\Form\EventListener\GedmoTranslationsListener A A2lix\TranslationFormBundle\Form\EventListener\GedmoTranslationsListener instance.
     */
    protected function getA2lixTranslationForm_Gedmo_Listener_TranslationsService()
    {
        return $this->services['a2lix_translation_form.gedmo.listener.translations'] = new \A2lix\TranslationFormBundle\Form\EventListener\GedmoTranslationsListener($this->get('a2lix_translation_form.gedmo.service.translation'));
    }

    /**
     * Gets the 'a2lix_translation_form.gedmo.service.translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \A2lix\TranslationFormBundle\TranslationForm\GedmoTranslationForm A A2lix\TranslationFormBundle\TranslationForm\GedmoTranslationForm instance.
     */
    protected function getA2lixTranslationForm_Gedmo_Service_TranslationService()
    {
        $this->services['a2lix_translation_form.gedmo.service.translation'] = $instance = new \A2lix\TranslationFormBundle\TranslationForm\GedmoTranslationForm($this->get('form.registry'), $this->get('doctrine'));

        $instance->setGedmoTranslatableListener($this->get('stof_doctrine_extensions.listener.translatable'));

        return $instance;
    }

    /**
     * Gets the 'a2lix_translation_form.gedmo.type.translations' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \A2lix\TranslationFormBundle\Form\Type\GedmoTranslationsType A A2lix\TranslationFormBundle\Form\Type\GedmoTranslationsType instance.
     */
    protected function getA2lixTranslationForm_Gedmo_Type_TranslationsService()
    {
        return $this->services['a2lix_translation_form.gedmo.type.translations'] = new \A2lix\TranslationFormBundle\Form\Type\GedmoTranslationsType($this->get('a2lix_translation_form.gedmo.listener.translations'), $this->get('a2lix_translation_form.gedmo.service.translation'), array(0 => 'en', 1 => 'fr'), true);
    }

    /**
     * Gets the 'a2lix_translation_form.gedmo.type.translationslocales' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \A2lix\TranslationFormBundle\Form\Type\GedmoTranslationsLocalesType A A2lix\TranslationFormBundle\Form\Type\GedmoTranslationsLocalesType instance.
     */
    protected function getA2lixTranslationForm_Gedmo_Type_TranslationslocalesService()
    {
        return $this->services['a2lix_translation_form.gedmo.type.translationslocales'] = new \A2lix\TranslationFormBundle\Form\Type\GedmoTranslationsLocalesType();
    }

    /**
     * Gets the 'a2lix_translation_form.listener.controller' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \A2lix\TranslationFormBundle\EventListener\ControllerListener A A2lix\TranslationFormBundle\EventListener\ControllerListener instance.
     */
    protected function getA2lixTranslationForm_Listener_ControllerService()
    {
        return $this->services['a2lix_translation_form.listener.controller'] = new \A2lix\TranslationFormBundle\EventListener\ControllerListener($this->get('annotation_reader'), $this->get('stof_doctrine_extensions.listener.translatable'));
    }

    /**
     * Gets the 'akeneo_batch.connectors' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Akeneo\Bundle\BatchBundle\Connector\ConnectorRegistry A Akeneo\Bundle\BatchBundle\Connector\ConnectorRegistry instance.
     */
    protected function getAkeneoBatch_ConnectorsService()
    {
        $a = $this->get('oro_importexport.processor.export_delegate');
        $b = $this->get('oro_importexport.writer.csv');
        $c = $this->get('oro_importexport.reader.csv');
        $d = $this->get('oro_importexport.processor.import_delegate');
        $e = $this->get('oro_integration.writer.persistent_batch_writer');

        $this->services['akeneo_batch.connectors'] = $instance = new \Akeneo\Bundle\BatchBundle\Connector\ConnectorRegistry($this->get('akeneo_batch.job_factory'), $this->get('akeneo_batch.step_factory'));

        $instance->addStepToJob('oro_importexport', 'export', 'datagrid_export_to_csv', 'Datagrid Export to CSV', 'export', 'Oro\\Bundle\\BatchBundle\\Step\\ItemStep', array('reader' => $this->get('oro_datagrid.importexport.export_connector'), 'processor' => $a, 'writer' => $b), array());
        $instance->addStepToJob('oro_importexport', 'export', 'entity_export_to_csv', 'Entity Export to CSV', 'export', 'Oro\\Bundle\\BatchBundle\\Step\\ItemStep', array('reader' => $this->get('oro_importexport.reader.entity'), 'processor' => $a, 'writer' => $b), array());
        $instance->addStepToJob('oro_importexport', 'export_template', 'entity_export_template_to_csv', 'Entity Template Export to CSV', 'export_template', 'Oro\\Bundle\\BatchBundle\\Step\\ItemStep', array('reader' => $this->get('oro_importexport.reader.template_fixture'), 'processor' => $this->get('oro_importexport.processor.export_template_delegate'), 'writer' => $b), array());
        $instance->addStepToJob('oro_importexport', 'import_validation', 'entity_import_validation_from_csv', 'Entity Import Validation from CSV', 'import_validation', 'Oro\\Bundle\\BatchBundle\\Step\\ItemStep', array('reader' => $c, 'processor' => $this->get('oro_importexport.processor.import_validation_delegate'), 'writer' => $this->get('oro_importexport.writer.doctrine_clear')), array());
        $instance->addStepToJob('oro_importexport', 'import', 'entity_import_from_csv', 'Entity Import from CSV', 'import', 'Oro\\Bundle\\BatchBundle\\Step\\ItemStep', array('reader' => $c, 'processor' => $d, 'writer' => $this->get('oro_importexport.writer.entity')), array());
        $instance->addStepToJob('oro_importexport', 'import', 'import_log_to_database', 'Import tracking log to databaser', 'import', 'Oro\\Bundle\\BatchBundle\\Step\\ItemStep', array('reader' => $this->get('oro_tracking.importexport.reader.log'), 'processor' => $d, 'writer' => $e), array('batch_size' => 50));
        $instance->addStepToJob('oro_importexport', 'import', 'import_request_to_database', 'Import tracking request to database', 'import', 'Oro\\Bundle\\BatchBundle\\Step\\ItemStep', array('reader' => $this->get('oro_tracking.importexport.reader.context'), 'processor' => $d, 'writer' => $e), array('batch_size' => 1));

        return $instance;
    }

    /**
     * Gets the 'akeneo_batch.job_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Akeneo\Bundle\BatchBundle\Job\JobFactory A Akeneo\Bundle\BatchBundle\Job\JobFactory instance.
     */
    protected function getAkeneoBatch_JobFactoryService()
    {
        return $this->services['akeneo_batch.job_factory'] = new \Akeneo\Bundle\BatchBundle\Job\JobFactory($this->get('debug.event_dispatcher'), $this->get('akeneo_batch.job_repository'));
    }

    /**
     * Gets the 'akeneo_batch.job_repository' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Akeneo\Bundle\BatchBundle\Job\DoctrineJobRepository A Akeneo\Bundle\BatchBundle\Job\DoctrineJobRepository instance.
     */
    protected function getAkeneoBatch_JobRepositoryService()
    {
        return $this->services['akeneo_batch.job_repository'] = new \Akeneo\Bundle\BatchBundle\Job\DoctrineJobRepository($this->get('doctrine.orm.default_entity_manager'), 'Akeneo\\Bundle\\BatchBundle\\Entity\\JobExecution');
    }

    /**
     * Gets the 'akeneo_batch.launcher.simple_job_launcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Akeneo\Bundle\BatchBundle\Launcher\SimpleJobLauncher A Akeneo\Bundle\BatchBundle\Launcher\SimpleJobLauncher instance.
     */
    protected function getAkeneoBatch_Launcher_SimpleJobLauncherService()
    {
        return $this->services['akeneo_batch.launcher.simple_job_launcher'] = new \Akeneo\Bundle\BatchBundle\Launcher\SimpleJobLauncher($this->get('akeneo_batch.job_repository'), 'C:\\wamp\\www\\stockvalue~~\\app', 'dev');
    }

    /**
     * Gets the 'akeneo_batch.logger.batch_log_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\BatchBundle\Monolog\Handler\BatchLogHandler A Oro\Bundle\BatchBundle\Monolog\Handler\BatchLogHandler instance.
     */
    protected function getAkeneoBatch_Logger_BatchLogHandlerService()
    {
        $this->services['akeneo_batch.logger.batch_log_handler'] = $instance = new \Oro\Bundle\BatchBundle\Monolog\Handler\BatchLogHandler('C:\\wamp\\www\\stockvalue~~\\app\\logs/batch');

        $instance->setIsActive(false);

        return $instance;
    }

    /**
     * Gets the 'akeneo_batch.logger_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Akeneo\Bundle\BatchBundle\EventListener\LoggerSubscriber A Akeneo\Bundle\BatchBundle\EventListener\LoggerSubscriber instance.
     */
    protected function getAkeneoBatch_LoggerSubscriberService()
    {
        return $this->services['akeneo_batch.logger_subscriber'] = new \Akeneo\Bundle\BatchBundle\EventListener\LoggerSubscriber($this->get('monolog.logger.batch'), $this->get('translator'));
    }

    /**
     * Gets the 'akeneo_batch.mail_notifier' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Akeneo\Bundle\BatchBundle\Notification\MailNotifier A Akeneo\Bundle\BatchBundle\Notification\MailNotifier instance.
     */
    protected function getAkeneoBatch_MailNotifierService()
    {
        return $this->services['akeneo_batch.mail_notifier'] = new \Akeneo\Bundle\BatchBundle\Notification\MailNotifier($this->get('akeneo_batch.logger.batch_log_handler'), $this->get('security.context'), $this->get('twig'), $this->get('swiftmailer.mailer.default'), 'mailer@bap.com');
    }

    /**
     * Gets the 'akeneo_batch.manager.job_execution' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Akeneo\Bundle\BatchBundle\Manager\JobExecutionManager A Akeneo\Bundle\BatchBundle\Manager\JobExecutionManager instance.
     */
    protected function getAkeneoBatch_Manager_JobExecutionService()
    {
        return $this->services['akeneo_batch.manager.job_execution'] = new \Akeneo\Bundle\BatchBundle\Manager\JobExecutionManager($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'akeneo_batch.notification_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Akeneo\Bundle\BatchBundle\EventListener\NotificationSubscriber A Akeneo\Bundle\BatchBundle\EventListener\NotificationSubscriber instance.
     */
    protected function getAkeneoBatch_NotificationSubscriberService()
    {
        return $this->services['akeneo_batch.notification_subscriber'] = new \Akeneo\Bundle\BatchBundle\EventListener\NotificationSubscriber();
    }

    /**
     * Gets the 'akeneo_batch.set_job_execution_log_file_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Akeneo\Bundle\BatchBundle\EventListener\SetJobExecutionLogFileSubscriber A Akeneo\Bundle\BatchBundle\EventListener\SetJobExecutionLogFileSubscriber instance.
     */
    protected function getAkeneoBatch_SetJobExecutionLogFileSubscriberService()
    {
        return $this->services['akeneo_batch.set_job_execution_log_file_subscriber'] = new \Akeneo\Bundle\BatchBundle\EventListener\SetJobExecutionLogFileSubscriber($this->get('akeneo_batch.logger.batch_log_handler'));
    }

    /**
     * Gets the 'akeneo_batch.step_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Akeneo\Bundle\BatchBundle\Step\StepFactory A Akeneo\Bundle\BatchBundle\Step\StepFactory instance.
     */
    protected function getAkeneoBatch_StepFactoryService()
    {
        return $this->services['akeneo_batch.step_factory'] = new \Akeneo\Bundle\BatchBundle\Step\StepFactory($this->get('debug.event_dispatcher'), $this->get('akeneo_batch.job_repository'));
    }

    /**
     * Gets the 'annotation_reader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Common\Annotations\FileCacheReader A Doctrine\Common\Annotations\FileCacheReader instance.
     */
    protected function getAnnotationReaderService()
    {
        return $this->services['annotation_reader'] = new \Doctrine\Common\Annotations\FileCacheReader(new \Doctrine\Common\Annotations\AnnotationReader(), 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/annotations', true);
    }

    /**
     * Gets the 'assetic.asset_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Assetic\Factory\LazyAssetManager A Assetic\Factory\LazyAssetManager instance.
     */
    public function getAssetic_AssetManagerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['assetic.asset_manager'] = new AsseticFactoryLazyAssetManager_000000002e47e44c00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getAssetic_AssetManagerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $a = $this->get('assetic.asset_factory');
        $b = $this->get('templating.loader');

        $c = new \Assetic\Cache\ConfigCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/assetic/config');

        $instance = new \Assetic\Factory\LazyAssetManager($a, array('config' => new \Symfony\Bundle\AsseticBundle\Factory\Loader\ConfigurationLoader(), 'twig' => new \Assetic\Factory\Loader\CachedFormulaLoader(new \Assetic\Extension\Twig\TwigFormulaLoader($this->get('twig')), $c, true), 'php' => new \Assetic\Factory\Loader\CachedFormulaLoader(new \Symfony\Bundle\AsseticBundle\Factory\Loader\AsseticHelperFormulaLoader($a), $c, true)));

        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\ConfigurationResource(array('tinymce' => array(0 => array(0 => 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/tinymce/tinymce/tinymce.min.js'), 1 => array(), 2 => array('output' => 'bundles/tinymce/tinymce.min.js')), 'tinymce_jquery' => array(0 => array(0 => 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/tinymce/tinymce/jquery.tinymce.min.js'), 1 => array(), 2 => array('output' => 'bundles/tinymce/jquery.tinymce.min.js')), 'tinymce_bdesk_photo' => array(0 => array(0 => 'bundles/oroform/lib/bdeskphoto/plugin.min.js'), 1 => array(), 2 => array('output' => 'bundles/tinymce/plugins/bdesk_photo/plugin.min.js')), 'tinymce_textcolor' => array(0 => array(0 => 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/tinymce/tinymce/plugins/textcolor/plugin.min.js'), 1 => array(), 2 => array('output' => 'bundles/tinymce/plugins/textcolor/plugin.min.js')), 'tinymce_link' => array(0 => array(0 => 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/tinymce/tinymce/plugins/link/plugin.min.js'), 1 => array(), 2 => array('output' => 'bundles/tinymce/plugins/link/plugin.min.js')), 'tinymce_code' => array(0 => array(0 => 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/tinymce/tinymce/plugins/code/plugin.min.js'), 1 => array(), 2 => array('output' => 'bundles/tinymce/plugins/code/plugin.min.js')), 'tinymce_theme_modern' => array(0 => array(0 => 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/tinymce/tinymce/themes/modern/theme.min.js'), 1 => array(), 2 => array('output' => 'bundles/tinymce/themes/modern/theme.min.js')), 'tinymce_skin_lightgray_skin' => array(0 => array(0 => 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/tinymce/tinymce/skins/lightgray/skin.min.css'), 1 => array(), 2 => array('output' => 'bundles/tinymce/skins/lightgray/skin.min.css')), 'tinymce_skin_lightgray_content' => array(0 => array(0 => 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/tinymce/tinymce/skins/lightgray/content.min.css'), 1 => array(), 2 => array('output' => 'bundles/tinymce/skins/lightgray/content.min.css')), 'tinymce_skin_lightgray_fonts_woff' => array(0 => array(0 => 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/tinymce/tinymce/skins/lightgray/fonts/tinymce.woff'), 1 => array(), 2 => array('output' => 'bundles/tinymce/skins/lightgray/fonts/tinymce.woff')), 'tinymce_skin_lightgray_fonts_ttf' => array(0 => array(0 => 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/tinymce/tinymce/skins/lightgray/fonts/tinymce.ttf'), 1 => array(), 2 => array('output' => 'bundles/tinymce/skins/lightgray/fonts/tinymce.ttf')), 'jquery' => array(0 => array(0 => 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/components/jquery/jquery.js'), 1 => array(), 2 => array('output' => 'bundles/components/jquery/jquery.js')), 'underscore' => array(0 => array(0 => 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/components/underscore/underscore.js'), 1 => array(), 2 => array('output' => 'bundles/components/underscore/underscore.js')), 'backbone' => array(0 => array(0 => 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/components/backbone/backbone.js'), 1 => array(), 2 => array('output' => 'bundles/components/backbone/backbone.js')))), 'config');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCacheBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroCacheBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCacheBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CacheBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCacheBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroCacheBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCacheBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CacheBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'FrameworkBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/FrameworkBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'FrameworkBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\FrameworkBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'FrameworkBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/FrameworkBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'FrameworkBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\FrameworkBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SecurityBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/SecurityBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SecurityBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\SecurityBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SecurityBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/SecurityBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SecurityBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\SecurityBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSyncBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroSyncBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSyncBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SyncBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSyncBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroSyncBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSyncBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SyncBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'TwigBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/TwigBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'TwigBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\TwigBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'TwigBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/TwigBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'TwigBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\TwigBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'MonologBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/MonologBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'MonologBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\monolog-bundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'MonologBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/MonologBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'MonologBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\monolog-bundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SwiftmailerBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/SwiftmailerBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SwiftmailerBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\swiftmailer-bundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SwiftmailerBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/SwiftmailerBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SwiftmailerBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\swiftmailer-bundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'AsseticBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/AsseticBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'AsseticBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\assetic-bundle\\Symfony\\Bundle\\AsseticBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'AsseticBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/AsseticBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'AsseticBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\assetic-bundle\\Symfony\\Bundle\\AsseticBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'DoctrineBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/DoctrineBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'DoctrineBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\doctrine\\doctrine-bundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'DoctrineBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/DoctrineBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'DoctrineBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\doctrine\\doctrine-bundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'DoctrineFixturesBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/DoctrineFixturesBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'DoctrineFixturesBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\doctrine\\doctrine-fixtures-bundle\\Doctrine\\Bundle\\FixturesBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'DoctrineFixturesBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/DoctrineFixturesBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'DoctrineFixturesBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\doctrine\\doctrine-fixtures-bundle\\Doctrine\\Bundle\\FixturesBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SensioFrameworkExtraBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/SensioFrameworkExtraBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SensioFrameworkExtraBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\sensio\\framework-extra-bundle\\Sensio\\Bundle\\FrameworkExtraBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SensioFrameworkExtraBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/SensioFrameworkExtraBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SensioFrameworkExtraBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\sensio\\framework-extra-bundle\\Sensio\\Bundle\\FrameworkExtraBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'JMSSerializerBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/JMSSerializerBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'JMSSerializerBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\jms\\serializer-bundle\\JMS\\SerializerBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'JMSSerializerBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/JMSSerializerBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'JMSSerializerBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\jms\\serializer-bundle\\JMS\\SerializerBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'KnpMenuBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/KnpMenuBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'KnpMenuBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\knplabs\\knp-menu-bundle\\Knp\\Bundle\\MenuBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'KnpMenuBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/KnpMenuBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'KnpMenuBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\knplabs\\knp-menu-bundle\\Knp\\Bundle\\MenuBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'FOSRestBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/FOSRestBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'FOSRestBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\friendsofsymfony\\rest-bundle\\FOS\\RestBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'FOSRestBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/FOSRestBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'FOSRestBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\friendsofsymfony\\rest-bundle\\FOS\\RestBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'FOSJsRoutingBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/FOSJsRoutingBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'FOSJsRoutingBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\friendsofsymfony\\jsrouting-bundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'FOSJsRoutingBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/FOSJsRoutingBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'FOSJsRoutingBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\friendsofsymfony\\jsrouting-bundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'NelmioApiDocBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/NelmioApiDocBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'NelmioApiDocBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\nelmio\\api-doc-bundle\\Nelmio\\ApiDocBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'NelmioApiDocBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/NelmioApiDocBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'NelmioApiDocBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\nelmio\\api-doc-bundle\\Nelmio\\ApiDocBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'BeSimpleSoapBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/BeSimpleSoapBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'BeSimpleSoapBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\besimple\\soap\\src\\BeSimple\\SoapBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'BeSimpleSoapBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/BeSimpleSoapBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'BeSimpleSoapBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\besimple\\soap\\src\\BeSimple\\SoapBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'StofDoctrineExtensionsBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/StofDoctrineExtensionsBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'StofDoctrineExtensionsBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\stof\\doctrine-extensions-bundle\\Stof\\DoctrineExtensionsBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'StofDoctrineExtensionsBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/StofDoctrineExtensionsBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'StofDoctrineExtensionsBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\stof\\doctrine-extensions-bundle\\Stof\\DoctrineExtensionsBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'EscapeWSSEAuthenticationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/EscapeWSSEAuthenticationBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'EscapeWSSEAuthenticationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\escapestudios\\wsse-authentication-bundle\\Escape\\WSSEAuthenticationBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'EscapeWSSEAuthenticationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/EscapeWSSEAuthenticationBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'EscapeWSSEAuthenticationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\escapestudios\\wsse-authentication-bundle\\Escape\\WSSEAuthenticationBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'LiipImagineBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/LiipImagineBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'LiipImagineBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\liip\\imagine-bundle\\Liip\\ImagineBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'LiipImagineBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/LiipImagineBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'LiipImagineBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\liip\\imagine-bundle\\Liip\\ImagineBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'GenemuFormBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/GenemuFormBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'GenemuFormBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\genemu\\form-bundle\\Genemu\\Bundle\\FormBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'GenemuFormBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/GenemuFormBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'GenemuFormBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\genemu\\form-bundle\\Genemu\\Bundle\\FormBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'A2lixTranslationFormBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/A2lixTranslationFormBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'A2lixTranslationFormBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\a2lix\\translation-form-bundle\\A2lix\\TranslationFormBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'A2lixTranslationFormBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/A2lixTranslationFormBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'A2lixTranslationFormBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\a2lix\\translation-form-bundle\\A2lix\\TranslationFormBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'LexikMaintenanceBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/LexikMaintenanceBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'LexikMaintenanceBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\lexik\\maintenance-bundle\\Lexik\\Bundle\\MaintenanceBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'LexikMaintenanceBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/LexikMaintenanceBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'LexikMaintenanceBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\lexik\\maintenance-bundle\\Lexik\\Bundle\\MaintenanceBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroLayoutBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroLayoutBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroLayoutBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\LayoutBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroLayoutBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroLayoutBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroLayoutBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\LayoutBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroUIBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroUIBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroUIBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UIBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroUIBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroUIBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroUIBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UIBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroOrganizationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroOrganizationBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroOrganizationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\OrganizationBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroOrganizationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroOrganizationBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroOrganizationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\OrganizationBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSecurityBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroSecurityBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSecurityBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SecurityBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSecurityBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroSecurityBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSecurityBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SecurityBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAttachmentBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroAttachmentBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAttachmentBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AttachmentBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAttachmentBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroAttachmentBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAttachmentBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AttachmentBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEmailBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroEmailBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEmailBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmailBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEmailBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroEmailBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEmailBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmailBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroUserBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroUserBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroUserBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UserBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroUserBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroUserBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroUserBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UserBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'HWIOAuthBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/HWIOAuthBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'HWIOAuthBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\hwi\\oauth-bundle\\HWI\\Bundle\\OAuthBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'HWIOAuthBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/HWIOAuthBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'HWIOAuthBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\hwi\\oauth-bundle\\HWI\\Bundle\\OAuthBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSSOBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroSSOBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSSOBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SSOBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSSOBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroSSOBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSSOBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SSOBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroEntityBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroEntityBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityConfigBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroEntityConfigBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityConfigBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityConfigBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityConfigBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroEntityConfigBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityConfigBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityConfigBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityExtendBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroEntityExtendBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityExtendBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityExtendBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityExtendBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroEntityExtendBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityExtendBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityExtendBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroIntegrationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroIntegrationBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroIntegrationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\IntegrationBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroIntegrationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroIntegrationBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroIntegrationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\IntegrationBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'AkeneoBatchBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/AkeneoBatchBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'AkeneoBatchBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\akeneo\\batch-bundle\\Akeneo\\Bundle\\BatchBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'AkeneoBatchBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/AkeneoBatchBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'AkeneoBatchBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\akeneo\\batch-bundle\\Akeneo\\Bundle\\BatchBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'JDareClankBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/JDareClankBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'JDareClankBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\jdare\\clank-bundle\\JDare\\ClankBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'JDareClankBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/JDareClankBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'JDareClankBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\jdare\\clank-bundle\\JDare\\ClankBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'JMSJobQueueBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/JMSJobQueueBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'JMSJobQueueBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\jms\\job-queue-bundle\\JMS\\JobQueueBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'JMSJobQueueBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/JMSJobQueueBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'JMSJobQueueBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\jms\\job-queue-bundle\\JMS\\JobQueueBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'KnpGaufretteBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/KnpGaufretteBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'KnpGaufretteBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\knplabs\\knp-gaufrette-bundle\\Knp\\Bundle\\GaufretteBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'KnpGaufretteBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/KnpGaufretteBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'KnpGaufretteBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\knplabs\\knp-gaufrette-bundle\\Knp\\Bundle\\GaufretteBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'MainStockValueBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/MainStockValueBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'MainStockValueBundle', 'C:\\wamp\\www\\stockvalue~~\\src\\Main\\StockValueBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'MainStockValueBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/MainStockValueBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'MainStockValueBundle', 'C:\\wamp\\www\\stockvalue~~\\src\\Main\\StockValueBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroActivityBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroActivityBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroActivityBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ActivityBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroActivityBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroActivityBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroActivityBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ActivityBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroActivityListBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroActivityListBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroActivityListBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ActivityListBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroActivityListBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroActivityListBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroActivityListBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ActivityListBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAddressBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroAddressBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAddressBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AddressBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAddressBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroAddressBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAddressBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AddressBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAsseticBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroAsseticBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAsseticBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AsseticBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAsseticBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroAsseticBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAsseticBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AsseticBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroBatchBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroBatchBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroBatchBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\BatchBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroBatchBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroBatchBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroBatchBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\BatchBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroBusinessEntitiesBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroBusinessEntitiesBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroBusinessEntitiesBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\BusinessEntitiesBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroBusinessEntitiesBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroBusinessEntitiesBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroBusinessEntitiesBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\BusinessEntitiesBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCalendarBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroCalendarBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCalendarBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CalendarBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCalendarBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroCalendarBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCalendarBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CalendarBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroChartBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroChartBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroChartBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ChartBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroChartBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroChartBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroChartBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ChartBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroConfigBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroConfigBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroConfigBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ConfigBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroConfigBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroConfigBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroConfigBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ConfigBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCronBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroCronBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCronBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CronBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCronBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroCronBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCronBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CronBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDataAuditBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroDataAuditBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDataAuditBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataAuditBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDataAuditBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroDataAuditBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDataAuditBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataAuditBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDataGridBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroDataGridBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDataGridBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataGridBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDataGridBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroDataGridBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDataGridBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataGridBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDistributionBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroDistributionBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDistributionBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DistributionBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDistributionBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroDistributionBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDistributionBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DistributionBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEmbeddedFormBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroEmbeddedFormBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEmbeddedFormBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEmbeddedFormBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroEmbeddedFormBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEmbeddedFormBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityMergeBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroEntityMergeBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityMergeBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityMergeBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityMergeBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroEntityMergeBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityMergeBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityMergeBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityPaginationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroEntityPaginationBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityPaginationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityPaginationBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityPaginationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroEntityPaginationBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroEntityPaginationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityPaginationBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroFilterBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroFilterBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroFilterBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FilterBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroFilterBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroFilterBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroFilterBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FilterBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroFormBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroFormBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroFormBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FormBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroFormBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroFormBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroFormBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FormBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroHelpBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroHelpBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroHelpBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\HelpBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroHelpBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroHelpBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroHelpBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\HelpBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroImapBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroImapBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroImapBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImapBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroImapBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroImapBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroImapBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImapBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroImportExportBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroImportExportBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroImportExportBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImportExportBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroImportExportBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroImportExportBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroImportExportBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImportExportBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroInstallerBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroInstallerBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroInstallerBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\InstallerBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroInstallerBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroInstallerBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroInstallerBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\InstallerBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroLocaleBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroLocaleBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroLocaleBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\LocaleBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroLocaleBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroLocaleBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroLocaleBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\LocaleBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroMigrationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroMigrationBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroMigrationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\MigrationBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroMigrationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroMigrationBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroMigrationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\MigrationBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNoteBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroNoteBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNoteBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NoteBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNoteBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroNoteBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNoteBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NoteBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNotificationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroNotificationBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNotificationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NotificationBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNotificationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroNotificationBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNotificationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NotificationBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroPlatformBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroPlatformBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroPlatformBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\PlatformBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroPlatformBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroPlatformBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroPlatformBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\PlatformBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroQueryDesignerBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroQueryDesignerBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroQueryDesignerBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\QueryDesignerBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroQueryDesignerBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroQueryDesignerBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroQueryDesignerBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\QueryDesignerBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroReportBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroReportBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroReportBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ReportBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroReportBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroReportBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroReportBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ReportBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroRequireJSBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroRequireJSBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroRequireJSBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\RequireJSBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroRequireJSBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroRequireJSBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroRequireJSBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\RequireJSBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSearchBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroSearchBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSearchBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SearchBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSearchBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroSearchBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSearchBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SearchBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSegmentBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroSegmentBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSegmentBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SegmentBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSegmentBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroSegmentBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSegmentBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SegmentBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSidebarBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroSidebarBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSidebarBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SidebarBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSidebarBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroSidebarBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSidebarBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SidebarBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSoapBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroSoapBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSoapBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SoapBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSoapBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroSoapBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroSoapBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SoapBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroTagBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroTagBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroTagBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TagBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroTagBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroTagBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroTagBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TagBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroThemeBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroThemeBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroThemeBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ThemeBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroThemeBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroThemeBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroThemeBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ThemeBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroTranslationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroTranslationBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroTranslationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TranslationBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroTranslationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroTranslationBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroTranslationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TranslationBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroWindowsBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroWindowsBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroWindowsBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\WindowsBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroWindowsBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroWindowsBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroWindowsBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\WindowsBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroWorkflowBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroWorkflowBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroWorkflowBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\WorkflowBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroWorkflowBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroWorkflowBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroWorkflowBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\WorkflowBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SecurityStockValueBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/SecurityStockValueBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SecurityStockValueBundle', 'C:\\wamp\\www\\stockvalue~~\\src\\Security\\StockValueBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SecurityStockValueBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/SecurityStockValueBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SecurityStockValueBundle', 'C:\\wamp\\www\\stockvalue~~\\src\\Security\\StockValueBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SyliusFlowBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/SyliusFlowBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SyliusFlowBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\sylius\\flow-bundle\\Sylius\\Bundle\\FlowBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SyliusFlowBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/SyliusFlowBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SyliusFlowBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\sylius\\flow-bundle\\Sylius\\Bundle\\FlowBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCommentBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroCommentBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCommentBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CommentBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCommentBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroCommentBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroCommentBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CommentBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDashboardBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroDashboardBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDashboardBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DashboardBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDashboardBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroDashboardBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroDashboardBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DashboardBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNavigationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroNavigationBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNavigationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NavigationBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNavigationBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroNavigationBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNavigationBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NavigationBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroTrackingBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroTrackingBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroTrackingBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TrackingBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroTrackingBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroTrackingBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroTrackingBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TrackingBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroReminderBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroReminderBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroReminderBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ReminderBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroReminderBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/OroReminderBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroReminderBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ReminderBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'WebProfilerBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/WebProfilerBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'WebProfilerBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\WebProfilerBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'WebProfilerBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/WebProfilerBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'WebProfilerBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\WebProfilerBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SensioDistributionBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/SensioDistributionBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SensioDistributionBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\sensio\\distribution-bundle\\Sensio\\Bundle\\DistributionBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SensioDistributionBundle', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/SensioDistributionBundle/views', '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'SensioDistributionBundle', 'C:\\wamp\\www\\stockvalue~~\\vendor\\sensio\\distribution-bundle\\Sensio\\Bundle\\DistributionBundle/Resources/views', '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, '', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/views', '/\\.[^.]+\\.twig$/'), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, '', 'C:\\wamp\\www\\stockvalue~~\\app/Resources/views', '/\\.[^.]+\\.php$/'), 'php');

        return $instance;
    }

    /**
     * Gets the 'assetic.filter.cssmin' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Assetic\Filter\CssMinFilter A Assetic\Filter\CssMinFilter instance.
     */
    protected function getAssetic_Filter_CssminService()
    {
        require_once 'C:\\wamp\\www\\stockvalue~~\\app/Resources/php/cssmin-v3.0.1.php';

        $this->services['assetic.filter.cssmin'] = $instance = new \Assetic\Filter\CssMinFilter();

        $instance->setFilters(array());
        $instance->setPlugins(array());

        return $instance;
    }

    /**
     * Gets the 'assetic.filter.cssrewrite' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Assetic\Filter\CssRewriteFilter A Assetic\Filter\CssRewriteFilter instance.
     */
    protected function getAssetic_Filter_CssrewriteService()
    {
        return $this->services['assetic.filter.cssrewrite'] = new \Assetic\Filter\CssRewriteFilter();
    }

    /**
     * Gets the 'assetic.filter.lessphp' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Assetic\Filter\LessphpFilter A Assetic\Filter\LessphpFilter instance.
     */
    protected function getAssetic_Filter_LessphpService()
    {
        require_once 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/leafo/lessphp/lessc.inc.php';

        $this->services['assetic.filter.lessphp'] = $instance = new \Assetic\Filter\LessphpFilter();

        $instance->setPresets(array());
        $instance->setLoadPaths(array());
        $instance->setFormatter(NULL);
        $instance->setPreserveComments(NULL);

        return $instance;
    }

    /**
     * Gets the 'assetic.filter_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\AsseticBundle\FilterManager A Symfony\Bundle\AsseticBundle\FilterManager instance.
     */
    protected function getAssetic_FilterManagerService()
    {
        return $this->services['assetic.filter_manager'] = new \Symfony\Bundle\AsseticBundle\FilterManager($this, array('cssrewrite' => 'assetic.filter.cssrewrite', 'lessphp' => 'assetic.filter.lessphp', 'cssmin' => 'assetic.filter.cssmin'));
    }

    /**
     * Gets the 'assetic.helper.static' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\AsseticBundle\Templating\StaticAsseticHelper A Symfony\Bundle\AsseticBundle\Templating\StaticAsseticHelper instance.
     * 
     * @throws InactiveScopeException when the 'assetic.helper.static' service is requested while the 'request' scope is not active
     */
    protected function getAssetic_Helper_StaticService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('assetic.helper.static', 'request');
        }

        return $this->services['assetic.helper.static'] = $this->scopedServices['request']['assetic.helper.static'] = new \Symfony\Bundle\AsseticBundle\Templating\StaticAsseticHelper($this->get('templating.helper.assets'), $this->get('assetic.asset_factory'));
    }

    /**
     * Gets the 'assets.context' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Asset\Context\RequestStackContext A Symfony\Component\Asset\Context\RequestStackContext instance.
     */
    protected function getAssets_ContextService()
    {
        return $this->services['assets.context'] = new \Symfony\Component\Asset\Context\RequestStackContext($this->get('request_stack'));
    }

    /**
     * Gets the 'assets.packages' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Asset\Packages A Symfony\Component\Asset\Packages instance.
     */
    protected function getAssets_PackagesService()
    {
        return $this->services['assets.packages'] = new \Symfony\Component\Asset\Packages(new \Symfony\Component\Asset\PathPackage('', new \Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy(), $this->get('assets.context')), array());
    }

    /**
     * Gets the 'attachments_filesystem' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Gaufrette\Filesystem A Gaufrette\Filesystem instance.
     */
    protected function getAttachmentsFilesystemService()
    {
        return $this->services['attachments_filesystem'] = new \Gaufrette\Filesystem(new \Gaufrette\Adapter\Local('C:\\wamp\\www\\stockvalue~~\\app/attachment', true));
    }

    /**
     * Gets the 'besimple.soap.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \BeSimple\SoapBundle\Cache A BeSimple\SoapBundle\Cache instance.
     */
    protected function getBesimple_Soap_CacheService()
    {
        return $this->services['besimple.soap.cache'] = new \BeSimple\SoapBundle\Cache(true, 1, 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/besimple/soap/php', 86400, 5);
    }

    /**
     * Gets the 'besimple.soap.context.soap' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \BeSimple\SoapBundle\WebServiceContext A BeSimple\SoapBundle\WebServiceContext instance.
     */
    protected function getBesimple_Soap_Context_SoapService()
    {
        return $this->services['besimple.soap.context.soap'] = new \BeSimple\SoapBundle\WebServiceContext($this->get('besimple.soap.definition.loader'), $this->get('besimple.soap.converter.collection'), array('cache_dir' => 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/besimple/soap', 'debug' => true, 'cache_type' => NULL, 'binder_request_header_class' => 'BeSimple\\SoapBundle\\ServiceBinding\\RpcLiteralRequestHeaderMessageBinder', 'binder_request_class' => 'BeSimple\\SoapBundle\\ServiceBinding\\RpcLiteralRequestMessageBinder', 'binder_response_class' => 'BeSimple\\SoapBundle\\ServiceBinding\\RpcLiteralResponseMessageBinder', 'wsdl_stylesheet' => NULL, 'namespace' => 'urn:OroPlatform', 'resource' => '.', 'resource_type' => 'oro_soap', 'name' => 'soap'), $this->get('besimple.soap.cache'));
    }

    /**
     * Gets the 'besimple.soap.converter.collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \BeSimple\SoapCommon\Converter\TypeConverterCollection A BeSimple\SoapCommon\Converter\TypeConverterCollection instance.
     */
    protected function getBesimple_Soap_Converter_CollectionService()
    {
        $this->services['besimple.soap.converter.collection'] = $instance = new \BeSimple\SoapCommon\Converter\TypeConverterCollection();

        $instance->add(new \BeSimple\SoapCommon\Converter\DateTimeTypeConverter());
        $instance->add(new \BeSimple\SoapCommon\Converter\DateTypeConverter());

        return $instance;
    }

    /**
     * Gets the 'besimple.soap.definition.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Config\Loader\DelegatingLoader A Symfony\Component\Config\Loader\DelegatingLoader instance.
     */
    protected function getBesimple_Soap_Definition_LoaderService()
    {
        $a = $this->get('annotation_reader');
        $b = $this->get('besimple.soap.type.repository');
        $c = $this->get('file_locator');

        $d = new \BeSimple\SoapBundle\ServiceDefinition\Loader\AnnotationClassLoader($a, $b);

        $e = new \Symfony\Component\Config\Loader\LoaderResolver();
        $e->addLoader(new \BeSimple\SoapBundle\ServiceDefinition\Loader\AnnotationFileLoader($c, $d));
        $e->addLoader($d);
        $e->addLoader(new \BeSimple\SoapBundle\ServiceDefinition\Loader\AnnotationComplexTypeLoader($a, $b));
        $e->addLoader(new \Oro\Bundle\SoapBundle\ServiceDefinition\Loader\OroSoapLoader($c, $d, array(0 => 'Oro\\Bundle\\OrganizationBundle\\Controller\\Api\\Soap\\BusinessUnitController', 1 => 'Oro\\Bundle\\OrganizationBundle\\Controller\\Api\\Soap\\OrganizationController', 2 => 'Oro\\Bundle\\EmailBundle\\Controller\\Api\\Soap\\EmailController', 3 => 'Oro\\Bundle\\UserBundle\\Controller\\Api\\Soap\\UserController', 4 => 'Oro\\Bundle\\UserBundle\\Controller\\Api\\Soap\\RoleController', 5 => 'Oro\\Bundle\\UserBundle\\Controller\\Api\\Soap\\GroupController', 6 => 'Oro\\Bundle\\ActivityListBundle\\Controller\\Api\\Soap\\ActivityListController', 7 => 'Oro\\Bundle\\AddressBundle\\Controller\\Api\\Soap\\AddressTypeController', 8 => 'Oro\\Bundle\\AddressBundle\\Controller\\Api\\Soap\\CountryController', 9 => 'Oro\\Bundle\\AddressBundle\\Controller\\Api\\Soap\\RegionController', 10 => 'Oro\\Bundle\\CalendarBundle\\Controller\\Api\\Soap\\CalendarConnectionController', 11 => 'Oro\\Bundle\\DataAuditBundle\\Controller\\Api\\Soap\\AuditController', 12 => 'Oro\\Bundle\\NoteBundle\\Controller\\Api\\Soap\\NoteController', 13 => 'Oro\\Bundle\\SearchBundle\\Controller\\Api\\SoapController')));

        return $this->services['besimple.soap.definition.loader'] = new \Symfony\Component\Config\Loader\DelegatingLoader($e);
    }

    /**
     * Gets the 'besimple.soap.exception_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \BeSimple\SoapBundle\EventListener\SoapExceptionListener A BeSimple\SoapBundle\EventListener\SoapExceptionListener instance.
     */
    protected function getBesimple_Soap_ExceptionListenerService()
    {
        return $this->services['besimple.soap.exception_listener'] = new \BeSimple\SoapBundle\EventListener\SoapExceptionListener($this, 'BeSimpleSoapBundle:SoapWebService:exception', $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'besimple.soap.request_format.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \BeSimple\SoapBundle\EventListener\RequestFormatListener A BeSimple\SoapBundle\EventListener\RequestFormatListener instance.
     */
    protected function getBesimple_Soap_RequestFormat_ListenerService()
    {
        return $this->services['besimple.soap.request_format.listener'] = new \BeSimple\SoapBundle\EventListener\RequestFormatListener();
    }

    /**
     * Gets the 'besimple.soap.response' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \BeSimple\SoapBundle\Soap\SoapResponse A BeSimple\SoapBundle\Soap\SoapResponse instance.
     */
    protected function getBesimple_Soap_ResponseService()
    {
        return $this->services['besimple.soap.response'] = new \BeSimple\SoapBundle\Soap\SoapResponse();
    }

    /**
     * Gets the 'besimple.soap.response.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \BeSimple\SoapBundle\EventListener\SoapResponseListener A BeSimple\SoapBundle\EventListener\SoapResponseListener instance.
     */
    protected function getBesimple_Soap_Response_ListenerService()
    {
        return $this->services['besimple.soap.response.listener'] = new \BeSimple\SoapBundle\EventListener\SoapResponseListener($this->get('besimple.soap.response'));
    }

    /**
     * Gets the 'besimple.soap.type.repository' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \BeSimple\SoapCommon\Definition\Type\TypeRepository A BeSimple\SoapCommon\Definition\Type\TypeRepository instance.
     */
    protected function getBesimple_Soap_Type_RepositoryService()
    {
        $this->services['besimple.soap.type.repository'] = $instance = new \BeSimple\SoapCommon\Definition\Type\TypeRepository(new \BeSimple\SoapServer\Classmap());

        $instance->addXmlNamespace('xsd', 'http://www.w3.org/2001/XMLSchema');
        $instance->addType('string', 'xsd:string');
        $instance->addType('boolean', 'xsd:boolean');
        $instance->addType('int', 'xsd:int');
        $instance->addType('float', 'xsd:float');
        $instance->addType('date', 'xsd:date');
        $instance->addType('dateTime', 'xsd:dateTime');

        return $instance;
    }

    /**
     * Gets the 'cache_clearer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer A Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer instance.
     */
    protected function getCacheClearerService()
    {
        return $this->services['cache_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer(array(0 => $this->get('liip_imagine.cache.clearer'), 1 => new \Oro\Bundle\SecurityBundle\Cache\OwnershipMetadataCacheClearer($this->get('oro_security.owner.metadata_provider.chain')), 2 => new \Oro\Bundle\SecurityBundle\Cache\AclAnnotationCacheClearer($this->get('oro_security.acl.annotation_provider')), 3 => new \Oro\Bundle\SecurityBundle\Cache\ActionMetadataCacheClearer($this->get('oro_security.action_metadata_provider')), 4 => new \Oro\Bundle\SecurityBundle\Cache\EntitySecurityMetadataCacheClearer($this->get('oro_security.entity_security_metadata_provider')), 5 => new \Oro\Bundle\SecurityBundle\Cache\OwnerTreeCacheCleaner($this->get('oro_security.ownership_tree_provider.chain')), 6 => $this->get('oro_email.entity.cache.clearer')));
    }

    /**
     * Gets the 'cache_warmer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate A Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate instance.
     */
    protected function getCacheWarmerService()
    {
        return $this->services['cache_warmer'] = new \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate(array(0 => $this->get('oro_email.entity.cache.warmer'), 1 => new \Oro\Bundle\EntityBundle\Cache\LoggingHydratorWarmer(array(1 => array('name' => 'ObjectHydrator', 'class' => 'Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator', 'loggingClass' => 'OroLoggingHydrator\\LoggingObjectHydrator'), 2 => array('name' => 'ArrayHydrator', 'class' => 'Doctrine\\ORM\\Internal\\Hydration\\ArrayHydrator', 'loggingClass' => 'OroLoggingHydrator\\LoggingArrayHydrator'), 3 => array('name' => 'ScalarHydrator', 'class' => 'Doctrine\\ORM\\Internal\\Hydration\\ScalarHydrator', 'loggingClass' => 'OroLoggingHydrator\\LoggingScalarHydrator'), 4 => array('name' => 'SingleScalarHydrator', 'class' => 'Doctrine\\ORM\\Internal\\Hydration\\SingleScalarHydrator', 'loggingClass' => 'OroLoggingHydrator\\LoggingSingleScalarHydrator'), 5 => array('name' => 'SimpleObjectHydrator', 'class' => 'Doctrine\\ORM\\Internal\\Hydration\\SimpleObjectHydrator', 'loggingClass' => 'OroLoggingHydrator\\LoggingSimpleObjectHydrator'), '__gedmo.translatable.object.hydrator' => array('name' => 'TranslatableObjectHydrator', 'class' => 'Gedmo\\Translatable\\Hydrator\\ORM\\ObjectHydrator', 'loggingClass' => 'OroLoggingHydrator\\LoggingTranslatableObjectHydrator'), '__gedmo.translatable.simple_object.hydrator' => array('name' => 'TranslatableSimpleObjectHydrator', 'class' => 'Gedmo\\Translatable\\Hydrator\\ORM\\SimpleObjectHydrator', 'loggingClass' => 'OroLoggingHydrator\\LoggingTranslatableSimpleObjectHydrator'))), 2 => new \Oro\Bundle\EntityExtendBundle\Cache\EntityCacheWarmer($this->get('oro_entity_extend.tools.dumper'), $this->get('oro_entity_config.config_manager')), 3 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer(new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder($this->get('kernel'), $this->get('templating.filename_parser'), 'C:\\wamp\\www\\stockvalue~~\\app/Resources'), $this->get('templating.locator')), 4 => new \Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer($this), 5 => new \Oro\Bundle\SecurityBundle\Cache\AclAnnotationCacheWarmer($this->get('oro_security.acl.annotation_provider')), 6 => new \Oro\Bundle\SecurityBundle\Cache\ActionMetadataCacheWarmer($this->get('oro_security.action_metadata_provider')), 7 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer($this->get('translator.default')), 8 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer($this->get('router')), 9 => new \Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer($this->get('doctrine')), 10 => new \Oro\Bundle\LayoutBundle\CacheWarmer\LayoutUpdatesWarmer(array('embedded_default' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle\\Resources\\views\\layouts\\embedded_default\\default.yml', 'oro_embedded_form_submit' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle\\Resources\\views\\layouts\\embedded_default\\oro_embedded_form_submit\\default.yml', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle\\Resources\\views\\layouts\\embedded_default\\oro_embedded_form_submit\\default_legacy.yml'), 'oro_embedded_form_success' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle\\Resources\\views\\layouts\\embedded_default\\oro_embedded_form_success\\default.yml'))), $this->get('oro_layout.loader')), 11 => new \Oro\Bundle\SecurityBundle\Cache\OwnershipMetadataCacheWarmer($this->get('oro_security.owner.metadata_provider.chain')), 12 => new \Oro\Bundle\SecurityBundle\Cache\EntitySecurityMetadataCacheWarmer($this->get('oro_security.entity_security_metadata_provider')), 13 => new \Oro\Bundle\SecurityBundle\Cache\OwnerTreeCacheWarmer($this->get('oro_security.ownership_tree_provider.chain')), 14 => $this->get('oro_entity.entity_alias.cache.warmer')));
    }

    /**
     * Gets the 'clank.client_event.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JDare\ClankBundle\Event\AcmeClientEventListener A JDare\ClankBundle\Event\AcmeClientEventListener instance.
     */
    protected function getClank_ClientEvent_ListenerService()
    {
        return $this->services['clank.client_event.listener'] = new \JDare\ClankBundle\Event\AcmeClientEventListener();
    }

    /**
     * Gets the 'data_collector.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\DataCollector\FormDataCollector A Symfony\Component\Form\Extension\DataCollector\FormDataCollector instance.
     */
    protected function getDataCollector_FormService()
    {
        return $this->services['data_collector.form'] = new \Symfony\Component\Form\Extension\DataCollector\FormDataCollector($this->get('data_collector.form.extractor'));
    }

    /**
     * Gets the 'data_collector.form.extractor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\DataCollector\FormDataExtractor A Symfony\Component\Form\Extension\DataCollector\FormDataExtractor instance.
     */
    protected function getDataCollector_Form_ExtractorService()
    {
        return $this->services['data_collector.form.extractor'] = new \Symfony\Component\Form\Extension\DataCollector\FormDataExtractor();
    }

    /**
     * Gets the 'data_collector.request' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\DataCollector\RequestDataCollector A Symfony\Component\HttpKernel\DataCollector\RequestDataCollector instance.
     */
    protected function getDataCollector_RequestService()
    {
        return $this->services['data_collector.request'] = new \Symfony\Component\HttpKernel\DataCollector\RequestDataCollector();
    }

    /**
     * Gets the 'data_collector.router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector A Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector instance.
     */
    protected function getDataCollector_RouterService()
    {
        return $this->services['data_collector.router'] = new \Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector();
    }

    /**
     * Gets the 'data_collector.translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\DataCollector\TranslationDataCollector A Symfony\Component\Translation\DataCollector\TranslationDataCollector instance.
     */
    protected function getDataCollector_TranslationService()
    {
        return $this->services['data_collector.translation'] = new \Symfony\Component\Translation\DataCollector\TranslationDataCollector($this->get('translator'));
    }

    /**
     * Gets the 'debug.controller_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\TraceableControllerResolver A Symfony\Component\HttpKernel\Controller\TraceableControllerResolver instance.
     */
    protected function getDebug_ControllerResolverService()
    {
        return $this->services['debug.controller_resolver'] = new \Symfony\Component\HttpKernel\Controller\TraceableControllerResolver(new \Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver($this, $this->get('controller_name_converter'), $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE)), $this->get('debug.stopwatch'));
    }

    /**
     * Gets the 'debug.debug_handlers_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener A Symfony\Component\HttpKernel\EventListener\DebugHandlersListener instance.
     */
    protected function getDebug_DebugHandlersListenerService()
    {
        return $this->services['debug.debug_handlers_listener'] = new \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener('', $this->get('monolog.logger.php', ContainerInterface::NULL_ON_INVALID_REFERENCE), NULL, NULL, true, NULL);
    }

    /**
     * Gets the 'debug.event_dispatcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher A Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher instance.
     */
    protected function getDebug_EventDispatcherService()
    {
        $this->services['debug.event_dispatcher'] = $instance = new \Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher(new \Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher($this), $this->get('debug.stopwatch'), $this->get('monolog.logger.event', ContainerInterface::NULL_ON_INVALID_REFERENCE));

        $instance->addListenerService('kernel.controller', array(0 => 'data_collector.router', 1 => 'onKernelController'), 0);
        $instance->addListenerService('maintenance.on', array(0 => 'kernel.listener.maintenance.event', 1 => 'onModeOn'), 0);
        $instance->addListenerService('maintenance.off', array(0 => 'kernel.listener.maintenance.event', 1 => 'onModeOff'), 0);
        $instance->addListenerService('kernel.response', array(0 => 'monolog.handler.firephp', 1 => 'onKernelResponse'), 0);
        $instance->addListenerService('kernel.response', array(0 => 'monolog.handler.chromephp', 1 => 'onKernelResponse'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'knp_menu.listener.voters', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'fos_rest.body_listener', 1 => 'onKernelRequest'), 10);
        $instance->addListenerService('kernel.request', array(0 => 'fos_rest.format_listener', 1 => 'onKernelRequest'), 34);
        $instance->addListenerService('kernel.request', array(0 => 'nelmio_api_doc.event_listener.request', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'besimple.soap.request_format.listener', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('kernel.view', array(0 => 'besimple.soap.response.listener', 1 => 'onKernelView'), 0);
        $instance->addListenerService('kernel.controller', array(0 => 'a2lix_translation_form.listener.controller', 1 => 'onKernelController'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'lexik_maintenance.listener', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('kernel.view', array(0 => 'oro_layout.view.listener', 1 => 'onKernelView'), 10);
        $instance->addListenerService('kernel.view', array(0 => 'oro_ui.view.listener', 1 => 'onKernelView'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'oro_ui.view.content_provider.listener', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('oro_importexport.strategy.process_after', array(0 => 'oro_organization.import_strategy.listener', 1 => 'onProcessAfter'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.before.business-unit-grid', array(0 => 'oro_organization.event.business_unit_grid_listener', 1 => 'onBuildBefore'), 0);
        $instance->addListenerService('entity_form.render.before', array(0 => 'oro_organization.form.listener', 1 => 'addOwnerField'), 0);
        $instance->addListenerService('kernel.controller', array(0 => 'oro_security.listener.controller', 1 => 'onKernelController'), -1);
        $instance->addListenerService('kernel.request', array(0 => 'oro_security.listener.context_listener', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('oro_api.request.get_list.before', array(0 => 'oro_security.listener.api_listener', 1 => 'onGetListBefore'), 0);
        $instance->addListenerService('oro_api.request.find.after', array(0 => 'oro_security.listener.api_listener', 1 => 'onFindAfter'), 0);
        $instance->addListenerService('console.command', array(0 => 'oro_security.listener.console_context_listener', 1 => 'onConsoleCommand'), 0);
        $instance->addListenerService('oro_search.prepare_entity_map', array(0 => 'oro_security.listener.search_listener', 1 => 'prepareEntityMapEvent'), 100);
        $instance->addListenerService('oro_search.search_mapping_collect', array(0 => 'oro_security.listener.search_listener', 1 => 'collectEntityMapEvent'), -100);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.attachment-grid', array(0 => 'oro_attachment.event_listener.attachment_grid_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.before.attachment-grid', array(0 => 'oro_attachment.event_listener.attachment_grid_listener', 1 => 'onBuildBefore'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.base-email-grid', array(0 => 'oro_email.listener.datagrid.email', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.activity-email-grid', array(0 => 'oro_email.listener.datagrid.activity', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.dashboard-recent-emails-inbox-grid', array(0 => 'oro_email.listener.datagrid.recent_emails.inbox', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.dashboard-recent-emails-sent-grid', array(0 => 'oro_email.listener.datagrid.recent_emails.sent', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.dashboard-recent-emails-new-grid', array(0 => 'oro_email.listener.datagrid.recent_emails.new', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_search.prepare_entity_map', array(0 => 'oro_email.listener.search_listener', 1 => 'prepareEntityMapEvent'), 10);
        $instance->addListenerService('oro_email.email_body_added', array(0 => 'oro_email.listener.email_body_add_listener', 1 => 'linkToScope'), 10);
        $instance->addListenerService('oro_email.email_body_added', array(0 => 'oro_email.listener.email_body_add_listener', 1 => 'updateActivityDescription'), 20);
        $instance->addListenerService('oro_email.email_body_loaded', array(0 => 'oro_email.listener.replace_embedded_attachments_listener', 1 => 'replace'), 0);
        $instance->addListenerService('kernel.controller', array(0 => 'oro_email.listener.mailbox.authorization', 1 => 'onKernelController'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.pre', array(0 => 'oro_email.listener.datagrid.mailbox_grid', 1 => 'onPreBuild'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.base-mailboxes-grid', array(0 => 'oro_email.listener.datagrid.mailbox_grid', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('security.interactive_login', array(0 => 'oro_user.security.login', 1 => 'onLogin'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.before.owner-users-select-grid', array(0 => 'oro_user.event_listener.owner_user_grid_listener', 1 => 'onBuildBefore'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.users-for-context-grid', array(0 => 'oro_email.listener.datagrid.context.user', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_menu.configure.application_menu', array(0 => 'oro_entity.listener.navigation_listener', 1 => 'onNavigationConfigure'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.before.custom-entity-grid', array(0 => 'oro_entity.event_listener.custom_entity_grid_listener', 1 => 'onBuildBefore'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.before.entity-relation-grid', array(0 => 'oro_entity.event_listener.entity_relation_grid_listener', 1 => 'onBuildBefore'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.entity-relation-grid', array(0 => 'oro_entity.event_listener.entity_relation_grid_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.audit-log-grid', array(0 => 'oro_entity_config.event_listener.audit_log_grid_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.auditfield-log-grid', array(0 => 'oro_entity_config.event_listener.audit_log_grid_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.before.auditfield-log-grid', array(0 => 'oro_entity_config.event_listener.audit_log_grid_listener', 1 => 'onBuildBefore'), 0);
        $instance->addListenerService('oro_migration.post_up', array(0 => 'oro_entity_config.migration.post_up.listener', 1 => 'onPostUp'), -90);
        $instance->addListenerService('oro_migration.post_up', array(0 => 'oro_entity_extend.migration.refresh_cache_before_entity_config_update.post_up.listener', 1 => 'onPostUp'), -85);
        $instance->addListenerService('oro_migration.post_up', array(0 => 'oro_entity_extend.migration.update_config.post_up.listener', 1 => 'onPostUp'), -100);
        $instance->addListenerService('oro_migration.post_up', array(0 => 'oro_entity_extend.migration.update_indices.post_up.listener', 1 => 'onPostUp'), -120);
        $instance->addListenerService('oro.entity_extend_event.before_value_render', array(0 => 'oro_entity_extend.listener.extend_field_value_render', 1 => 'beforeValueRender'), 0);
        $instance->addListenerService('oro_search.search_mapping_collect', array(0 => 'oro_entity_extend.listener.before_map_object_search_listener', 1 => 'prepareEntityMapEvent'), 0);
        $instance->addListenerService('entity_config.persist.config', array(0 => 'oro_entity_extend.listener.search_entity_config_listener', 1 => 'persistConfig'), -255);
        $instance->addListenerService('oro_datagrid.datagrid.build.before.oro-integration-status-grid', array(0 => 'oro_integration.datagrid.status_grid_helper', 1 => 'statusGridBuildBefore'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.oro-integration-status-grid', array(0 => 'oro_integration.datagrid.status_grid_helper', 1 => 'statusGridBuildAfter'), 0);
        $instance->addListenerService('oro_integration.writer_after_flush', array(0 => 'oro_integration.event_listener.keep_avile', 1 => 'onWriterAfterFlush'), 0);
        $instance->addListenerService('oro.ui.grouping_chain_widget.before', array(0 => 'oro_activity_list.placeholder.filter', 1 => 'isAllowedButton'), 0);
        $instance->addListenerService('oro_segment.widget_options_load', array(0 => 'oro_activity_list.event_listener.segment_widget_options_listener', 1 => 'onLoad'), 0);
        $instance->addListenerService('oro_segment.condition_builder_options_load', array(0 => 'oro_activity_list.event_listener.segment_condition_builder_options_listener', 1 => 'onLoad'), 0);
        $instance->addListenerService('oro_migration.post_up', array(0 => 'oro_activity_list.migration.activity_list.post_up.listener', 1 => 'onPostUp'), -110);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.activity-calendar-event-grid', array(0 => 'oro_calendar.listener.datagrid.activity', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.before.system-calendar-grid', array(0 => 'oro_calendar.listener.datagrid.system_calendar', 1 => 'onBuildBefore'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.system-calendar-grid', array(0 => 'oro_calendar.listener.datagrid.system_calendar', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_menu.configure.application_menu', array(0 => 'oro_calendar.event_listener.navigation', 1 => 'onNavigationConfigure'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'oro_dataaudit.listener.kernel_listener', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.audit-history-grid', array(0 => 'oro_dataaudit.event_listener.dataaudit_history_grid_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_segment.widget_options_load', array(0 => 'oro_dataaudit.event_listener.segment_widget_options_listener', 1 => 'onLoad'), 0);
        $instance->addListenerService('oro_segment.condition_builder_options_load', array(0 => 'oro_dataaudit.event_listener.segment_condition_builder_options_listener', 1 => 'onLoad'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after', array(0 => 'oro_datagrid.event_listener.datasource_bind_parameters', 1 => 'onBuildAfter'), 255);
        $instance->addListenerService('oro_datagrid.orm_datasource.result.before', array(0 => 'oro_datagrid.event_listener.ormdatasource_acl', 1 => 'onResultBefore'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after', array(0 => 'oro_datagrid.event_listener.row_selection', 1 => 'onBuildAfter'), 255);
        $instance->addListenerService('oro_datagrid.datagrid.build.after', array(0 => 'oro_datagrid.event_listener.cell_selection', 1 => 'onBuildAfter'), 255);
        $instance->addListenerService('oro_datagrid.grid_views_load', array(0 => 'oro_datagrid.event_listener.grid_views_load', 1 => 'onViewsLoad'), 0);
        $instance->addListenerService('oro_menu.configure.application_menu', array(0 => 'oro_distribution.listener.navigation_listener', 1 => 'onNavigationConfigure'), 0);
        $instance->addListenerService('oro.entity_merge.build_metadata', array(0 => 'oro_entity_merge.listener.metadata.entity_config', 1 => 'onCreateMetadata'), 1000);
        $instance->addListenerService('oro.entity_merge.build_metadata', array(0 => 'oro_entity_merge.listener.metadata.default_label', 1 => 'onCreateMetadata'), -1000);
        $instance->addListenerService('oro.entity_merge.build_metadata', array(0 => 'oro_entity_merge.listener.metadata.merge_modes', 1 => 'onCreateMetadata'), -1000);
        $instance->addListenerService('oro.entity_merge.after_merge_field', array(0 => 'oro_entity_merge.listener.merge_field.cascade_remove_association', 1 => 'afterMergeField'), 0);
        $instance->addListenerService('oro.entity_merge.before_value_render', array(0 => 'oro_entity_merge.listener.render.localized_value_render', 1 => 'beforeValueRender'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.before', array(0 => 'oro_entity_merge.mass_action.merge_mass_action_listener', 1 => 'onBuildBefore'), 0);
        $instance->addListenerService('oro_datagrid.orm_datasource.result.after', array(0 => 'oro_entity_pagination.event_listener.entity_pagination', 1 => 'onResultAfter'), 0);
        $instance->addListenerService('kernel.controller', array(0 => 'oro_help.listener.help_link', 1 => 'onKernelController'), -200);
        $instance->addListenerService('kernel.request', array(0 => 'kernel.listener.install.event', 1 => 'onRequest'), 10);
        $instance->addListenerService('oro_migration.pre_up', array(0 => 'oro_migration.migration.pre_up.listener', 1 => 'onPreUp'), 0);
        $instance->addListenerService('oro_migration.pre_up', array(0 => 'oro_migration.listener.release_data_fixture', 1 => 'onPreUp'), 0);
        $instance->addListenerService('oro_migration.post_up', array(0 => 'oro_migration.listener.release_data_fixture', 1 => 'onPostUp'), 0);
        $instance->addListenerService('console.command', array(0 => 'oro_migration.listener.console_command_listener', 1 => 'onConsoleCommand'), 0);
        $instance->addListenerService('console.terminate', array(0 => 'oro_platform.event_listener.driver_lock', 1 => 'afterExecute'), 0);
        $instance->addListenerService('console.command', array(0 => 'oro_platform.event_listener.optional_listeners', 1 => 'onConsoleCommand'), 0);
        $instance->addListenerService('oro_menu.configure.application_menu', array(0 => 'oro_report.listener.navigation_listener', 1 => 'onNavigationConfigure'), 0);
        $instance->addListenerService('oro_search.prepare_result_item', array(0 => 'oro_search.prepare_result_item.listener', 1 => 'process'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.search-grid', array(0 => 'oro_search.event_listener.search_results_grid_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('console.terminate', array(0 => 'oro_search.event_listener.update_schema_listener', 1 => 'onConsoleTerminate'), 0);
        $instance->addListenerService('console.command', array(0 => 'oro_search.event_listener.demo_data_listener', 1 => 'onConsoleCommand'), 0);
        $instance->addListenerService('console.terminate', array(0 => 'oro_search.event_listener.demo_data_listener', 1 => 'onConsoleTerminate'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'oro_sidebar.request.handler', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after.tag-results-grid', array(0 => 'oro_tag.event_listener.search_results_grid_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro.entity_merge.build_metadata', array(0 => 'oro_tag.event_listener.merge_listener', 1 => 'onBuildMetadata'), 0);
        $instance->addListenerService('oro.entity_merge.create_entity_data', array(0 => 'oro_tag.event_listener.merge_listener', 1 => 'onCreateEntityData'), 0);
        $instance->addListenerService('oro.entity_merge.after_merge_entity', array(0 => 'oro_tag.event_listener.merge_listener', 1 => 'afterMergeEntity'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.before', array(0 => 'oro_tag.grid.extension.tag_filter', 1 => 'onBuildBefore'), 0);
        $instance->addListenerService('oro_assetic.load_css', array(0 => 'oro_theme.event_listener.load_css', 1 => 'onLoadCss'), 0);
        $instance->addListenerService('oro_config.update_after', array(0 => 'oro_translation.event_listener.language_change', 1 => 'onConfigUpdate'), 0);
        $instance->addListenerService('oro_workflow.process.handle_before', array(0 => 'oro_workflow.process.schedule_policy.exclude_definitions', 1 => 'onProcessHandleBefore'), 0);
        $instance->addListenerService('oro_workflow.process.handle_after_flush', array(0 => 'oro_workflow.process.schedule_policy.exclude_definitions', 1 => 'onProcessHandleAfterFlush'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.before', array(0 => 'oro_workflow.datagrid.listener.workflow_step_column', 1 => 'onBuildBefore'), 0);
        $instance->addListenerService('oro_menu.configure.application_menu', array(0 => 'oro_dashboard.navigation_listener', 1 => 'onNavigationConfigure'), 0);
        $instance->addListenerService('oro_dashboard.widget_configuration_load', array(0 => 'oro_dashboard.event_listener.widget_configuration_load', 1 => 'onWidgetConfigurationLoad'), 0);
        $instance->addListenerService('oro_dashboard.widget_items_load_data', array(0 => 'oro_dashboard.event_listener.widget_items_load_data', 1 => 'filterItemsByItemsChoice'), 0);
        $instance->addListenerService('oro_dashboard.widget_items_load_data', array(0 => 'oro_dashboard.event_listener.widget_items_load_data', 1 => 'filterItems'), 0);
        $instance->addListenerService('kernel.response', array(0 => 'kernel.listener.nav_history_response', 1 => 'onResponse'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'oro_navigation.event.master_request_route_listener', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'kernel.listener.title_service.request_listener', 1 => 'onKernelRequest'), -255);
        $instance->addListenerService('kernel.response', array(0 => 'kernel.listener.hashnav_response', 1 => 'onResponse'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'oro_navigation.twig.hash_nav_extension', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('oro_datagrid.datagrid.build.after', array(0 => 'oro_navigation.content.datagrid_tag_listener', 1 => 'buildAfter'), 0);
        $instance->addListenerService('oro_config.update_after', array(0 => 'oro_tracking.config.listener', 1 => 'onUpdateAfter'), 0);
        $instance->addListenerService('clank.client.connected', array(0 => 'clank.client_event.listener', 1 => 'onClientConnect'), 0);
        $instance->addListenerService('clank.client.disconnected', array(0 => 'clank.client_event.listener', 1 => 'onClientDisconnect'), 0);
        $instance->addListenerService('clank.client.error', array(0 => 'clank.client_event.listener', 1 => 'onClientError'), 0);
        $instance->addSubscriberService('response_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ResponseListener');
        $instance->addSubscriberService('streamed_response_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\StreamedResponseListener');
        $instance->addSubscriberService('locale_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\LocaleListener');
        $instance->addSubscriberService('translator_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\TranslatorListener');
        $instance->addSubscriberService('session_listener', 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\SessionListener');
        $instance->addSubscriberService('session.save_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\SaveSessionListener');
        $instance->addSubscriberService('fragment.listener', 'Symfony\\Component\\HttpKernel\\EventListener\\FragmentListener');
        $instance->addSubscriberService('profiler_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ProfilerListener');
        $instance->addSubscriberService('data_collector.request', 'Symfony\\Component\\HttpKernel\\DataCollector\\RequestDataCollector');
        $instance->addSubscriberService('router_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\RouterListener');
        $instance->addSubscriberService('debug.debug_handlers_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\DebugHandlersListener');
        $instance->addSubscriberService('security.firewall', 'Symfony\\Component\\Security\\Http\\Firewall');
        $instance->addSubscriberService('security.rememberme.response_listener', 'Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener');
        $instance->addSubscriberService('twig.exception_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ExceptionListener');
        $instance->addSubscriberService('swiftmailer.email_sender.listener', 'Symfony\\Bundle\\SwiftmailerBundle\\EventListener\\EmailSenderListener');
        $instance->addSubscriberService('sensio_framework_extra.controller.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ControllerListener');
        $instance->addSubscriberService('sensio_framework_extra.converter.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ParamConverterListener');
        $instance->addSubscriberService('sensio_framework_extra.view.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\TemplateListener');
        $instance->addSubscriberService('sensio_framework_extra.cache.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\CacheListener');
        $instance->addSubscriberService('besimple.soap.exception_listener', 'BeSimple\\SoapBundle\\EventListener\\SoapExceptionListener');
        $instance->addSubscriberService('stof_doctrine_extensions.event_listener.locale', 'Stof\\DoctrineExtensionsBundle\\EventListener\\LocaleListener');
        $instance->addSubscriberService('oro_layout.request.listener.theme', 'Oro\\Bundle\\LayoutBundle\\EventListener\\ThemeListener');
        $instance->addSubscriberService('oro_organization.listener.config_subscriber', 'Oro\\Bundle\\OrganizationBundle\\Event\\ConfigSubscriber');
        $instance->addSubscriberService('oro_security.owner.ownership_config_subscriber', 'Oro\\Bundle\\SecurityBundle\\EventListener\\OwnershipConfigSubscriber');
        $instance->addSubscriberService('oro_security.entity_security_config_subscriber', 'Oro\\Bundle\\SecurityBundle\\EventListener\\EntitySecurityMetadataConfigSubscriber');
        $instance->addSubscriberService('oro_email.listener.config_subscriber', 'Oro\\Bundle\\EmailBundle\\EventListener\\ConfigSubscriber');
        $instance->addSubscriberService('oro_entity.owner.entity_config_subscriber', 'Oro\\Bundle\\EntityBundle\\EventListener\\EntityConfigSubscriber');
        $instance->addSubscriberService('oro_entity_config.event_listener.entityconfig_grid_listener', 'Oro\\Bundle\\EntityConfigBundle\\EventListener\\EntityConfigGridListener');
        $instance->addSubscriberService('oro_entity_config.event_listener.entityfields_grid_listener', 'Oro\\Bundle\\EntityConfigBundle\\EventListener\\FieldConfigGridListener');
        $instance->addSubscriberService('oro_entity_extend.listener.config_subscriber', 'Oro\\Bundle\\EntityExtendBundle\\EventListener\\ConfigSubscriber');
        $instance->addSubscriberService('akeneo_batch.logger_subscriber', 'Akeneo\\Bundle\\BatchBundle\\EventListener\\LoggerSubscriber');
        $instance->addSubscriberService('akeneo_batch.notification_subscriber', 'Akeneo\\Bundle\\BatchBundle\\EventListener\\NotificationSubscriber');
        $instance->addSubscriberService('akeneo_batch.set_job_execution_log_file_subscriber', 'Akeneo\\Bundle\\BatchBundle\\EventListener\\SetJobExecutionLogFileSubscriber');
        $instance->addSubscriberService('oro_locale.locale_listener', 'Oro\\Bundle\\LocaleBundle\\EventListener\\LocaleListener');
        $instance->addSubscriberService('oro_soap.locale_listener', 'Oro\\Bundle\\SoapBundle\\EventListener\\LocaleListener');
        $instance->addSubscriberService('web_profiler.debug_toolbar', 'Symfony\\Bundle\\WebProfilerBundle\\EventListener\\WebDebugToolbarListener');
        $instance->addListenerService('oro.notification.event.entity_post_persist', array(0 => 'oro_notification.manager', 1 => 'process'));
        $instance->addListenerService('oro.notification.event.entity_post_remove', array(0 => 'oro_notification.manager', 1 => 'process'));
        $instance->addListenerService('oro.notification.event.entity_post_update', array(0 => 'oro_notification.manager', 1 => 'process'));

        return $instance;
    }

    /**
     * Gets the 'debug.stopwatch' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Stopwatch\Stopwatch A Symfony\Component\Stopwatch\Stopwatch instance.
     */
    protected function getDebug_StopwatchService()
    {
        return $this->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch();
    }

    /**
     * Gets the 'debug.templating.engine.php' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\TimedPhpEngine A Symfony\Bundle\FrameworkBundle\Templating\TimedPhpEngine instance.
     */
    protected function getDebug_Templating_Engine_PhpService()
    {
        $this->services['debug.templating.engine.php'] = $instance = new \Symfony\Bundle\FrameworkBundle\Templating\TimedPhpEngine($this->get('templating.name_parser'), $this, $this->get('templating.loader'), $this->get('debug.stopwatch'), $this->get('templating.globals'));

        $instance->setCharset('UTF-8');
        $instance->setHelpers(array('assets' => 'templating.helper.assets', 'router' => 'templating.helper.router', 'slots' => 'templating.helper.slots', 'request' => 'templating.helper.request', 'session' => 'templating.helper.session', 'actions' => 'templating.helper.actions', 'code' => 'templating.helper.code', 'translator' => 'templating.helper.translator', 'form' => 'templating.helper.form', 'stopwatch' => 'templating.helper.stopwatch', 'logout_url' => 'templating.helper.logout_url', 'security' => 'templating.helper.security', 'assetic' => 'assetic.helper.static', 'jms_serializer' => 'jms_serializer.templating.helper.serializer', 'imagine' => 'liip_imagine.templating.helper', 'layout' => 'oro_layout.php.templating.helper', 'oauth' => 'hwi_oauth.templating.helper.oauth'));

        return $instance;
    }

    /**
     * Gets the 'doctrine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Registry A Doctrine\Bundle\DoctrineBundle\Registry instance.
     */
    protected function getDoctrineService()
    {
        return $this->services['doctrine'] = new \Doctrine\Bundle\DoctrineBundle\Registry($this, array('session' => 'doctrine.dbal.session_connection', 'default' => 'doctrine.dbal.default_connection', 'report_source' => 'doctrine.dbal.report_source_connection', 'report_target' => 'doctrine.dbal.report_target_connection'), array('default' => 'doctrine.orm.default_entity_manager'), 'default', 'default');
    }

    /**
     * Gets the 'doctrine.dbal.connection_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\ConnectionFactory A Doctrine\Bundle\DoctrineBundle\ConnectionFactory instance.
     */
    protected function getDoctrine_Dbal_ConnectionFactoryService()
    {
        return $this->services['doctrine.dbal.connection_factory'] = new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory(array('date' => array('class' => 'Oro\\Bundle\\LocaleBundle\\DoctrineExtensions\\DBAL\\Types\\UTCDateType', 'commented' => true), 'datetime' => array('class' => 'Oro\\Bundle\\LocaleBundle\\DoctrineExtensions\\DBAL\\Types\\UTCDateTimeType', 'commented' => true), 'time' => array('class' => 'Oro\\Bundle\\LocaleBundle\\DoctrineExtensions\\DBAL\\Types\\UTCTimeType', 'commented' => true), 'percent' => array('class' => 'Oro\\DBAL\\Types\\PercentType', 'commented' => true), 'money' => array('class' => 'Oro\\DBAL\\Types\\MoneyType', 'commented' => true), 'object' => array('class' => 'Oro\\DBAL\\Types\\ObjectType', 'commented' => true), 'array' => array('class' => 'Oro\\DBAL\\Types\\ArrayType', 'commented' => true)));
    }

    /**
     * Gets the 'doctrine.dbal.default_connection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\DBAL\Connection A Doctrine\DBAL\Connection instance.
     */
    protected function getDoctrine_Dbal_DefaultConnectionService()
    {
        $a = new \Doctrine\DBAL\Logging\LoggerChain();
        $a->addLogger($this->get('doctrine.dbal.logger'));
        $a->addLogger($this->get('doctrine.dbal.logger.profiling.default'));

        $b = new \Doctrine\DBAL\Configuration();
        $b->setSQLLogger($a);

        $c = new \Gedmo\Tree\TreeListener();
        $c->setAnnotationReader($this->get('annotation_reader'));

        $d = new \Oro\Bundle\EntityBundle\Event\OroEventManager($this);
        $d->addEventSubscriber($c);
        $d->addEventSubscriber($this->get('stof_doctrine_extensions.listener.translatable'));
        $d->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_email.event_listener.email_user_listener'));
        $d->addEventListener(array(0 => 'postPersist', 1 => 'preRemove', 2 => 'postFlush'), $this->get('oro_workflow.listener.workflow_item'));
        $d->addEventListener(array(0 => 'prePersist'), $this->get('oro_organization.entity_ownership.listener'));
        $d->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate'), $this->get('oro_note.note_lifecycle_listener'));
        $d->addEventListener(array(0 => 'preRemove'), $this->get('oro_organization.business_unit.listener'));
        $d->addEventListener(array(0 => 'onFlush', 1 => 'loadClassMetadata', 2 => 'postPersist'), $this->get('oro_dataaudit.listener.entity_listener'));
        $d->addEventListener(array(0 => 'onClear'), $this->get('oro_organization.import_strategy.listener'));
        $d->addEventListener(array(0 => 'preRemove', 1 => 'postFlush'), $this->get('oro_segment.event_listener.doctrine_pre_remove'));
        $d->addEventListener(array(0 => 'onFlush'), $this->get('oro_security.ownership_tree_subscriber'));
        $d->addEventListener(array(0 => 'loadClassMetadata'), $this->get('doctrine.orm.listeners.resolve_target_entity'));
        $d->addEventListener(array(0 => 'preClose', 1 => 'onClear'), $this->get('oro_security.listener.refresh_context_listener'));
        $d->addEventListener(array(0 => 'prePersist'), $this->get('oro_imap.listener.user_email_origin'));
        $d->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate', 2 => 'postPersist', 3 => 'postUpdate'), $this->get('oro_attachment.listener.file_listener'));
        $d->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'onClear'), $this->get('oro_search.index_listener'));
        $d->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_navigation.event.doctrine_tag_listener'));
        $d->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'postLoad'), $this->get('oro_workflow.listener.process_data_serialize'));
        $d->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate'), $this->get('oro_activity_list.event_listener.actitity_list_changes_listener'));
        $d->addEventListener(array(0 => 'preUpdate'), $this->get('oro_comment.comment_lifecycle_listener'));
        $d->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'postRemove'), $this->get('oro_email.listener.entity_listener'));
        $d->addEventListener(array(0 => 'postGenerateSchema'), 'security.acl.dbal.schema_listener');
        $d->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_email.listener.auto_response_listener'));
        $d->addEventListener(array(0 => 'preUpdate', 1 => 'onFlush', 2 => 'postFlush'), $this->get('oro_calendar.listener.entity_listener'));
        $d->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_email.listener.mailbox_process_trigger_listener'));
        $d->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_dataaudit.listener.deprecated_audit_data_listener'));
        $d->addEventListener(array(0 => 'preUpdate', 1 => 'prePersist'), $this->get('oro_user.role.listener'));
        $d->addEventListener(array(0 => 'onClear'), $this->get('oro_importexport.field.database_helper'));
        $d->addEventListener(array(0 => 'preUpdate'), $this->get('oro_sso.event_listener.user_email_change_listener.class'));
        $d->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'postRemove', 3 => 'postFlush'), $this->get('oro_notification.docrine.event.listener'));
        $d->addEventListener(array(0 => 'loadClassMetadata'), $this->get('oro_entity.listener.orm.generated_value_strategy_listener'));
        $d->addEventListener(array(0 => 'loadClassMetadata'), $this->get('oro_search.event_listener.orm.fulltext_index_listener'));
        $d->addEventListener(array(0 => 'postPersist', 1 => 'postFlush'), $this->get('oro_entity_config.event_listener.option_set_listener'));
        $d->addEventListener(array(0 => 'preRemove'), $this->get('oro_tag.docrine.event.listener'));
        $d->addEventListener(array(0 => 'loadClassMetadata', 1 => 'onFlush'), $this->get('oro_entity_extend.listener.entity_listener'));
        $d->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'postLoad'), $this->get('oro_workflow.listener.workflow_data_serialize'));
        $d->addEventListener(array(0 => 'postGenerateSchema', 1 => 'postLoad', 2 => 'postPersist', 3 => 'preRemove'), 'jms_job_queue.entity.many_to_any_listener');
        $d->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate', 2 => 'preRemove', 3 => 'postFlush', 4 => 'onClear'), $this->get('oro_workflow.listener.process_collector'));
        $d->addEventListener(array(0 => 'postGenerateSchema'), 'jms_job_queue.entity.statistics_listener');
        $d->addEventListener(array(0 => 'postPersist'), $this->get('oro_navigation.item.pinbar.post_persist_listener'));
        $d->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_activity_list.event_listener.actitity_list_listener'));
        $d->addEventListener(array(0 => 'postLoad', 1 => 'postPersist'), $this->get('oro_reminder.event_listener.reminder_listener'));

        return $this->services['doctrine.dbal.default_connection'] = $this->get('doctrine.dbal.connection_factory')->createConnection(array('driver' => 'pdo_mysql', 'host' => '127.0.0.1', 'port' => NULL, 'dbname' => 'bap_standard', 'user' => 'root', 'password' => NULL, 'charset' => 'UTF8', 'driverOptions' => array()), $b, $d, array());
    }

    /**
     * Gets the 'doctrine.dbal.report_source_connection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\DBAL\Connection A Doctrine\DBAL\Connection instance.
     */
    protected function getDoctrine_Dbal_ReportSourceConnectionService()
    {
        $a = new \Doctrine\DBAL\Logging\LoggerChain();
        $a->addLogger($this->get('doctrine.dbal.logger'));
        $a->addLogger($this->get('doctrine.dbal.logger.profiling.report_source'));

        $b = new \Doctrine\DBAL\Configuration();
        $b->setSQLLogger($a);

        $c = new \Oro\Bundle\EntityBundle\Event\OroEventManager($this);
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_email.event_listener.email_user_listener'));
        $c->addEventListener(array(0 => 'prePersist'), $this->get('oro_organization.entity_ownership.listener'));
        $c->addEventListener(array(0 => 'preRemove'), $this->get('oro_organization.business_unit.listener'));
        $c->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'postRemove', 3 => 'postFlush'), $this->get('oro_notification.docrine.event.listener'));
        $c->addEventListener(array(0 => 'onClear'), $this->get('oro_organization.import_strategy.listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_dataaudit.listener.deprecated_audit_data_listener'));
        $c->addEventListener(array(0 => 'onFlush'), $this->get('oro_security.ownership_tree_subscriber'));
        $c->addEventListener(array(0 => 'preRemove'), $this->get('oro_tag.docrine.event.listener'));
        $c->addEventListener(array(0 => 'preClose', 1 => 'onClear'), $this->get('oro_security.listener.refresh_context_listener'));
        $c->addEventListener(array(0 => 'preUpdate', 1 => 'onFlush', 2 => 'postFlush'), $this->get('oro_calendar.listener.entity_listener'));
        $c->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate', 2 => 'postPersist', 3 => 'postUpdate'), $this->get('oro_attachment.listener.file_listener'));
        $c->addEventListener(array(0 => 'onClear'), $this->get('oro_importexport.field.database_helper'));
        $c->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate', 2 => 'preRemove', 3 => 'postFlush', 4 => 'onClear'), $this->get('oro_workflow.listener.process_collector'));
        $c->addEventListener(array(0 => 'loadClassMetadata'), $this->get('oro_search.event_listener.orm.fulltext_index_listener'));
        $c->addEventListener(array(0 => 'loadClassMetadata'), $this->get('doctrine.orm.listeners.resolve_target_entity'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'postLoad'), $this->get('oro_workflow.listener.workflow_data_serialize'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'postRemove'), $this->get('oro_email.listener.entity_listener'));
        $c->addEventListener(array(0 => 'postPersist'), $this->get('oro_navigation.item.pinbar.post_persist_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_email.listener.auto_response_listener'));
        $c->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate'), $this->get('oro_activity_list.event_listener.actitity_list_changes_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_email.listener.mailbox_process_trigger_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'loadClassMetadata', 2 => 'postPersist'), $this->get('oro_dataaudit.listener.entity_listener'));
        $c->addEventListener(array(0 => 'preUpdate', 1 => 'prePersist'), $this->get('oro_user.role.listener'));
        $c->addEventListener(array(0 => 'prePersist'), $this->get('oro_imap.listener.user_email_origin'));
        $c->addEventListener(array(0 => 'preUpdate'), $this->get('oro_sso.event_listener.user_email_change_listener.class'));
        $c->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate'), $this->get('oro_note.note_lifecycle_listener'));
        $c->addEventListener(array(0 => 'loadClassMetadata'), $this->get('oro_entity.listener.orm.generated_value_strategy_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'onClear'), $this->get('oro_search.index_listener'));
        $c->addEventListener(array(0 => 'postPersist', 1 => 'postFlush'), $this->get('oro_entity_config.event_listener.option_set_listener'));
        $c->addEventListener(array(0 => 'preRemove', 1 => 'postFlush'), $this->get('oro_segment.event_listener.doctrine_pre_remove'));
        $c->addEventListener(array(0 => 'onFlush'), $this->get('oro_entity_extend.listener.entity_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'postLoad'), $this->get('oro_workflow.listener.process_data_serialize'));
        $c->addEventListener(array(0 => 'postGenerateSchema', 1 => 'postLoad', 2 => 'postPersist', 3 => 'preRemove'), 'jms_job_queue.entity.many_to_any_listener');
        $c->addEventListener(array(0 => 'postPersist', 1 => 'preRemove', 2 => 'postFlush'), $this->get('oro_workflow.listener.workflow_item'));
        $c->addEventListener(array(0 => 'postGenerateSchema'), 'jms_job_queue.entity.statistics_listener');
        $c->addEventListener(array(0 => 'preUpdate'), $this->get('oro_comment.comment_lifecycle_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_activity_list.event_listener.actitity_list_listener'));
        $c->addEventListener(array(0 => 'postLoad', 1 => 'postPersist'), $this->get('oro_reminder.event_listener.reminder_listener'));

        return $this->services['doctrine.dbal.report_source_connection'] = $this->get('doctrine.dbal.connection_factory')->createConnection(array('driver' => 'pdo_mysql', 'host' => '127.0.0.1', 'port' => NULL, 'dbname' => 'bap_standard', 'user' => 'root', 'password' => NULL, 'charset' => 'UTF8', 'driverOptions' => array()), $b, $c, array());
    }

    /**
     * Gets the 'doctrine.dbal.report_target_connection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\DBAL\Connection A Doctrine\DBAL\Connection instance.
     */
    protected function getDoctrine_Dbal_ReportTargetConnectionService()
    {
        $a = new \Doctrine\DBAL\Logging\LoggerChain();
        $a->addLogger($this->get('doctrine.dbal.logger'));
        $a->addLogger($this->get('doctrine.dbal.logger.profiling.report_target'));

        $b = new \Doctrine\DBAL\Configuration();
        $b->setSQLLogger($a);

        $c = new \Oro\Bundle\EntityBundle\Event\OroEventManager($this);
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_email.event_listener.email_user_listener'));
        $c->addEventListener(array(0 => 'prePersist'), $this->get('oro_organization.entity_ownership.listener'));
        $c->addEventListener(array(0 => 'preRemove'), $this->get('oro_organization.business_unit.listener'));
        $c->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'postRemove', 3 => 'postFlush'), $this->get('oro_notification.docrine.event.listener'));
        $c->addEventListener(array(0 => 'onClear'), $this->get('oro_organization.import_strategy.listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_dataaudit.listener.deprecated_audit_data_listener'));
        $c->addEventListener(array(0 => 'onFlush'), $this->get('oro_security.ownership_tree_subscriber'));
        $c->addEventListener(array(0 => 'preRemove'), $this->get('oro_tag.docrine.event.listener'));
        $c->addEventListener(array(0 => 'preClose', 1 => 'onClear'), $this->get('oro_security.listener.refresh_context_listener'));
        $c->addEventListener(array(0 => 'preUpdate', 1 => 'onFlush', 2 => 'postFlush'), $this->get('oro_calendar.listener.entity_listener'));
        $c->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate', 2 => 'postPersist', 3 => 'postUpdate'), $this->get('oro_attachment.listener.file_listener'));
        $c->addEventListener(array(0 => 'onClear'), $this->get('oro_importexport.field.database_helper'));
        $c->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate', 2 => 'preRemove', 3 => 'postFlush', 4 => 'onClear'), $this->get('oro_workflow.listener.process_collector'));
        $c->addEventListener(array(0 => 'loadClassMetadata'), $this->get('oro_search.event_listener.orm.fulltext_index_listener'));
        $c->addEventListener(array(0 => 'loadClassMetadata'), $this->get('doctrine.orm.listeners.resolve_target_entity'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'postLoad'), $this->get('oro_workflow.listener.workflow_data_serialize'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'postRemove'), $this->get('oro_email.listener.entity_listener'));
        $c->addEventListener(array(0 => 'postPersist'), $this->get('oro_navigation.item.pinbar.post_persist_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_email.listener.auto_response_listener'));
        $c->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate'), $this->get('oro_activity_list.event_listener.actitity_list_changes_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_email.listener.mailbox_process_trigger_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'loadClassMetadata', 2 => 'postPersist'), $this->get('oro_dataaudit.listener.entity_listener'));
        $c->addEventListener(array(0 => 'preUpdate', 1 => 'prePersist'), $this->get('oro_user.role.listener'));
        $c->addEventListener(array(0 => 'prePersist'), $this->get('oro_imap.listener.user_email_origin'));
        $c->addEventListener(array(0 => 'preUpdate'), $this->get('oro_sso.event_listener.user_email_change_listener.class'));
        $c->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate'), $this->get('oro_note.note_lifecycle_listener'));
        $c->addEventListener(array(0 => 'loadClassMetadata'), $this->get('oro_entity.listener.orm.generated_value_strategy_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'onClear'), $this->get('oro_search.index_listener'));
        $c->addEventListener(array(0 => 'postPersist', 1 => 'postFlush'), $this->get('oro_entity_config.event_listener.option_set_listener'));
        $c->addEventListener(array(0 => 'preRemove', 1 => 'postFlush'), $this->get('oro_segment.event_listener.doctrine_pre_remove'));
        $c->addEventListener(array(0 => 'onFlush'), $this->get('oro_entity_extend.listener.entity_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'postLoad'), $this->get('oro_workflow.listener.process_data_serialize'));
        $c->addEventListener(array(0 => 'postGenerateSchema', 1 => 'postLoad', 2 => 'postPersist', 3 => 'preRemove'), 'jms_job_queue.entity.many_to_any_listener');
        $c->addEventListener(array(0 => 'postPersist', 1 => 'preRemove', 2 => 'postFlush'), $this->get('oro_workflow.listener.workflow_item'));
        $c->addEventListener(array(0 => 'postGenerateSchema'), 'jms_job_queue.entity.statistics_listener');
        $c->addEventListener(array(0 => 'preUpdate'), $this->get('oro_comment.comment_lifecycle_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_activity_list.event_listener.actitity_list_listener'));
        $c->addEventListener(array(0 => 'postLoad', 1 => 'postPersist'), $this->get('oro_reminder.event_listener.reminder_listener'));

        return $this->services['doctrine.dbal.report_target_connection'] = $this->get('doctrine.dbal.connection_factory')->createConnection(array('driver' => 'pdo_mysql', 'host' => '127.0.0.1', 'port' => NULL, 'dbname' => 'bap_standard', 'user' => 'root', 'password' => NULL, 'charset' => 'UTF8', 'driverOptions' => array()), $b, $c, array());
    }

    /**
     * Gets the 'doctrine.dbal.session_connection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\DBAL\Connection A Doctrine\DBAL\Connection instance.
     */
    protected function getDoctrine_Dbal_SessionConnectionService()
    {
        $a = new \Doctrine\DBAL\Logging\LoggerChain();
        $a->addLogger($this->get('doctrine.dbal.logger'));
        $a->addLogger($this->get('doctrine.dbal.logger.profiling.session'));

        $b = new \Doctrine\DBAL\Configuration();
        $b->setSQLLogger($a);

        $c = new \Oro\Bundle\EntityBundle\Event\OroEventManager($this);
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_email.event_listener.email_user_listener'));
        $c->addEventListener(array(0 => 'prePersist'), $this->get('oro_organization.entity_ownership.listener'));
        $c->addEventListener(array(0 => 'preRemove'), $this->get('oro_organization.business_unit.listener'));
        $c->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'postRemove', 3 => 'postFlush'), $this->get('oro_notification.docrine.event.listener'));
        $c->addEventListener(array(0 => 'onClear'), $this->get('oro_organization.import_strategy.listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_dataaudit.listener.deprecated_audit_data_listener'));
        $c->addEventListener(array(0 => 'onFlush'), $this->get('oro_security.ownership_tree_subscriber'));
        $c->addEventListener(array(0 => 'preRemove'), $this->get('oro_tag.docrine.event.listener'));
        $c->addEventListener(array(0 => 'preClose', 1 => 'onClear'), $this->get('oro_security.listener.refresh_context_listener'));
        $c->addEventListener(array(0 => 'preUpdate', 1 => 'onFlush', 2 => 'postFlush'), $this->get('oro_calendar.listener.entity_listener'));
        $c->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate', 2 => 'postPersist', 3 => 'postUpdate'), $this->get('oro_attachment.listener.file_listener'));
        $c->addEventListener(array(0 => 'onClear'), $this->get('oro_importexport.field.database_helper'));
        $c->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate', 2 => 'preRemove', 3 => 'postFlush', 4 => 'onClear'), $this->get('oro_workflow.listener.process_collector'));
        $c->addEventListener(array(0 => 'loadClassMetadata'), $this->get('oro_search.event_listener.orm.fulltext_index_listener'));
        $c->addEventListener(array(0 => 'loadClassMetadata'), $this->get('doctrine.orm.listeners.resolve_target_entity'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'postLoad'), $this->get('oro_workflow.listener.workflow_data_serialize'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'postRemove'), $this->get('oro_email.listener.entity_listener'));
        $c->addEventListener(array(0 => 'postPersist'), $this->get('oro_navigation.item.pinbar.post_persist_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_email.listener.auto_response_listener'));
        $c->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate'), $this->get('oro_activity_list.event_listener.actitity_list_changes_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_email.listener.mailbox_process_trigger_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'loadClassMetadata', 2 => 'postPersist'), $this->get('oro_dataaudit.listener.entity_listener'));
        $c->addEventListener(array(0 => 'preUpdate', 1 => 'prePersist'), $this->get('oro_user.role.listener'));
        $c->addEventListener(array(0 => 'prePersist'), $this->get('oro_imap.listener.user_email_origin'));
        $c->addEventListener(array(0 => 'preUpdate'), $this->get('oro_sso.event_listener.user_email_change_listener.class'));
        $c->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate'), $this->get('oro_note.note_lifecycle_listener'));
        $c->addEventListener(array(0 => 'loadClassMetadata'), $this->get('oro_entity.listener.orm.generated_value_strategy_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'onClear'), $this->get('oro_search.index_listener'));
        $c->addEventListener(array(0 => 'postPersist', 1 => 'postFlush'), $this->get('oro_entity_config.event_listener.option_set_listener'));
        $c->addEventListener(array(0 => 'preRemove', 1 => 'postFlush'), $this->get('oro_segment.event_listener.doctrine_pre_remove'));
        $c->addEventListener(array(0 => 'onFlush'), $this->get('oro_entity_extend.listener.entity_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush', 2 => 'postLoad'), $this->get('oro_workflow.listener.process_data_serialize'));
        $c->addEventListener(array(0 => 'postGenerateSchema', 1 => 'postLoad', 2 => 'postPersist', 3 => 'preRemove'), 'jms_job_queue.entity.many_to_any_listener');
        $c->addEventListener(array(0 => 'postPersist', 1 => 'preRemove', 2 => 'postFlush'), $this->get('oro_workflow.listener.workflow_item'));
        $c->addEventListener(array(0 => 'postGenerateSchema'), 'jms_job_queue.entity.statistics_listener');
        $c->addEventListener(array(0 => 'preUpdate'), $this->get('oro_comment.comment_lifecycle_listener'));
        $c->addEventListener(array(0 => 'onFlush', 1 => 'postFlush'), $this->get('oro_activity_list.event_listener.actitity_list_listener'));
        $c->addEventListener(array(0 => 'postLoad', 1 => 'postPersist'), $this->get('oro_reminder.event_listener.reminder_listener'));

        return $this->services['doctrine.dbal.session_connection'] = $this->get('doctrine.dbal.connection_factory')->createConnection(array('driver' => 'pdo_mysql', 'host' => '127.0.0.1', 'port' => NULL, 'dbname' => 'bap_standard', 'user' => 'root', 'password' => NULL, 'charset' => 'UTF8', 'driverOptions' => array()), $b, $c, array());
    }

    /**
     * Gets the 'doctrine.metadata.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getDoctrine_Metadata_CacheService()
    {
        $this->services['doctrine.metadata.cache'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('doctrine.metadata.cache');

        return $instance;
    }

    /**
     * Gets the 'doctrine.orm.default_entity_listener_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\ORM\Mapping\DefaultEntityListenerResolver A Doctrine\ORM\Mapping\DefaultEntityListenerResolver instance.
     */
    protected function getDoctrine_Orm_DefaultEntityListenerResolverService()
    {
        return $this->services['doctrine.orm.default_entity_listener_resolver'] = new \Doctrine\ORM\Mapping\DefaultEntityListenerResolver();
    }

    /**
     * Gets the 'doctrine.orm.default_entity_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\ORM\OroEntityManager A Oro\Bundle\EntityBundle\ORM\OroEntityManager instance.
     */
    protected function getDoctrine_Orm_DefaultEntityManagerService()
    {
        $a = $this->get('annotation_reader');

        $b = new \Doctrine\ORM\Mapping\Driver\AnnotationDriver($a, array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\OrganizationBundle\\Entity', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AttachmentBundle\\Entity', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmailBundle\\Entity', 3 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UserBundle\\Entity', 4 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityBundle\\Entity', 5 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityConfigBundle\\Entity', 6 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityExtendBundle\\Entity', 7 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\IntegrationBundle\\Entity', 8 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\akeneo\\batch-bundle\\Akeneo\\Bundle\\BatchBundle\\Entity', 9 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\jms\\job-queue-bundle\\JMS\\JobQueueBundle\\Entity', 10 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ActivityBundle\\Entity', 11 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ActivityListBundle\\Entity', 12 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AddressBundle\\Entity', 13 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\BusinessEntitiesBundle\\Entity', 14 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CalendarBundle\\Entity', 15 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ConfigBundle\\Entity', 16 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CronBundle\\Entity', 17 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataAuditBundle\\Entity', 18 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataGridBundle\\Entity', 19 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle\\Entity', 20 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FormBundle\\Entity', 21 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImapBundle\\Entity', 22 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\MigrationBundle\\Entity', 23 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NoteBundle\\Entity', 24 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NotificationBundle\\Entity', 25 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ReportBundle\\Entity', 26 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SearchBundle\\Entity', 27 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SegmentBundle\\Entity', 28 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SidebarBundle\\Entity', 29 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SoapBundle\\Entity', 30 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TagBundle\\Entity', 31 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TranslationBundle\\Entity', 32 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\WindowsBundle\\Entity', 33 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\WorkflowBundle\\Entity', 34 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CommentBundle\\Entity', 35 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DashboardBundle\\Entity', 36 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NavigationBundle\\Entity', 37 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TrackingBundle\\Entity', 38 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ReminderBundle\\Entity'));

        $c = new \Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain();
        $c->addDriver($b, 'Oro\\Bundle\\OrganizationBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\AttachmentBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\EmailBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\UserBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\EntityBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\EntityConfigBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\EntityExtendBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\IntegrationBundle\\Entity');
        $c->addDriver($b, 'Akeneo\\Bundle\\BatchBundle\\Entity');
        $c->addDriver($b, 'JMS\\JobQueueBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\ActivityBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\ActivityListBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\AddressBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\BusinessEntitiesBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\CalendarBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\ConfigBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\CronBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\DataAuditBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\DataGridBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\EmbeddedFormBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\FormBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\ImapBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\MigrationBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\NoteBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\NotificationBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\ReportBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\SearchBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\SegmentBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\SidebarBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\SoapBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\TagBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\TranslationBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\WindowsBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\WorkflowBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\CommentBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\DashboardBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\NavigationBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\TrackingBundle\\Entity');
        $c->addDriver($b, 'Oro\\Bundle\\ReminderBundle\\Entity');
        $c->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev\\oro_entities\\OroEntityProxy\\OroEmailBundle' => 'OroEntityProxy\\OroEmailBundle'), '.orm.yml')), 'OroEntityProxy\\OroEmailBundle');
        $c->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array('C:/wamp/www/stockvalue~~/app/cache/dev/oro_entities/Extend/Entity' => 'Extend\\Entity'), '.orm.yml')), 'Extend\\Entity');

        $d = new \Oro\Bundle\EntityBundle\ORM\OrmConfiguration();
        $d->setEntityNamespaces(array('OroOrganizationBundle' => 'Oro\\Bundle\\OrganizationBundle\\Entity', 'OroAttachmentBundle' => 'Oro\\Bundle\\AttachmentBundle\\Entity', 'OroEmailBundle' => 'Oro\\Bundle\\EmailBundle\\Entity', 'OroUserBundle' => 'Oro\\Bundle\\UserBundle\\Entity', 'OroEntityBundle' => 'Oro\\Bundle\\EntityBundle\\Entity', 'OroEntityConfigBundle' => 'Oro\\Bundle\\EntityConfigBundle\\Entity', 'OroEntityExtendBundle' => 'Oro\\Bundle\\EntityExtendBundle\\Entity', 'OroIntegrationBundle' => 'Oro\\Bundle\\IntegrationBundle\\Entity', 'AkeneoBatchBundle' => 'Akeneo\\Bundle\\BatchBundle\\Entity', 'JMSJobQueueBundle' => 'JMS\\JobQueueBundle\\Entity', 'OroActivityBundle' => 'Oro\\Bundle\\ActivityBundle\\Entity', 'OroActivityListBundle' => 'Oro\\Bundle\\ActivityListBundle\\Entity', 'OroAddressBundle' => 'Oro\\Bundle\\AddressBundle\\Entity', 'OroBusinessEntitiesBundle' => 'Oro\\Bundle\\BusinessEntitiesBundle\\Entity', 'OroCalendarBundle' => 'Oro\\Bundle\\CalendarBundle\\Entity', 'OroConfigBundle' => 'Oro\\Bundle\\ConfigBundle\\Entity', 'OroCronBundle' => 'Oro\\Bundle\\CronBundle\\Entity', 'OroDataAuditBundle' => 'Oro\\Bundle\\DataAuditBundle\\Entity', 'OroDataGridBundle' => 'Oro\\Bundle\\DataGridBundle\\Entity', 'OroEmbeddedFormBundle' => 'Oro\\Bundle\\EmbeddedFormBundle\\Entity', 'OroFormBundle' => 'Oro\\Bundle\\FormBundle\\Entity', 'OroImapBundle' => 'Oro\\Bundle\\ImapBundle\\Entity', 'OroMigrationBundle' => 'Oro\\Bundle\\MigrationBundle\\Entity', 'OroNoteBundle' => 'Oro\\Bundle\\NoteBundle\\Entity', 'OroNotificationBundle' => 'Oro\\Bundle\\NotificationBundle\\Entity', 'OroReportBundle' => 'Oro\\Bundle\\ReportBundle\\Entity', 'OroSearchBundle' => 'Oro\\Bundle\\SearchBundle\\Entity', 'OroSegmentBundle' => 'Oro\\Bundle\\SegmentBundle\\Entity', 'OroSidebarBundle' => 'Oro\\Bundle\\SidebarBundle\\Entity', 'OroSoapBundle' => 'Oro\\Bundle\\SoapBundle\\Entity', 'OroTagBundle' => 'Oro\\Bundle\\TagBundle\\Entity', 'OroTranslationBundle' => 'Oro\\Bundle\\TranslationBundle\\Entity', 'OroWindowsBundle' => 'Oro\\Bundle\\WindowsBundle\\Entity', 'OroWorkflowBundle' => 'Oro\\Bundle\\WorkflowBundle\\Entity', 'OroCommentBundle' => 'Oro\\Bundle\\CommentBundle\\Entity', 'OroDashboardBundle' => 'Oro\\Bundle\\DashboardBundle\\Entity', 'OroNavigationBundle' => 'Oro\\Bundle\\NavigationBundle\\Entity', 'OroTrackingBundle' => 'Oro\\Bundle\\TrackingBundle\\Entity', 'OroReminderBundle' => 'Oro\\Bundle\\ReminderBundle\\Entity'));
        $d->setMetadataCacheImpl($this->get('doctrine.metadata.cache'));
        $d->setQueryCacheImpl($this->get('doctrine_cache.providers.doctrine.orm.default_query_cache'));
        $d->setResultCacheImpl($this->get('doctrine_cache.providers.doctrine.orm.default_result_cache'));
        $d->setMetadataDriverImpl($c);
        $d->setProxyDir('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/doctrine/orm/Proxies');
        $d->setProxyNamespace('Proxies');
        $d->setAutoGenerateProxyClasses(true);
        $d->setClassMetadataFactoryName('Oro\\Bundle\\EntityExtendBundle\\Mapping\\ExtendClassMetadataFactory');
        $d->setDefaultRepositoryClassName('Doctrine\\ORM\\EntityRepository');
        $d->setNamingStrategy(new \Doctrine\ORM\Mapping\DefaultNamingStrategy());
        $d->setEntityListenerResolver($this->get('doctrine.orm.default_entity_listener_resolver'));
        $d->addCustomStringFunction('group_concat', 'Oro\\ORM\\Query\\AST\\Functions\\String\\GroupConcat');
        $d->addCustomStringFunction('cast', 'Oro\\ORM\\Query\\AST\\Functions\\Cast');
        $d->addCustomNumericFunction('timestampdiff', 'Oro\\ORM\\Query\\AST\\Functions\\Numeric\\TimestampDiff');
        $d->addCustomNumericFunction('dayofyear', 'Oro\\ORM\\Query\\AST\\Functions\\SimpleFunction');
        $d->addCustomNumericFunction('dayofweek', 'Oro\\ORM\\Query\\AST\\Functions\\SimpleFunction');
        $d->addCustomNumericFunction('week', 'Oro\\ORM\\Query\\AST\\Functions\\SimpleFunction');
        $d->addCustomNumericFunction('day', 'Oro\\ORM\\Query\\AST\\Functions\\SimpleFunction');
        $d->addCustomNumericFunction('hour', 'Oro\\ORM\\Query\\AST\\Functions\\SimpleFunction');
        $d->addCustomNumericFunction('minute', 'Oro\\ORM\\Query\\AST\\Functions\\SimpleFunction');
        $d->addCustomNumericFunction('month', 'Oro\\ORM\\Query\\AST\\Functions\\SimpleFunction');
        $d->addCustomNumericFunction('quarter', 'Oro\\ORM\\Query\\AST\\Functions\\SimpleFunction');
        $d->addCustomNumericFunction('second', 'Oro\\ORM\\Query\\AST\\Functions\\SimpleFunction');
        $d->addCustomNumericFunction('year', 'Oro\\ORM\\Query\\AST\\Functions\\SimpleFunction');
        $d->addCustomNumericFunction('sign', 'Oro\\ORM\\Query\\AST\\Functions\\Numeric\\Sign');
        $d->addCustomNumericFunction('pow', 'Oro\\ORM\\Query\\AST\\Functions\\Numeric\\Pow');
        $d->addCustomDatetimeFunction('date', 'Oro\\ORM\\Query\\AST\\Functions\\SimpleFunction');
        $d->addCustomDatetimeFunction('time', 'Oro\\ORM\\Query\\AST\\Functions\\SimpleFunction');
        $d->addCustomDatetimeFunction('timestamp', 'Oro\\ORM\\Query\\AST\\Functions\\SimpleFunction');
        $d->addCustomDatetimeFunction('convert_tz', 'Oro\\ORM\\Query\\AST\\Functions\\DateTime\\ConvertTz');

        $this->services['doctrine.orm.default_entity_manager'] = $instance = \Oro\Bundle\EntityBundle\ORM\OroEntityManager::create($this->get('doctrine.dbal.default_connection'), $d);

        $instance->setExtendConfigProvider($this->get('oro_entity_config.provider.extend'));
        $this->get('doctrine.orm.default_manager_configurator')->configure($instance);

        return $instance;
    }

    /**
     * Gets the 'doctrine.orm.default_manager_configurator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator A Doctrine\Bundle\DoctrineBundle\ManagerConfigurator instance.
     */
    protected function getDoctrine_Orm_DefaultManagerConfiguratorService()
    {
        return $this->services['doctrine.orm.default_manager_configurator'] = new \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator(array(), array());
    }

    /**
     * Gets the 'doctrine.orm.validator.unique' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator A Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator instance.
     */
    protected function getDoctrine_Orm_Validator_UniqueService()
    {
        return $this->services['doctrine.orm.validator.unique'] = new \Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator($this->get('doctrine'));
    }

    /**
     * Gets the 'doctrine.orm.validator_initializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Doctrine\Validator\DoctrineInitializer A Symfony\Bridge\Doctrine\Validator\DoctrineInitializer instance.
     */
    protected function getDoctrine_Orm_ValidatorInitializerService()
    {
        return $this->services['doctrine.orm.validator_initializer'] = new \Symfony\Bridge\Doctrine\Validator\DoctrineInitializer($this->get('doctrine'));
    }

    /**
     * Gets the 'doctrine_cache.providers.doctrine.orm.default_query_cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Common\Cache\ArrayCache A Doctrine\Common\Cache\ArrayCache instance.
     */
    protected function getDoctrineCache_Providers_Doctrine_Orm_DefaultQueryCacheService()
    {
        $this->services['doctrine_cache.providers.doctrine.orm.default_query_cache'] = $instance = new \Doctrine\Common\Cache\ArrayCache();

        $instance->setNamespace('sf2orm_default_a43c4f0f3bdc7269a694e8c36959297aa2551c4370acb316c70351c14e3e04c7');

        return $instance;
    }

    /**
     * Gets the 'doctrine_cache.providers.doctrine.orm.default_result_cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Common\Cache\ArrayCache A Doctrine\Common\Cache\ArrayCache instance.
     */
    protected function getDoctrineCache_Providers_Doctrine_Orm_DefaultResultCacheService()
    {
        $this->services['doctrine_cache.providers.doctrine.orm.default_result_cache'] = $instance = new \Doctrine\Common\Cache\ArrayCache();

        $instance->setNamespace('sf2orm_default_a43c4f0f3bdc7269a694e8c36959297aa2551c4370acb316c70351c14e3e04c7');

        return $instance;
    }

    /**
     * Gets the 'escape_wsse_authentication.encoder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder A Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder instance.
     */
    protected function getEscapeWsseAuthentication_EncoderService()
    {
        return $this->services['escape_wsse_authentication.encoder'] = new \Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder('sha1', true, 1);
    }

    /**
     * Gets the 'escape_wsse_authentication.encoder.wsse_secured' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder A Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder instance.
     */
    protected function getEscapeWsseAuthentication_Encoder_WsseSecuredService()
    {
        return $this->services['escape_wsse_authentication.encoder.wsse_secured'] = new \Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder('sha1', true, 1);
    }

    /**
     * Gets the 'escape_wsse_authentication.entry_point' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Escape\WSSEAuthenticationBundle\Security\Http\EntryPoint\EntryPoint A Escape\WSSEAuthenticationBundle\Security\Http\EntryPoint\EntryPoint instance.
     */
    protected function getEscapeWsseAuthentication_EntryPointService()
    {
        return $this->services['escape_wsse_authentication.entry_point'] = new \Escape\WSSEAuthenticationBundle\Security\Http\EntryPoint\EntryPoint($this->get('logger'), NULL, 'UsernameToken');
    }

    /**
     * Gets the 'escape_wsse_authentication.entry_point.wsse_secured' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Escape\WSSEAuthenticationBundle\Security\Http\EntryPoint\EntryPoint A Escape\WSSEAuthenticationBundle\Security\Http\EntryPoint\EntryPoint instance.
     */
    protected function getEscapeWsseAuthentication_EntryPoint_WsseSecuredService()
    {
        return $this->services['escape_wsse_authentication.entry_point.wsse_secured'] = new \Escape\WSSEAuthenticationBundle\Security\Http\EntryPoint\EntryPoint($this->get('logger'), 'Secured API', 'UsernameToken');
    }

    /**
     * Gets the 'escape_wsse_authentication.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Security\WsseAuthListener A Oro\Bundle\UserBundle\Security\WsseAuthListener instance.
     */
    protected function getEscapeWsseAuthentication_ListenerService()
    {
        return $this->services['escape_wsse_authentication.listener'] = new \Oro\Bundle\UserBundle\Security\WsseAuthListener($this->get('security.context'), $this->get('security.authentication.manager'));
    }

    /**
     * Gets the 'escape_wsse_authentication.listener.wsse_secured' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Security\WsseAuthListener A Oro\Bundle\UserBundle\Security\WsseAuthListener instance.
     */
    protected function getEscapeWsseAuthentication_Listener_WsseSecuredService()
    {
        return $this->services['escape_wsse_authentication.listener.wsse_secured'] = new \Oro\Bundle\UserBundle\Security\WsseAuthListener($this->get('security.context'), $this->get('security.authentication.manager'), $this->get('escape_wsse_authentication.entry_point.wsse_secured'));
    }

    /**
     * Gets the 'escape_wsse_authentication.nonce_cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Common\Cache\PhpFileCache A Doctrine\Common\Cache\PhpFileCache instance.
     */
    protected function getEscapeWsseAuthentication_NonceCacheService()
    {
        return $this->services['escape_wsse_authentication.nonce_cache'] = new \Doctrine\Common\Cache\PhpFileCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/security/nonces');
    }

    /**
     * Gets the 'escape_wsse_authentication.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Security\WsseAuthProvider A Oro\Bundle\UserBundle\Security\WsseAuthProvider instance.
     */
    protected function getEscapeWsseAuthentication_ProviderService()
    {
        return $this->services['escape_wsse_authentication.provider'] = new \Oro\Bundle\UserBundle\Security\WsseAuthProvider(NULL, NULL, NULL, 300, '/^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/');
    }

    /**
     * Gets the 'escape_wsse_authentication.provider.wsse_secured' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Security\WsseAuthProvider A Oro\Bundle\UserBundle\Security\WsseAuthProvider instance.
     */
    protected function getEscapeWsseAuthentication_Provider_WsseSecuredService()
    {
        return $this->services['escape_wsse_authentication.provider.wsse_secured'] = new \Oro\Bundle\UserBundle\Security\WsseAuthProvider($this->get('security.user.provider.concrete.chain_provider'), $this->get('escape_wsse_authentication.encoder.wsse_secured'), $this->get('oro_security.wsse_nonce_cache'), 3600, '/^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/');
    }

    /**
     * Gets the 'file_locator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Config\FileLocator A Symfony\Component\HttpKernel\Config\FileLocator instance.
     */
    protected function getFileLocatorService()
    {
        return $this->services['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator($this->get('kernel'), 'C:\\wamp\\www\\stockvalue~~\\app/Resources');
    }

    /**
     * Gets the 'filesystem' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Filesystem\Filesystem A Symfony\Component\Filesystem\Filesystem instance.
     */
    protected function getFilesystemService()
    {
        return $this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem();
    }

    /**
     * Gets the 'form.csrf_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfTokenManagerAdapter A Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfTokenManagerAdapter instance.
     */
    protected function getForm_CsrfProviderService()
    {
        return $this->services['form.csrf_provider'] = new \Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfTokenManagerAdapter($this->get('security.csrf.token_manager'));
    }

    /**
     * Gets the 'form.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\FormFactory A Symfony\Component\Form\FormFactory instance.
     */
    protected function getForm_FactoryService()
    {
        return $this->services['form.factory'] = new \Symfony\Component\Form\FormFactory($this->get('form.registry'), $this->get('form.resolved_type_factory'));
    }

    /**
     * Gets the 'form.registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\FormRegistry A Symfony\Component\Form\FormRegistry instance.
     */
    protected function getForm_RegistryService()
    {
        return $this->services['form.registry'] = new \Symfony\Component\Form\FormRegistry(array(0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension($this, array('form' => 'form.type.form', 'birthday' => 'form.type.birthday', 'checkbox' => 'form.type.checkbox', 'choice' => 'form.type.choice', 'collection' => 'form.type.collection', 'country' => 'form.type.country', 'date' => 'form.type.date', 'datetime' => 'form.type.datetime', 'email' => 'form.type.email', 'file' => 'form.type.file', 'hidden' => 'form.type.hidden', 'integer' => 'form.type.integer', 'language' => 'form.type.language', 'locale' => 'form.type.locale', 'money' => 'form.type.money', 'number' => 'form.type.number', 'password' => 'form.type.password', 'percent' => 'form.type.percent', 'radio' => 'form.type.radio', 'repeated' => 'form.type.repeated', 'search' => 'form.type.search', 'textarea' => 'form.type.textarea', 'text' => 'form.type.text', 'time' => 'form.type.time', 'timezone' => 'form.type.timezone', 'url' => 'form.type.url', 'button' => 'form.type.button', 'submit' => 'form.type.submit', 'reset' => 'form.type.reset', 'currency' => 'form.type.currency', 'entity' => 'form.type.entity', 'liip_imagine_image' => 'liip_imagine.form.type.image', 'genemu_recaptcha' => 'genemu.form.core.type.recaptcha', 'genemu_captcha' => 'genemu.form.core.type.captcha', 'genemu_plain' => 'genemu.form.core.type.plain', 'genemu_tinymce' => 'genemu.form.core.type.tinymce', 'genemu_ajaxmodel' => 'genemu.form.model.type.ajaxmodel', 'genemu_jquerycolor' => 'genemu.form.jquery.type.color', 'genemu_jquerydate' => 'genemu.form.jquery.type.date', 'genemu_jqueryfile' => 'genemu.form.jquery.type.file', 'genemu_jquerygeolocation' => 'genemu.form.jquery.type.geolocation', 'genemu_jqueryimage' => 'genemu.form.jquery.type.image', 'genemu_jqueryrating' => 'genemu.form.jquery.type.rating', 'genemu_jqueryslider' => 'genemu.form.jquery.type.slider', 'genemu_ajaxentity' => 'genemu.form.entity.type.ajaxentity', 'genemu_jqueryautocomplete_text' => 'genemu.form.jquery.type.autocomplete.text', 'genemu_jqueryautocomplete_entity' => 'genemu.form.jquery.type.autocomplete.entity', 'genemu_jqueryautocomplete_document' => 'genemu.form.jquery.type.autocomplete.document', 'genemu_jqueryselect2_choice' => 'genemu.form.jquery.type.select2.choice', 'genemu_jqueryselect2_language' => 'genemu.form.jquery.type.select2.language', 'genemu_jqueryselect2_country' => 'genemu.form.jquery.type.select2.country', 'genemu_jqueryselect2_timezone' => 'genemu.form.jquery.type.select2.timezone', 'genemu_jqueryselect2_locale' => 'genemu.form.jquery.type.select2.locale', 'genemu_jqueryselect2_entity' => 'genemu.form.jquery.type.select2.entity', 'genemu_jqueryselect2_document' => 'genemu.form.jquery.type.select2.document', 'genemu_jqueryselect2_model' => 'genemu.form.jquery.type.select2.model', 'genemu_jqueryselect2_currency' => 'genemu.form.jquery.type.select2.currency', 'genemu_jqueryselect2_hidden' => 'genemu.form.jquery.type.select2.hidden', 'genemu_jquerychosen_choice' => 'genemu.form.jquery.type.chosen.choice', 'genemu_jquerychosen_language' => 'genemu.form.jquery.type.chosen.language', 'genemu_jquerychosen_country' => 'genemu.form.jquery.type.chosen.country', 'genemu_jquerychosen_timezone' => 'genemu.form.jquery.type.chosen.timezone', 'genemu_jquerychosen_locale' => 'genemu.form.jquery.type.chosen.locale', 'genemu_jquerychosen_entity' => 'genemu.form.jquery.type.chosen.entity', 'genemu_jquerychosen_document' => 'genemu.form.jquery.type.chosen.document', 'genemu_jquerychosen_model' => 'genemu.form.jquery.type.chosen.model', 'genemu_jquerychosen_currency' => 'genemu.form.jquery.type.chosen.currency', 'genemu_jqueryautocompleter_choice' => 'genemu.form.jquery.type.autocompleter.choice', 'genemu_jqueryautocompleter_language' => 'genemu.form.jquery.type.autocompleter.language', 'genemu_jqueryautocompleter_country' => 'genemu.form.jquery.type.autocompleter.country', 'genemu_jqueryautocompleter_timezone' => 'genemu.form.jquery.type.autocompleter.timezone', 'genemu_jqueryautocompleter_locale' => 'genemu.form.jquery.type.autocompleter.locale', 'genemu_jqueryautocompleter_entity' => 'genemu.form.jquery.type.autocompleter.entity', 'genemu_jqueryautocompleter_document' => 'genemu.form.jquery.type.autocompleter.document', 'genemu_jqueryautocompleter_model' => 'genemu.form.jquery.type.autocompleter.model', 'genemu_jqueryautocompleter_currency' => 'genemu.form.jquery.type.autocompleter.currency', 'genemu_jquerytokeninput_choice' => 'genemu.form.jquery.type.tokeninput.choice', 'genemu_jquerytokeninput_language' => 'genemu.form.jquery.type.tokeninput.language', 'genemu_jquerytokeninput_country' => 'genemu.form.jquery.type.tokeninput.country', 'genemu_jquerytokeninput_timezone' => 'genemu.form.jquery.type.tokeninput.timezone', 'genemu_jquerytokeninput_locale' => 'genemu.form.jquery.type.tokeninput.locale', 'genemu_jquerytokeninput_entity' => 'genemu.form.jquery.type.tokeninput.entity', 'genemu_jquerytokeninput_document' => 'genemu.form.jquery.type.tokeninput.document', 'genemu_jquerytokeninput_model' => 'genemu.form.jquery.type.tokeninput.model', 'genemu_jquerytokeninput_currency' => 'genemu.form.jquery.type.tokeninput.currency', 'a2lix_translations' => 'a2lix_translation_form.default.type.translations', 'a2lix_translationsFields' => 'a2lix_translation_form.default.type.translationsfields', 'a2lix_translationsForms' => 'a2lix_translation_form.default.type.translationsforms', 'a2lix_translationsLocalesSelector' => 'a2lix_translation_form.default.type.translationslocalesselector', 'a2lix_translations_gedmo' => 'a2lix_translation_form.gedmo.type.translations', 'a2lix_translationsLocales_gedmo' => 'a2lix_translation_form.gedmo.type.translationslocales', 'oro_type_choice_ownership_type' => 'oro_organization.form.type.ownership_type', 'oro_business_unit' => 'oro_organization.form.type.business_unit', 'business_unit' => 'oro_organization.form.type.business_unit.api', 'oro_business_unit_tree' => 'oro_organization.form.type.business_unit_tree_type', 'oro_business_unit_tree_select' => 'oro_organization.form.type.business_unit_tree_select_type', 'oro_business_unit_select' => 'oro_organization.form.type.business_unit_select', 'oro_organization' => 'oro_organization.form.type.organization', 'oro_organization_select' => 'oro_organization.form.type.organization_select', 'oro_organizations_select' => 'oro_organization.form.type.organizations_select', 'oro_acl_access_level_selector' => 'oro_security.form.type.oro_acl_access_level_selector', 'oro_acl_label' => 'oro_security.form.type.object_label_type', 'oro_acl_collection' => 'oro_security.form.type.oro_acl_collection', 'oro_acl_privilege' => 'oro_security.form.type.oro_acl_privilege', 'oro_attachment_file_config' => 'oro_attachment.form.type.file_config', 'oro_file' => 'oro_attachment.form.type.file', 'oro_image' => 'oro_attachment.form.type.image', 'oro_email_autoresponserule' => 'oro_email.form.type.autoresponserule', 'oro_email_autoresponserule_condition' => 'oro_email.form.type.autoresponserule_condition', 'oro_email_autoresponse_template' => 'oro_email.form.type.autoresponse_template', 'oro_email_autoresponse_template_choice' => 'oro_email.form.type.autoresponse_template_choice', 'oro_email_emailtemplate' => 'oro_email.form.type.emailtemplate', 'oro_email_emailtemplate_translatation' => 'oro_email.form.type.emailtemplate_translation', 'oro_email_template_list' => 'oro_email.form.type.emailtemplate_select', 'oro_email_email' => 'oro_email.form.type.email', 'oro_email_email_api' => 'oro_email.form.type.email.api', 'oro_email_email_folder_api' => 'oro_email.form.type.email_folder.api', 'oro_email_email_address' => 'oro_email.form.type.email_address', 'oro_email_email_address_api' => 'oro_email.form.type.email_address.api', 'oro_email_attachment' => 'oro_email.form.type.attachment', 'oro_email_attachments' => 'oro_email.form.type.attachments', 'oro_email_contexts_select' => 'oro_email.form.type.contexts_select', 'oro_email_link_to_scope' => 'oro_email.form.type.email_link_to_scope', 'oro_email_mailbox_grid' => 'oro_email.form.type.mailbox_grid', 'oro_email_mailbox' => 'oro_email.form.type.mailbox', 'oro_email_email_folder' => 'oro_email.form.type.email_folder', 'oro_email_email_folder_tree' => 'oro_email.form.type.email_folder_tree', 'oro_type_originfolder_filter' => 'oro_email.form.type.filter.originfolder', 'oro_email_email_address_from' => 'oro_email.form.type.email_address_from', 'oro_email_email_address_recipients' => 'oro_email.form.type.email_address_recipients', 'oro_user_user' => 'oro_user.form.type.user', 'user' => 'oro_user.form.type.user.api', 'oro_change_password' => 'oro_user.form.type.change_password', 'oro_set_password' => 'oro_user.form.type.set_password.form.type', 'oro_user_email' => 'oro_user.form.type.email', 'role' => 'oro_user.form.type.role.api', 'oro_user_group' => 'oro_user.form.type.group', 'group' => 'oro_user.form.type.group.api', 'oro_user_reset' => 'oro_user.form.type.reset', 'oro_user_status' => 'oro_user.form.type.status', 'oro_user_select' => 'oro_user.form.type.user_select', 'oro_user_acl_select' => 'oro_user.form.type.user_acl_select', 'oro_user_organization_acl_select' => 'oro_user.form.type.organization_user_acl_select', 'oro_user_multiselect' => 'oro_user.form.type.user_multiselect', 'oro_role_multiselect' => 'oro_user.form.type.role_multiselect', 'oro_user_organization_acl_multiselect' => 'oro_user.form.type.organization_user_multiselect', 'oro_gender' => 'oro_user.form.type.gender', 'custom_entity_type' => 'oro_entity.form.type.custom_entity', 'oro_entity_choice' => 'oro_entity.form.type.entity_choice', 'oro_entity_field_choice' => 'oro_entity.form.type.entity_field_choice', 'oro_entity_field_select' => 'oro_entity.form.type.entity_field_select', 'oro_option_select' => 'oro_entity.form.type.option_select', 'oro_entity_select' => 'oro_entity.form.type.entity_select', 'oro_entity_config_type' => 'oro_entity_config.type.config', 'oro_entity_config_integer' => 'oro_entity_config.type.integer', 'oro_entity_config_text' => 'oro_entity_config.type.text', 'oro_entity_config_textarea' => 'oro_entity_config.type.textarea', 'oro_entity_config_choice' => 'oro_entity_config.type.choice', 'oro_entity_extend_entity_type' => 'oro_entity_extend.type.entity', 'oro_entity_extend_field_type' => 'oro_entity_extend.type.field', 'oro_entity_relation_type' => 'oro_entity_extend.type.relation', 'oro_entity_target_field_type' => 'oro_entity_extend.type.target_field_type', 'oro_entity_option_set' => 'oro_entity_extend.type.option_set', 'oro_entity_option_set_collection' => 'oro_entity_extend.type.option_set_collection', 'oro_entity_extend_integer' => 'oro_entity_extend.type.integer', 'oro_entity_extend_text' => 'oro_entity_extend.type.text', 'oro_entity_extend_textarea' => 'oro_entity_extend.type.textarea', 'oro_entity_extend_choice' => 'oro_entity_extend.type.choice', 'oro_entity_extend_association_choice' => 'oro_entity_extend.type.association_choice', 'oro_entity_extend_multiple_association_choice' => 'oro_entity_extend.type.multiple_association_choice', 'oro_entity_extend_association_property_integer' => 'oro_entity_extend.type.association.integer', 'oro_entity_extend_association_property_text' => 'oro_entity_extend.type.association.text', 'oro_entity_extend_association_property_textarea' => 'oro_entity_extend.type.association.textarea', 'oro_entity_extend_association_property_choice' => 'oro_entity_extend.type.association.choice', 'oro_entity_extend_unique_key_collection_type' => 'oro_entity_extend.type.unique_key_collection_type', 'oro_entity_extend_enum_value' => 'oro_entity_extend.type.enum_value', 'oro_entity_extend_enum_value_collection' => 'oro_entity_extend.type.enum_value_collection', 'oro_entity_extend_enum_name' => 'oro_entity_extend.type.enum_name', 'oro_entity_extend_enum_public' => 'oro_entity_extend.type.enum_public', 'oro_enum_choice' => 'oro_entity_extend.type.enum_choice', 'oro_enum_select' => 'oro_entity_extend.type.enum_select', 'oro_enum_filter' => 'oro_entity_extend.type.enum_filter', 'oro_dictionary_filter' => 'oro_entity_extend.type.dictionary_filter', 'oro_entity_extend_multiple_entity' => 'oro_entity_extend.type.multiple_entity', 'oro_integration_channel_form' => 'oro_integration.form.type.channel', 'oro_integration_type_select' => 'oro_integration.form.type.oro_integration_type_select', 'oro_integration_select' => 'oro_integration.form.type.oro_integration_select', 'oro_type_activity_list_filter' => 'oro_activity_list.form.type.activity_list_filter', 'oro_address' => 'oro_address.form.type.address', 'oro_address_collection' => 'oro_address.type.address_collection', 'oro_typed_address' => 'oro_address.form.type.typed_address', 'oro_email' => 'oro_address.form.type.email', 'oro_email_collection' => 'oro_address.type.email_collection', 'oro_phone' => 'oro_address.form.type.phone', 'oro_phone_collection' => 'oro_address.type.phone_collection', 'oro_country' => 'oro_address.form.type.country', 'oro_region' => 'oro_address.form.type.region', 'oro_calendar_event' => 'oro_calendar.calendar_event.form.type', 'oro_calendar_event_api' => 'oro_calendar.calendar_event.form.type.api', 'oro_calendar_event_invitees' => 'oro_calendar.calendar_event_invitees.form.type', 'oro_calendar_property_api' => 'oro_calendar.calendar_property.form.type.api', 'oro_calendar_choice' => 'oro_calendar.calendar_choice.form.type', 'oro_calendar_choice_template' => 'oro_calendar.calendar_choice_template.form.type', 'oro_system_calendar' => 'oro_calendar.system_calendar.form.type', 'oro_chart_setting' => 'oro_chart.form.type.settings', 'oro_chart_settings_collection' => 'oro_chart.form.type.settings.collection', 'oro_chart' => 'oro_chart.form.type', 'oro_config_form_type' => 'oro_config.type.form', 'oro_config_form_field_type' => 'oro_config.type.form_field', 'oro_config_parent_scope_checkbox_type' => 'oro_config.type.parent_scope_checkbox', 'oro_config_checkbox' => 'oro_config.type.config_checkbox', 'oro_type_audit_filter' => 'oro_dataaudit.form.type.filter', 'oro_datagrid_grid_view' => 'oro_datagrid.form.type.grid_view_type', 'oro_datagrid_sorting' => 'oro_datagrid.form.type.sorting_type', 'oro_composer_config' => 'oro_distribution.form.type.composer_config', 'oro_composer_repository' => 'oro_distribution.form.type.composer_repository', 'oro_available_embedded_forms' => 'oro_embedded_form.form_type.available_embedded_form', 'embedded_form' => 'oro_embedded_form.form_type', 'oro_entity_merge' => 'oro_entity_merge.form.type.merge', 'oro_entity_merge_field' => 'oro_entity_merge.form.type.merge_field', 'oro_type_date_range' => 'oro_filter.form.type.date_range', 'oro_type_datetime_range' => 'oro_filter.form.type.datetime_range', 'oro_type_filter' => 'oro_filter.form.type.filter', 'oro_type_choice_filter' => 'oro_filter.form.type.filter.choice', 'oro_type_text_filter' => 'oro_filter.form.type.filter.text', 'oro_type_number_filter' => 'oro_filter.form.type.filter.number', 'oro_type_date_range_filter' => 'oro_filter.form.type.filter.date_range', 'oro_type_datetime_range_filter' => 'oro_filter.form.type.filter.datetime_range', 'oro_type_boolean_filter' => 'oro_filter.form.type.filter.boolean', 'oro_type_entity_filter' => 'oro_filter.form.type.filter.entity', 'oro_type_selectrow_filter' => 'oro_filter.form.type.filter.selectrow', 'oro_type_many_to_many_filter' => 'oro_filter.form.type.filter.many_to_many', 'oro_type_dictionary_filter' => 'oro_filter.form.type.filter.dictionary', 'oro_date' => 'oro_form.type.date', 'oro_datetime' => 'oro_form.type.datetime', 'oro_time_interval' => 'oro_form.type.time_interval', 'oro_money' => 'oro_form.type.money', 'oro_percent' => 'oro_form.type.percent', 'oro_icon_select' => 'oro_form.type.icon', 'oro_entity_identifier' => 'oro_form.type.entity_identifier', 'oro_jqueryselect2_hidden' => 'oro_form.type.jqueryselect2_hidden', 'oro_multiple_entity' => 'oro_form.type.multiple_entity', 'oro_collection' => 'oro_form.type.collection', 'oro_entity_create_or_select' => 'oro_form.type.entity_create_or_select', 'oro_entity_create_or_select_choice' => 'oro_form.type.entity_create_or_select_choice', 'oro_simple_color_picker' => 'oro_form.type.simple_color_picker', 'oro_simple_color_choice' => 'oro_form.type.simple_color_choice', 'oro_color_table' => 'oro_form.type.color_table', 'oro_rich_text' => 'oro_form.type.rich_text', 'oro_resizeable_rich_text' => 'oro_form.type.resizeable_rich_text', 'oro_entity_changeset' => 'oro_form.type.entity_changeset', 'oro_encoded_password' => 'oro_form.type.encoded_password', 'oro_textlist' => 'oro_form.type.textlist', 'oro_entity_create_or_select_inline' => 'oro_form.type.oro_entity_create_or_select_inline', 'oro_link_type' => 'oro_form.type.link', 'oro_download_links_type' => 'oro_form.type.download_links', 'oro_api_type' => 'oro_form.type.api', 'oro_related_entity_api' => 'oro_form.related_entity.form.type.api', 'oro_related_entity_collection_api' => 'oro_form.related_entity_collection.form.type.api', 'oro_related_entity_standalone_collection_api' => 'oro_form.related_entity_standalone_collection.form.type.api', 'oro_imap_configuration' => 'oro_imap.form.type.configuration', 'oro_importexport_import' => 'oro_importexport.form.type.import', 'oro_installer_configuration' => 'oro_installer.form.type.configuration', 'oro_installer_configuration_database' => 'oro_installer.form.type.configuration.database', 'oro_installer_configuration_mailer' => 'oro_installer.form.type.configuration.mailer', 'oro_installer_configuration_system' => 'oro_installer.form.type.configuration.system', 'oro_installer_configuration_websocket' => 'oro_installer.form.type.configuration.websocket', 'oro_installer_setup' => 'oro_installer.form.type.setup', 'oro_name_format' => 'oro_locale.form.type.name_format', 'oro_locale_country' => 'oro_locale.form.type.country', 'oro_currency' => 'oro_locale.form.type.currency', 'oro_locale' => 'oro_locale.form.type.locale', 'oro_language' => 'oro_locale.form.type.language', 'oro_locale_timezone' => 'oro_locale.form.type.timezone', 'oro_quarter' => 'oro_locale.form.type.quarter', 'oro_note' => 'oro_note.form.type.note', 'oro_note_api' => 'oro_note.form.type.note_api', 'emailnotification' => 'oro_notification.form.type.email_notification', 'oro_notification_recipient_list' => 'oro_notification.form.type.recipient_list', 'oro_email_notification_entity_choice' => 'oro_notification.form.type.email_notification_entity_choice', 'emailnotification_api' => 'oro_notification.form.type.email_notification.api', 'oro_field_choice' => 'oro_query_designer.form.type.field_choice', 'oro_function_choice' => 'oro_query_designer.form.type.function_choice', 'oro_sorting_choice' => 'oro_query_designer.form.type.sorting_choice', 'oro_query_designer_column' => 'oro_query_designer.form.type.query_designer_column', 'oro_query_designer_filter' => 'oro_query_designer.form.type.query_designer_filter', 'oro_query_designer_grouping' => 'oro_query_designer.form.type.query_designer_grouping', 'oro_report' => 'oro_report.form.type.report', 'oro_report_entity_choice' => 'oro_report.form.type.entity_choice', 'oro_report_chart' => 'oro_report.form.type.chart', 'oro_report_chart_data_schema' => 'oro_report.form.type.chart.schema', 'oro_report_chart_data_schema_collection' => 'oro_report.form.type.chart.schema.collection', 'oro_segment' => 'oro_segment.form.type.segment', 'oro_segment_entity_choice' => 'oro_segment.form.type.entity_choice', 'oro_tag_tag' => 'oro_tag.form.type.tag.api', 'oro_tag_autocomplete' => 'oro_tag.form.type.tag_autocomplete', 'oro_tag_select' => 'oro_tag.form.type.tag_select', 'oro_tag_entity_tags_selector' => 'oro_tag.form.type.entity_tags_selector', 'oro_type_tag_filter' => 'oro_tag.form.type.entity_tags_filter', 'translatable_entity' => 'oro_translation.form.type.translatable_entity', 'oro_translation_available_translations' => 'oro_translation.form.type.available_translations', 'genemu_jqueryselect2_translatable_entity' => 'oro_translation.form.type.jqueryselect2_translatable_entity', 'oro_workflow_attributes' => 'oro_workflow.form.type.attributes', 'oro_workflow_transition' => 'oro_workflow.form.type.transition', 'oro_workflow_step_select' => 'oro_workflow.form.type.workflow_step_select', 'oro_workflow_select' => 'oro_workflow.form.type.workflow_select', 'oro_workflow_definition' => 'oro_workflow.form.type.workflow_definition', 'oro_workflow_applicable_entities' => 'oro_workflow.form.type.applicable_entities', 'oro_comment_api' => 'oro_comment.form.type.comment_api', 'oro_dashboard' => 'oro_dashboard.form.type.edit', 'oro_dashboard_select' => 'oro_dashboard.form.type.select', 'oro_type_widget_date_range' => 'oro_dashboard.form.type.widget_date_range', 'oro_type_widget_date_range_value' => 'oro_dashboard.form.type.widget_date_range_value', 'oro_type_widget_previous_date_range' => 'oro_dashboard.form.type.widget_previous_date_range', 'oro_type_widget_title' => 'oro_dashboard.form.type.widget_widget_title', 'oro_type_widget_items_choice' => 'oro_dashboard.form.type.widget_items_choice', 'oro_type_widget_item' => 'oro_dashboard.form.type.widget_item', 'oro_type_widget_items' => 'oro_dashboard.form.type.widget_items', 'pagestate' => 'oro_navigation.form.type.pagestate', 'oro_tracking_website' => 'oro_tracking.form.type.tracking_website', 'oro_reminder' => 'oro_reminder.form.type.reminder', 'oro_reminder_collection' => 'oro_reminder.form.type.reminder_collection', 'oro_reminder_method' => 'oro_reminder.form.type.method', 'oro_reminder_interval' => 'oro_reminder.form.type.reminder_interval', 'oro_reminder_interval_unit' => 'oro_reminder.form.type.reminder_interval.unit'), array('form' => array(0 => 'form.type_extension.form.http_foundation', 1 => 'form.type_extension.form.validator', 2 => 'form.type_extension.csrf', 3 => 'form.type_extension.form.data_collector', 4 => 'nelmio_api_doc.form.extension.description_form_type_extension', 5 => 'oro_organization.form.extension.owner', 6 => 'oro_organization.form.extension.organization', 7 => 'oro_entity.extension.unique_entity_extension', 8 => 'oro_entity_config.extension.config', 9 => 'oro_entity_extend.form.extension.dynamic_fields', 10 => 'oro_form.extension.data_block', 11 => 'oro_form.extension.client_validation', 12 => 'oro_help.form.tooltip_extension', 13 => 'oro_form.extension.constraint_as_option', 14 => 'oro_form.extension.js_validation', 15 => 'oro_form.extension.random_id', 16 => 'oro_form.extension.data_transformer', 17 => 'oro_form.extension.sortable', 18 => 'oro_reminder.form.extension.reminder'), 'repeated' => array(0 => 'form.type_extension.repeated.validator', 1 => 'oro_form.extension.js_validation.repeated'), 'submit' => array(0 => 'form.type_extension.submit.validator'), 'entity' => array(0 => 'oro_security.form.extension.aclprotected_type'), 'oro_email_mailbox' => array(0 => 'oro_email.form.extension.mailbox_unbound_rules'), 'oro_entity_config_type' => array(0 => 'oro_entity_extend.entity_config_type.extension.enum'), 'oro_acl_label' => array(0 => 'oro_calendar.extension.acl_label'), 'choice' => array(0 => 'oro_translation.form.extension.translatable_choice')), array(0 => 'oro_entity.form.guesser.form_config', 1 => 'oro_entity_extend.form.guesser.extend_field', 2 => 'oro_entity.form.guesser.doctrine_type', 3 => 'form.type_guesser.validator', 4 => 'form.type_guesser.doctrine'))), $this->get('form.resolved_type_factory'));
    }

    /**
     * Gets the 'form.resolved_type_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy A Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy instance.
     */
    protected function getForm_ResolvedTypeFactoryService()
    {
        return $this->services['form.resolved_type_factory'] = new \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy(new \Symfony\Component\Form\ResolvedFormTypeFactory(), $this->get('data_collector.form'));
    }

    /**
     * Gets the 'form.type.birthday' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\BirthdayType A Symfony\Component\Form\Extension\Core\Type\BirthdayType instance.
     */
    protected function getForm_Type_BirthdayService()
    {
        return $this->services['form.type.birthday'] = new \Symfony\Component\Form\Extension\Core\Type\BirthdayType();
    }

    /**
     * Gets the 'form.type.button' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\ButtonType A Symfony\Component\Form\Extension\Core\Type\ButtonType instance.
     */
    protected function getForm_Type_ButtonService()
    {
        return $this->services['form.type.button'] = new \Symfony\Component\Form\Extension\Core\Type\ButtonType();
    }

    /**
     * Gets the 'form.type.checkbox' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CheckboxType A Symfony\Component\Form\Extension\Core\Type\CheckboxType instance.
     */
    protected function getForm_Type_CheckboxService()
    {
        return $this->services['form.type.checkbox'] = new \Symfony\Component\Form\Extension\Core\Type\CheckboxType();
    }

    /**
     * Gets the 'form.type.choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\ChoiceType A Symfony\Component\Form\Extension\Core\Type\ChoiceType instance.
     */
    protected function getForm_Type_ChoiceService()
    {
        return $this->services['form.type.choice'] = new \Symfony\Component\Form\Extension\Core\Type\ChoiceType();
    }

    /**
     * Gets the 'form.type.collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CollectionType A Symfony\Component\Form\Extension\Core\Type\CollectionType instance.
     */
    protected function getForm_Type_CollectionService()
    {
        return $this->services['form.type.collection'] = new \Symfony\Component\Form\Extension\Core\Type\CollectionType();
    }

    /**
     * Gets the 'form.type.country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CountryType A Symfony\Component\Form\Extension\Core\Type\CountryType instance.
     */
    protected function getForm_Type_CountryService()
    {
        return $this->services['form.type.country'] = new \Symfony\Component\Form\Extension\Core\Type\CountryType();
    }

    /**
     * Gets the 'form.type.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CurrencyType A Symfony\Component\Form\Extension\Core\Type\CurrencyType instance.
     */
    protected function getForm_Type_CurrencyService()
    {
        return $this->services['form.type.currency'] = new \Symfony\Component\Form\Extension\Core\Type\CurrencyType();
    }

    /**
     * Gets the 'form.type.date' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\DateType A Symfony\Component\Form\Extension\Core\Type\DateType instance.
     */
    protected function getForm_Type_DateService()
    {
        return $this->services['form.type.date'] = new \Symfony\Component\Form\Extension\Core\Type\DateType();
    }

    /**
     * Gets the 'form.type.datetime' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\DateTimeType A Symfony\Component\Form\Extension\Core\Type\DateTimeType instance.
     */
    protected function getForm_Type_DatetimeService()
    {
        return $this->services['form.type.datetime'] = new \Symfony\Component\Form\Extension\Core\Type\DateTimeType();
    }

    /**
     * Gets the 'form.type.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\EmailType A Symfony\Component\Form\Extension\Core\Type\EmailType instance.
     */
    protected function getForm_Type_EmailService()
    {
        return $this->services['form.type.email'] = new \Symfony\Component\Form\Extension\Core\Type\EmailType();
    }

    /**
     * Gets the 'form.type.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Doctrine\Form\Type\EntityType A Symfony\Bridge\Doctrine\Form\Type\EntityType instance.
     */
    protected function getForm_Type_EntityService()
    {
        return $this->services['form.type.entity'] = new \Symfony\Bridge\Doctrine\Form\Type\EntityType($this->get('doctrine'));
    }

    /**
     * Gets the 'form.type.file' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\FileType A Symfony\Component\Form\Extension\Core\Type\FileType instance.
     */
    protected function getForm_Type_FileService()
    {
        return $this->services['form.type.file'] = new \Symfony\Component\Form\Extension\Core\Type\FileType();
    }

    /**
     * Gets the 'form.type.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\FormType A Symfony\Component\Form\Extension\Core\Type\FormType instance.
     */
    protected function getForm_Type_FormService()
    {
        return $this->services['form.type.form'] = new \Symfony\Component\Form\Extension\Core\Type\FormType($this->get('property_accessor'));
    }

    /**
     * Gets the 'form.type.hidden' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\HiddenType A Symfony\Component\Form\Extension\Core\Type\HiddenType instance.
     */
    protected function getForm_Type_HiddenService()
    {
        return $this->services['form.type.hidden'] = new \Symfony\Component\Form\Extension\Core\Type\HiddenType();
    }

    /**
     * Gets the 'form.type.integer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\IntegerType A Symfony\Component\Form\Extension\Core\Type\IntegerType instance.
     */
    protected function getForm_Type_IntegerService()
    {
        return $this->services['form.type.integer'] = new \Symfony\Component\Form\Extension\Core\Type\IntegerType();
    }

    /**
     * Gets the 'form.type.language' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\LanguageType A Symfony\Component\Form\Extension\Core\Type\LanguageType instance.
     */
    protected function getForm_Type_LanguageService()
    {
        return $this->services['form.type.language'] = new \Symfony\Component\Form\Extension\Core\Type\LanguageType();
    }

    /**
     * Gets the 'form.type.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\LocaleType A Symfony\Component\Form\Extension\Core\Type\LocaleType instance.
     */
    protected function getForm_Type_LocaleService()
    {
        return $this->services['form.type.locale'] = new \Symfony\Component\Form\Extension\Core\Type\LocaleType();
    }

    /**
     * Gets the 'form.type.money' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\MoneyType A Symfony\Component\Form\Extension\Core\Type\MoneyType instance.
     */
    protected function getForm_Type_MoneyService()
    {
        return $this->services['form.type.money'] = new \Symfony\Component\Form\Extension\Core\Type\MoneyType();
    }

    /**
     * Gets the 'form.type.number' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\NumberType A Symfony\Component\Form\Extension\Core\Type\NumberType instance.
     */
    protected function getForm_Type_NumberService()
    {
        return $this->services['form.type.number'] = new \Symfony\Component\Form\Extension\Core\Type\NumberType();
    }

    /**
     * Gets the 'form.type.password' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\PasswordType A Symfony\Component\Form\Extension\Core\Type\PasswordType instance.
     */
    protected function getForm_Type_PasswordService()
    {
        return $this->services['form.type.password'] = new \Symfony\Component\Form\Extension\Core\Type\PasswordType();
    }

    /**
     * Gets the 'form.type.percent' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\PercentType A Symfony\Component\Form\Extension\Core\Type\PercentType instance.
     */
    protected function getForm_Type_PercentService()
    {
        return $this->services['form.type.percent'] = new \Symfony\Component\Form\Extension\Core\Type\PercentType();
    }

    /**
     * Gets the 'form.type.radio' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\RadioType A Symfony\Component\Form\Extension\Core\Type\RadioType instance.
     */
    protected function getForm_Type_RadioService()
    {
        return $this->services['form.type.radio'] = new \Symfony\Component\Form\Extension\Core\Type\RadioType();
    }

    /**
     * Gets the 'form.type.repeated' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\RepeatedType A Symfony\Component\Form\Extension\Core\Type\RepeatedType instance.
     */
    protected function getForm_Type_RepeatedService()
    {
        return $this->services['form.type.repeated'] = new \Symfony\Component\Form\Extension\Core\Type\RepeatedType();
    }

    /**
     * Gets the 'form.type.reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\ResetType A Symfony\Component\Form\Extension\Core\Type\ResetType instance.
     */
    protected function getForm_Type_ResetService()
    {
        return $this->services['form.type.reset'] = new \Symfony\Component\Form\Extension\Core\Type\ResetType();
    }

    /**
     * Gets the 'form.type.search' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\SearchType A Symfony\Component\Form\Extension\Core\Type\SearchType instance.
     */
    protected function getForm_Type_SearchService()
    {
        return $this->services['form.type.search'] = new \Symfony\Component\Form\Extension\Core\Type\SearchType();
    }

    /**
     * Gets the 'form.type.submit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\SubmitType A Symfony\Component\Form\Extension\Core\Type\SubmitType instance.
     */
    protected function getForm_Type_SubmitService()
    {
        return $this->services['form.type.submit'] = new \Symfony\Component\Form\Extension\Core\Type\SubmitType();
    }

    /**
     * Gets the 'form.type.text' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TextType A Symfony\Component\Form\Extension\Core\Type\TextType instance.
     */
    protected function getForm_Type_TextService()
    {
        return $this->services['form.type.text'] = new \Symfony\Component\Form\Extension\Core\Type\TextType();
    }

    /**
     * Gets the 'form.type.textarea' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TextareaType A Symfony\Component\Form\Extension\Core\Type\TextareaType instance.
     */
    protected function getForm_Type_TextareaService()
    {
        return $this->services['form.type.textarea'] = new \Symfony\Component\Form\Extension\Core\Type\TextareaType();
    }

    /**
     * Gets the 'form.type.time' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TimeType A Symfony\Component\Form\Extension\Core\Type\TimeType instance.
     */
    protected function getForm_Type_TimeService()
    {
        return $this->services['form.type.time'] = new \Symfony\Component\Form\Extension\Core\Type\TimeType();
    }

    /**
     * Gets the 'form.type.timezone' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TimezoneType A Symfony\Component\Form\Extension\Core\Type\TimezoneType instance.
     */
    protected function getForm_Type_TimezoneService()
    {
        return $this->services['form.type.timezone'] = new \Symfony\Component\Form\Extension\Core\Type\TimezoneType();
    }

    /**
     * Gets the 'form.type.url' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\UrlType A Symfony\Component\Form\Extension\Core\Type\UrlType instance.
     */
    protected function getForm_Type_UrlService()
    {
        return $this->services['form.type.url'] = new \Symfony\Component\Form\Extension\Core\Type\UrlType();
    }

    /**
     * Gets the 'form.type_extension.csrf' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension A Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension instance.
     */
    protected function getForm_TypeExtension_CsrfService()
    {
        return $this->services['form.type_extension.csrf'] = new \Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension($this->get('security.csrf.token_manager'), true, '_token', $this->get('translator.default'), 'validators');
    }

    /**
     * Gets the 'form.type_extension.form.data_collector' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension A Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension instance.
     */
    protected function getForm_TypeExtension_Form_DataCollectorService()
    {
        return $this->services['form.type_extension.form.data_collector'] = new \Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension($this->get('data_collector.form'));
    }

    /**
     * Gets the 'form.type_extension.form.http_foundation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension A Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension instance.
     */
    protected function getForm_TypeExtension_Form_HttpFoundationService()
    {
        return $this->services['form.type_extension.form.http_foundation'] = new \Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension(new \Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler(new \Symfony\Component\Form\Util\ServerParams($this->get('request_stack'))));
    }

    /**
     * Gets the 'form.type_extension.form.validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension A Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension instance.
     */
    protected function getForm_TypeExtension_Form_ValidatorService()
    {
        return $this->services['form.type_extension.form.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension($this->get('validator'));
    }

    /**
     * Gets the 'form.type_extension.repeated.validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension A Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension instance.
     */
    protected function getForm_TypeExtension_Repeated_ValidatorService()
    {
        return $this->services['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension();
    }

    /**
     * Gets the 'form.type_extension.submit.validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension A Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension instance.
     */
    protected function getForm_TypeExtension_Submit_ValidatorService()
    {
        return $this->services['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension();
    }

    /**
     * Gets the 'form.type_guesser.doctrine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser A Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser instance.
     */
    protected function getForm_TypeGuesser_DoctrineService()
    {
        return $this->services['form.type_guesser.doctrine'] = new \Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser($this->get('doctrine'));
    }

    /**
     * Gets the 'form.type_guesser.validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser A Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser instance.
     */
    protected function getForm_TypeGuesser_ValidatorService()
    {
        return $this->services['form.type_guesser.validator'] = new \Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser($this->get('validator'));
    }

    /**
     * Gets the 'fos_js_routing.controller' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\JsRoutingBundle\Controller\Controller A FOS\JsRoutingBundle\Controller\Controller instance.
     */
    protected function getFosJsRouting_ControllerService()
    {
        return $this->services['fos_js_routing.controller'] = new \FOS\JsRoutingBundle\Controller\Controller($this->get('fos_js_routing.serializer'), $this->get('fos_js_routing.extractor'), array('enabled' => false), true);
    }

    /**
     * Gets the 'fos_js_routing.extractor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor A FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor instance.
     */
    protected function getFosJsRouting_ExtractorService()
    {
        return $this->services['fos_js_routing.extractor'] = new \FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor($this->get('router'), array(0 => 'oro_*'), 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev', array('OroCacheBundle' => 'Oro\\Bundle\\CacheBundle\\OroCacheBundle', 'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle', 'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle', 'OroSyncBundle' => 'Oro\\Bundle\\SyncBundle\\OroSyncBundle', 'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle', 'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle', 'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle', 'AsseticBundle' => 'Symfony\\Bundle\\AsseticBundle\\AsseticBundle', 'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle', 'DoctrineFixturesBundle' => 'Doctrine\\Bundle\\FixturesBundle\\DoctrineFixturesBundle', 'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle', 'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle', 'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle', 'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle', 'FOSJsRoutingBundle' => 'FOS\\JsRoutingBundle\\FOSJsRoutingBundle', 'NelmioApiDocBundle' => 'Nelmio\\ApiDocBundle\\NelmioApiDocBundle', 'BeSimpleSoapBundle' => 'BeSimple\\SoapBundle\\BeSimpleSoapBundle', 'StofDoctrineExtensionsBundle' => 'Stof\\DoctrineExtensionsBundle\\StofDoctrineExtensionsBundle', 'EscapeWSSEAuthenticationBundle' => 'Escape\\WSSEAuthenticationBundle\\EscapeWSSEAuthenticationBundle', 'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle', 'GenemuFormBundle' => 'Genemu\\Bundle\\FormBundle\\GenemuFormBundle', 'A2lixTranslationFormBundle' => 'A2lix\\TranslationFormBundle\\A2lixTranslationFormBundle', 'LexikMaintenanceBundle' => 'Lexik\\Bundle\\MaintenanceBundle\\LexikMaintenanceBundle', 'OroLayoutBundle' => 'Oro\\Bundle\\LayoutBundle\\OroLayoutBundle', 'OroUIBundle' => 'Oro\\Bundle\\UIBundle\\OroUIBundle', 'OroOrganizationBundle' => 'Oro\\Bundle\\OrganizationBundle\\OroOrganizationBundle', 'OroSecurityBundle' => 'Oro\\Bundle\\SecurityBundle\\OroSecurityBundle', 'OroAttachmentBundle' => 'Oro\\Bundle\\AttachmentBundle\\OroAttachmentBundle', 'OroEmailBundle' => 'Oro\\Bundle\\EmailBundle\\OroEmailBundle', 'OroUserBundle' => 'Oro\\Bundle\\UserBundle\\OroUserBundle', 'HWIOAuthBundle' => 'HWI\\Bundle\\OAuthBundle\\HWIOAuthBundle', 'OroSSOBundle' => 'Oro\\Bundle\\SSOBundle\\OroSSOBundle', 'OroEntityBundle' => 'Oro\\Bundle\\EntityBundle\\OroEntityBundle', 'OroEntityConfigBundle' => 'Oro\\Bundle\\EntityConfigBundle\\OroEntityConfigBundle', 'OroEntityExtendBundle' => 'Oro\\Bundle\\EntityExtendBundle\\OroEntityExtendBundle', 'OroIntegrationBundle' => 'Oro\\Bundle\\IntegrationBundle\\OroIntegrationBundle', 'AkeneoBatchBundle' => 'Akeneo\\Bundle\\BatchBundle\\AkeneoBatchBundle', 'JDareClankBundle' => 'JDare\\ClankBundle\\JDareClankBundle', 'JMSJobQueueBundle' => 'JMS\\JobQueueBundle\\JMSJobQueueBundle', 'KnpGaufretteBundle' => 'Knp\\Bundle\\GaufretteBundle\\KnpGaufretteBundle', 'MainStockValueBundle' => 'Main\\StockValueBundle\\MainStockValueBundle', 'OroActivityBundle' => 'Oro\\Bundle\\ActivityBundle\\OroActivityBundle', 'OroActivityListBundle' => 'Oro\\Bundle\\ActivityListBundle\\OroActivityListBundle', 'OroAddressBundle' => 'Oro\\Bundle\\AddressBundle\\OroAddressBundle', 'OroAsseticBundle' => 'Oro\\Bundle\\AsseticBundle\\OroAsseticBundle', 'OroBatchBundle' => 'Oro\\Bundle\\BatchBundle\\OroBatchBundle', 'OroBusinessEntitiesBundle' => 'Oro\\Bundle\\BusinessEntitiesBundle\\OroBusinessEntitiesBundle', 'OroCalendarBundle' => 'Oro\\Bundle\\CalendarBundle\\OroCalendarBundle', 'OroChartBundle' => 'Oro\\Bundle\\ChartBundle\\OroChartBundle', 'OroConfigBundle' => 'Oro\\Bundle\\ConfigBundle\\OroConfigBundle', 'OroCronBundle' => 'Oro\\Bundle\\CronBundle\\OroCronBundle', 'OroDataAuditBundle' => 'Oro\\Bundle\\DataAuditBundle\\OroDataAuditBundle', 'OroDataGridBundle' => 'Oro\\Bundle\\DataGridBundle\\OroDataGridBundle', 'OroDistributionBundle' => 'Oro\\Bundle\\DistributionBundle\\OroDistributionBundle', 'OroEmbeddedFormBundle' => 'Oro\\Bundle\\EmbeddedFormBundle\\OroEmbeddedFormBundle', 'OroEntityMergeBundle' => 'Oro\\Bundle\\EntityMergeBundle\\OroEntityMergeBundle', 'OroEntityPaginationBundle' => 'Oro\\Bundle\\EntityPaginationBundle\\OroEntityPaginationBundle', 'OroFilterBundle' => 'Oro\\Bundle\\FilterBundle\\OroFilterBundle', 'OroFormBundle' => 'Oro\\Bundle\\FormBundle\\OroFormBundle', 'OroHelpBundle' => 'Oro\\Bundle\\HelpBundle\\OroHelpBundle', 'OroImapBundle' => 'Oro\\Bundle\\ImapBundle\\OroImapBundle', 'OroImportExportBundle' => 'Oro\\Bundle\\ImportExportBundle\\OroImportExportBundle', 'OroInstallerBundle' => 'Oro\\Bundle\\InstallerBundle\\OroInstallerBundle', 'OroLocaleBundle' => 'Oro\\Bundle\\LocaleBundle\\OroLocaleBundle', 'OroMigrationBundle' => 'Oro\\Bundle\\MigrationBundle\\OroMigrationBundle', 'OroNoteBundle' => 'Oro\\Bundle\\NoteBundle\\OroNoteBundle', 'OroNotificationBundle' => 'Oro\\Bundle\\NotificationBundle\\OroNotificationBundle', 'OroPlatformBundle' => 'Oro\\Bundle\\PlatformBundle\\OroPlatformBundle', 'OroQueryDesignerBundle' => 'Oro\\Bundle\\QueryDesignerBundle\\OroQueryDesignerBundle', 'OroReportBundle' => 'Oro\\Bundle\\ReportBundle\\OroReportBundle', 'OroRequireJSBundle' => 'Oro\\Bundle\\RequireJSBundle\\OroRequireJSBundle', 'OroSearchBundle' => 'Oro\\Bundle\\SearchBundle\\OroSearchBundle', 'OroSegmentBundle' => 'Oro\\Bundle\\SegmentBundle\\OroSegmentBundle', 'OroSidebarBundle' => 'Oro\\Bundle\\SidebarBundle\\OroSidebarBundle', 'OroSoapBundle' => 'Oro\\Bundle\\SoapBundle\\OroSoapBundle', 'OroTagBundle' => 'Oro\\Bundle\\TagBundle\\OroTagBundle', 'OroThemeBundle' => 'Oro\\Bundle\\ThemeBundle\\OroThemeBundle', 'OroTranslationBundle' => 'Oro\\Bundle\\TranslationBundle\\OroTranslationBundle', 'OroWindowsBundle' => 'Oro\\Bundle\\WindowsBundle\\OroWindowsBundle', 'OroWorkflowBundle' => 'Oro\\Bundle\\WorkflowBundle\\OroWorkflowBundle', 'SecurityStockValueBundle' => 'Security\\StockValueBundle\\SecurityStockValueBundle', 'SyliusFlowBundle' => 'Sylius\\Bundle\\FlowBundle\\SyliusFlowBundle', 'OroCommentBundle' => 'Oro\\Bundle\\CommentBundle\\OroCommentBundle', 'OroDashboardBundle' => 'Oro\\Bundle\\DashboardBundle\\OroDashboardBundle', 'OroNavigationBundle' => 'Oro\\Bundle\\NavigationBundle\\OroNavigationBundle', 'OroTrackingBundle' => 'Oro\\Bundle\\TrackingBundle\\OroTrackingBundle', 'OroReminderBundle' => 'Oro\\Bundle\\ReminderBundle\\OroReminderBundle', 'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle', 'SensioDistributionBundle' => 'Sensio\\Bundle\\DistributionBundle\\SensioDistributionBundle'));
    }

    /**
     * Gets the 'fos_js_routing.serializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Serializer\Serializer A Symfony\Component\Serializer\Serializer instance.
     */
    protected function getFosJsRouting_SerializerService()
    {
        return $this->services['fos_js_routing.serializer'] = new \Symfony\Component\Serializer\Serializer(array(0 => new \Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer()), array('json' => new \Symfony\Component\Serializer\Encoder\JsonEncoder()));
    }

    /**
     * Gets the 'fos_rest.body_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\EventListener\BodyListener A FOS\RestBundle\EventListener\BodyListener instance.
     */
    protected function getFosRest_BodyListenerService()
    {
        $this->services['fos_rest.body_listener'] = $instance = new \FOS\RestBundle\EventListener\BodyListener($this->get('fos_rest.decoder_provider'), false);

        $instance->setDefaultFormat(NULL);

        return $instance;
    }

    /**
     * Gets the 'fos_rest.decoder.json' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Decoder\JsonDecoder A FOS\RestBundle\Decoder\JsonDecoder instance.
     */
    protected function getFosRest_Decoder_JsonService()
    {
        return $this->services['fos_rest.decoder.json'] = new \FOS\RestBundle\Decoder\JsonDecoder();
    }

    /**
     * Gets the 'fos_rest.decoder.jsontoform' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Decoder\JsonToFormDecoder A FOS\RestBundle\Decoder\JsonToFormDecoder instance.
     */
    protected function getFosRest_Decoder_JsontoformService()
    {
        return $this->services['fos_rest.decoder.jsontoform'] = new \FOS\RestBundle\Decoder\JsonToFormDecoder();
    }

    /**
     * Gets the 'fos_rest.decoder.xml' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Decoder\XmlDecoder A FOS\RestBundle\Decoder\XmlDecoder instance.
     */
    protected function getFosRest_Decoder_XmlService()
    {
        return $this->services['fos_rest.decoder.xml'] = new \FOS\RestBundle\Decoder\XmlDecoder();
    }

    /**
     * Gets the 'fos_rest.decoder_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Decoder\ContainerDecoderProvider A FOS\RestBundle\Decoder\ContainerDecoderProvider instance.
     */
    protected function getFosRest_DecoderProviderService()
    {
        $this->services['fos_rest.decoder_provider'] = $instance = new \FOS\RestBundle\Decoder\ContainerDecoderProvider(array('json' => 'fos_rest.decoder.json'));

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'fos_rest.exception_format_negotiator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Util\FormatNegotiator A FOS\RestBundle\Util\FormatNegotiator instance.
     */
    protected function getFosRest_ExceptionFormatNegotiatorService()
    {
        $this->services['fos_rest.exception_format_negotiator'] = $instance = new \FOS\RestBundle\Util\FormatNegotiator();

        $instance->add($this->get('fos_rest.request_matcher.50d7031fd332f324b33953b2158cded5b34cf57c3cd709fdaa24d6818252fd77ab4624ee'), array('methods' => NULL, 'priorities' => array(0 => 'html', 1 => 'json'), 'fallback_format' => 'html', 'prefer_extension' => '2.0'));
        $instance->add($this->get('fos_rest.request_matcher.23fd25bbfcedbffe3e33ba20fa663bbc40b82f2b723fb0ffbd7027cee94f4dac389a22fa'), array('priorities' => array(0 => 'json'), 'fallback_format' => 'json', 'prefer_extension' => false, 'methods' => NULL, 'stop' => false));
        $instance->add($this->get('fos_rest.request_matcher.113eaebe4b0f43058a028904ffe5ac13f47c9c6add959b79cc6cfe86c113ae5131da5524'), array('stop' => true, 'methods' => NULL, 'prefer_extension' => '2.0', 'fallback_format' => 'html', 'priorities' => array()));
        $instance->add($this->get('fos_rest.request_matcher.0dfc4cce134bee15f08405cb5cea4845b13ff7d8c8f779004218432a2c552bd0cd9f9d27'), array('stop' => true, 'methods' => NULL, 'prefer_extension' => '2.0', 'fallback_format' => 'html', 'priorities' => array()));

        return $instance;
    }

    /**
     * Gets the 'fos_rest.format_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\EventListener\FormatListener A FOS\RestBundle\EventListener\FormatListener instance.
     */
    protected function getFosRest_FormatListenerService()
    {
        return $this->services['fos_rest.format_listener'] = new \FOS\RestBundle\EventListener\FormatListener($this->get('fos_rest.format_negotiator'));
    }

    /**
     * Gets the 'fos_rest.format_negotiator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Util\FormatNegotiator A FOS\RestBundle\Util\FormatNegotiator instance.
     */
    protected function getFosRest_FormatNegotiatorService()
    {
        $this->services['fos_rest.format_negotiator'] = $instance = new \FOS\RestBundle\Util\FormatNegotiator();

        $instance->add($this->get('fos_rest.request_matcher.50d7031fd332f324b33953b2158cded5b34cf57c3cd709fdaa24d6818252fd77ab4624ee'), array('methods' => NULL, 'priorities' => array(0 => 'html', 1 => 'json'), 'fallback_format' => 'html', 'prefer_extension' => '2.0'));
        $instance->add($this->get('fos_rest.request_matcher.23fd25bbfcedbffe3e33ba20fa663bbc40b82f2b723fb0ffbd7027cee94f4dac389a22fa'), array('priorities' => array(0 => 'json'), 'fallback_format' => 'json', 'prefer_extension' => false, 'methods' => NULL, 'stop' => false));
        $instance->add($this->get('fos_rest.request_matcher.113eaebe4b0f43058a028904ffe5ac13f47c9c6add959b79cc6cfe86c113ae5131da5524'), array('stop' => true, 'methods' => NULL, 'prefer_extension' => '2.0', 'fallback_format' => 'html', 'priorities' => array()));
        $instance->add($this->get('fos_rest.request_matcher.0dfc4cce134bee15f08405cb5cea4845b13ff7d8c8f779004218432a2c552bd0cd9f9d27'), array('stop' => true, 'methods' => NULL, 'prefer_extension' => '2.0', 'fallback_format' => 'html', 'priorities' => array()));

        return $instance;
    }

    /**
     * Gets the 'fos_rest.inflector.doctrine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Util\Inflector\DoctrineInflector A FOS\RestBundle\Util\Inflector\DoctrineInflector instance.
     */
    protected function getFosRest_Inflector_DoctrineService()
    {
        return $this->services['fos_rest.inflector.doctrine'] = new \FOS\RestBundle\Util\Inflector\DoctrineInflector();
    }

    /**
     * Gets the 'fos_rest.normalizer.camel_keys' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Normalizer\CamelKeysNormalizer A FOS\RestBundle\Normalizer\CamelKeysNormalizer instance.
     */
    protected function getFosRest_Normalizer_CamelKeysService()
    {
        return $this->services['fos_rest.normalizer.camel_keys'] = new \FOS\RestBundle\Normalizer\CamelKeysNormalizer();
    }

    /**
     * Gets the 'fos_rest.request.param_fetcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Request\ParamFetcher A FOS\RestBundle\Request\ParamFetcher instance.
     * 
     * @throws InactiveScopeException when the 'fos_rest.request.param_fetcher' service is requested while the 'request' scope is not active
     */
    protected function getFosRest_Request_ParamFetcherService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('fos_rest.request.param_fetcher', 'request');
        }

        return $this->services['fos_rest.request.param_fetcher'] = $this->scopedServices['request']['fos_rest.request.param_fetcher'] = new \FOS\RestBundle\Request\ParamFetcher($this->get('fos_rest.request.param_fetcher.reader'), $this->get('request'), $this->get('fos_rest.violation_formatter'), $this->get('validator', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'fos_rest.request.param_fetcher.reader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Request\ParamReader A FOS\RestBundle\Request\ParamReader instance.
     */
    protected function getFosRest_Request_ParamFetcher_ReaderService()
    {
        return $this->services['fos_rest.request.param_fetcher.reader'] = new \FOS\RestBundle\Request\ParamReader($this->get('annotation_reader'));
    }

    /**
     * Gets the 'fos_rest.routing.loader.controller' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Routing\Loader\RestRouteLoader A FOS\RestBundle\Routing\Loader\RestRouteLoader instance.
     */
    protected function getFosRest_Routing_Loader_ControllerService()
    {
        return $this->services['fos_rest.routing.loader.controller'] = new \FOS\RestBundle\Routing\Loader\RestRouteLoader($this, $this->get('file_locator'), $this->get('controller_name_converter'), $this->get('fos_rest.routing.loader.reader.controller'), 'json');
    }

    /**
     * Gets the 'fos_rest.routing.loader.processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Routing\Loader\RestRouteProcessor A FOS\RestBundle\Routing\Loader\RestRouteProcessor instance.
     */
    protected function getFosRest_Routing_Loader_ProcessorService()
    {
        return $this->services['fos_rest.routing.loader.processor'] = new \FOS\RestBundle\Routing\Loader\RestRouteProcessor();
    }

    /**
     * Gets the 'fos_rest.routing.loader.reader.action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Routing\Loader\Reader\RestActionReader A FOS\RestBundle\Routing\Loader\Reader\RestActionReader instance.
     */
    protected function getFosRest_Routing_Loader_Reader_ActionService()
    {
        return $this->services['fos_rest.routing.loader.reader.action'] = new \FOS\RestBundle\Routing\Loader\Reader\RestActionReader($this->get('annotation_reader'), $this->get('fos_rest.request.param_fetcher.reader'), $this->get('fos_rest.inflector.doctrine'), true, array('json' => false, 'html' => true));
    }

    /**
     * Gets the 'fos_rest.routing.loader.reader.controller' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Routing\Loader\Reader\RestControllerReader A FOS\RestBundle\Routing\Loader\Reader\RestControllerReader instance.
     */
    protected function getFosRest_Routing_Loader_Reader_ControllerService()
    {
        return $this->services['fos_rest.routing.loader.reader.controller'] = new \FOS\RestBundle\Routing\Loader\Reader\RestControllerReader($this->get('fos_rest.routing.loader.reader.action'), $this->get('annotation_reader'));
    }

    /**
     * Gets the 'fos_rest.routing.loader.xml_collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader A FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader instance.
     */
    protected function getFosRest_Routing_Loader_XmlCollectionService()
    {
        return $this->services['fos_rest.routing.loader.xml_collection'] = new \FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader($this->get('file_locator'), $this->get('fos_rest.routing.loader.processor'), true, array('json' => false, 'html' => true), 'json');
    }

    /**
     * Gets the 'fos_rest.routing.loader.yaml_collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader A FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader instance.
     */
    protected function getFosRest_Routing_Loader_YamlCollectionService()
    {
        return $this->services['fos_rest.routing.loader.yaml_collection'] = new \FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader($this->get('file_locator'), $this->get('fos_rest.routing.loader.processor'), true, array('json' => false, 'html' => true), 'json');
    }

    /**
     * Gets the 'fos_rest.serializer.exception_wrapper_serialize_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Serializer\ExceptionWrapperSerializeHandler A FOS\RestBundle\Serializer\ExceptionWrapperSerializeHandler instance.
     */
    protected function getFosRest_Serializer_ExceptionWrapperSerializeHandlerService()
    {
        return $this->services['fos_rest.serializer.exception_wrapper_serialize_handler'] = new \FOS\RestBundle\Serializer\ExceptionWrapperSerializeHandler();
    }

    /**
     * Gets the 'fos_rest.view.exception_wrapper_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\View\ExceptionWrapperHandler A FOS\RestBundle\View\ExceptionWrapperHandler instance.
     */
    protected function getFosRest_View_ExceptionWrapperHandlerService()
    {
        return $this->services['fos_rest.view.exception_wrapper_handler'] = new \FOS\RestBundle\View\ExceptionWrapperHandler();
    }

    /**
     * Gets the 'fos_rest.view_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\View\ViewHandler A FOS\RestBundle\View\ViewHandler instance.
     */
    protected function getFosRest_ViewHandlerService()
    {
        $this->services['fos_rest.view_handler'] = $instance = new \FOS\RestBundle\View\ViewHandler(array('json' => false, 'html' => true), 400, 204, false, array('html' => 302), 'php');

        $instance->setExclusionStrategyGroups('');
        $instance->setExclusionStrategyVersion('');
        $instance->setSerializeNullStrategy(false);
        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'fos_rest.violation_formatter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Util\ViolationFormatter A FOS\RestBundle\Util\ViolationFormatter instance.
     */
    protected function getFosRest_ViolationFormatterService()
    {
        return $this->services['fos_rest.violation_formatter'] = new \FOS\RestBundle\Util\ViolationFormatter();
    }

    /**
     * Gets the 'fragment.handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler A Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler instance.
     */
    protected function getFragment_HandlerService()
    {
        $this->services['fragment.handler'] = $instance = new \Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler($this, true, $this->get('request_stack'));

        $instance->addRendererService('inline', 'fragment.renderer.inline');
        $instance->addRendererService('hinclude', 'fragment.renderer.hinclude');
        $instance->addRendererService('esi', 'fragment.renderer.esi');
        $instance->addRendererService('ssi', 'fragment.renderer.ssi');

        return $instance;
    }

    /**
     * Gets the 'fragment.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\FragmentListener A Symfony\Component\HttpKernel\EventListener\FragmentListener instance.
     */
    protected function getFragment_ListenerService()
    {
        return $this->services['fragment.listener'] = new \Symfony\Component\HttpKernel\EventListener\FragmentListener($this->get('uri_signer'), '/_fragment');
    }

    /**
     * Gets the 'fragment.renderer.esi' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer A Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer instance.
     */
    protected function getFragment_Renderer_EsiService()
    {
        $this->services['fragment.renderer.esi'] = $instance = new \Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer(NULL, $this->get('fragment.renderer.inline'), $this->get('uri_signer'));

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the 'fragment.renderer.hinclude' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer A Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer instance.
     */
    protected function getFragment_Renderer_HincludeService()
    {
        $this->services['fragment.renderer.hinclude'] = $instance = new \Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer($this->get('templating'), $this->get('uri_signer'), NULL);

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the 'fragment.renderer.inline' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer A Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer instance.
     */
    protected function getFragment_Renderer_InlineService()
    {
        $this->services['fragment.renderer.inline'] = $instance = new \Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer($this->get('http_kernel'), $this->get('debug.event_dispatcher'));

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the 'fragment.renderer.ssi' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer A Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer instance.
     */
    protected function getFragment_Renderer_SsiService()
    {
        $this->services['fragment.renderer.ssi'] = $instance = new \Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer(NULL, $this->get('fragment.renderer.inline'), $this->get('uri_signer'));

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the 'genemu.form.core.type.captcha' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\Core\Type\CaptchaType A Genemu\Bundle\FormBundle\Form\Core\Type\CaptchaType instance.
     */
    protected function getGenemu_Form_Core_Type_CaptchaService()
    {
        return $this->services['genemu.form.core.type.captcha'] = new \Genemu\Bundle\FormBundle\Form\Core\Type\CaptchaType($this->get('genemu.gd.captcha'), array('enabled' => true, 'driver' => 'gd', 'width' => 100, 'height' => 30, 'length' => 4, 'format' => 'png', 'chars' => array(0 => 0, 1 => 1, 2 => 2, 3 => 3, 4 => 4, 5 => 5, 6 => 6, 7 => 7, 8 => 8, 9 => 9), 'font_size' => 18, 'grayscale' => false, 'font_color' => array(0 => '252525', 1 => '8B8787', 2 => '550707', 3 => '3526E6', 4 => '88531E'), 'fonts' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\app/../web/bundles/genemuform/fonts/akbar.ttf', 1 => 'C:\\wamp\\www\\stockvalue~~\\app/../web/bundles/genemuform/fonts/brushcut.ttf', 2 => 'C:\\wamp\\www\\stockvalue~~\\app/../web/bundles/genemuform/fonts/molten.ttf', 3 => 'C:\\wamp\\www\\stockvalue~~\\app/../web/bundles/genemuform/fonts/planetbe.ttf', 4 => 'C:\\wamp\\www\\stockvalue~~\\app/../web/bundles/genemuform/fonts/whoobub.ttf'), 'background_color' => 'DDDDDD', 'border_color' => '000000', 'code' => NULL));
    }

    /**
     * Gets the 'genemu.form.core.type.plain' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\Core\Type\PlainType A Genemu\Bundle\FormBundle\Form\Core\Type\PlainType instance.
     */
    protected function getGenemu_Form_Core_Type_PlainService()
    {
        return $this->services['genemu.form.core.type.plain'] = new \Genemu\Bundle\FormBundle\Form\Core\Type\PlainType();
    }

    /**
     * Gets the 'genemu.form.core.type.recaptcha' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\Core\Type\ReCaptchaType A Genemu\Bundle\FormBundle\Form\Core\Type\ReCaptchaType instance.
     */
    protected function getGenemu_Form_Core_Type_RecaptchaService()
    {
        return $this->services['genemu.form.core.type.recaptcha'] = new \Genemu\Bundle\FormBundle\Form\Core\Type\ReCaptchaType($this->get('genemu.form.type_recaptcha.validator'), '', '', array());
    }

    /**
     * Gets the 'genemu.form.core.type.tinymce' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\Core\Type\TinymceType A Genemu\Bundle\FormBundle\Form\Core\Type\TinymceType instance.
     */
    protected function getGenemu_Form_Core_Type_TinymceService()
    {
        return $this->services['genemu.form.core.type.tinymce'] = new \Genemu\Bundle\FormBundle\Form\Core\Type\TinymceType(array('theme' => 'advanced'));
    }

    /**
     * Gets the 'genemu.form.entity.type.ajaxentity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\Doctrine\Type\AjaxEntityType A Genemu\Bundle\FormBundle\Form\Doctrine\Type\AjaxEntityType instance.
     */
    protected function getGenemu_Form_Entity_Type_AjaxentityService()
    {
        return $this->services['genemu.form.entity.type.ajaxentity'] = new \Genemu\Bundle\FormBundle\Form\Doctrine\Type\AjaxEntityType($this->get('doctrine', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'genemu.form.jquery.type.autocomplete.document' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleteType A Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleteType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Autocomplete_DocumentService()
    {
        return $this->services['genemu.form.jquery.type.autocomplete.document'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleteType('document', NULL);
    }

    /**
     * Gets the 'genemu.form.jquery.type.autocomplete.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleteType A Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleteType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Autocomplete_EntityService()
    {
        return $this->services['genemu.form.jquery.type.autocomplete.entity'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleteType('entity', $this->get('doctrine', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'genemu.form.jquery.type.autocomplete.text' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleteType A Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleteType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Autocomplete_TextService()
    {
        return $this->services['genemu.form.jquery.type.autocomplete.text'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleteType('text');
    }

    /**
     * Gets the 'genemu.form.jquery.type.autocompleter.choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType A Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Autocompleter_ChoiceService()
    {
        return $this->services['genemu.form.jquery.type.autocompleter.choice'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType('choice');
    }

    /**
     * Gets the 'genemu.form.jquery.type.autocompleter.country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType A Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Autocompleter_CountryService()
    {
        return $this->services['genemu.form.jquery.type.autocompleter.country'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType('country');
    }

    /**
     * Gets the 'genemu.form.jquery.type.autocompleter.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType A Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Autocompleter_CurrencyService()
    {
        return $this->services['genemu.form.jquery.type.autocompleter.currency'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType('currency');
    }

    /**
     * Gets the 'genemu.form.jquery.type.autocompleter.document' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType A Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Autocompleter_DocumentService()
    {
        return $this->services['genemu.form.jquery.type.autocompleter.document'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType('document');
    }

    /**
     * Gets the 'genemu.form.jquery.type.autocompleter.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType A Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Autocompleter_EntityService()
    {
        return $this->services['genemu.form.jquery.type.autocompleter.entity'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType('entity');
    }

    /**
     * Gets the 'genemu.form.jquery.type.autocompleter.language' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType A Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Autocompleter_LanguageService()
    {
        return $this->services['genemu.form.jquery.type.autocompleter.language'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType('language');
    }

    /**
     * Gets the 'genemu.form.jquery.type.autocompleter.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType A Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Autocompleter_LocaleService()
    {
        return $this->services['genemu.form.jquery.type.autocompleter.locale'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType('locale');
    }

    /**
     * Gets the 'genemu.form.jquery.type.autocompleter.model' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType A Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Autocompleter_ModelService()
    {
        return $this->services['genemu.form.jquery.type.autocompleter.model'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType('model');
    }

    /**
     * Gets the 'genemu.form.jquery.type.autocompleter.timezone' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType A Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Autocompleter_TimezoneService()
    {
        return $this->services['genemu.form.jquery.type.autocompleter.timezone'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\AutocompleterType('timezone');
    }

    /**
     * Gets the 'genemu.form.jquery.type.chosen.choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType A Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Chosen_ChoiceService()
    {
        return $this->services['genemu.form.jquery.type.chosen.choice'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType('choice');
    }

    /**
     * Gets the 'genemu.form.jquery.type.chosen.country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType A Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Chosen_CountryService()
    {
        return $this->services['genemu.form.jquery.type.chosen.country'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType('country');
    }

    /**
     * Gets the 'genemu.form.jquery.type.chosen.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType A Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Chosen_CurrencyService()
    {
        return $this->services['genemu.form.jquery.type.chosen.currency'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType('currency');
    }

    /**
     * Gets the 'genemu.form.jquery.type.chosen.document' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType A Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Chosen_DocumentService()
    {
        return $this->services['genemu.form.jquery.type.chosen.document'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType('document');
    }

    /**
     * Gets the 'genemu.form.jquery.type.chosen.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType A Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Chosen_EntityService()
    {
        return $this->services['genemu.form.jquery.type.chosen.entity'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType('entity');
    }

    /**
     * Gets the 'genemu.form.jquery.type.chosen.language' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType A Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Chosen_LanguageService()
    {
        return $this->services['genemu.form.jquery.type.chosen.language'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType('language');
    }

    /**
     * Gets the 'genemu.form.jquery.type.chosen.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType A Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Chosen_LocaleService()
    {
        return $this->services['genemu.form.jquery.type.chosen.locale'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType('locale');
    }

    /**
     * Gets the 'genemu.form.jquery.type.chosen.model' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType A Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Chosen_ModelService()
    {
        return $this->services['genemu.form.jquery.type.chosen.model'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType('model');
    }

    /**
     * Gets the 'genemu.form.jquery.type.chosen.timezone' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType A Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Chosen_TimezoneService()
    {
        return $this->services['genemu.form.jquery.type.chosen.timezone'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\ChosenType('timezone');
    }

    /**
     * Gets the 'genemu.form.jquery.type.color' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\ColorType A Genemu\Bundle\FormBundle\Form\JQuery\Type\ColorType instance.
     */
    protected function getGenemu_Form_Jquery_Type_ColorService()
    {
        return $this->services['genemu.form.jquery.type.color'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\ColorType(array());
    }

    /**
     * Gets the 'genemu.form.jquery.type.date' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\DateType A Genemu\Bundle\FormBundle\Form\JQuery\Type\DateType instance.
     */
    protected function getGenemu_Form_Jquery_Type_DateService()
    {
        return $this->services['genemu.form.jquery.type.date'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\DateType(array());
    }

    /**
     * Gets the 'genemu.form.jquery.type.file' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\FileType A Genemu\Bundle\FormBundle\Form\JQuery\Type\FileType instance.
     */
    protected function getGenemu_Form_Jquery_Type_FileService()
    {
        return $this->services['genemu.form.jquery.type.file'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\FileType(array(), 'C:\\wamp\\www\\stockvalue~~\\app/../web');
    }

    /**
     * Gets the 'genemu.form.jquery.type.geolocation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\GeolocationType A Genemu\Bundle\FormBundle\Form\JQuery\Type\GeolocationType instance.
     */
    protected function getGenemu_Form_Jquery_Type_GeolocationService()
    {
        return $this->services['genemu.form.jquery.type.geolocation'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\GeolocationType();
    }

    /**
     * Gets the 'genemu.form.jquery.type.image' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\ImageType A Genemu\Bundle\FormBundle\Form\JQuery\Type\ImageType instance.
     */
    protected function getGenemu_Form_Jquery_Type_ImageService()
    {
        return $this->services['genemu.form.jquery.type.image'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\ImageType('', array(), array());
    }

    /**
     * Gets the 'genemu.form.jquery.type.rating' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\RatingType A Genemu\Bundle\FormBundle\Form\JQuery\Type\RatingType instance.
     */
    protected function getGenemu_Form_Jquery_Type_RatingService()
    {
        return $this->services['genemu.form.jquery.type.rating'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\RatingType(array());
    }

    /**
     * Gets the 'genemu.form.jquery.type.select2.choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type A Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type instance.
     */
    protected function getGenemu_Form_Jquery_Type_Select2_ChoiceService()
    {
        return $this->services['genemu.form.jquery.type.select2.choice'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type('choice');
    }

    /**
     * Gets the 'genemu.form.jquery.type.select2.country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type A Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type instance.
     */
    protected function getGenemu_Form_Jquery_Type_Select2_CountryService()
    {
        return $this->services['genemu.form.jquery.type.select2.country'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type('country');
    }

    /**
     * Gets the 'genemu.form.jquery.type.select2.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type A Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type instance.
     */
    protected function getGenemu_Form_Jquery_Type_Select2_CurrencyService()
    {
        return $this->services['genemu.form.jquery.type.select2.currency'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type('currency');
    }

    /**
     * Gets the 'genemu.form.jquery.type.select2.document' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type A Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type instance.
     */
    protected function getGenemu_Form_Jquery_Type_Select2_DocumentService()
    {
        return $this->services['genemu.form.jquery.type.select2.document'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type('document');
    }

    /**
     * Gets the 'genemu.form.jquery.type.select2.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type A Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type instance.
     */
    protected function getGenemu_Form_Jquery_Type_Select2_EntityService()
    {
        return $this->services['genemu.form.jquery.type.select2.entity'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type('entity');
    }

    /**
     * Gets the 'genemu.form.jquery.type.select2.hidden' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type A Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type instance.
     */
    protected function getGenemu_Form_Jquery_Type_Select2_HiddenService()
    {
        return $this->services['genemu.form.jquery.type.select2.hidden'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type('hidden');
    }

    /**
     * Gets the 'genemu.form.jquery.type.select2.language' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type A Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type instance.
     */
    protected function getGenemu_Form_Jquery_Type_Select2_LanguageService()
    {
        return $this->services['genemu.form.jquery.type.select2.language'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type('language');
    }

    /**
     * Gets the 'genemu.form.jquery.type.select2.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type A Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type instance.
     */
    protected function getGenemu_Form_Jquery_Type_Select2_LocaleService()
    {
        return $this->services['genemu.form.jquery.type.select2.locale'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type('locale');
    }

    /**
     * Gets the 'genemu.form.jquery.type.select2.model' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type A Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type instance.
     */
    protected function getGenemu_Form_Jquery_Type_Select2_ModelService()
    {
        return $this->services['genemu.form.jquery.type.select2.model'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type('model');
    }

    /**
     * Gets the 'genemu.form.jquery.type.select2.timezone' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type A Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type instance.
     */
    protected function getGenemu_Form_Jquery_Type_Select2_TimezoneService()
    {
        return $this->services['genemu.form.jquery.type.select2.timezone'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type('timezone');
    }

    /**
     * Gets the 'genemu.form.jquery.type.slider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\SliderType A Genemu\Bundle\FormBundle\Form\JQuery\Type\SliderType instance.
     */
    protected function getGenemu_Form_Jquery_Type_SliderService()
    {
        return $this->services['genemu.form.jquery.type.slider'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\SliderType();
    }

    /**
     * Gets the 'genemu.form.jquery.type.tokeninput.choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType A Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Tokeninput_ChoiceService()
    {
        return $this->services['genemu.form.jquery.type.tokeninput.choice'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType('choice');
    }

    /**
     * Gets the 'genemu.form.jquery.type.tokeninput.country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType A Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Tokeninput_CountryService()
    {
        return $this->services['genemu.form.jquery.type.tokeninput.country'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType('country');
    }

    /**
     * Gets the 'genemu.form.jquery.type.tokeninput.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType A Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Tokeninput_CurrencyService()
    {
        return $this->services['genemu.form.jquery.type.tokeninput.currency'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType('currency');
    }

    /**
     * Gets the 'genemu.form.jquery.type.tokeninput.document' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType A Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Tokeninput_DocumentService()
    {
        return $this->services['genemu.form.jquery.type.tokeninput.document'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType('document');
    }

    /**
     * Gets the 'genemu.form.jquery.type.tokeninput.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType A Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Tokeninput_EntityService()
    {
        return $this->services['genemu.form.jquery.type.tokeninput.entity'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType('entity');
    }

    /**
     * Gets the 'genemu.form.jquery.type.tokeninput.language' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType A Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Tokeninput_LanguageService()
    {
        return $this->services['genemu.form.jquery.type.tokeninput.language'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType('language');
    }

    /**
     * Gets the 'genemu.form.jquery.type.tokeninput.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType A Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Tokeninput_LocaleService()
    {
        return $this->services['genemu.form.jquery.type.tokeninput.locale'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType('locale');
    }

    /**
     * Gets the 'genemu.form.jquery.type.tokeninput.model' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType A Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Tokeninput_ModelService()
    {
        return $this->services['genemu.form.jquery.type.tokeninput.model'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType('model');
    }

    /**
     * Gets the 'genemu.form.jquery.type.tokeninput.timezone' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType A Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType instance.
     */
    protected function getGenemu_Form_Jquery_Type_Tokeninput_TimezoneService()
    {
        return $this->services['genemu.form.jquery.type.tokeninput.timezone'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\TokeninputType('timezone');
    }

    /**
     * Gets the 'genemu.form.model.type.ajaxmodel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\Model\Type\AjaxModelType A Genemu\Bundle\FormBundle\Form\Model\Type\AjaxModelType instance.
     */
    protected function getGenemu_Form_Model_Type_AjaxmodelService()
    {
        return $this->services['genemu.form.model.type.ajaxmodel'] = new \Genemu\Bundle\FormBundle\Form\Model\Type\AjaxModelType();
    }

    /**
     * Gets the 'genemu.form.type_recaptcha.validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\Core\Validator\ReCaptchaValidator A Genemu\Bundle\FormBundle\Form\Core\Validator\ReCaptchaValidator instance.
     */
    protected function getGenemu_Form_TypeRecaptcha_ValidatorService()
    {
        return $this->services['genemu.form.type_recaptcha.validator'] = new \Genemu\Bundle\FormBundle\Form\Core\Validator\ReCaptchaValidator($this->get('request'), '', array());
    }

    /**
     * Gets the 'genemu.gd.captcha' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Gd\Type\Captcha A Genemu\Bundle\FormBundle\Gd\Type\Captcha instance.
     */
    protected function getGenemu_Gd_CaptchaService()
    {
        return $this->services['genemu.gd.captcha'] = new \Genemu\Bundle\FormBundle\Gd\Type\Captcha($this->get('session'), '7b3d671f1263efb25cc1137f155548f9');
    }

    /**
     * Gets the 'genemu.twig.extension.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Twig\Extension\FormExtension A Genemu\Bundle\FormBundle\Twig\Extension\FormExtension instance.
     */
    protected function getGenemu_Twig_Extension_FormService()
    {
        return $this->services['genemu.twig.extension.form'] = new \Genemu\Bundle\FormBundle\Twig\Extension\FormExtension($this->get('twig.form.renderer'));
    }

    /**
     * Gets the 'http_kernel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel A Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel instance.
     */
    protected function getHttpKernelService()
    {
        return $this->services['http_kernel'] = new \Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel($this->get('debug.event_dispatcher'), $this, $this->get('debug.controller_resolver'), $this->get('request_stack'), false);
    }

    /**
     * Gets the 'hwi_oauth.resource_owner.google' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SSOBundle\OAuth\ResourceOwner\GoogleResourceOwner A Oro\Bundle\SSOBundle\OAuth\ResourceOwner\GoogleResourceOwner instance.
     */
    protected function getHwiOauth_ResourceOwner_GoogleService()
    {
        $a = new \Buzz\Client\Curl();
        $a->setVerifyPeer(true);
        $a->setTimeout(5);
        $a->setMaxRedirects(5);
        $a->setIgnoreErrors(true);

        $this->services['hwi_oauth.resource_owner.google'] = $instance = new \Oro\Bundle\SSOBundle\OAuth\ResourceOwner\GoogleResourceOwner($a, $this->get('security.http_utils'), array('client_id' => 'changeMe', 'client_secret' => 'changeMe', 'scope' => 'https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile', 'paths' => array(), 'options' => array()), 'google', new \HWI\Bundle\OAuthBundle\OAuth\RequestDataStorage\SessionStorage($this->get('session')));

        $instance->configureCredentials($this->get('oro_config.global'));

        return $instance;
    }

    /**
     * Gets the 'hwi_oauth.resource_ownermap.main' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \HWI\Bundle\OAuthBundle\Security\Http\ResourceOwnerMap A HWI\Bundle\OAuthBundle\Security\Http\ResourceOwnerMap instance.
     */
    protected function getHwiOauth_ResourceOwnermap_MainService()
    {
        $this->services['hwi_oauth.resource_ownermap.main'] = $instance = new \HWI\Bundle\OAuthBundle\Security\Http\ResourceOwnerMap($this->get('security.http_utils'), array(0 => 'google'), array('google' => '/login/check-google'));

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'hwi_oauth.security.oauth_utils' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \HWI\Bundle\OAuthBundle\Security\OAuthUtils A HWI\Bundle\OAuthBundle\Security\OAuthUtils instance.
     */
    protected function getHwiOauth_Security_OauthUtilsService()
    {
        $this->services['hwi_oauth.security.oauth_utils'] = $instance = new \HWI\Bundle\OAuthBundle\Security\OAuthUtils($this->get('security.http_utils'), $this->get('security.context'), false);

        $instance->setResourceOwnerMap($this->get('hwi_oauth.resource_ownermap.main'));

        return $instance;
    }

    /**
     * Gets the 'hwi_oauth.templating.helper.oauth' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \HWI\Bundle\OAuthBundle\Templating\Helper\OAuthHelper A HWI\Bundle\OAuthBundle\Templating\Helper\OAuthHelper instance.
     */
    protected function getHwiOauth_Templating_Helper_OauthService()
    {
        $this->services['hwi_oauth.templating.helper.oauth'] = $instance = new \HWI\Bundle\OAuthBundle\Templating\Helper\OAuthHelper($this->get('hwi_oauth.security.oauth_utils'));

        $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));

        return $instance;
    }

    /**
     * Gets the 'jdare_clank.clank_app' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JDare\ClankBundle\Server\App\ClankApp A JDare\ClankBundle\Server\App\ClankApp instance.
     */
    protected function getJdareClank_ClankAppService()
    {
        return $this->services['jdare_clank.clank_app'] = new \JDare\ClankBundle\Server\App\ClankApp($this->get('jdare_clank.clank_handler_rpc'), $this->get('jdare_clank.clank_handler_topic'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'jdare_clank.clank_handler_rpc' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JDare\ClankBundle\Server\App\Handler\RPCHandler A JDare\ClankBundle\Server\App\Handler\RPCHandler instance.
     */
    protected function getJdareClank_ClankHandlerRpcService()
    {
        $this->services['jdare_clank.clank_handler_rpc'] = $instance = new \JDare\ClankBundle\Server\App\Handler\RPCHandler();

        $instance->setContainer($this);
        $instance->setRPCServices(array());

        return $instance;
    }

    /**
     * Gets the 'jdare_clank.clank_handler_topic' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JDare\ClankBundle\Server\App\Handler\TopicHandler A JDare\ClankBundle\Server\App\Handler\TopicHandler instance.
     */
    protected function getJdareClank_ClankHandlerTopicService()
    {
        $this->services['jdare_clank.clank_handler_topic'] = $instance = new \JDare\ClankBundle\Server\App\Handler\TopicHandler();

        $instance->setContainer($this);
        $instance->setTopicServices(array());

        return $instance;
    }

    /**
     * Gets the 'jdare_clank.entry_point' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JDare\ClankBundle\Server\EntryPoint A JDare\ClankBundle\Server\EntryPoint instance.
     */
    protected function getJdareClank_EntryPointService()
    {
        return $this->services['jdare_clank.entry_point'] = new \JDare\ClankBundle\Server\EntryPoint($this, array(0 => 'jdare_clank.web_socket_server'));
    }

    /**
     * Gets the 'jdare_clank.periodic_sample_service' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JDare\ClankBundle\Periodic\AcmePeriodic A JDare\ClankBundle\Periodic\AcmePeriodic instance.
     */
    protected function getJdareClank_PeriodicSampleServiceService()
    {
        return $this->services['jdare_clank.periodic_sample_service'] = new \JDare\ClankBundle\Periodic\AcmePeriodic();
    }

    /**
     * Gets the 'jdare_clank.rpc_sample_service' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JDare\ClankBundle\RPC\AcmeService A JDare\ClankBundle\RPC\AcmeService instance.
     */
    protected function getJdareClank_RpcSampleServiceService()
    {
        return $this->services['jdare_clank.rpc_sample_service'] = new \JDare\ClankBundle\RPC\AcmeService();
    }

    /**
     * Gets the 'jdare_clank.topic_sample_service' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JDare\ClankBundle\Topic\AcmeTopic A JDare\ClankBundle\Topic\AcmeTopic instance.
     */
    protected function getJdareClank_TopicSampleServiceService()
    {
        return $this->services['jdare_clank.topic_sample_service'] = new \JDare\ClankBundle\Topic\AcmeTopic();
    }

    /**
     * Gets the 'jdare_clank.twig.clank_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JDare\ClankBundle\Twig\ClankExtension A JDare\ClankBundle\Twig\ClankExtension instance.
     */
    protected function getJdareClank_Twig_ClankExtensionService()
    {
        return $this->services['jdare_clank.twig.clank_extension'] = new \JDare\ClankBundle\Twig\ClankExtension($this);
    }

    /**
     * Gets the 'jdare_clank.web_socket_server' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JDare\ClankBundle\Server\Type\WebSocketServerType A JDare\ClankBundle\Server\Type\WebSocketServerType instance.
     */
    protected function getJdareClank_WebSocketServerService()
    {
        $this->services['jdare_clank.web_socket_server'] = $instance = new \JDare\ClankBundle\Server\Type\WebSocketServerType('0.0.0.0', 8080);

        $instance->setContainer($this);
        $instance->setPeriodicServices(array());
        $instance->setSession(NULL);

        return $instance;
    }

    /**
     * Gets the 'jms_job_queue.entity.many_to_any_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \JMS\JobQueueBundle\Entity\Listener\ManyToAnyListener A JMS\JobQueueBundle\Entity\Listener\ManyToAnyListener instance.
     */
    public function getJmsJobQueue_Entity_ManyToAnyListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['jms_job_queue.entity.many_to_any_listener'] = new JMSJobQueueBundleEntityListenerManyToAnyListener_000000002e47fda200000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getJmsJobQueue_Entity_ManyToAnyListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \JMS\JobQueueBundle\Entity\Listener\ManyToAnyListener($this->get('doctrine'));
    }

    /**
     * Gets the 'jms_job_queue.entity.statistics_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \JMS\JobQueueBundle\Entity\Listener\StatisticsListener A JMS\JobQueueBundle\Entity\Listener\StatisticsListener instance.
     */
    public function getJmsJobQueue_Entity_StatisticsListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['jms_job_queue.entity.statistics_listener'] = new JMSJobQueueBundleEntityListenerStatisticsListener_000000002e47fe8f00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getJmsJobQueue_Entity_StatisticsListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \JMS\JobQueueBundle\Entity\Listener\StatisticsListener();
    }

    /**
     * Gets the 'jms_job_queue.twig.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\JobQueueBundle\Twig\JobQueueExtension A JMS\JobQueueBundle\Twig\JobQueueExtension instance.
     */
    protected function getJmsJobQueue_Twig_ExtensionService()
    {
        return $this->services['jms_job_queue.twig.extension'] = new \JMS\JobQueueBundle\Twig\JobQueueExtension(array());
    }

    /**
     * Gets the 'jms_serializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Serializer A JMS\Serializer\Serializer instance.
     */
    protected function getJmsSerializerService()
    {
        $a = new \JMS\Serializer\EventDispatcher\LazyEventDispatcher($this);
        $a->setListeners(array('serializer.pre_serialize' => array(0 => array(0 => array(0 => 'jms_serializer.stopwatch_subscriber', 1 => 'onPreSerialize'), 1 => NULL, 2 => NULL), 1 => array(0 => array(0 => 'jms_serializer.doctrine_proxy_subscriber', 1 => 'onPreSerialize'), 1 => NULL, 2 => NULL)), 'serializer.post_serialize' => array(0 => array(0 => array(0 => 'jms_serializer.stopwatch_subscriber', 1 => 'onPostSerialize'), 1 => NULL, 2 => NULL))));

        return $this->services['jms_serializer'] = new \JMS\Serializer\Serializer($this->get('jms_serializer.metadata_factory'), $this->get('jms_serializer.handler_registry'), $this->get('jms_serializer.unserialize_object_constructor'), new \JMS\DiExtraBundle\DependencyInjection\Collection\LazyServiceMap($this, array('json' => 'jms_serializer.json_serialization_visitor', 'xml' => 'jms_serializer.xml_serialization_visitor', 'yml' => 'jms_serializer.yaml_serialization_visitor')), new \JMS\DiExtraBundle\DependencyInjection\Collection\LazyServiceMap($this, array('json' => 'jms_serializer.json_deserialization_visitor', 'xml' => 'jms_serializer.xml_deserialization_visitor')), $a);
    }

    /**
     * Gets the 'jms_serializer.array_collection_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\ArrayCollectionHandler A JMS\Serializer\Handler\ArrayCollectionHandler instance.
     */
    protected function getJmsSerializer_ArrayCollectionHandlerService()
    {
        return $this->services['jms_serializer.array_collection_handler'] = new \JMS\Serializer\Handler\ArrayCollectionHandler();
    }

    /**
     * Gets the 'jms_serializer.constraint_violation_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\ConstraintViolationHandler A JMS\Serializer\Handler\ConstraintViolationHandler instance.
     */
    protected function getJmsSerializer_ConstraintViolationHandlerService()
    {
        return $this->services['jms_serializer.constraint_violation_handler'] = new \JMS\Serializer\Handler\ConstraintViolationHandler();
    }

    /**
     * Gets the 'jms_serializer.datetime_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\DateHandler A JMS\Serializer\Handler\DateHandler instance.
     */
    protected function getJmsSerializer_DatetimeHandlerService()
    {
        return $this->services['jms_serializer.datetime_handler'] = new \JMS\Serializer\Handler\DateHandler('Y-m-d\\TH:i:sO', 'Europe/Paris', true);
    }

    /**
     * Gets the 'jms_serializer.doctrine_proxy_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber A JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber instance.
     */
    protected function getJmsSerializer_DoctrineProxySubscriberService()
    {
        return $this->services['jms_serializer.doctrine_proxy_subscriber'] = new \JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber();
    }

    /**
     * Gets the 'jms_serializer.form_error_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\FormErrorHandler A JMS\Serializer\Handler\FormErrorHandler instance.
     */
    protected function getJmsSerializer_FormErrorHandlerService()
    {
        return $this->services['jms_serializer.form_error_handler'] = new \JMS\Serializer\Handler\FormErrorHandler($this->get('translator'));
    }

    /**
     * Gets the 'jms_serializer.handler_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\LazyHandlerRegistry A JMS\Serializer\Handler\LazyHandlerRegistry instance.
     */
    protected function getJmsSerializer_HandlerRegistryService()
    {
        return $this->services['jms_serializer.handler_registry'] = new \JMS\Serializer\Handler\LazyHandlerRegistry($this, array(1 => array('Oro\\Bundle\\WorkflowBundle\\Model\\WorkflowResult' => array('json' => array(0 => 'oro_workflow.serializer.handler.workflow_result', 1 => 'workflowResultToJson')), 'DateTime' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime')), 'DateInterval' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval')), 'ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\Common\\Collections\\ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ORM\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ODM\\MongoDB\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ODM\\PHPCR\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'PhpCollection\\Sequence' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence')), 'PhpCollection\\Map' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap')), 'Symfony\\Component\\Form\\Form' => array('xml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormToxml'), 'json' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormTojson'), 'yml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormToyml')), 'Symfony\\Component\\Form\\FormError' => array('xml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorToxml'), 'json' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorTojson'), 'yml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorToyml')), 'Symfony\\Component\\Validator\\ConstraintViolationList' => array('xml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListToxml'), 'json' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListTojson'), 'yml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListToyml')), 'Symfony\\Component\\Validator\\ConstraintViolation' => array('xml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationToxml'), 'json' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationTojson'), 'yml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationToyml')), 'FOS\\RestBundle\\Util\\ExceptionWrapper' => array('json' => array(0 => 'fos_rest.serializer.exception_wrapper_serialize_handler', 1 => 'serializeToJson'), 'xml' => array(0 => 'fos_rest.serializer.exception_wrapper_serialize_handler', 1 => 'serializeToXml'))), 2 => array('DateTime' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromjson'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromxml'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromyml')), 'ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\Common\\Collections\\ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ORM\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ODM\\MongoDB\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ODM\\PHPCR\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'PhpCollection\\Sequence' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence')), 'PhpCollection\\Map' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap')))));
    }

    /**
     * Gets the 'jms_serializer.json_deserialization_visitor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\JsonDeserializationVisitor A JMS\Serializer\JsonDeserializationVisitor instance.
     */
    protected function getJmsSerializer_JsonDeserializationVisitorService()
    {
        return $this->services['jms_serializer.json_deserialization_visitor'] = new \JMS\Serializer\JsonDeserializationVisitor($this->get('jms_serializer.naming_strategy'), $this->get('jms_serializer.unserialize_object_constructor'));
    }

    /**
     * Gets the 'jms_serializer.json_serialization_visitor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\JsonSerializationVisitor A JMS\Serializer\JsonSerializationVisitor instance.
     */
    protected function getJmsSerializer_JsonSerializationVisitorService()
    {
        $this->services['jms_serializer.json_serialization_visitor'] = $instance = new \JMS\Serializer\JsonSerializationVisitor($this->get('jms_serializer.naming_strategy'));

        $instance->setOptions(0);

        return $instance;
    }

    /**
     * Gets the 'jms_serializer.metadata_driver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Metadata\Driver\DoctrineTypeDriver A JMS\Serializer\Metadata\Driver\DoctrineTypeDriver instance.
     */
    protected function getJmsSerializer_MetadataDriverService()
    {
        $a = new \Metadata\Driver\FileLocator(array('Oro\\Bundle\\CacheBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CacheBundle/Resources/config/serializer', 'Symfony\\Bundle\\FrameworkBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\FrameworkBundle/Resources/config/serializer', 'Symfony\\Bundle\\SecurityBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\SecurityBundle/Resources/config/serializer', 'Oro\\Bundle\\SyncBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SyncBundle/Resources/config/serializer', 'Symfony\\Bundle\\TwigBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\TwigBundle/Resources/config/serializer', 'Symfony\\Bundle\\MonologBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\monolog-bundle/Resources/config/serializer', 'Symfony\\Bundle\\SwiftmailerBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\swiftmailer-bundle/Resources/config/serializer', 'Symfony\\Bundle\\AsseticBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\assetic-bundle\\Symfony\\Bundle\\AsseticBundle/Resources/config/serializer', 'Doctrine\\Bundle\\DoctrineBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\doctrine\\doctrine-bundle/Resources/config/serializer', 'Doctrine\\Bundle\\FixturesBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\doctrine\\doctrine-fixtures-bundle\\Doctrine\\Bundle\\FixturesBundle/Resources/config/serializer', 'Sensio\\Bundle\\FrameworkExtraBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\sensio\\framework-extra-bundle\\Sensio\\Bundle\\FrameworkExtraBundle/Resources/config/serializer', 'JMS\\SerializerBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\jms\\serializer-bundle\\JMS\\SerializerBundle/Resources/config/serializer', 'Knp\\Bundle\\MenuBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\knplabs\\knp-menu-bundle\\Knp\\Bundle\\MenuBundle/Resources/config/serializer', 'FOS\\RestBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\friendsofsymfony\\rest-bundle\\FOS\\RestBundle/Resources/config/serializer', 'FOS\\JsRoutingBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\friendsofsymfony\\jsrouting-bundle/Resources/config/serializer', 'Nelmio\\ApiDocBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\nelmio\\api-doc-bundle\\Nelmio\\ApiDocBundle/Resources/config/serializer', 'BeSimple\\SoapBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\besimple\\soap\\src\\BeSimple\\SoapBundle/Resources/config/serializer', 'Stof\\DoctrineExtensionsBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\stof\\doctrine-extensions-bundle\\Stof\\DoctrineExtensionsBundle/Resources/config/serializer', 'Escape\\WSSEAuthenticationBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\escapestudios\\wsse-authentication-bundle\\Escape\\WSSEAuthenticationBundle/Resources/config/serializer', 'Liip\\ImagineBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\liip\\imagine-bundle\\Liip\\ImagineBundle/Resources/config/serializer', 'Genemu\\Bundle\\FormBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\genemu\\form-bundle\\Genemu\\Bundle\\FormBundle/Resources/config/serializer', 'A2lix\\TranslationFormBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\a2lix\\translation-form-bundle\\A2lix\\TranslationFormBundle/Resources/config/serializer', 'Lexik\\Bundle\\MaintenanceBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\lexik\\maintenance-bundle\\Lexik\\Bundle\\MaintenanceBundle/Resources/config/serializer', 'Oro\\Bundle\\LayoutBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\LayoutBundle/Resources/config/serializer', 'Oro\\Bundle\\UIBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UIBundle/Resources/config/serializer', 'Oro\\Bundle\\OrganizationBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\OrganizationBundle/Resources/config/serializer', 'Oro\\Bundle\\SecurityBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SecurityBundle/Resources/config/serializer', 'Oro\\Bundle\\AttachmentBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AttachmentBundle/Resources/config/serializer', 'Oro\\Bundle\\EmailBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmailBundle/Resources/config/serializer', 'Oro\\Bundle\\UserBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UserBundle/Resources/config/serializer', 'HWI\\Bundle\\OAuthBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\hwi\\oauth-bundle\\HWI\\Bundle\\OAuthBundle/Resources/config/serializer', 'Oro\\Bundle\\SSOBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SSOBundle/Resources/config/serializer', 'Oro\\Bundle\\EntityBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityBundle/Resources/config/serializer', 'Oro\\Bundle\\EntityConfigBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityConfigBundle/Resources/config/serializer', 'Oro\\Bundle\\EntityExtendBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityExtendBundle/Resources/config/serializer', 'Oro\\Bundle\\IntegrationBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\IntegrationBundle/Resources/config/serializer', 'Akeneo\\Bundle\\BatchBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\akeneo\\batch-bundle\\Akeneo\\Bundle\\BatchBundle/Resources/config/serializer', 'JDare\\ClankBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\jdare\\clank-bundle\\JDare\\ClankBundle/Resources/config/serializer', 'JMS\\JobQueueBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CronBundle/Resources/config/serializer/JobQueueBundle', 'Knp\\Bundle\\GaufretteBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\knplabs\\knp-gaufrette-bundle\\Knp\\Bundle\\GaufretteBundle/Resources/config/serializer', 'Main\\StockValueBundle' => 'C:\\wamp\\www\\stockvalue~~\\src\\Main\\StockValueBundle/Resources/config/serializer', 'Oro\\Bundle\\ActivityBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ActivityBundle/Resources/config/serializer', 'Oro\\Bundle\\ActivityListBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ActivityListBundle/Resources/config/serializer', 'Oro\\Bundle\\AddressBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AddressBundle/Resources/config/serializer', 'Oro\\Bundle\\AsseticBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AsseticBundle/Resources/config/serializer', 'Oro\\Bundle\\BatchBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\BatchBundle/Resources/config/serializer', 'Oro\\Bundle\\BusinessEntitiesBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\BusinessEntitiesBundle/Resources/config/serializer', 'Oro\\Bundle\\CalendarBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CalendarBundle/Resources/config/serializer', 'Oro\\Bundle\\ChartBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ChartBundle/Resources/config/serializer', 'Oro\\Bundle\\ConfigBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ConfigBundle/Resources/config/serializer', 'Oro\\Bundle\\CronBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CronBundle/Resources/config/serializer', 'Oro\\Bundle\\DataAuditBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataAuditBundle/Resources/config/serializer', 'Oro\\Bundle\\DataGridBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataGridBundle/Resources/config/serializer', 'Oro\\Bundle\\DistributionBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DistributionBundle/Resources/config/serializer', 'Oro\\Bundle\\EmbeddedFormBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle/Resources/config/serializer', 'Oro\\Bundle\\EntityMergeBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityMergeBundle/Resources/config/serializer', 'Oro\\Bundle\\EntityPaginationBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityPaginationBundle/Resources/config/serializer', 'Oro\\Bundle\\FilterBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FilterBundle/Resources/config/serializer', 'Oro\\Bundle\\FormBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FormBundle/Resources/config/serializer', 'Oro\\Bundle\\HelpBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\HelpBundle/Resources/config/serializer', 'Oro\\Bundle\\ImapBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImapBundle/Resources/config/serializer', 'Oro\\Bundle\\ImportExportBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImportExportBundle/Resources/config/serializer', 'Oro\\Bundle\\InstallerBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\InstallerBundle/Resources/config/serializer', 'Oro\\Bundle\\LocaleBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\LocaleBundle/Resources/config/serializer', 'Oro\\Bundle\\MigrationBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\MigrationBundle/Resources/config/serializer', 'Oro\\Bundle\\NoteBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NoteBundle/Resources/config/serializer', 'Oro\\Bundle\\NotificationBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NotificationBundle/Resources/config/serializer', 'Oro\\Bundle\\PlatformBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\PlatformBundle/Resources/config/serializer', 'Oro\\Bundle\\QueryDesignerBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\QueryDesignerBundle/Resources/config/serializer', 'Oro\\Bundle\\ReportBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ReportBundle/Resources/config/serializer', 'Oro\\Bundle\\RequireJSBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\RequireJSBundle/Resources/config/serializer', 'Oro\\Bundle\\SearchBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SearchBundle/Resources/config/serializer', 'Oro\\Bundle\\SegmentBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SegmentBundle/Resources/config/serializer', 'Oro\\Bundle\\SidebarBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SidebarBundle/Resources/config/serializer', 'Oro\\Bundle\\SoapBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SoapBundle/Resources/config/serializer', 'Oro\\Bundle\\TagBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TagBundle/Resources/config/serializer', 'Oro\\Bundle\\ThemeBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ThemeBundle/Resources/config/serializer', 'Oro\\Bundle\\TranslationBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TranslationBundle/Resources/config/serializer', 'Oro\\Bundle\\WindowsBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\WindowsBundle/Resources/config/serializer', 'Oro\\Bundle\\WorkflowBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\WorkflowBundle/Resources/config/serializer', 'Security\\StockValueBundle' => 'C:\\wamp\\www\\stockvalue~~\\src\\Security\\StockValueBundle/Resources/config/serializer', 'Sylius\\Bundle\\FlowBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\sylius\\flow-bundle\\Sylius\\Bundle\\FlowBundle/Resources/config/serializer', 'Oro\\Bundle\\CommentBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CommentBundle/Resources/config/serializer', 'Oro\\Bundle\\DashboardBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DashboardBundle/Resources/config/serializer', 'Oro\\Bundle\\NavigationBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NavigationBundle/Resources/config/serializer', 'Oro\\Bundle\\TrackingBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TrackingBundle/Resources/config/serializer', 'Oro\\Bundle\\ReminderBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ReminderBundle/Resources/config/serializer', 'Symfony\\Bundle\\WebProfilerBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\WebProfilerBundle/Resources/config/serializer', 'Sensio\\Bundle\\DistributionBundle' => 'C:\\wamp\\www\\stockvalue~~\\vendor\\sensio\\distribution-bundle\\Sensio\\Bundle\\DistributionBundle/Resources/config/serializer'));

        return $this->services['jms_serializer.metadata_driver'] = new \JMS\Serializer\Metadata\Driver\DoctrineTypeDriver(new \Metadata\Driver\DriverChain(array(0 => new \JMS\Serializer\Metadata\Driver\YamlDriver($a), 1 => new \JMS\Serializer\Metadata\Driver\XmlDriver($a), 2 => new \JMS\Serializer\Metadata\Driver\PhpDriver($a), 3 => new \JMS\Serializer\Metadata\Driver\AnnotationDriver($this->get('annotation_reader')))), $this->get('doctrine'));
    }

    /**
     * Gets the 'jms_serializer.naming_strategy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Naming\CacheNamingStrategy A JMS\Serializer\Naming\CacheNamingStrategy instance.
     */
    protected function getJmsSerializer_NamingStrategyService()
    {
        return $this->services['jms_serializer.naming_strategy'] = new \JMS\Serializer\Naming\CacheNamingStrategy(new \JMS\Serializer\Naming\SerializedNameAnnotationStrategy(new \JMS\Serializer\Naming\CamelCaseNamingStrategy('_', true)));
    }

    /**
     * Gets the 'jms_serializer.object_constructor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Construction\DoctrineObjectConstructor A JMS\Serializer\Construction\DoctrineObjectConstructor instance.
     */
    protected function getJmsSerializer_ObjectConstructorService()
    {
        return $this->services['jms_serializer.object_constructor'] = new \JMS\Serializer\Construction\DoctrineObjectConstructor($this->get('doctrine'), $this->get('jms_serializer.unserialize_object_constructor'));
    }

    /**
     * Gets the 'jms_serializer.php_collection_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\PhpCollectionHandler A JMS\Serializer\Handler\PhpCollectionHandler instance.
     */
    protected function getJmsSerializer_PhpCollectionHandlerService()
    {
        return $this->services['jms_serializer.php_collection_handler'] = new \JMS\Serializer\Handler\PhpCollectionHandler();
    }

    /**
     * Gets the 'jms_serializer.stopwatch_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\SerializerBundle\Serializer\StopwatchEventSubscriber A JMS\SerializerBundle\Serializer\StopwatchEventSubscriber instance.
     */
    protected function getJmsSerializer_StopwatchSubscriberService()
    {
        return $this->services['jms_serializer.stopwatch_subscriber'] = new \JMS\SerializerBundle\Serializer\StopwatchEventSubscriber($this->get('debug.stopwatch'));
    }

    /**
     * Gets the 'jms_serializer.templating.helper.serializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\SerializerBundle\Templating\SerializerHelper A JMS\SerializerBundle\Templating\SerializerHelper instance.
     */
    protected function getJmsSerializer_Templating_Helper_SerializerService()
    {
        return $this->services['jms_serializer.templating.helper.serializer'] = new \JMS\SerializerBundle\Templating\SerializerHelper($this->get('jms_serializer'));
    }

    /**
     * Gets the 'jms_serializer.xml_deserialization_visitor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\XmlDeserializationVisitor A JMS\Serializer\XmlDeserializationVisitor instance.
     */
    protected function getJmsSerializer_XmlDeserializationVisitorService()
    {
        $this->services['jms_serializer.xml_deserialization_visitor'] = $instance = new \JMS\Serializer\XmlDeserializationVisitor($this->get('jms_serializer.naming_strategy'), $this->get('jms_serializer.unserialize_object_constructor'));

        $instance->setDoctypeWhitelist(array());

        return $instance;
    }

    /**
     * Gets the 'jms_serializer.xml_serialization_visitor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\XmlSerializationVisitor A JMS\Serializer\XmlSerializationVisitor instance.
     */
    protected function getJmsSerializer_XmlSerializationVisitorService()
    {
        return $this->services['jms_serializer.xml_serialization_visitor'] = new \JMS\Serializer\XmlSerializationVisitor($this->get('jms_serializer.naming_strategy'));
    }

    /**
     * Gets the 'jms_serializer.yaml_serialization_visitor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\YamlSerializationVisitor A JMS\Serializer\YamlSerializationVisitor instance.
     */
    protected function getJmsSerializer_YamlSerializationVisitorService()
    {
        return $this->services['jms_serializer.yaml_serialization_visitor'] = new \JMS\Serializer\YamlSerializationVisitor($this->get('jms_serializer.naming_strategy'));
    }

    /**
     * Gets the 'kernel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @throws RuntimeException always since this service is expected to be injected dynamically
     */
    protected function getKernelService()
    {
        throw new RuntimeException('You have requested a synthetic service ("kernel"). The DIC does not know how to construct this service.');
    }

    /**
     * Gets the 'kernel.listener.hashnav_response' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Event\ResponseHashnavListener A Oro\Bundle\NavigationBundle\Event\ResponseHashnavListener instance.
     */
    protected function getKernel_Listener_HashnavResponseService()
    {
        return $this->services['kernel.listener.hashnav_response'] = new \Oro\Bundle\NavigationBundle\Event\ResponseHashnavListener($this->get('security.context'), $this->get('templating'), true);
    }

    /**
     * Gets the 'kernel.listener.install.event' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\InstallerBundle\EventListener\RequestListener A Oro\Bundle\InstallerBundle\EventListener\RequestListener instance.
     */
    protected function getKernel_Listener_Install_EventService()
    {
        return $this->services['kernel.listener.install.event'] = new \Oro\Bundle\InstallerBundle\EventListener\RequestListener($this->get('router'), '2015-10-03T18:37:32+02:00', true);
    }

    /**
     * Gets the 'kernel.listener.maintenance.event' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SyncBundle\EventListener\MaintenanceListener A Oro\Bundle\SyncBundle\EventListener\MaintenanceListener instance.
     */
    protected function getKernel_Listener_Maintenance_EventService()
    {
        return $this->services['kernel.listener.maintenance.event'] = new \Oro\Bundle\SyncBundle\EventListener\MaintenanceListener($this->get('oro_wamp.publisher'), $this->get('oro_security.security_facade'), $this->get('logger'));
    }

    /**
     * Gets the 'kernel.listener.nav_history_response' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Event\ResponseHistoryListener A Oro\Bundle\NavigationBundle\Event\ResponseHistoryListener instance.
     */
    protected function getKernel_Listener_NavHistoryResponseService()
    {
        $this->services['kernel.listener.nav_history_response'] = $instance = new \Oro\Bundle\NavigationBundle\Event\ResponseHistoryListener($this->get('oro_navigation.item.factory'), $this->get('security.context'), $this->get('doctrine'), $this->get('oro_navigation.title_service'));

        $instance->setHistoryItemEntityFQCN('Oro\\Bundle\\NavigationBundle\\Entity\\NavigationHistoryItem');
        $instance->setUserEntityFQCN('Oro\\Bundle\\UserBundle\\Entity\\User');
        $instance->setNavigationHistoryItemType('history');

        return $instance;
    }

    /**
     * Gets the 'kernel.listener.title_service.request_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Event\RequestTitleListener A Oro\Bundle\NavigationBundle\Event\RequestTitleListener instance.
     */
    protected function getKernel_Listener_TitleService_RequestListenerService()
    {
        return $this->services['kernel.listener.title_service.request_listener'] = new \Oro\Bundle\NavigationBundle\Event\RequestTitleListener($this->get('oro_navigation.title_service'));
    }

    /**
     * Gets the 'knp_gaufrette.filesystem_map' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Bundle\GaufretteBundle\FilesystemMap A Knp\Bundle\GaufretteBundle\FilesystemMap instance.
     */
    protected function getKnpGaufrette_FilesystemMapService()
    {
        return $this->services['knp_gaufrette.filesystem_map'] = new \Knp\Bundle\GaufretteBundle\FilesystemMap(array('attachments' => $this->get('attachments_filesystem')));
    }

    /**
     * Gets the 'knp_menu.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\MenuFactory A Knp\Menu\MenuFactory instance.
     */
    protected function getKnpMenu_FactoryService()
    {
        $this->services['knp_menu.factory'] = $instance = new \Knp\Menu\MenuFactory();

        $instance->addExtension(new \Knp\Menu\Silex\RoutingExtension($this->get('router')), 0);

        return $instance;
    }

    /**
     * Gets the 'knp_menu.listener.voters' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener A Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener instance.
     */
    protected function getKnpMenu_Listener_VotersService()
    {
        $this->services['knp_menu.listener.voters'] = $instance = new \Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener();

        $instance->addVoter($this->get('knp_menu.voter.router'));
        $instance->addVoter($this->get('knp_voter_request'));

        return $instance;
    }

    /**
     * Gets the 'knp_menu.matcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\Matcher\Matcher A Knp\Menu\Matcher\Matcher instance.
     */
    protected function getKnpMenu_MatcherService()
    {
        $this->services['knp_menu.matcher'] = $instance = new \Knp\Menu\Matcher\Matcher();

        $instance->addVoter($this->get('knp_menu.voter.router'));
        $instance->addVoter($this->get('knp_voter_request'));

        return $instance;
    }

    /**
     * Gets the 'knp_menu.menu_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\Provider\ChainProvider A Knp\Menu\Provider\ChainProvider instance.
     */
    protected function getKnpMenu_MenuProviderService()
    {
        return $this->services['knp_menu.menu_provider'] = new \Knp\Menu\Provider\ChainProvider(array(0 => new \Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider($this, array()), 1 => new \Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider($this->get('kernel'), $this, $this->get('knp_menu.factory')), 2 => $this->get('oro_menu.builder_chain')));
    }

    /**
     * Gets the 'knp_menu.renderer.list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\Renderer\ListRenderer A Knp\Menu\Renderer\ListRenderer instance.
     */
    protected function getKnpMenu_Renderer_ListService()
    {
        return $this->services['knp_menu.renderer.list'] = new \Knp\Menu\Renderer\ListRenderer($this->get('knp_menu.matcher'), array(), 'UTF-8');
    }

    /**
     * Gets the 'knp_menu.renderer.twig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Knp\Menu\Renderer\TwigRenderer A Knp\Menu\Renderer\TwigRenderer instance.
     */
    public function getKnpMenu_Renderer_TwigService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['knp_menu.renderer.twig'] = new KnpMenuRendererTwigRenderer_000000002e47ff3d00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getKnpMenu_Renderer_TwigService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Knp\Menu\Renderer\TwigRenderer($this->get('twig'), 'knp_menu.html.twig', $this->get('knp_menu.matcher'), array());
    }

    /**
     * Gets the 'knp_menu.renderer_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider A Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider instance.
     */
    protected function getKnpMenu_RendererProviderService()
    {
        return $this->services['knp_menu.renderer_provider'] = new \Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider($this, 'twig', array('list' => 'knp_menu.renderer.list', 'twig' => 'knp_menu.renderer.twig'));
    }

    /**
     * Gets the 'knp_menu.voter.router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Menu\Matcher\Voter\RoutePatternVoter A Oro\Bundle\NavigationBundle\Menu\Matcher\Voter\RoutePatternVoter instance.
     */
    protected function getKnpMenu_Voter_RouterService()
    {
        return $this->services['knp_menu.voter.router'] = new \Oro\Bundle\NavigationBundle\Menu\Matcher\Voter\RoutePatternVoter();
    }

    /**
     * Gets the 'knp_voter_request' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Menu\Matcher\Voter\RequestVoter A Oro\Bundle\NavigationBundle\Menu\Matcher\Voter\RequestVoter instance.
     */
    protected function getKnpVoterRequestService()
    {
        return $this->services['knp_voter_request'] = new \Oro\Bundle\NavigationBundle\Menu\Matcher\Voter\RequestVoter();
    }

    /**
     * Gets the 'lexik_maintenance.driver.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Lexik\Bundle\MaintenanceBundle\Drivers\DriverFactory A Lexik\Bundle\MaintenanceBundle\Drivers\DriverFactory instance.
     */
    protected function getLexikMaintenance_Driver_FactoryService()
    {
        return $this->services['lexik_maintenance.driver.factory'] = new \Lexik\Bundle\MaintenanceBundle\Drivers\DriverFactory(new \Lexik\Bundle\MaintenanceBundle\Drivers\DatabaseDriver($this->get('doctrine', ContainerInterface::NULL_ON_INVALID_REFERENCE)), $this->get('translator.default'), array('class' => 'Lexik\\Bundle\\MaintenanceBundle\\Drivers\\FileDriver', 'options' => array('file_path' => 'C:\\wamp\\www\\stockvalue~~\\app/cache/maintenance_lock'), 'ttl' => NULL));
    }

    /**
     * Gets the 'lexik_maintenance.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Lexik\Bundle\MaintenanceBundle\Listener\MaintenanceListener A Lexik\Bundle\MaintenanceBundle\Listener\MaintenanceListener instance.
     */
    protected function getLexikMaintenance_ListenerService()
    {
        return $this->services['lexik_maintenance.listener'] = new \Lexik\Bundle\MaintenanceBundle\Listener\MaintenanceListener($this->get('lexik_maintenance.driver.factory'), 'maintenance|.*\\.js', NULL, NULL, array(), NULL, array());
    }

    /**
     * Gets the 'liip_imagine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Imagine\Gd\Imagine A Imagine\Gd\Imagine instance.
     */
    protected function getLiipImagineService()
    {
        return $this->services['liip_imagine'] = new \Imagine\Gd\Imagine();
    }

    /**
     * Gets the 'liip_imagine.cache.clearer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Cache\CacheClearer A Liip\ImagineBundle\Imagine\Cache\CacheClearer instance.
     */
    protected function getLiipImagine_Cache_ClearerService()
    {
        return $this->services['liip_imagine.cache.clearer'] = new \Liip\ImagineBundle\Imagine\Cache\CacheClearer($this->get('liip_imagine.cache.manager'), '/media/cache');
    }

    /**
     * Gets the 'liip_imagine.cache.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Cache\CacheManager A Liip\ImagineBundle\Imagine\Cache\CacheManager instance.
     */
    protected function getLiipImagine_Cache_ManagerService()
    {
        $this->services['liip_imagine.cache.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Cache\CacheManager($this->get('liip_imagine.filter.configuration'), $this->get('router'), 'C:\\wamp\\www\\stockvalue~~\\app/../web', 'web_path');

        $instance->addResolver('web_path', $this->get('liip_imagine.cache.resolver.web_path'));
        $instance->addResolver('no_cache', $this->get('liip_imagine.cache.resolver.no_cache'));

        return $instance;
    }

    /**
     * Gets the 'liip_imagine.cache.resolver.no_cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheResolver A Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheResolver instance.
     */
    protected function getLiipImagine_Cache_Resolver_NoCacheService()
    {
        return $this->services['liip_imagine.cache.resolver.no_cache'] = new \Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheResolver($this->get('filesystem'));
    }

    /**
     * Gets the 'liip_imagine.cache.resolver.web_path' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver A Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver instance.
     */
    protected function getLiipImagine_Cache_Resolver_WebPathService()
    {
        $this->services['liip_imagine.cache.resolver.web_path'] = $instance = new \Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver($this->get('filesystem'));

        $instance->setBasePath('');
        $instance->setFolderPermissions(511);

        return $instance;
    }

    /**
     * Gets the 'liip_imagine.controller' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Controller\ImagineController A Liip\ImagineBundle\Controller\ImagineController instance.
     */
    protected function getLiipImagine_ControllerService()
    {
        return $this->services['liip_imagine.controller'] = new \Liip\ImagineBundle\Controller\ImagineController($this->get('liip_imagine.data.manager'), $this->get('liip_imagine.filter.manager'), $this->get('liip_imagine.cache.manager'));
    }

    /**
     * Gets the 'liip_imagine.data.loader.filesystem' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Data\Loader\FileSystemLoader A Liip\ImagineBundle\Imagine\Data\Loader\FileSystemLoader instance.
     */
    protected function getLiipImagine_Data_Loader_FilesystemService()
    {
        return $this->services['liip_imagine.data.loader.filesystem'] = new \Liip\ImagineBundle\Imagine\Data\Loader\FileSystemLoader($this->get('liip_imagine'), array(), 'C:\\wamp\\www\\stockvalue~~\\app/../web');
    }

    /**
     * Gets the 'liip_imagine.data.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Data\DataManager A Liip\ImagineBundle\Imagine\Data\DataManager instance.
     */
    protected function getLiipImagine_Data_ManagerService()
    {
        $this->services['liip_imagine.data.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Data\DataManager($this->get('liip_imagine.filter.configuration'), 'filesystem');

        $instance->addLoader('filesystem', $this->get('liip_imagine.data.loader.filesystem'));

        return $instance;
    }

    /**
     * Gets the 'liip_imagine.filter.configuration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\FilterConfiguration A Liip\ImagineBundle\Imagine\Filter\FilterConfiguration instance.
     */
    protected function getLiipImagine_Filter_ConfigurationService()
    {
        return $this->services['liip_imagine.filter.configuration'] = new \Liip\ImagineBundle\Imagine\Filter\FilterConfiguration(array('avatar_med' => array('quality' => 95, 'filters' => array('thumbnail' => array('size' => array(0 => 58, 1 => 58), 'mode' => 'outbound'), 'strip' => array()), 'format' => NULL, 'cache' => NULL, 'data_loader' => NULL, 'controller_action' => NULL, 'route' => array()), 'avatar_xsmall' => array('quality' => 95, 'filters' => array('thumbnail' => array('size' => array(0 => 16, 1 => 16), 'mode' => 'outbound'), 'strip' => array()), 'format' => NULL, 'cache' => NULL, 'data_loader' => NULL, 'controller_action' => NULL, 'route' => array())));
    }

    /**
     * Gets the 'liip_imagine.filter.loader.background' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader instance.
     */
    protected function getLiipImagine_Filter_Loader_BackgroundService()
    {
        return $this->services['liip_imagine.filter.loader.background'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader($this->get('liip_imagine'));
    }

    /**
     * Gets the 'liip_imagine.filter.loader.crop' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader instance.
     */
    protected function getLiipImagine_Filter_Loader_CropService()
    {
        return $this->services['liip_imagine.filter.loader.crop'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.paste' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader instance.
     */
    protected function getLiipImagine_Filter_Loader_PasteService()
    {
        return $this->services['liip_imagine.filter.loader.paste'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader($this->get('liip_imagine'), 'C:\\wamp\\www\\stockvalue~~\\app');
    }

    /**
     * Gets the 'liip_imagine.filter.loader.relative_resize' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader instance.
     */
    protected function getLiipImagine_Filter_Loader_RelativeResizeService()
    {
        return $this->services['liip_imagine.filter.loader.relative_resize'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.resize' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader instance.
     */
    protected function getLiipImagine_Filter_Loader_ResizeService()
    {
        return $this->services['liip_imagine.filter.loader.resize'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.strip' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader instance.
     */
    protected function getLiipImagine_Filter_Loader_StripService()
    {
        return $this->services['liip_imagine.filter.loader.strip'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.thumbnail' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader instance.
     */
    protected function getLiipImagine_Filter_Loader_ThumbnailService()
    {
        return $this->services['liip_imagine.filter.loader.thumbnail'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.upscale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader instance.
     */
    protected function getLiipImagine_Filter_Loader_UpscaleService()
    {
        return $this->services['liip_imagine.filter.loader.upscale'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.watermark' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader instance.
     */
    protected function getLiipImagine_Filter_Loader_WatermarkService()
    {
        return $this->services['liip_imagine.filter.loader.watermark'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader($this->get('liip_imagine'), 'C:\\wamp\\www\\stockvalue~~\\app');
    }

    /**
     * Gets the 'liip_imagine.filter.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\FilterManager A Liip\ImagineBundle\Imagine\Filter\FilterManager instance.
     */
    protected function getLiipImagine_Filter_ManagerService()
    {
        $this->services['liip_imagine.filter.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Filter\FilterManager($this->get('liip_imagine.filter.configuration'));

        $instance->addLoader('relative_resize', $this->get('liip_imagine.filter.loader.relative_resize'));
        $instance->addLoader('resize', $this->get('liip_imagine.filter.loader.resize'));
        $instance->addLoader('thumbnail', $this->get('liip_imagine.filter.loader.thumbnail'));
        $instance->addLoader('crop', $this->get('liip_imagine.filter.loader.crop'));
        $instance->addLoader('paste', $this->get('liip_imagine.filter.loader.paste'));
        $instance->addLoader('watermark', $this->get('liip_imagine.filter.loader.watermark'));
        $instance->addLoader('background', $this->get('liip_imagine.filter.loader.background'));
        $instance->addLoader('strip', $this->get('liip_imagine.filter.loader.strip'));
        $instance->addLoader('upscale', $this->get('liip_imagine.filter.loader.upscale'));

        return $instance;
    }

    /**
     * Gets the 'liip_imagine.form.type.image' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Form\Type\ImageType A Liip\ImagineBundle\Form\Type\ImageType instance.
     */
    protected function getLiipImagine_Form_Type_ImageService()
    {
        return $this->services['liip_imagine.form.type.image'] = new \Liip\ImagineBundle\Form\Type\ImageType();
    }

    /**
     * Gets the 'liip_imagine.routing.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Routing\ImagineLoader A Liip\ImagineBundle\Routing\ImagineLoader instance.
     */
    protected function getLiipImagine_Routing_LoaderService()
    {
        return $this->services['liip_imagine.routing.loader'] = new \Liip\ImagineBundle\Routing\ImagineLoader('liip_imagine.controller:filterAction', '/media/cache', array('avatar_med' => array('quality' => 95, 'filters' => array('thumbnail' => array('size' => array(0 => 58, 1 => 58), 'mode' => 'outbound'), 'strip' => array()), 'format' => NULL, 'cache' => NULL, 'data_loader' => NULL, 'controller_action' => NULL, 'route' => array()), 'avatar_xsmall' => array('quality' => 95, 'filters' => array('thumbnail' => array('size' => array(0 => 16, 1 => 16), 'mode' => 'outbound'), 'strip' => array()), 'format' => NULL, 'cache' => NULL, 'data_loader' => NULL, 'controller_action' => NULL, 'route' => array())));
    }

    /**
     * Gets the 'liip_imagine.templating.helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Templating\Helper\ImagineHelper A Liip\ImagineBundle\Templating\Helper\ImagineHelper instance.
     */
    protected function getLiipImagine_Templating_HelperService()
    {
        return $this->services['liip_imagine.templating.helper'] = new \Liip\ImagineBundle\Templating\Helper\ImagineHelper($this->get('liip_imagine.cache.manager'));
    }

    /**
     * Gets the 'locale_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\LocaleListener A Symfony\Component\HttpKernel\EventListener\LocaleListener instance.
     */
    protected function getLocaleListenerService()
    {
        return $this->services['locale_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleListener('fr', $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('request_stack'));
    }

    /**
     * Gets the 'logger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance.
     */
    protected function getLoggerService()
    {
        $this->services['logger'] = $instance = new \Symfony\Bridge\Monolog\Logger('app');

        $instance->pushHandler($this->get('monolog.handler.chromephp'));
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.handler.chromephp' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Handler\ChromePhpHandler A Symfony\Bridge\Monolog\Handler\ChromePhpHandler instance.
     */
    protected function getMonolog_Handler_ChromephpService()
    {
        return $this->services['monolog.handler.chromephp'] = new \Symfony\Bridge\Monolog\Handler\ChromePhpHandler(200, true);
    }

    /**
     * Gets the 'monolog.handler.debug' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Handler\DebugHandler A Symfony\Bridge\Monolog\Handler\DebugHandler instance.
     */
    protected function getMonolog_Handler_DebugService()
    {
        return $this->services['monolog.handler.debug'] = new \Symfony\Bridge\Monolog\Handler\DebugHandler(100, true);
    }

    /**
     * Gets the 'monolog.handler.firephp' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Handler\FirePHPHandler A Symfony\Bridge\Monolog\Handler\FirePHPHandler instance.
     */
    protected function getMonolog_Handler_FirephpService()
    {
        return $this->services['monolog.handler.firephp'] = new \Symfony\Bridge\Monolog\Handler\FirePHPHandler(200, true);
    }

    /**
     * Gets the 'monolog.handler.main' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Monolog\Handler\StreamHandler A Monolog\Handler\StreamHandler instance.
     */
    protected function getMonolog_Handler_MainService()
    {
        return $this->services['monolog.handler.main'] = new \Monolog\Handler\StreamHandler('C:\\wamp\\www\\stockvalue~~\\app\\logs/dev.log', 100, true, NULL);
    }

    /**
     * Gets the 'monolog.logger.batch' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance.
     */
    protected function getMonolog_Logger_BatchService()
    {
        $this->services['monolog.logger.batch'] = $instance = new \Symfony\Bridge\Monolog\Logger('batch');

        $instance->pushHandler($this->get('monolog.handler.chromephp'));
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));
        $instance->pushHandler($this->get('akeneo_batch.logger.batch_log_handler'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.doctrine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance.
     */
    protected function getMonolog_Logger_DoctrineService()
    {
        $this->services['monolog.logger.doctrine'] = $instance = new \Symfony\Bridge\Monolog\Logger('doctrine');

        $instance->pushHandler($this->get('monolog.handler.chromephp'));
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.event' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance.
     */
    protected function getMonolog_Logger_EventService()
    {
        $this->services['monolog.logger.event'] = $instance = new \Symfony\Bridge\Monolog\Logger('event');

        $instance->pushHandler($this->get('monolog.handler.chromephp'));
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.oro_distribution' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance.
     */
    protected function getMonolog_Logger_OroDistributionService()
    {
        $this->services['monolog.logger.oro_distribution'] = $instance = new \Symfony\Bridge\Monolog\Logger('oro_distribution');

        $instance->pushHandler($this->get('monolog.handler.chromephp'));
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.php' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance.
     */
    protected function getMonolog_Logger_PhpService()
    {
        $this->services['monolog.logger.php'] = $instance = new \Symfony\Bridge\Monolog\Logger('php');

        $instance->pushHandler($this->get('monolog.handler.chromephp'));
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.profiler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance.
     */
    protected function getMonolog_Logger_ProfilerService()
    {
        $this->services['monolog.logger.profiler'] = $instance = new \Symfony\Bridge\Monolog\Logger('profiler');

        $instance->pushHandler($this->get('monolog.handler.chromephp'));
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.request' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance.
     */
    protected function getMonolog_Logger_RequestService()
    {
        $this->services['monolog.logger.request'] = $instance = new \Symfony\Bridge\Monolog\Logger('request');

        $instance->pushHandler($this->get('monolog.handler.chromephp'));
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance.
     */
    protected function getMonolog_Logger_RouterService()
    {
        $this->services['monolog.logger.router'] = $instance = new \Symfony\Bridge\Monolog\Logger('router');

        $instance->pushHandler($this->get('monolog.handler.chromephp'));
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.security' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance.
     */
    protected function getMonolog_Logger_SecurityService()
    {
        $this->services['monolog.logger.security'] = $instance = new \Symfony\Bridge\Monolog\Logger('security');

        $instance->pushHandler($this->get('monolog.handler.chromephp'));
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.templating' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance.
     */
    protected function getMonolog_Logger_TemplatingService()
    {
        $this->services['monolog.logger.templating'] = $instance = new \Symfony\Bridge\Monolog\Logger('templating');

        $instance->pushHandler($this->get('monolog.handler.chromephp'));
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance.
     */
    protected function getMonolog_Logger_TranslationService()
    {
        $this->services['monolog.logger.translation'] = $instance = new \Symfony\Bridge\Monolog\Logger('translation');

        $instance->pushHandler($this->get('monolog.handler.chromephp'));
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'nelmio_api_doc.doc_comment_extractor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Nelmio\ApiDocBundle\Util\DocCommentExtractor A Nelmio\ApiDocBundle\Util\DocCommentExtractor instance.
     */
    protected function getNelmioApiDoc_DocCommentExtractorService()
    {
        return $this->services['nelmio_api_doc.doc_comment_extractor'] = new \Nelmio\ApiDocBundle\Util\DocCommentExtractor();
    }

    /**
     * Gets the 'nelmio_api_doc.event_listener.request' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Nelmio\ApiDocBundle\EventListener\RequestListener A Nelmio\ApiDocBundle\EventListener\RequestListener instance.
     */
    protected function getNelmioApiDoc_EventListener_RequestService()
    {
        return $this->services['nelmio_api_doc.event_listener.request'] = new \Nelmio\ApiDocBundle\EventListener\RequestListener($this->get('nelmio_api_doc.extractor.api_doc_extractor'), $this->get('nelmio_api_doc.formatter.html_formatter'), '_doc');
    }

    /**
     * Gets the 'nelmio_api_doc.extractor.api_doc_extractor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Nelmio\ApiDocBundle\Extractor\ApiDocExtractor A Nelmio\ApiDocBundle\Extractor\ApiDocExtractor instance.
     */
    protected function getNelmioApiDoc_Extractor_ApiDocExtractorService()
    {
        $a = $this->get('nelmio_api_doc.doc_comment_extractor');
        $b = $this->get('oro_entity_config.config_manager');
        $c = $this->get('translator');

        $d = new \Oro\Bundle\EntityBundle\Provider\ChainEntityClassNameProvider();
        $d->addProvider(new \Oro\Bundle\EntityBundle\Provider\EntityClassNameProvider($b, $c));
        $d->addProvider(new \Oro\Bundle\EntityExtendBundle\Provider\EnumEntityClassNameProvider($b, $c));

        $this->services['nelmio_api_doc.extractor.api_doc_extractor'] = $instance = new \Nelmio\ApiDocBundle\Extractor\ApiDocExtractor($this, $this->get('router'), $this->get('annotation_reader'), $a, new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser($this->get('kernel')), array(0 => new \Nelmio\ApiDocBundle\Extractor\Handler\FosRestHandler(), 1 => new \Nelmio\ApiDocBundle\Extractor\Handler\JmsSecurityExtraHandler(), 2 => new \Nelmio\ApiDocBundle\Extractor\Handler\SensioFrameworkExtraHandler(), 3 => new \Nelmio\ApiDocBundle\Extractor\Handler\PhpDocHandler($a), 4 => new \Oro\Bundle\EntityBundle\Routing\DictionaryEntityApiDocHandler($this->get('oro_entity.entity_alias_resolver'), $d), 5 => new \Oro\Bundle\SoapBundle\Routing\OldOptionsApiDocHandler()), array());

        $instance->addParser($this->get('nelmio_api_doc.parser.collection_parser'));
        $instance->addParser($this->get('nelmio_api_doc.parser.form_errors_parser'));
        $instance->addParser($this->get('nelmio_api_doc.parser.form_type_parser'));
        $instance->addParser($this->get('nelmio_api_doc.parser.validation_parser'));
        $instance->addParser($this->get('nelmio_api_doc.parser.jms_metadata_parser'));

        return $instance;
    }

    /**
     * Gets the 'nelmio_api_doc.form.extension.description_form_type_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Nelmio\ApiDocBundle\Form\Extension\DescriptionFormTypeExtension A Nelmio\ApiDocBundle\Form\Extension\DescriptionFormTypeExtension instance.
     */
    protected function getNelmioApiDoc_Form_Extension_DescriptionFormTypeExtensionService()
    {
        return $this->services['nelmio_api_doc.form.extension.description_form_type_extension'] = new \Nelmio\ApiDocBundle\Form\Extension\DescriptionFormTypeExtension();
    }

    /**
     * Gets the 'nelmio_api_doc.formatter.html_formatter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Nelmio\ApiDocBundle\Formatter\HtmlFormatter A Nelmio\ApiDocBundle\Formatter\HtmlFormatter instance.
     */
    protected function getNelmioApiDoc_Formatter_HtmlFormatterService()
    {
        $this->services['nelmio_api_doc.formatter.html_formatter'] = $instance = new \Nelmio\ApiDocBundle\Formatter\HtmlFormatter();

        $instance->setTemplatingEngine($this->get('templating'));
        $instance->setMotdTemplate('OroUserBundle::ApiDoc/motd.html.twig');
        $instance->setApiName('API documentation');
        $instance->setEnableSandbox(true);
        $instance->setEndpoint(NULL);
        $instance->setRequestFormatMethod('format_param');
        $instance->setRequestFormats(array('json' => 'application/json', 'xml' => 'application/xml'));
        $instance->setDefaultRequestFormat('json');
        $instance->setAcceptType(NULL);
        $instance->setBodyFormats(array(0 => 'form', 1 => 'json'));
        $instance->setDefaultBodyFormat('form');
        $instance->setAuthentication(NULL);
        $instance->setDefaultSectionsOpened(true);

        return $instance;
    }

    /**
     * Gets the 'nelmio_api_doc.formatter.markdown_formatter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Nelmio\ApiDocBundle\Formatter\MarkdownFormatter A Nelmio\ApiDocBundle\Formatter\MarkdownFormatter instance.
     */
    protected function getNelmioApiDoc_Formatter_MarkdownFormatterService()
    {
        return $this->services['nelmio_api_doc.formatter.markdown_formatter'] = new \Nelmio\ApiDocBundle\Formatter\MarkdownFormatter();
    }

    /**
     * Gets the 'nelmio_api_doc.formatter.simple_formatter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Nelmio\ApiDocBundle\Formatter\SimpleFormatter A Nelmio\ApiDocBundle\Formatter\SimpleFormatter instance.
     */
    protected function getNelmioApiDoc_Formatter_SimpleFormatterService()
    {
        return $this->services['nelmio_api_doc.formatter.simple_formatter'] = new \Nelmio\ApiDocBundle\Formatter\SimpleFormatter();
    }

    /**
     * Gets the 'nelmio_api_doc.formatter.swagger_formatter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Nelmio\ApiDocBundle\Formatter\SwaggerFormatter A Nelmio\ApiDocBundle\Formatter\SwaggerFormatter instance.
     */
    protected function getNelmioApiDoc_Formatter_SwaggerFormatterService()
    {
        $this->services['nelmio_api_doc.formatter.swagger_formatter'] = $instance = new \Nelmio\ApiDocBundle\Formatter\SwaggerFormatter('dot_notation');

        $instance->setBasePath('/api');
        $instance->setApiVersion('0.1');
        $instance->setSwaggerVersion('1.2');
        $instance->setInfo(array('title' => 'Symfony2', 'description' => 'My awesome Symfony2 app!', 'TermsOfServiceUrl' => NULL, 'contact' => NULL, 'license' => NULL, 'licenseUrl' => NULL));

        return $instance;
    }

    /**
     * Gets the 'nelmio_api_doc.parser.collection_parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Nelmio\ApiDocBundle\Parser\CollectionParser A Nelmio\ApiDocBundle\Parser\CollectionParser instance.
     */
    protected function getNelmioApiDoc_Parser_CollectionParserService()
    {
        return $this->services['nelmio_api_doc.parser.collection_parser'] = new \Nelmio\ApiDocBundle\Parser\CollectionParser();
    }

    /**
     * Gets the 'nelmio_api_doc.parser.form_errors_parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Nelmio\ApiDocBundle\Parser\FormErrorsParser A Nelmio\ApiDocBundle\Parser\FormErrorsParser instance.
     */
    protected function getNelmioApiDoc_Parser_FormErrorsParserService()
    {
        return $this->services['nelmio_api_doc.parser.form_errors_parser'] = new \Nelmio\ApiDocBundle\Parser\FormErrorsParser();
    }

    /**
     * Gets the 'nelmio_api_doc.parser.form_type_parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Nelmio\ApiDocBundle\Parser\FormTypeParser A Nelmio\ApiDocBundle\Parser\FormTypeParser instance.
     */
    protected function getNelmioApiDoc_Parser_FormTypeParserService()
    {
        return $this->services['nelmio_api_doc.parser.form_type_parser'] = new \Nelmio\ApiDocBundle\Parser\FormTypeParser($this->get('form.factory'), true);
    }

    /**
     * Gets the 'nelmio_api_doc.parser.jms_metadata_parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Nelmio\ApiDocBundle\Parser\JmsMetadataParser A Nelmio\ApiDocBundle\Parser\JmsMetadataParser instance.
     */
    protected function getNelmioApiDoc_Parser_JmsMetadataParserService()
    {
        return $this->services['nelmio_api_doc.parser.jms_metadata_parser'] = new \Nelmio\ApiDocBundle\Parser\JmsMetadataParser($this->get('jms_serializer.metadata_factory'), $this->get('jms_serializer.naming_strategy'), $this->get('nelmio_api_doc.doc_comment_extractor'));
    }

    /**
     * Gets the 'nelmio_api_doc.parser.validation_parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Nelmio\ApiDocBundle\Parser\ValidationParser A Nelmio\ApiDocBundle\Parser\ValidationParser instance.
     */
    protected function getNelmioApiDoc_Parser_ValidationParserService()
    {
        return $this->services['nelmio_api_doc.parser.validation_parser'] = new \Nelmio\ApiDocBundle\Parser\ValidationParser($this->get('validator'));
    }

    /**
     * Gets the 'nelmio_api_doc.twig.extension.extra_markdown' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Nelmio\ApiDocBundle\Twig\Extension\MarkdownExtension A Nelmio\ApiDocBundle\Twig\Extension\MarkdownExtension instance.
     */
    protected function getNelmioApiDoc_Twig_Extension_ExtraMarkdownService()
    {
        return $this->services['nelmio_api_doc.twig.extension.extra_markdown'] = new \Nelmio\ApiDocBundle\Twig\Extension\MarkdownExtension();
    }

    /**
     * Gets the 'oro_activity.entity_config_dumper.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityBundle\Tools\ActivityEntityConfigDumperExtension A Oro\Bundle\ActivityBundle\Tools\ActivityEntityConfigDumperExtension instance.
     */
    protected function getOroActivity_EntityConfigDumper_ExtensionService()
    {
        return $this->services['oro_activity.entity_config_dumper.extension'] = new \Oro\Bundle\ActivityBundle\Tools\ActivityEntityConfigDumperExtension($this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.association_builder'));
    }

    /**
     * Gets the 'oro_activity.entity_generator.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityBundle\Tools\ActivityEntityGeneratorExtension A Oro\Bundle\ActivityBundle\Tools\ActivityEntityGeneratorExtension instance.
     */
    protected function getOroActivity_EntityGenerator_ExtensionService()
    {
        return $this->services['oro_activity.entity_generator.extension'] = new \Oro\Bundle\ActivityBundle\Tools\ActivityEntityGeneratorExtension($this->get('oro_entity_config.provider.grouping'));
    }

    /**
     * Gets the 'oro_activity.form.activity_entity.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroActivity_Form_ActivityEntity_ApiService()
    {
        return $this->services['oro_activity.form.activity_entity.api'] = $this->get('form.factory')->createNamed('targets', 'oro_related_entity_standalone_collection_api', NULL, array('constraints' => array(0 => array('Count' => array('min' => 1, 'minMessage' => 'The \'targets\' collection should contain at least one element')))));
    }

    /**
     * Gets the 'oro_activity.form.handler.activity_entity.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityBundle\Form\Handler\ActivityEntityApiHandler A Oro\Bundle\ActivityBundle\Form\Handler\ActivityEntityApiHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_activity.form.handler.activity_entity.api' service is requested while the 'request' scope is not active
     */
    protected function getOroActivity_Form_Handler_ActivityEntity_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_activity.form.handler.activity_entity.api', 'request');
        }

        return $this->services['oro_activity.form.handler.activity_entity.api'] = $this->scopedServices['request']['oro_activity.form.handler.activity_entity.api'] = new \Oro\Bundle\ActivityBundle\Form\Handler\ActivityEntityApiHandler($this->get('oro_activity.form.activity_entity.api'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_activity.manager'));
    }

    /**
     * Gets the 'oro_activity.handler.delete.activity_entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityBundle\Entity\Manager\ActivityEntityDeleteHandler A Oro\Bundle\ActivityBundle\Entity\Manager\ActivityEntityDeleteHandler instance.
     */
    protected function getOroActivity_Handler_Delete_ActivityEntityService()
    {
        $this->services['oro_activity.handler.delete.activity_entity'] = $instance = new \Oro\Bundle\ActivityBundle\Entity\Manager\ActivityEntityDeleteHandler();

        $instance->setOwnerDeletionManager($this->get('oro_organization.owner_deletion_manager'));
        $instance->setSecurityFacade($this->get('oro_security.security_facade'));

        return $instance;
    }

    /**
     * Gets the 'oro_activity.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityBundle\Manager\ActivityManager A Oro\Bundle\ActivityBundle\Manager\ActivityManager instance.
     */
    protected function getOroActivity_ManagerService()
    {
        $this->services['oro_activity.manager'] = $instance = new \Oro\Bundle\ActivityBundle\Manager\ActivityManager($this->get('oro_entity.doctrine_helper'), $this->get('oro_entity.orm.entity_class_resolver'), $this->get('oro_entity_config.provider.activity'), $this->get('oro_entity_config.provider.grouping'), $this->get('oro_entity_config.provider.entity'), $this->get('oro_entity_config.provider.extend'), $this->get('oro_entity_extend.association_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_activity.manager.activity.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityBundle\Entity\Manager\ActivityApiEntityManager A Oro\Bundle\ActivityBundle\Entity\Manager\ActivityApiEntityManager instance.
     */
    protected function getOroActivity_Manager_Activity_ApiService()
    {
        $this->services['oro_activity.manager.activity.api'] = $instance = new \Oro\Bundle\ActivityBundle\Entity\Manager\ActivityApiEntityManager($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_activity.manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_activity.manager.activity_entity.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityBundle\Entity\Manager\ActivityEntityApiEntityManager A Oro\Bundle\ActivityBundle\Entity\Manager\ActivityEntityApiEntityManager instance.
     */
    protected function getOroActivity_Manager_ActivityEntity_ApiService()
    {
        $this->services['oro_activity.manager.activity_entity.api'] = $instance = new \Oro\Bundle\ActivityBundle\Entity\Manager\ActivityEntityApiEntityManager($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_activity.manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_activity.manager.activity_search.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityBundle\Entity\Manager\ActivitySearchApiEntityManager A Oro\Bundle\ActivityBundle\Entity\Manager\ActivitySearchApiEntityManager instance.
     */
    protected function getOroActivity_Manager_ActivitySearch_ApiService()
    {
        $this->services['oro_activity.manager.activity_search.api'] = $instance = new \Oro\Bundle\ActivityBundle\Entity\Manager\ActivitySearchApiEntityManager($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_activity.manager'), $this->get('oro_search.index'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_activity.manager.activity_target.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityBundle\Entity\Manager\ActivityTargetApiEntityManager A Oro\Bundle\ActivityBundle\Entity\Manager\ActivityTargetApiEntityManager instance.
     */
    protected function getOroActivity_Manager_ActivityTarget_ApiService()
    {
        $this->services['oro_activity.manager.activity_target.api'] = $instance = new \Oro\Bundle\ActivityBundle\Entity\Manager\ActivityTargetApiEntityManager($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_activity.manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_activity.migration.extension.activity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityBundle\Migration\Extension\ActivityExtension A Oro\Bundle\ActivityBundle\Migration\Extension\ActivityExtension instance.
     */
    protected function getOroActivity_Migration_Extension_ActivityService()
    {
        return $this->services['oro_activity.migration.extension.activity'] = new \Oro\Bundle\ActivityBundle\Migration\Extension\ActivityExtension();
    }

    /**
     * Gets the 'oro_activity.widget_provider.actions' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityBundle\Provider\ActivityActionWidgetProvider A Oro\Bundle\ActivityBundle\Provider\ActivityActionWidgetProvider instance.
     */
    protected function getOroActivity_WidgetProvider_ActionsService()
    {
        return $this->services['oro_activity.widget_provider.actions'] = new \Oro\Bundle\ActivityBundle\Provider\ActivityActionWidgetProvider($this->get('oro_activity.manager'), $this->get('oro_ui.placeholder.provider'));
    }

    /**
     * Gets the 'oro_activity.widget_provider.activities' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Provider\ChainWidgetProvider A Oro\Bundle\UIBundle\Provider\ChainWidgetProvider instance.
     */
    protected function getOroActivity_WidgetProvider_ActivitiesService()
    {
        $this->services['oro_activity.widget_provider.activities'] = $instance = new \Oro\Bundle\UIBundle\Provider\ChainWidgetProvider();

        $instance->addProvider($this->get('oro_user.activity_widget_provider'));
        $instance->addProvider($this->get('oro_activity.widget_provider.activities.main'));

        return $instance;
    }

    /**
     * Gets the 'oro_activity.widget_provider.activities.main' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityBundle\Provider\ActivityWidgetProvider A Oro\Bundle\ActivityBundle\Provider\ActivityWidgetProvider instance.
     */
    protected function getOroActivity_WidgetProvider_Activities_MainService()
    {
        return $this->services['oro_activity.widget_provider.activities.main'] = new \Oro\Bundle\ActivityBundle\Provider\ActivityWidgetProvider($this->get('oro_activity.manager'), $this->get('oro_security.security_facade'), $this->get('translator'), $this->get('oro_entity.entity_identifier_accessor'), $this->get('oro_entity.routing_helper'));
    }

    /**
     * Gets the 'oro_activity_list.collect_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\Entity\Manager\CollectListManager A Oro\Bundle\ActivityListBundle\Entity\Manager\CollectListManager instance.
     */
    protected function getOroActivityList_CollectManagerService()
    {
        return $this->services['oro_activity_list.collect_manager'] = new \Oro\Bundle\ActivityListBundle\Entity\Manager\CollectListManager($this->get('oro_activity_list.provider.chain'));
    }

    /**
     * Gets the 'oro_activity_list.entity_config_dumper.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\Tools\ActivityListEntityConfigDumperExtension A Oro\Bundle\ActivityListBundle\Tools\ActivityListEntityConfigDumperExtension instance.
     */
    protected function getOroActivityList_EntityConfigDumper_ExtensionService()
    {
        return $this->services['oro_activity_list.entity_config_dumper.extension'] = new \Oro\Bundle\ActivityListBundle\Tools\ActivityListEntityConfigDumperExtension($this->get('oro_activity_list.provider.chain'), $this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.association_builder'));
    }

    /**
     * Gets the 'oro_activity_list.entity_generator.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\Tools\ActivityListEntityGeneratorExtension A Oro\Bundle\ActivityListBundle\Tools\ActivityListEntityGeneratorExtension instance.
     */
    protected function getOroActivityList_EntityGenerator_ExtensionService()
    {
        return $this->services['oro_activity_list.entity_generator.extension'] = new \Oro\Bundle\ActivityListBundle\Tools\ActivityListEntityGeneratorExtension($this->get('oro_activity_list.provider.chain'));
    }

    /**
     * Gets the 'oro_activity_list.event_listener.actitity_list_changes_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\ActivityListBundle\EventListener\ActivityListChangesListener A Oro\Bundle\ActivityListBundle\EventListener\ActivityListChangesListener instance.
     */
    public function getOroActivityList_EventListener_ActitityListChangesListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_activity_list.event_listener.actitity_list_changes_listener'] = new OroBundleActivityListBundleEventListenerActivityListChangesListener_000000002e47e59000000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroActivityList_EventListener_ActitityListChangesListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\ActivityListBundle\EventListener\ActivityListChangesListener($this->get('oro_security.security_facade.link'), $this->get('oro_activity_list.provider.chain'));
    }

    /**
     * Gets the 'oro_activity_list.event_listener.actitity_list_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\ActivityListBundle\EventListener\ActivityListListener A Oro\Bundle\ActivityListBundle\EventListener\ActivityListListener instance.
     */
    public function getOroActivityList_EventListener_ActitityListListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_activity_list.event_listener.actitity_list_listener'] = new OroBundleActivityListBundleEventListenerActivityListListener_000000002e47e59600000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroActivityList_EventListener_ActitityListListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\ActivityListBundle\EventListener\ActivityListListener($this->get('oro_activity_list.collect_manager'), $this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_activity_list.event_listener.segment_condition_builder_options_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\EventListener\SegmentConditionBuilderOptionsListener A Oro\Bundle\ActivityListBundle\EventListener\SegmentConditionBuilderOptionsListener instance.
     */
    protected function getOroActivityList_EventListener_SegmentConditionBuilderOptionsListenerService()
    {
        return $this->services['oro_activity_list.event_listener.segment_condition_builder_options_listener'] = new \Oro\Bundle\ActivityListBundle\EventListener\SegmentConditionBuilderOptionsListener();
    }

    /**
     * Gets the 'oro_activity_list.event_listener.segment_widget_options_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\EventListener\SegmentWidgetOptionsListener A Oro\Bundle\ActivityListBundle\EventListener\SegmentWidgetOptionsListener instance.
     */
    protected function getOroActivityList_EventListener_SegmentWidgetOptionsListenerService()
    {
        return $this->services['oro_activity_list.event_listener.segment_widget_options_listener'] = new \Oro\Bundle\ActivityListBundle\EventListener\SegmentWidgetOptionsListener();
    }

    /**
     * Gets the 'oro_activity_list.filter.activity_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\Filter\ActivityListFilter A Oro\Bundle\ActivityListBundle\Filter\ActivityListFilter instance.
     */
    protected function getOroActivityList_Filter_ActivityListService()
    {
        return $this->services['oro_activity_list.filter.activity_list'] = new \Oro\Bundle\ActivityListBundle\Filter\ActivityListFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'), $this->get('oro_activity.manager'), $this->get('oro_activity_list.provider.chain'), $this->get('oro_activity_list.filter.helper'), $this->get('oro_entity.routing_helper'), $this->get('oro_query_designer.query_designer.manager'), $this->get('oro_activity_list.filter.datagrid_helper'));
    }

    /**
     * Gets the 'oro_activity_list.filter.datagrid_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\Filter\DatagridHelper A Oro\Bundle\ActivityListBundle\Filter\DatagridHelper instance.
     */
    protected function getOroActivityList_Filter_DatagridHelperService()
    {
        return $this->services['oro_activity_list.filter.datagrid_helper'] = new \Oro\Bundle\ActivityListBundle\Filter\DatagridHelper($this->get('oro_query_designer.grid.datagrid_configuration_builder'), new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_datagrid.datagrid.builder', false), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_activity_list.filter.helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\Filter\ActivityListFilterHelper A Oro\Bundle\ActivityListBundle\Filter\ActivityListFilterHelper instance.
     */
    protected function getOroActivityList_Filter_HelperService()
    {
        return $this->services['oro_activity_list.filter.helper'] = new \Oro\Bundle\ActivityListBundle\Filter\ActivityListFilterHelper($this->get('oro_filter.datetime_range_filter'), $this->get('oro_filter.choice_filter'), $this->get('oro_entity.routing_helper'), $this->get('oro_activity_list.provider.chain'));
    }

    /**
     * Gets the 'oro_activity_list.form.type.activity_list_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\Form\Type\ActivityListFilterType A Oro\Bundle\ActivityListBundle\Form\Type\ActivityListFilterType instance.
     */
    protected function getOroActivityList_Form_Type_ActivityListFilterService()
    {
        return $this->services['oro_activity_list.form.type.activity_list_filter'] = new \Oro\Bundle\ActivityListBundle\Form\Type\ActivityListFilterType();
    }

    /**
     * Gets the 'oro_activity_list.helper.acl_criteria' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\Helper\ActivityListAclCriteriaHelper A Oro\Bundle\ActivityListBundle\Helper\ActivityListAclCriteriaHelper instance.
     */
    protected function getOroActivityList_Helper_AclCriteriaService()
    {
        return $this->services['oro_activity_list.helper.acl_criteria'] = new \Oro\Bundle\ActivityListBundle\Helper\ActivityListAclCriteriaHelper($this->get('oro_security.acl_helper'), $this->get('oro_entity_config.link.security_context'));
    }

    /**
     * Gets the 'oro_activity_list.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\Entity\Manager\ActivityListManager A Oro\Bundle\ActivityListBundle\Entity\Manager\ActivityListManager instance.
     */
    protected function getOroActivityList_ManagerService()
    {
        return $this->services['oro_activity_list.manager'] = new \Oro\Bundle\ActivityListBundle\Entity\Manager\ActivityListManager($this->get('doctrine'), $this->get('oro_security.security_facade'), $this->get('oro_entity.entity_name_resolver'), $this->get('oro_datagrid.extension.pager.orm.pager'), $this->get('oro_config.user'), $this->get('oro_activity_list.provider.chain'), $this->get('oro_activity_list.filter.helper'), $this->get('oro_comment.comment.api_manager'), $this->get('oro_entity.doctrine_helper'), $this->get('oro_activity_list.helper.acl_criteria'));
    }

    /**
     * Gets the 'oro_activity_list.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroActivityList_Manager_ApiService()
    {
        $this->services['oro_activity_list.manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\ActivityListBundle\\Entity\\ActivityList', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_activity_list.migration.activity_list.post_up.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\EventListener\ActivityListPostUpMigrationListener A Oro\Bundle\ActivityListBundle\EventListener\ActivityListPostUpMigrationListener instance.
     */
    protected function getOroActivityList_Migration_ActivityList_PostUp_ListenerService()
    {
        return $this->services['oro_activity_list.migration.activity_list.post_up.listener'] = new \Oro\Bundle\ActivityListBundle\EventListener\ActivityListPostUpMigrationListener($this->get('oro_activity_list.provider.chain'), $this->get('oro_activity_list.migration.extension.activity_list'), $this->get('oro_entity_extend.migration.entity_metadata_helper'), $this->get('oro_migration.db_id_name_generator'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_activity_list.migration.extension.activity_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\Migration\Extension\ActivityListExtension A Oro\Bundle\ActivityListBundle\Migration\Extension\ActivityListExtension instance.
     */
    protected function getOroActivityList_Migration_Extension_ActivityListService()
    {
        return $this->services['oro_activity_list.migration.extension.activity_list'] = new \Oro\Bundle\ActivityListBundle\Migration\Extension\ActivityListExtension();
    }

    /**
     * Gets the 'oro_activity_list.placeholder.filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\Placeholder\PlaceholderFilter A Oro\Bundle\ActivityListBundle\Placeholder\PlaceholderFilter instance.
     */
    protected function getOroActivityList_Placeholder_FilterService()
    {
        return $this->services['oro_activity_list.placeholder.filter'] = new \Oro\Bundle\ActivityListBundle\Placeholder\PlaceholderFilter($this->get('oro_activity_list.provider.chain'), $this->get('doctrine'), $this->get('oro_entity.doctrine_helper'), $this->get('oro_entity_config.provider.activity'));
    }

    /**
     * Gets the 'oro_activity_list.provider.chain' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\Provider\ActivityListChainProvider A Oro\Bundle\ActivityListBundle\Provider\ActivityListChainProvider instance.
     */
    protected function getOroActivityList_Provider_ChainService()
    {
        $this->services['oro_activity_list.provider.chain'] = $instance = new \Oro\Bundle\ActivityListBundle\Provider\ActivityListChainProvider($this->get('oro_entity.doctrine_helper'), $this->get('oro_entity_config.config_manager'), $this->get('translator'), $this->get('oro_entity.routing_helper'), $this->get('oro_ui.html_tag_helper'));

        $instance->addProvider($this->get('oro_email.activity_list.provider'));
        $instance->addProvider($this->get('oro_note.activity_list.provider'));
        $instance->addProvider($this->get('oro_calendar.activity_list.provider'));

        return $instance;
    }

    /**
     * Gets the 'oro_activity_list.provider.email_recipients' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ActivityListBundle\Provider\EmailRecipientsProvider A Oro\Bundle\ActivityListBundle\Provider\EmailRecipientsProvider instance.
     */
    protected function getOroActivityList_Provider_EmailRecipientsService()
    {
        return $this->services['oro_activity_list.provider.email_recipients'] = new \Oro\Bundle\ActivityListBundle\Provider\EmailRecipientsProvider($this->get('doctrine'), $this->get('oro_activity.manager'), $this->get('oro_email.related_emails.provider'), $this->get('oro_activity_list.helper.acl_criteria'), $this->get('oro_activity_list.provider.chain'));
    }

    /**
     * Gets the 'oro_address.address.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\Entity\Manager\AddressManager A Oro\Bundle\AddressBundle\Entity\Manager\AddressManager instance.
     */
    protected function getOroAddress_Address_ManagerService()
    {
        return $this->services['oro_address.address.manager'] = new \Oro\Bundle\AddressBundle\Entity\Manager\AddressManager('Oro\\Bundle\\AddressBundle\\Entity\\Address', $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_address.address.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\Provider\AddressProvider A Oro\Bundle\AddressBundle\Provider\AddressProvider instance.
     */
    protected function getOroAddress_Address_ProviderService()
    {
        $this->services['oro_address.address.provider'] = $instance = new \Oro\Bundle\AddressBundle\Provider\AddressProvider();

        $instance->addStorage($this->get('oro_address.address.manager'));

        return $instance;
    }

    /**
     * Gets the 'oro_address.form.address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroAddress_Form_AddressService()
    {
        return $this->services['oro_address.form.address'] = $this->get('form.factory')->createNamed('oro_address_form', 'oro_address', NULL);
    }

    /**
     * Gets the 'oro_address.form.handler.address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\Form\Handler\AddressHandler A Oro\Bundle\AddressBundle\Form\Handler\AddressHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_address.form.handler.address' service is requested while the 'request' scope is not active
     */
    protected function getOroAddress_Form_Handler_AddressService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_address.form.handler.address', 'request');
        }

        return $this->services['oro_address.form.handler.address'] = $this->scopedServices['request']['oro_address.form.handler.address'] = new \Oro\Bundle\AddressBundle\Form\Handler\AddressHandler($this->get('oro_address.form.address'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_address.form.listener.address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\Form\EventListener\AddressCountryAndRegionSubscriber A Oro\Bundle\AddressBundle\Form\EventListener\AddressCountryAndRegionSubscriber instance.
     */
    protected function getOroAddress_Form_Listener_AddressService()
    {
        return $this->services['oro_address.form.listener.address'] = new \Oro\Bundle\AddressBundle\Form\EventListener\AddressCountryAndRegionSubscriber($this->get('doctrine.orm.default_entity_manager'), $this->get('form.factory'));
    }

    /**
     * Gets the 'oro_address.form.type.address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\Form\Type\AddressType A Oro\Bundle\AddressBundle\Form\Type\AddressType instance.
     */
    protected function getOroAddress_Form_Type_AddressService()
    {
        return $this->services['oro_address.form.type.address'] = new \Oro\Bundle\AddressBundle\Form\Type\AddressType($this->get('oro_address.form.listener.address'));
    }

    /**
     * Gets the 'oro_address.form.type.country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\Form\Type\CountryType A Oro\Bundle\AddressBundle\Form\Type\CountryType instance.
     */
    protected function getOroAddress_Form_Type_CountryService()
    {
        return $this->services['oro_address.form.type.country'] = new \Oro\Bundle\AddressBundle\Form\Type\CountryType();
    }

    /**
     * Gets the 'oro_address.form.type.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\Form\Type\EmailType A Oro\Bundle\AddressBundle\Form\Type\EmailType instance.
     */
    protected function getOroAddress_Form_Type_EmailService()
    {
        return $this->services['oro_address.form.type.email'] = new \Oro\Bundle\AddressBundle\Form\Type\EmailType();
    }

    /**
     * Gets the 'oro_address.form.type.phone' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\Form\Type\PhoneType A Oro\Bundle\AddressBundle\Form\Type\PhoneType instance.
     */
    protected function getOroAddress_Form_Type_PhoneService()
    {
        return $this->services['oro_address.form.type.phone'] = new \Oro\Bundle\AddressBundle\Form\Type\PhoneType();
    }

    /**
     * Gets the 'oro_address.form.type.region' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\Form\Type\RegionType A Oro\Bundle\AddressBundle\Form\Type\RegionType instance.
     */
    protected function getOroAddress_Form_Type_RegionService()
    {
        return $this->services['oro_address.form.type.region'] = new \Oro\Bundle\AddressBundle\Form\Type\RegionType();
    }

    /**
     * Gets the 'oro_address.form.type.typed_address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\Form\Type\TypedAddressType A Oro\Bundle\AddressBundle\Form\Type\TypedAddressType instance.
     */
    protected function getOroAddress_Form_Type_TypedAddressService()
    {
        return $this->services['oro_address.form.type.typed_address'] = new \Oro\Bundle\AddressBundle\Form\Type\TypedAddressType();
    }

    /**
     * Gets the 'oro_address.importexport.template_fixture.address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\ImportExport\TemplateFixture\AddressFixture A Oro\Bundle\AddressBundle\ImportExport\TemplateFixture\AddressFixture instance.
     */
    protected function getOroAddress_Importexport_TemplateFixture_AddressService()
    {
        return $this->services['oro_address.importexport.template_fixture.address'] = new \Oro\Bundle\AddressBundle\ImportExport\TemplateFixture\AddressFixture();
    }

    /**
     * Gets the 'oro_address.importexport.template_fixture.address_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\ImportExport\TemplateFixture\AddressTypeFixture A Oro\Bundle\AddressBundle\ImportExport\TemplateFixture\AddressTypeFixture instance.
     */
    protected function getOroAddress_Importexport_TemplateFixture_AddressTypeService()
    {
        return $this->services['oro_address.importexport.template_fixture.address_type'] = new \Oro\Bundle\AddressBundle\ImportExport\TemplateFixture\AddressTypeFixture();
    }

    /**
     * Gets the 'oro_address.importexport.template_fixture.country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\ImportExport\TemplateFixture\CountryFixture A Oro\Bundle\AddressBundle\ImportExport\TemplateFixture\CountryFixture instance.
     */
    protected function getOroAddress_Importexport_TemplateFixture_CountryService()
    {
        return $this->services['oro_address.importexport.template_fixture.country'] = new \Oro\Bundle\AddressBundle\ImportExport\TemplateFixture\CountryFixture();
    }

    /**
     * Gets the 'oro_address.importexport.template_fixture.region' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\ImportExport\TemplateFixture\RegionFixture A Oro\Bundle\AddressBundle\ImportExport\TemplateFixture\RegionFixture instance.
     */
    protected function getOroAddress_Importexport_TemplateFixture_RegionService()
    {
        return $this->services['oro_address.importexport.template_fixture.region'] = new \Oro\Bundle\AddressBundle\ImportExport\TemplateFixture\RegionFixture();
    }

    /**
     * Gets the 'oro_address.provider.phone' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\Provider\PhoneProvider A Oro\Bundle\AddressBundle\Provider\PhoneProvider instance.
     */
    protected function getOroAddress_Provider_PhoneService()
    {
        $this->services['oro_address.provider.phone'] = $instance = new \Oro\Bundle\AddressBundle\Provider\PhoneProvider($this->get('oro_entity_config.provider.extend'));

        $instance->addPhoneProvider('Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit', $this->get('oro_organization.provider.phone.business_unit'));

        return $instance;
    }

    /**
     * Gets the 'oro_address.type.address_collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\Form\Type\AddressCollectionType A Oro\Bundle\AddressBundle\Form\Type\AddressCollectionType instance.
     */
    protected function getOroAddress_Type_AddressCollectionService()
    {
        return $this->services['oro_address.type.address_collection'] = new \Oro\Bundle\AddressBundle\Form\Type\AddressCollectionType();
    }

    /**
     * Gets the 'oro_address.type.email_collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\Form\Type\EmailCollectionType A Oro\Bundle\AddressBundle\Form\Type\EmailCollectionType instance.
     */
    protected function getOroAddress_Type_EmailCollectionService()
    {
        return $this->services['oro_address.type.email_collection'] = new \Oro\Bundle\AddressBundle\Form\Type\EmailCollectionType();
    }

    /**
     * Gets the 'oro_address.type.phone_collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AddressBundle\Form\Type\PhoneCollectionType A Oro\Bundle\AddressBundle\Form\Type\PhoneCollectionType instance.
     */
    protected function getOroAddress_Type_PhoneCollectionService()
    {
        return $this->services['oro_address.type.phone_collection'] = new \Oro\Bundle\AddressBundle\Form\Type\PhoneCollectionType();
    }

    /**
     * Gets the 'oro_assetic.configuration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AsseticBundle\AssetsConfiguration A Oro\Bundle\AsseticBundle\AssetsConfiguration instance.
     */
    protected function getOroAssetic_ConfigurationService()
    {
        return $this->services['oro_assetic.configuration'] = new \Oro\Bundle\AsseticBundle\AssetsConfiguration($this->get('debug.event_dispatcher'), array('css_debug_groups' => array(), 'css_debug_all' => false, 'css' => array('timepicker' => array(0 => 'bundles/oroui/lib/jquery.timepicker-1.4.13/jquery.timepicker.css'), 'oroui' => array(0 => 'bundles/oroui/lib/bootstrap/bootstrap.less', 1 => 'bundles/oroui/lib/jstree/themes/default/style.css', 2 => 'bundles/oroui/lib/font-awesome/css/font-awesome.css', 3 => 'bundles/oroui/lib/simplecolorpicker/jquery.simplecolorpicker.css', 4 => 'bundles/oroui/lib/simplecolorpicker/jquery.simplecolorpicker-fontawesome.css', 5 => 'bundles/oroui/lib/minicolors/jquery.minicolors.css', 6 => 'bundles/oroui/css/font-awesome-4.3/font-awesome.css', 7 => 'bundles/oroui/css/jquery-ui.grid.css', 8 => 'bundles/oroui/css/jquery-ui-1.10.2.custom.css', 9 => 'bundles/oroui/css/less/main.less', 10 => 'bundles/oroui/css/all.css'), 'orosecurity' => array(0 => 'bundles/orosecurity/css/selector.less'), 'oroattachment' => array(0 => 'bundles/oroattachment/css/attachment.less'), 'oroemail' => array(0 => 'bundles/oroemail/css/less/style.less'), 'oroentityextend' => array(0 => 'bundles/oroentityextend/css/extend.css'), 'orointegration' => array(0 => 'bundles/orointegration/css/style.css'), 'oroactivitylist' => array(0 => 'bundles/oroactivitylist/css/less/activity-list.less'), 'oroaddress' => array(0 => 'bundles/oroaddress/css/less/address.less', 1 => 'bundles/oroaddress/css/address.css'), 'orocalendar' => array(0 => 'bundles/orocalendar/css/calendar.css', 1 => 'bundles/orocalendar/css/less/print.less', 2 => 'bundles/orocalendar/lib/fullcalendar/fullcalendar.css'), 'oroconfig' => array(0 => 'bundles/oroconfig/css/less/config.less', 1 => 'bundles/oroform/css/less/form.less'), 'orodataaudit' => array(0 => 'bundles/orodataaudit/css/less/oro.audit.less'), 'orodatagrid' => array(0 => 'bundles/orodatagrid/lib/backgrid/backgrid.css', 1 => 'bundles/orodatagrid/lib/backgrid/extensions/paginator/backgrid-paginator.css', 2 => 'bundles/orodatagrid/css/oro.grid.less'), 'oroentitymerge' => array(0 => 'bundles/oroentitymerge/css/less/merge_view.less'), 'oroentitypagination' => array(0 => 'bundles/oroentitypagination/css/entity-pagination.css'), 'orofilter' => array(0 => 'bundles/orofilter/lib/multiselect/jquery.multiselect.css', 1 => 'bundles/orofilter/lib/multiselect/jquery.multiselect.filter.css', 2 => 'bundles/orofilter/css/less/oro.filter.less'), 'oroimportexport' => array(0 => 'bundles/oroimportexport/css/import.css'), 'orolocale' => array(0 => 'bundles/orolocale/css/style.css'), 'oronote' => array(0 => 'bundles/oronote/css/less/note.less'), 'oroplatform' => array(0 => 'bundles/oroplatform/css/style.css'), 'oroquerydesigner' => array(0 => 'bundles/oroquerydesigner/css/less/condition-builder.less', 1 => 'bundles/oroquerydesigner/css/query-designer.css'), 'ororeport' => array(0 => 'bundles/ororeport/css/report.css'), 'orosearch' => array(0 => 'bundles/orosearch/css/search.less'), 'orosegment' => array(0 => 'bundles/orosegment/css/segment.css'), 'orosidebar' => array(0 => 'bundles/orosidebar/css/sidebar.css', 1 => 'bundles/orosidebar/css/widget-add.css', 2 => 'bundles/orosidebar/css/modal.css', 3 => 'bundles/orosidebar/sidebar_widgets/sticky_note/css/styles.css'), 'orotag' => array(0 => 'bundles/orotag/css/tag-grid.less'), 'orotranslation' => array(0 => 'bundles/orotranslation/css/style.css'), 'orowindows' => array(0 => 'bundles/orowindows/css/jquery.dialog.extended.css'), 'oroworkflow' => array(0 => 'bundles/oroworkflow/css/less/workflow.less'), 'orocomment' => array(0 => 'bundles/orocomment/css/less/comment.less'), 'orodashboard' => array(0 => 'bundles/orodashboard/css/less/dashboard.less'), 'orotracking' => array(0 => 'bundles/orotracking/css/less/code.less'), 'ororeminder' => array(0 => 'bundles/ororeminder/less/style.less'))));
    }

    /**
     * Gets the 'oro_assetic.twig.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AsseticBundle\Twig\AsseticExtension A Oro\Bundle\AsseticBundle\Twig\AsseticExtension instance.
     */
    protected function getOroAssetic_Twig_ExtensionService()
    {
        return $this->services['oro_assetic.twig.extension'] = new \Oro\Bundle\AsseticBundle\Twig\AsseticExtension($this->get('oro_assetic.configuration'), $this->get('assetic.asset_factory'));
    }

    /**
     * Gets the 'oro_attachment.config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\EntityConfig\AttachmentConfig A Oro\Bundle\AttachmentBundle\EntityConfig\AttachmentConfig instance.
     */
    protected function getOroAttachment_ConfigService()
    {
        return $this->services['oro_attachment.config'] = new \Oro\Bundle\AttachmentBundle\EntityConfig\AttachmentConfig($this->get('oro_entity_config.provider.attachment'), $this->get('oro_entity_config.provider.entity'));
    }

    /**
     * Gets the 'oro_attachment.datagrid.action.dialog' service.
     *
     * @return \Oro\Bundle\AttachmentBundle\DataGrid\Action\DialogAction A Oro\Bundle\AttachmentBundle\DataGrid\Action\DialogAction instance.
     */
    protected function getOroAttachment_Datagrid_Action_DialogService()
    {
        return new \Oro\Bundle\AttachmentBundle\DataGrid\Action\DialogAction();
    }

    /**
     * Gets the 'oro_attachment.entity_config_dumper.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Tools\AttachmentConfigDumperExtension A Oro\Bundle\AttachmentBundle\Tools\AttachmentConfigDumperExtension instance.
     */
    protected function getOroAttachment_EntityConfigDumper_ExtensionService()
    {
        return $this->services['oro_attachment.entity_config_dumper.extension'] = new \Oro\Bundle\AttachmentBundle\Tools\AttachmentConfigDumperExtension($this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.association_builder'));
    }

    /**
     * Gets the 'oro_attachment.entity_config_dumper.extension.file' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Tools\FileEntityConfigDumperExtension A Oro\Bundle\AttachmentBundle\Tools\FileEntityConfigDumperExtension instance.
     */
    protected function getOroAttachment_EntityConfigDumper_Extension_FileService()
    {
        return $this->services['oro_attachment.entity_config_dumper.extension.file'] = new \Oro\Bundle\AttachmentBundle\Tools\FileEntityConfigDumperExtension($this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.relation_builder'));
    }

    /**
     * Gets the 'oro_attachment.entity_generator.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Tools\AttachmentEntityGeneratorExtension A Oro\Bundle\AttachmentBundle\Tools\AttachmentEntityGeneratorExtension instance.
     */
    protected function getOroAttachment_EntityGenerator_ExtensionService()
    {
        return $this->services['oro_attachment.entity_generator.extension'] = new \Oro\Bundle\AttachmentBundle\Tools\AttachmentEntityGeneratorExtension();
    }

    /**
     * Gets the 'oro_attachment.event_listener.attachment_grid_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\EventListener\AttachmentGridListener A Oro\Bundle\AttachmentBundle\EventListener\AttachmentGridListener instance.
     */
    protected function getOroAttachment_EventListener_AttachmentGridListenerService()
    {
        return $this->services['oro_attachment.event_listener.attachment_grid_listener'] = new \Oro\Bundle\AttachmentBundle\EventListener\AttachmentGridListener(array(0 => 'entityId'));
    }

    /**
     * Gets the 'oro_attachment.form.file_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Form\EventSubscriber\FileSubscriber A Oro\Bundle\AttachmentBundle\Form\EventSubscriber\FileSubscriber instance.
     */
    protected function getOroAttachment_Form_FileSubscriberService()
    {
        return $this->services['oro_attachment.form.file_subscriber'] = new \Oro\Bundle\AttachmentBundle\Form\EventSubscriber\FileSubscriber($this->get('oro_attachment.validator.file_config_validator'));
    }

    /**
     * Gets the 'oro_attachment.form.handler.attachment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Form\Handler\AttachmentHandler A Oro\Bundle\AttachmentBundle\Form\Handler\AttachmentHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_attachment.form.handler.attachment' service is requested while the 'request' scope is not active
     */
    protected function getOroAttachment_Form_Handler_AttachmentService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_attachment.form.handler.attachment', 'request');
        }

        return $this->services['oro_attachment.form.handler.attachment'] = $this->scopedServices['request']['oro_attachment.form.handler.attachment'] = new \Oro\Bundle\AttachmentBundle\Form\Handler\AttachmentHandler($this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_attachment.form.type.file' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Form\Type\FileType A Oro\Bundle\AttachmentBundle\Form\Type\FileType instance.
     */
    protected function getOroAttachment_Form_Type_FileService()
    {
        $this->services['oro_attachment.form.type.file'] = $instance = new \Oro\Bundle\AttachmentBundle\Form\Type\FileType();

        $instance->setEventSubscriber($this->get('oro_attachment.form.file_subscriber'));

        return $instance;
    }

    /**
     * Gets the 'oro_attachment.form.type.file_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Form\Type\FileConfigType A Oro\Bundle\AttachmentBundle\Form\Type\FileConfigType instance.
     */
    protected function getOroAttachment_Form_Type_FileConfigService()
    {
        return $this->services['oro_attachment.form.type.file_config'] = new \Oro\Bundle\AttachmentBundle\Form\Type\FileConfigType($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_attachment.form.type.image' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Form\Type\ImageType A Oro\Bundle\AttachmentBundle\Form\Type\ImageType instance.
     */
    protected function getOroAttachment_Form_Type_ImageService()
    {
        return $this->services['oro_attachment.form.type.image'] = new \Oro\Bundle\AttachmentBundle\Form\Type\ImageType();
    }

    /**
     * Gets the 'oro_attachment.formatter.image_encoded' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Formatter\ImageEncodedFormatter A Oro\Bundle\AttachmentBundle\Formatter\ImageEncodedFormatter instance.
     */
    protected function getOroAttachment_Formatter_ImageEncodedService()
    {
        return $this->services['oro_attachment.formatter.image_encoded'] = new \Oro\Bundle\AttachmentBundle\Formatter\ImageEncodedFormatter($this->get('oro_attachment.manager'), $this->get('file_locator'));
    }

    /**
     * Gets the 'oro_attachment.formatter.image_link' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Formatter\ImageLinkFormatter A Oro\Bundle\AttachmentBundle\Formatter\ImageLinkFormatter instance.
     */
    protected function getOroAttachment_Formatter_ImageLinkService()
    {
        return $this->services['oro_attachment.formatter.image_link'] = new \Oro\Bundle\AttachmentBundle\Formatter\ImageLinkFormatter($this->get('oro_attachment.manager'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_attachment.formatter.image_src' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Formatter\ImageSrcFormatter A Oro\Bundle\AttachmentBundle\Formatter\ImageSrcFormatter instance.
     */
    protected function getOroAttachment_Formatter_ImageSrcService()
    {
        return $this->services['oro_attachment.formatter.image_src'] = new \Oro\Bundle\AttachmentBundle\Formatter\ImageSrcFormatter($this->get('oro_attachment.manager'));
    }

    /**
     * Gets the 'oro_attachment.listener.file_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\AttachmentBundle\EventListener\FileListener A Oro\Bundle\AttachmentBundle\EventListener\FileListener instance.
     */
    public function getOroAttachment_Listener_FileListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_attachment.listener.file_listener'] = new OroBundleAttachmentBundleEventListenerFileListener_000000002e47e0d900000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroAttachment_Listener_FileListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\AttachmentBundle\EventListener\FileListener($this->get('oro_attachment.manager'));
    }

    /**
     * Gets the 'oro_attachment.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Manager\AttachmentManager A Oro\Bundle\AttachmentBundle\Manager\AttachmentManager instance.
     */
    protected function getOroAttachment_ManagerService()
    {
        return $this->services['oro_attachment.manager'] = new \Oro\Bundle\AttachmentBundle\Manager\AttachmentManager($this->get('knp_gaufrette.filesystem_map'), $this->get('router'), $this->get('oro_security.security_facade.link'), array('default' => 'icon-file-alt', 'doc' => 'icon-file-alt', 'docx' => 'icon-file-alt', 'xls' => 'icon-file-alt', 'xlsx' => 'icon-file-alt'), $this->get('oro_entity_extend.association_manager'));
    }

    /**
     * Gets the 'oro_attachment.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Entity\Manager\AttachmentApiEntityManager A Oro\Bundle\AttachmentBundle\Entity\Manager\AttachmentApiEntityManager instance.
     */
    protected function getOroAttachment_Manager_ApiService()
    {
        $a = $this->get('oro_entity.doctrine_helper');

        $this->services['oro_attachment.manager.api'] = $instance = new \Oro\Bundle\AttachmentBundle\Entity\Manager\AttachmentApiEntityManager('Oro\\Bundle\\AttachmentBundle\\Entity\\Attachment', $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_security.security_facade'), $this->get('oro_attachment.manager'), $a);

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($a);
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_attachment.manager.file.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Entity\Manager\FileApiEntityManager A Oro\Bundle\AttachmentBundle\Entity\Manager\FileApiEntityManager instance.
     */
    protected function getOroAttachment_Manager_File_ApiService()
    {
        $this->services['oro_attachment.manager.file.api'] = $instance = new \Oro\Bundle\AttachmentBundle\Entity\Manager\FileApiEntityManager('Oro\\Bundle\\AttachmentBundle\\Entity\\File', $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_security.security_facade'), $this->get('oro_attachment.manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_attachment.migration.extension.attachment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Migration\Extension\AttachmentExtension A Oro\Bundle\AttachmentBundle\Migration\Extension\AttachmentExtension instance.
     */
    protected function getOroAttachment_Migration_Extension_AttachmentService()
    {
        return $this->services['oro_attachment.migration.extension.attachment'] = new \Oro\Bundle\AttachmentBundle\Migration\Extension\AttachmentExtension();
    }

    /**
     * Gets the 'oro_attachment.placeholder.filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Placeholder\PlaceholderFilter A Oro\Bundle\AttachmentBundle\Placeholder\PlaceholderFilter instance.
     */
    protected function getOroAttachment_Placeholder_FilterService()
    {
        return $this->services['oro_attachment.placeholder.filter'] = new \Oro\Bundle\AttachmentBundle\Placeholder\PlaceholderFilter($this->get('oro_attachment.config'), $this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_attachment.provider.attachment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Provider\AttachmentProvider A Oro\Bundle\AttachmentBundle\Provider\AttachmentProvider instance.
     */
    protected function getOroAttachment_Provider_AttachmentService()
    {
        return $this->services['oro_attachment.provider.attachment'] = new \Oro\Bundle\AttachmentBundle\Provider\AttachmentProvider($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_attachment.config'));
    }

    /**
     * Gets the 'oro_attachment.serializer.file_normalizer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\ImportExport\FileNormalizer A Oro\Bundle\AttachmentBundle\ImportExport\FileNormalizer instance.
     */
    protected function getOroAttachment_Serializer_FileNormalizerService()
    {
        $this->services['oro_attachment.serializer.file_normalizer'] = $instance = new \Oro\Bundle\AttachmentBundle\ImportExport\FileNormalizer();

        $instance->setAttachmentManager($this->get('oro_attachment.manager'));
        $instance->setValidator($this->get('oro_attachment.validator.file_config_validator'));

        return $instance;
    }

    /**
     * Gets the 'oro_attachment.twig.file_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Twig\FileExtension A Oro\Bundle\AttachmentBundle\Twig\FileExtension instance.
     */
    protected function getOroAttachment_Twig_FileExtensionService()
    {
        return $this->services['oro_attachment.twig.file_extension'] = new \Oro\Bundle\AttachmentBundle\Twig\FileExtension($this->get('oro_attachment.manager'), $this->get('oro_entity_config.config_manager'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_attachment.validator.file_config_validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\AttachmentBundle\Validator\ConfigFileValidator A Oro\Bundle\AttachmentBundle\Validator\ConfigFileValidator instance.
     */
    protected function getOroAttachment_Validator_FileConfigValidatorService()
    {
        return $this->services['oro_attachment.validator.file_config_validator'] = new \Oro\Bundle\AttachmentBundle\Validator\ConfigFileValidator($this->get('validator'), $this->get('oro_entity_config.config_manager'), $this->get('oro_config.global'));
    }

    /**
     * Gets the 'oro_attachment.widget_provider.actions' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Provider\ActionButtonWidgetProvider A Oro\Bundle\UIBundle\Provider\ActionButtonWidgetProvider instance.
     */
    protected function getOroAttachment_WidgetProvider_ActionsService()
    {
        return $this->services['oro_attachment.widget_provider.actions'] = new \Oro\Bundle\UIBundle\Provider\ActionButtonWidgetProvider($this->get('oro_ui.placeholder.provider'), 'oro_add_attachment_button', 'oro_add_attachment_link');
    }

    /**
     * Gets the 'oro_batch.orm.query_builder.count_query_optimizer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\BatchBundle\ORM\QueryBuilder\CountQueryBuilderOptimizer A Oro\Bundle\BatchBundle\ORM\QueryBuilder\CountQueryBuilderOptimizer instance.
     */
    protected function getOroBatch_Orm_QueryBuilder_CountQueryOptimizerService()
    {
        return $this->services['oro_batch.orm.query_builder.count_query_optimizer'] = new \Oro\Bundle\BatchBundle\ORM\QueryBuilder\CountQueryBuilderOptimizer();
    }

    /**
     * Gets the 'oro_cache.oro_data_cache_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CacheBundle\Manager\OroDataCacheManager A Oro\Bundle\CacheBundle\Manager\OroDataCacheManager instance.
     */
    protected function getOroCache_OroDataCacheManagerService()
    {
        $this->services['oro_cache.oro_data_cache_manager'] = $instance = new \Oro\Bundle\CacheBundle\Manager\OroDataCacheManager();

        $instance->registerCacheProvider($this->get('doctrine.metadata.cache'));
        $instance->registerCacheProvider($this->get('oro_cache.provider.validation'));
        $instance->registerCacheProvider($this->get('oro_security.owner.ownership_metadata_provider.cache'));
        $instance->registerCacheProvider($this->get('security.acl.cache.doctrine.cache_impl'));
        $instance->registerCacheProvider($this->get('oro_security.entity_security_metadata_provider.cache'));
        $instance->registerCacheProvider($this->get('oro_security.action_metadata_provider.cache'));
        $instance->registerCacheProvider($this->get('oro_security.acl.annotation_provider.cache'));
        $instance->registerCacheProvider($this->get('oro_security.ownership_tree_provider.cache'));
        $instance->registerCacheProvider($this->get('oro_email.cache'));
        $instance->registerCacheProvider($this->get('oro_user.cache'));
        $instance->registerCacheProvider($this->get('oro_entity_config.config_cache_impl'));
        $instance->registerCacheProvider($this->get('oro_entity_config.model_cache_impl'));
        $instance->registerCacheProvider($this->get('oro_help.help_link.cache'));
        $instance->registerCacheProvider($this->get('oro_locale.cache'));
        $instance->registerCacheProvider($this->get('oro_platform.version.cache'));
        $instance->registerCacheProvider($this->get('oro_requirejs.cache'));
        $instance->registerCacheProvider($this->get('oro_translation.database_translation.metadata.cache_impl'));
        $instance->registerCacheProvider($this->get('oro_translation.cache'));
        $instance->registerCacheProvider($this->get('oro_workflow.cache.provider.process_trigger'));
        $instance->registerCacheProvider($this->get('oro_menu.cache'));

        return $instance;
    }

    /**
     * Gets the 'oro_calendar.activity_list.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Provider\CalendarEventActivityListProvider A Oro\Bundle\CalendarBundle\Provider\CalendarEventActivityListProvider instance.
     */
    protected function getOroCalendar_ActivityList_ProviderService()
    {
        return $this->services['oro_calendar.activity_list.provider'] = new \Oro\Bundle\CalendarBundle\Provider\CalendarEventActivityListProvider($this->get('oro_entity.doctrine_helper'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_calendar.autocomplete.user_calendar_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\CalendarBundle\Autocomplete\UserCalendarHandler A Oro\Bundle\CalendarBundle\Autocomplete\UserCalendarHandler instance.
     */
    public function getOroCalendar_Autocomplete_UserCalendarHandlerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_calendar.autocomplete.user_calendar_handler'] = new OroBundleCalendarBundleAutocompleteUserCalendarHandler_000000002e47e5fd00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroCalendar_Autocomplete_UserCalendarHandlerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\CalendarBundle\Autocomplete\UserCalendarHandler($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_attachment.manager'), 'Oro\\Bundle\\UserBundle\\Entity\\User', $this->get('oro_entity_config.link.security_context'), $this->get('oro_security.ownership_tree_provider'), $this->get('oro_security.acl_helper'), $this->get('security.acl.voter.basic_permissions', ContainerInterface::NULL_ON_INVALID_REFERENCE));

        $instance->setProperties(array(0 => 'namePrefix', 1 => 'firstName', 2 => 'middleName', 3 => 'lastName', 4 => 'nameSuffix'));
        $instance->setEntityNameResolver($this->get('oro_entity.entity_name_resolver'));

        return $instance;
    }

    /**
     * Gets the 'oro_calendar.calendar_choice.form.type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Form\Type\CalendarChoiceType A Oro\Bundle\CalendarBundle\Form\Type\CalendarChoiceType instance.
     */
    protected function getOroCalendar_CalendarChoice_Form_TypeService()
    {
        return $this->services['oro_calendar.calendar_choice.form.type'] = new \Oro\Bundle\CalendarBundle\Form\Type\CalendarChoiceType($this->get('oro_calendar.calendar_event_manager'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_calendar.calendar_choice_template.form.type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Form\Type\CalendarChoiceTemplateType A Oro\Bundle\CalendarBundle\Form\Type\CalendarChoiceTemplateType instance.
     */
    protected function getOroCalendar_CalendarChoiceTemplate_Form_TypeService()
    {
        return $this->services['oro_calendar.calendar_choice_template.form.type'] = new \Oro\Bundle\CalendarBundle\Form\Type\CalendarChoiceTemplateType();
    }

    /**
     * Gets the 'oro_calendar.calendar_event.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroCalendar_CalendarEvent_FormService()
    {
        return $this->services['oro_calendar.calendar_event.form'] = $this->get('form.factory')->createNamed('oro_calendar_event_form', 'oro_calendar_event');
    }

    /**
     * Gets the 'oro_calendar.calendar_event.form.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroCalendar_CalendarEvent_Form_ApiService()
    {
        return $this->services['oro_calendar.calendar_event.form.api'] = $this->get('form.factory')->createNamed(NULL, 'oro_calendar_event_api');
    }

    /**
     * Gets the 'oro_calendar.calendar_event.form.handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Form\Handler\CalendarEventHandler A Oro\Bundle\CalendarBundle\Form\Handler\CalendarEventHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_calendar.calendar_event.form.handler' service is requested while the 'request' scope is not active
     */
    protected function getOroCalendar_CalendarEvent_Form_HandlerService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_calendar.calendar_event.form.handler', 'request');
        }

        return $this->services['oro_calendar.calendar_event.form.handler'] = $this->scopedServices['request']['oro_calendar.calendar_event.form.handler'] = new \Oro\Bundle\CalendarBundle\Form\Handler\CalendarEventHandler($this->get('oro_calendar.calendar_event.form'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_activity.manager'), $this->get('oro_entity.routing_helper'), $this->get('oro_security.security_facade'), $this->get('oro_calendar.send_processor.email'));
    }

    /**
     * Gets the 'oro_calendar.calendar_event.form.handler.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Form\Handler\CalendarEventApiHandler A Oro\Bundle\CalendarBundle\Form\Handler\CalendarEventApiHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_calendar.calendar_event.form.handler.api' service is requested while the 'request' scope is not active
     */
    protected function getOroCalendar_CalendarEvent_Form_Handler_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_calendar.calendar_event.form.handler.api', 'request');
        }

        return $this->services['oro_calendar.calendar_event.form.handler.api'] = $this->scopedServices['request']['oro_calendar.calendar_event.form.handler.api'] = new \Oro\Bundle\CalendarBundle\Form\Handler\CalendarEventApiHandler($this->get('oro_calendar.calendar_event.form.api'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_calendar.send_processor.email'));
    }

    /**
     * Gets the 'oro_calendar.calendar_event.form.template' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroCalendar_CalendarEvent_Form_TemplateService()
    {
        return $this->services['oro_calendar.calendar_event.form.template'] = $this->get('form.factory')->createNamed('oro_calendar_event_form', 'oro_calendar_event', NULL, array('allow_change_calendar' => true, 'layout_template' => true));
    }

    /**
     * Gets the 'oro_calendar.calendar_event.form.type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Form\Type\CalendarEventType A Oro\Bundle\CalendarBundle\Form\Type\CalendarEventType instance.
     */
    protected function getOroCalendar_CalendarEvent_Form_TypeService()
    {
        return $this->services['oro_calendar.calendar_event.form.type'] = new \Oro\Bundle\CalendarBundle\Form\Type\CalendarEventType();
    }

    /**
     * Gets the 'oro_calendar.calendar_event.form.type.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Form\Type\CalendarEventApiType A Oro\Bundle\CalendarBundle\Form\Type\CalendarEventApiType instance.
     */
    protected function getOroCalendar_CalendarEvent_Form_Type_ApiService()
    {
        return $this->services['oro_calendar.calendar_event.form.type.api'] = new \Oro\Bundle\CalendarBundle\Form\Type\CalendarEventApiType($this->get('oro_calendar.calendar_event_manager'));
    }

    /**
     * Gets the 'oro_calendar.calendar_event.handler.delete' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Handler\CalendarEventDeleteHandler A Oro\Bundle\CalendarBundle\Handler\CalendarEventDeleteHandler instance.
     */
    protected function getOroCalendar_CalendarEvent_Handler_DeleteService()
    {
        $this->services['oro_calendar.calendar_event.handler.delete'] = $instance = new \Oro\Bundle\CalendarBundle\Handler\CalendarEventDeleteHandler();

        $instance->setOwnerDeletionManager($this->get('oro_organization.owner_deletion_manager'));
        $instance->setCalendarConfig($this->get('oro_calendar.system_calendar_config'));
        $instance->setSecurityFacade($this->get('oro_security.security_facade'));
        $instance->setEmailSendProcessor($this->get('oro_calendar.send_processor.email'));

        return $instance;
    }

    /**
     * Gets the 'oro_calendar.calendar_event.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroCalendar_CalendarEvent_Manager_ApiService()
    {
        $this->services['oro_calendar.calendar_event.manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_calendar.calendar_event.transformer.events_to_users' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Form\DataTransformer\EventsToUsersTransformer A Oro\Bundle\CalendarBundle\Form\DataTransformer\EventsToUsersTransformer instance.
     */
    protected function getOroCalendar_CalendarEvent_Transformer_EventsToUsersService()
    {
        return $this->services['oro_calendar.calendar_event.transformer.events_to_users'] = new \Oro\Bundle\CalendarBundle\Form\DataTransformer\EventsToUsersTransformer($this->get('doctrine'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_calendar.calendar_event_invitees.form.type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Form\Type\CalendarEventInviteesType A Oro\Bundle\CalendarBundle\Form\Type\CalendarEventInviteesType instance.
     */
    protected function getOroCalendar_CalendarEventInvitees_Form_TypeService()
    {
        return $this->services['oro_calendar.calendar_event_invitees.form.type'] = new \Oro\Bundle\CalendarBundle\Form\Type\CalendarEventInviteesType($this->get('oro_calendar.calendar_event.transformer.events_to_users'));
    }

    /**
     * Gets the 'oro_calendar.calendar_event_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Manager\CalendarEventManager A Oro\Bundle\CalendarBundle\Manager\CalendarEventManager instance.
     */
    protected function getOroCalendar_CalendarEventManagerService()
    {
        return $this->services['oro_calendar.calendar_event_manager'] = new \Oro\Bundle\CalendarBundle\Manager\CalendarEventManager($this->get('oro_entity.doctrine_helper'), $this->get('oro_security.security_facade'), $this->get('oro_entity.entity_name_resolver'), $this->get('oro_calendar.system_calendar_config'));
    }

    /**
     * Gets the 'oro_calendar.calendar_event_normalizer.public' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Provider\PublicCalendarEventNormalizer A Oro\Bundle\CalendarBundle\Provider\PublicCalendarEventNormalizer instance.
     */
    protected function getOroCalendar_CalendarEventNormalizer_PublicService()
    {
        return $this->services['oro_calendar.calendar_event_normalizer.public'] = new \Oro\Bundle\CalendarBundle\Provider\PublicCalendarEventNormalizer($this->get('oro_reminder.entity.manager'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_calendar.calendar_event_normalizer.system' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Provider\SystemCalendarEventNormalizer A Oro\Bundle\CalendarBundle\Provider\SystemCalendarEventNormalizer instance.
     */
    protected function getOroCalendar_CalendarEventNormalizer_SystemService()
    {
        return $this->services['oro_calendar.calendar_event_normalizer.system'] = new \Oro\Bundle\CalendarBundle\Provider\SystemCalendarEventNormalizer($this->get('oro_reminder.entity.manager'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_calendar.calendar_event_normalizer.user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Provider\UserCalendarEventNormalizer A Oro\Bundle\CalendarBundle\Provider\UserCalendarEventNormalizer instance.
     */
    protected function getOroCalendar_CalendarEventNormalizer_UserService()
    {
        return $this->services['oro_calendar.calendar_event_normalizer.user'] = new \Oro\Bundle\CalendarBundle\Provider\UserCalendarEventNormalizer($this->get('oro_reminder.entity.manager'), $this->get('oro_security.security_facade'), $this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_calendar.calendar_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Manager\CalendarManager A Oro\Bundle\CalendarBundle\Manager\CalendarManager instance.
     */
    protected function getOroCalendar_CalendarManagerService()
    {
        $this->services['oro_calendar.calendar_manager'] = $instance = new \Oro\Bundle\CalendarBundle\Manager\CalendarManager($this->get('oro_calendar.calendar_property_provider'));

        $instance->addProvider('user', $this->get('oro_calendar.calendar_provider.user'));
        $instance->addProvider('system', $this->get('oro_calendar.calendar_provider.system'));
        $instance->addProvider('public', $this->get('oro_calendar.calendar_provider.public'));

        return $instance;
    }

    /**
     * Gets the 'oro_calendar.calendar_property.form.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroCalendar_CalendarProperty_Form_ApiService()
    {
        return $this->services['oro_calendar.calendar_property.form.api'] = $this->get('form.factory')->createNamed(NULL, 'oro_calendar_property_api');
    }

    /**
     * Gets the 'oro_calendar.calendar_property.form.handler.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Form\Handler\CalendarPropertyApiHandler A Oro\Bundle\CalendarBundle\Form\Handler\CalendarPropertyApiHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_calendar.calendar_property.form.handler.api' service is requested while the 'request' scope is not active
     */
    protected function getOroCalendar_CalendarProperty_Form_Handler_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_calendar.calendar_property.form.handler.api', 'request');
        }

        return $this->services['oro_calendar.calendar_property.form.handler.api'] = $this->scopedServices['request']['oro_calendar.calendar_property.form.handler.api'] = new \Oro\Bundle\CalendarBundle\Form\Handler\CalendarPropertyApiHandler($this->get('oro_calendar.calendar_property.form.api'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_calendar.calendar_property.form.handler.soap.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Form\Handler\CalendarPropertyApiHandler A Oro\Bundle\CalendarBundle\Form\Handler\CalendarPropertyApiHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_calendar.calendar_property.form.handler.soap.api' service is requested while the 'request' scope is not active
     */
    protected function getOroCalendar_CalendarProperty_Form_Handler_Soap_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_calendar.calendar_property.form.handler.soap.api', 'request');
        }

        return $this->services['oro_calendar.calendar_property.form.handler.soap.api'] = $this->scopedServices['request']['oro_calendar.calendar_property.form.handler.soap.api'] = new \Oro\Bundle\CalendarBundle\Form\Handler\CalendarPropertyApiHandler($this->get('oro_calendar.calendar_property.form.soap.api'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_calendar.calendar_property.form.soap.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroCalendar_CalendarProperty_Form_Soap_ApiService()
    {
        return $this->services['oro_calendar.calendar_property.form.soap.api'] = $this->get('form.factory')->createNamed('calendarProperty', 'oro_calendar_property_api');
    }

    /**
     * Gets the 'oro_calendar.calendar_property.form.type.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Form\Type\CalendarPropertyApiType A Oro\Bundle\CalendarBundle\Form\Type\CalendarPropertyApiType instance.
     */
    protected function getOroCalendar_CalendarProperty_Form_Type_ApiService()
    {
        return $this->services['oro_calendar.calendar_property.form.type.api'] = new \Oro\Bundle\CalendarBundle\Form\Type\CalendarPropertyApiType();
    }

    /**
     * Gets the 'oro_calendar.calendar_property.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Manager\CalendarPropertyApiEntityManager A Oro\Bundle\CalendarBundle\Manager\CalendarPropertyApiEntityManager instance.
     */
    protected function getOroCalendar_CalendarProperty_Manager_ApiService()
    {
        $this->services['oro_calendar.calendar_property.manager.api'] = $instance = new \Oro\Bundle\CalendarBundle\Manager\CalendarPropertyApiEntityManager('Oro\\Bundle\\CalendarBundle\\Entity\\CalendarProperty', $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_calendar.calendar_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_calendar.calendar_property_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Provider\CalendarPropertyProvider A Oro\Bundle\CalendarBundle\Provider\CalendarPropertyProvider instance.
     */
    protected function getOroCalendar_CalendarPropertyProviderService()
    {
        return $this->services['oro_calendar.calendar_property_provider'] = new \Oro\Bundle\CalendarBundle\Provider\CalendarPropertyProvider($this->get('oro_entity.doctrine_helper'), $this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.extend.field_type_helper'));
    }

    /**
     * Gets the 'oro_calendar.calendar_provider.public' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Provider\PublicCalendarProvider A Oro\Bundle\CalendarBundle\Provider\PublicCalendarProvider instance.
     */
    protected function getOroCalendar_CalendarProvider_PublicService()
    {
        return $this->services['oro_calendar.calendar_provider.public'] = new \Oro\Bundle\CalendarBundle\Provider\PublicCalendarProvider($this->get('oro_entity.doctrine_helper'), $this->get('oro_calendar.calendar_event_normalizer.public'), $this->get('oro_calendar.system_calendar_config'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_calendar.calendar_provider.system' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Provider\SystemCalendarProvider A Oro\Bundle\CalendarBundle\Provider\SystemCalendarProvider instance.
     */
    protected function getOroCalendar_CalendarProvider_SystemService()
    {
        return $this->services['oro_calendar.calendar_provider.system'] = new \Oro\Bundle\CalendarBundle\Provider\SystemCalendarProvider($this->get('oro_entity.doctrine_helper'), $this->get('oro_calendar.calendar_event_normalizer.system'), $this->get('oro_calendar.system_calendar_config'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_calendar.calendar_provider.user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Provider\UserCalendarProvider A Oro\Bundle\CalendarBundle\Provider\UserCalendarProvider instance.
     */
    protected function getOroCalendar_CalendarProvider_UserService()
    {
        return $this->services['oro_calendar.calendar_provider.user'] = new \Oro\Bundle\CalendarBundle\Provider\UserCalendarProvider($this->get('oro_entity.doctrine_helper'), $this->get('oro_entity.entity_name_resolver'), $this->get('oro_calendar.calendar_event_normalizer.user'));
    }

    /**
     * Gets the 'oro_calendar.datagrid.action_permission_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Datagrid\ActionPermissionProvider A Oro\Bundle\CalendarBundle\Datagrid\ActionPermissionProvider instance.
     */
    protected function getOroCalendar_Datagrid_ActionPermissionProviderService()
    {
        return $this->services['oro_calendar.datagrid.action_permission_provider'] = new \Oro\Bundle\CalendarBundle\Datagrid\ActionPermissionProvider($this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_calendar.event_listener.navigation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\EventListener\NavigationListener A Oro\Bundle\CalendarBundle\EventListener\NavigationListener instance.
     */
    protected function getOroCalendar_EventListener_NavigationService()
    {
        return $this->services['oro_calendar.event_listener.navigation'] = new \Oro\Bundle\CalendarBundle\EventListener\NavigationListener($this->get('oro_calendar.system_calendar_config'));
    }

    /**
     * Gets the 'oro_calendar.extension.acl_label' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Form\Extension\AclObjectLabelTypeExtension A Oro\Bundle\CalendarBundle\Form\Extension\AclObjectLabelTypeExtension instance.
     */
    protected function getOroCalendar_Extension_AclLabelService()
    {
        return $this->services['oro_calendar.extension.acl_label'] = new \Oro\Bundle\CalendarBundle\Form\Extension\AclObjectLabelTypeExtension();
    }

    /**
     * Gets the 'oro_calendar.listener.datagrid.activity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\EventListener\Datagrid\ActivityGridListener A Oro\Bundle\CalendarBundle\EventListener\Datagrid\ActivityGridListener instance.
     */
    protected function getOroCalendar_Listener_Datagrid_ActivityService()
    {
        return $this->services['oro_calendar.listener.datagrid.activity'] = new \Oro\Bundle\CalendarBundle\EventListener\Datagrid\ActivityGridListener($this->get('oro_activity.manager'), $this->get('oro_entity.routing_helper'), $this->get('oro_locale.settings'));
    }

    /**
     * Gets the 'oro_calendar.listener.datagrid.system_calendar' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\EventListener\Datagrid\SystemCalendarGridListener A Oro\Bundle\CalendarBundle\EventListener\Datagrid\SystemCalendarGridListener instance.
     */
    protected function getOroCalendar_Listener_Datagrid_SystemCalendarService()
    {
        return $this->services['oro_calendar.listener.datagrid.system_calendar'] = new \Oro\Bundle\CalendarBundle\EventListener\Datagrid\SystemCalendarGridListener($this->get('oro_security.security_facade'), $this->get('oro_calendar.system_calendar_config'));
    }

    /**
     * Gets the 'oro_calendar.listener.entity_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\CalendarBundle\EventListener\EntityListener A Oro\Bundle\CalendarBundle\EventListener\EntityListener instance.
     */
    public function getOroCalendar_Listener_EntityListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_calendar.listener.entity_listener'] = new OroBundleCalendarBundleEventListenerEntityListener_000000002e47fa1300000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroCalendar_Listener_EntityListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\CalendarBundle\EventListener\EntityListener($this->get('oro_organization.link.security_context'));
    }

    /**
     * Gets the 'oro_calendar.owner_assignment_checker.calendar' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Ownership\CalendarOwnerAssignmentChecker A Oro\Bundle\CalendarBundle\Ownership\CalendarOwnerAssignmentChecker instance.
     */
    protected function getOroCalendar_OwnerAssignmentChecker_CalendarService()
    {
        return $this->services['oro_calendar.owner_assignment_checker.calendar'] = new \Oro\Bundle\CalendarBundle\Ownership\CalendarOwnerAssignmentChecker();
    }

    /**
     * Gets the 'oro_calendar.provider.calendar_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Provider\CalendarDateTimeConfigProvider A Oro\Bundle\CalendarBundle\Provider\CalendarDateTimeConfigProvider instance.
     */
    protected function getOroCalendar_Provider_CalendarConfigService()
    {
        return $this->services['oro_calendar.provider.calendar_config'] = new \Oro\Bundle\CalendarBundle\Provider\CalendarDateTimeConfigProvider($this->get('oro_locale.settings'));
    }

    /**
     * Gets the 'oro_calendar.send_processor.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Model\Email\EmailSendProcessor A Oro\Bundle\CalendarBundle\Model\Email\EmailSendProcessor instance.
     */
    protected function getOroCalendar_SendProcessor_EmailService()
    {
        return $this->services['oro_calendar.send_processor.email'] = new \Oro\Bundle\CalendarBundle\Model\Email\EmailSendProcessor($this->get('oro_notification.email_processor'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_calendar.system_calendar.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroCalendar_SystemCalendar_FormService()
    {
        return $this->services['oro_calendar.system_calendar.form'] = $this->get('form.factory')->createNamed('oro_system_calendar_form', 'oro_system_calendar');
    }

    /**
     * Gets the 'oro_calendar.system_calendar.form.handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Form\Handler\SystemCalendarHandler A Oro\Bundle\CalendarBundle\Form\Handler\SystemCalendarHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_calendar.system_calendar.form.handler' service is requested while the 'request' scope is not active
     */
    protected function getOroCalendar_SystemCalendar_Form_HandlerService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_calendar.system_calendar.form.handler', 'request');
        }

        return $this->services['oro_calendar.system_calendar.form.handler'] = $this->scopedServices['request']['oro_calendar.system_calendar.form.handler'] = new \Oro\Bundle\CalendarBundle\Form\Handler\SystemCalendarHandler($this->get('oro_calendar.system_calendar.form'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_calendar.system_calendar.form.type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Form\Type\SystemCalendarType A Oro\Bundle\CalendarBundle\Form\Type\SystemCalendarType instance.
     */
    protected function getOroCalendar_SystemCalendar_Form_TypeService()
    {
        return $this->services['oro_calendar.system_calendar.form.type'] = new \Oro\Bundle\CalendarBundle\Form\Type\SystemCalendarType($this->get('oro_security.security_facade'), $this->get('oro_calendar.system_calendar_config'));
    }

    /**
     * Gets the 'oro_calendar.system_calendar.handler.delete' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Handler\SystemCalendarDeleteHandler A Oro\Bundle\CalendarBundle\Handler\SystemCalendarDeleteHandler instance.
     */
    protected function getOroCalendar_SystemCalendar_Handler_DeleteService()
    {
        $this->services['oro_calendar.system_calendar.handler.delete'] = $instance = new \Oro\Bundle\CalendarBundle\Handler\SystemCalendarDeleteHandler();

        $instance->setOwnerDeletionManager($this->get('oro_organization.owner_deletion_manager'));
        $instance->setCalendarConfig($this->get('oro_calendar.system_calendar_config'));
        $instance->setSecurityFacade($this->get('oro_security.security_facade'));

        return $instance;
    }

    /**
     * Gets the 'oro_calendar.system_calendar.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroCalendar_SystemCalendar_Manager_ApiService()
    {
        $this->services['oro_calendar.system_calendar.manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\CalendarBundle\\Entity\\SystemCalendar', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_calendar.system_calendar_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Provider\SystemCalendarConfig A Oro\Bundle\CalendarBundle\Provider\SystemCalendarConfig instance.
     */
    protected function getOroCalendar_SystemCalendarConfigService()
    {
        return $this->services['oro_calendar.system_calendar_config'] = new \Oro\Bundle\CalendarBundle\Provider\SystemCalendarConfig('system');
    }

    /**
     * Gets the 'oro_calendar.system_calendar_event.datagrid_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Datagrid\SystemCalendarEventGridHelper A Oro\Bundle\CalendarBundle\Datagrid\SystemCalendarEventGridHelper instance.
     */
    protected function getOroCalendar_SystemCalendarEvent_DatagridHelperService()
    {
        return $this->services['oro_calendar.system_calendar_event.datagrid_helper'] = new \Oro\Bundle\CalendarBundle\Datagrid\SystemCalendarEventGridHelper($this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_calendar.system_calendar_event.form.handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Form\Handler\SystemCalendarEventHandler A Oro\Bundle\CalendarBundle\Form\Handler\SystemCalendarEventHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_calendar.system_calendar_event.form.handler' service is requested while the 'request' scope is not active
     */
    protected function getOroCalendar_SystemCalendarEvent_Form_HandlerService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_calendar.system_calendar_event.form.handler', 'request');
        }

        return $this->services['oro_calendar.system_calendar_event.form.handler'] = $this->scopedServices['request']['oro_calendar.system_calendar_event.form.handler'] = new \Oro\Bundle\CalendarBundle\Form\Handler\SystemCalendarEventHandler($this->get('oro_calendar.calendar_event.form'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_calendar.twig.dateformat' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CalendarBundle\Twig\DateFormatExtension A Oro\Bundle\CalendarBundle\Twig\DateFormatExtension instance.
     */
    protected function getOroCalendar_Twig_DateformatService()
    {
        return $this->services['oro_calendar.twig.dateformat'] = new \Oro\Bundle\CalendarBundle\Twig\DateFormatExtension($this->get('oro_locale.formatter.date_time'));
    }

    /**
     * Gets the 'oro_calendar.widget_provider.actions.assign_calendar_event' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Provider\ActionButtonWidgetProvider A Oro\Bundle\UIBundle\Provider\ActionButtonWidgetProvider instance.
     */
    protected function getOroCalendar_WidgetProvider_Actions_AssignCalendarEventService()
    {
        return $this->services['oro_calendar.widget_provider.actions.assign_calendar_event'] = new \Oro\Bundle\UIBundle\Provider\ActionButtonWidgetProvider($this->get('oro_ui.placeholder.provider'), 'oro_assign_calendar_event_button', 'oro_assign_calendar_event_link');
    }

    /**
     * Gets the 'oro_chart.config_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ChartBundle\Model\ConfigProvider A Oro\Bundle\ChartBundle\Model\ConfigProvider instance.
     */
    protected function getOroChart_ConfigProviderService()
    {
        return $this->services['oro_chart.config_provider'] = new \Oro\Bundle\ChartBundle\Model\ConfigProvider(array('line_chart' => array('label' => 'oro.chart.line_chart.label', 'data_schema' => array(0 => array('name' => 'label', 'label' => 'oro.chart.line_chart.params.label', 'required' => true, 'default_type' => 'string', 'type_filter' => array()), 1 => array('name' => 'value', 'label' => 'oro.chart.line_chart.params.value', 'required' => true, 'type_filter' => array(0 => 'percent', 1 => 'number'), 'default_type' => 'decimal')), 'default_settings' => array('connect_dots_with_line' => true, 'available_in_reports' => true, 'chartColors' => array(0 => '#ACD39C', 1 => '#BE9DE2', 2 => '#6598DA', 3 => '#ECC87E', 4 => '#A4A2F6', 5 => '#6487BF', 6 => '#65BC87', 7 => '#8985C2', 8 => '#ECB574', 9 => '#84A377'), 'chartFontSize' => 9, 'chartFontColor' => '#454545', 'chartHighlightColor' => '#FF5E5E'), 'template' => 'OroChartBundle:Chart:line.html.twig', 'settings_schema' => array(), 'xaxis' => array('mode' => 'normal', 'noTicks' => 5)), 'multiline_chart' => array('label' => 'oro.chart.multiline_chart.label', 'data_schema' => array(0 => array('name' => 'label', 'label' => 'oro.chart.multiline_chart.params.label', 'required' => true, 'default_type' => 'string', 'type_filter' => array()), 1 => array('name' => 'value', 'label' => 'oro.chart.multiline_chart.params.value', 'required' => true, 'type_filter' => array(0 => 'percent', 1 => 'number'), 'default_type' => 'decimal')), 'default_settings' => array('connect_dots_with_line' => true, 'chartColors' => array(0 => '#ACD39C', 1 => '#BE9DE2', 2 => '#6598DA', 3 => '#ECC87E', 4 => '#A4A2F6', 5 => '#6487BF', 6 => '#65BC87', 7 => '#8985C2', 8 => '#ECB574', 9 => '#84A377'), 'chartFontSize' => 9, 'chartFontColor' => '#454545', 'chartHighlightColor' => '#FF5E5E'), 'template' => 'OroChartBundle:Chart:multiline.html.twig', 'settings_schema' => array(), 'xaxis' => array('mode' => 'normal', 'noTicks' => 5)), 'bar_chart' => array('label' => 'oro.chart.bar_chart.label', 'data_schema' => array(0 => array('name' => 'label', 'label' => 'oro.chart.bar_chart.params.label', 'required' => true, 'default_type' => 'string', 'type_filter' => array()), 1 => array('name' => 'value', 'label' => 'oro.chart.bar_chart.params.value', 'required' => true, 'type_filter' => array(0 => 'percent', 1 => 'number'), 'default_type' => 'decimal')), 'default_settings' => array('chartColors' => array(0 => '#ACD39C', 1 => '#BE9DE2', 2 => '#6598DA', 3 => '#ECC87E', 4 => '#A4A2F6', 5 => '#6487BF', 6 => '#65BC87', 7 => '#8985C2', 8 => '#ECB574', 9 => '#84A377'), 'chartFontSize' => 9, 'chartFontColor' => '#454545', 'chartHighlightColor' => '#FF5E5E'), 'template' => 'OroChartBundle:Chart:bar.html.twig', 'settings_schema' => array(), 'xaxis' => array('mode' => 'normal', 'noTicks' => 5)), 'pie_chart' => array('label' => 'oro.chart.pie_chart.label', 'data_schema' => array(0 => array('name' => 'label', 'label' => 'oro.chart.pie_chart.params.label', 'required' => true, 'default_type' => 'string', 'type_filter' => array()), 1 => array('name' => 'value', 'label' => 'oro.chart.pie_chart.params.value', 'required' => true, 'type_filter' => array(0 => 'percent', 1 => 'number'), 'default_type' => 'decimal')), 'default_settings' => array('fraction_input_data_field' => 'value', 'fraction_output_data_field' => 'fraction', 'chartColors' => array(0 => '#ACD39C', 1 => '#BE9DE2', 2 => '#6598DA', 3 => '#ECC87E', 4 => '#A4A2F6', 5 => '#6487BF', 6 => '#65BC87', 7 => '#8985C2', 8 => '#ECB574', 9 => '#84A377'), 'chartFontSize' => 9, 'chartFontColor' => '#454545', 'chartHighlightColor' => '#FF5E5E'), 'data_transformer' => 'oro_chart.data_transformer.pie_chart', 'template' => 'OroChartBundle:Chart:pie.html.twig', 'settings_schema' => array(), 'xaxis' => array('mode' => 'normal', 'noTicks' => 5)), 'flow_chart' => array('label' => 'oro.chart.flow_chart.label', 'data_schema' => array(0 => array('name' => 'label', 'label' => 'oro.chart.flow_chart.params.label', 'required' => true, 'default_type' => 'string', 'type_filter' => array()), 1 => array('name' => 'value', 'label' => 'oro.chart.flow_chart.params.value', 'required' => true, 'type_filter' => array(0 => 'percent', 1 => 'number'), 'default_type' => 'currency'), 2 => array('name' => 'isNozzle', 'label' => 'oro.chart.flow_chart.params.is_nozzle', 'required' => false, 'default_type' => 'boolean', 'type_filter' => array(0 => 'boolean'))), 'default_settings' => array('chartColors' => array(0 => '#ACD39C', 1 => '#BE9DE2', 2 => '#6598DA', 3 => '#ECC87E', 4 => '#A4A2F6', 5 => '#6487BF', 6 => '#65BC87', 7 => '#8985C2', 8 => '#ECB574', 9 => '#84A377'), 'chartFontSize' => 9, 'chartFontColor' => '#454545', 'chartHighlightColor' => '#FF5E5E'), 'template' => 'OroChartBundle:Chart:flow.html.twig', 'settings_schema' => array(), 'xaxis' => array('mode' => 'normal', 'noTicks' => 5))));
    }

    /**
     * Gets the 'oro_chart.data_transformer.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ChartBundle\Model\Data\Transformer\TransformerFactory A Oro\Bundle\ChartBundle\Model\Data\Transformer\TransformerFactory instance.
     */
    protected function getOroChart_DataTransformer_FactoryService()
    {
        return $this->services['oro_chart.data_transformer.factory'] = new \Oro\Bundle\ChartBundle\Model\Data\Transformer\TransformerFactory($this);
    }

    /**
     * Gets the 'oro_chart.data_transformer.pie_chart' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ChartBundle\Model\Data\Transformer\PieChartDataTransformer A Oro\Bundle\ChartBundle\Model\Data\Transformer\PieChartDataTransformer instance.
     */
    protected function getOroChart_DataTransformer_PieChartService()
    {
        return $this->services['oro_chart.data_transformer.pie_chart'] = new \Oro\Bundle\ChartBundle\Model\Data\Transformer\PieChartDataTransformer();
    }

    /**
     * Gets the 'oro_chart.form.event_listener.chart' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ChartBundle\Form\EventListener\ChartTypeEventListener A Oro\Bundle\ChartBundle\Form\EventListener\ChartTypeEventListener instance.
     */
    protected function getOroChart_Form_EventListener_ChartService()
    {
        return $this->services['oro_chart.form.event_listener.chart'] = new \Oro\Bundle\ChartBundle\Form\EventListener\ChartTypeEventListener();
    }

    /**
     * Gets the 'oro_chart.form.type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ChartBundle\Form\Type\ChartType A Oro\Bundle\ChartBundle\Form\Type\ChartType instance.
     */
    protected function getOroChart_Form_TypeService()
    {
        $this->services['oro_chart.form.type'] = $instance = new \Oro\Bundle\ChartBundle\Form\Type\ChartType($this->get('oro_chart.config_provider'));

        $instance->setEventListener($this->get('oro_chart.form.event_listener.chart'));

        return $instance;
    }

    /**
     * Gets the 'oro_chart.form.type.settings' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ChartBundle\Form\Type\ChartSettingsType A Oro\Bundle\ChartBundle\Form\Type\ChartSettingsType instance.
     */
    protected function getOroChart_Form_Type_SettingsService()
    {
        return $this->services['oro_chart.form.type.settings'] = new \Oro\Bundle\ChartBundle\Form\Type\ChartSettingsType($this->get('oro_chart.config_provider'));
    }

    /**
     * Gets the 'oro_chart.form.type.settings.collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ChartBundle\Form\Type\ChartSettingsCollectionType A Oro\Bundle\ChartBundle\Form\Type\ChartSettingsCollectionType instance.
     */
    protected function getOroChart_Form_Type_Settings_CollectionService()
    {
        return $this->services['oro_chart.form.type.settings.collection'] = new \Oro\Bundle\ChartBundle\Form\Type\ChartSettingsCollectionType();
    }

    /**
     * Gets the 'oro_chart.options_builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ChartBundle\Model\ChartOptionsBuilder A Oro\Bundle\ChartBundle\Model\ChartOptionsBuilder instance.
     */
    protected function getOroChart_OptionsBuilderService()
    {
        return $this->services['oro_chart.options_builder'] = new \Oro\Bundle\ChartBundle\Model\ChartOptionsBuilder();
    }

    /**
     * Gets the 'oro_chart.view_builder' service.
     *
     * @return \Oro\Bundle\ChartBundle\Model\ChartViewBuilder A Oro\Bundle\ChartBundle\Model\ChartViewBuilder instance.
     */
    protected function getOroChart_ViewBuilderService()
    {
        return new \Oro\Bundle\ChartBundle\Model\ChartViewBuilder($this->get('oro_chart.config_provider'), $this->get('oro_chart.data_transformer.factory'), $this->get('twig'));
    }

    /**
     * Gets the 'oro_comment.api.form.handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CommentBundle\Form\Handler\CommentApiHandler A Oro\Bundle\CommentBundle\Form\Handler\CommentApiHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_comment.api.form.handler' service is requested while the 'request' scope is not active
     */
    protected function getOroComment_Api_Form_HandlerService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_comment.api.form.handler', 'request');
        }

        return $this->services['oro_comment.api.form.handler'] = $this->scopedServices['request']['oro_comment.api.form.handler'] = new \Oro\Bundle\CommentBundle\Form\Handler\CommentApiHandler($this->get('oro_comment.form.comment.api'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_comment.comment.api_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CommentBundle\Entity\Manager\CommentApiManager A Oro\Bundle\CommentBundle\Entity\Manager\CommentApiManager instance.
     */
    protected function getOroComment_Comment_ApiManagerService()
    {
        return $this->services['oro_comment.comment.api_manager'] = new \Oro\Bundle\CommentBundle\Entity\Manager\CommentApiManager($this->get('doctrine'), $this->get('oro_security.security_facade'), $this->get('oro_entity.entity_name_resolver'), $this->get('oro_datagrid.extension.pager.orm.pager'), $this->get('debug.event_dispatcher'), $this->get('oro_attachment.manager'), $this->get('oro_security.acl_helper'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_comment.comment_lifecycle_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\CommentBundle\EventListener\CommentLifecycleListener A Oro\Bundle\CommentBundle\EventListener\CommentLifecycleListener instance.
     */
    public function getOroComment_CommentLifecycleListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_comment.comment_lifecycle_listener'] = new OroBundleCommentBundleEventListenerCommentLifecycleListener_000000002e47f0b100000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroComment_CommentLifecycleListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\CommentBundle\EventListener\CommentLifecycleListener($this->get('oro_security.security_facade.link'));
    }

    /**
     * Gets the 'oro_comment.entity_config_dumper.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CommentBundle\Tools\CommentEntityConfigDumperExtension A Oro\Bundle\CommentBundle\Tools\CommentEntityConfigDumperExtension instance.
     */
    protected function getOroComment_EntityConfigDumper_ExtensionService()
    {
        return $this->services['oro_comment.entity_config_dumper.extension'] = new \Oro\Bundle\CommentBundle\Tools\CommentEntityConfigDumperExtension($this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.association_builder'));
    }

    /**
     * Gets the 'oro_comment.entity_generator.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CommentBundle\Tools\CommentEntityGeneratorExtension A Oro\Bundle\CommentBundle\Tools\CommentEntityGeneratorExtension instance.
     */
    protected function getOroComment_EntityGenerator_ExtensionService()
    {
        return $this->services['oro_comment.entity_generator.extension'] = new \Oro\Bundle\CommentBundle\Tools\CommentEntityGeneratorExtension();
    }

    /**
     * Gets the 'oro_comment.form.comment.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroComment_Form_Comment_ApiService()
    {
        return $this->services['oro_comment.form.comment.api'] = $this->get('form.factory')->createNamed(NULL, 'oro_comment_api');
    }

    /**
     * Gets the 'oro_comment.form.type.comment_api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CommentBundle\Form\Type\CommentTypeApi A Oro\Bundle\CommentBundle\Form\Type\CommentTypeApi instance.
     */
    protected function getOroComment_Form_Type_CommentApiService()
    {
        return $this->services['oro_comment.form.type.comment_api'] = new \Oro\Bundle\CommentBundle\Form\Type\CommentTypeApi($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_comment.migration.extension.comment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CommentBundle\Migration\Extension\CommentExtension A Oro\Bundle\CommentBundle\Migration\Extension\CommentExtension instance.
     */
    protected function getOroComment_Migration_Extension_CommentService()
    {
        return $this->services['oro_comment.migration.extension.comment'] = new \Oro\Bundle\CommentBundle\Migration\Extension\CommentExtension();
    }

    /**
     * Gets the 'oro_comment.placeholder.filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CommentBundle\Placeholder\CommentPlaceholderFilter A Oro\Bundle\CommentBundle\Placeholder\CommentPlaceholderFilter instance.
     */
    protected function getOroComment_Placeholder_FilterService()
    {
        return $this->services['oro_comment.placeholder.filter'] = new \Oro\Bundle\CommentBundle\Placeholder\CommentPlaceholderFilter($this->get('oro_entity_config.provider.comment'), $this->get('oro_entity_config.provider.entity'), $this->get('oro_entity.doctrine_helper'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_config.config_bag' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ConfigBundle\Config\ConfigBag A Oro\Bundle\ConfigBundle\Config\ConfigBag instance.
     */
    protected function getOroConfig_ConfigBagService()
    {
        return $this->services['oro_config.config_bag'] = new \Oro\Bundle\ConfigBundle\Config\ConfigBag(array('groups' => array('application_settings' => array('icon' => 'icon-desktop', 'title' => 'oro.ui.system_configuration.groups.application_settings.title', 'page_reload' => true), 'application_name_settings' => array('title' => 'oro.ui.system_configuration.groups.application_name_settings.title', 'page_reload' => false), 'navbar_settings' => array('title' => 'oro.ui.system_configuration.groups.navbar_settings.title', 'page_reload' => false), 'attachment_settings' => array('icon' => 'icon-file', 'title' => 'oro.attachment.config.attachment.label', 'page_reload' => false), 'attachment_mime_types_settings' => array('title' => 'oro.attachment.config.mime_types.label', 'page_reload' => false), 'email_configuration' => array('icon' => 'icon-envelope', 'title' => 'oro.email.system_configuration.email_configuration', 'page_reload' => false), 'email_autocomplete_configuration' => array('title' => 'oro.email.system_configuration.email_autocomplete_configuration.label', 'priority' => 120, 'page_reload' => false), 'signature_configuration' => array('title' => 'oro.email.system_configuration.signature_configuration.label', 'priority' => 100, 'page_reload' => false), 'email_threads' => array('title' => 'oro.email.system_configuration.email_threads.label', 'priority' => 90, 'page_reload' => false), 'attachment_configuration' => array('title' => 'oro.email.system_configuration.attachment_configuration.label', 'priority' => 110, 'page_reload' => false), 'reply_configuration' => array('title' => 'oro.email.system_configuration.reply_configuration.label', 'priority' => 80, 'page_reload' => false), 'mailboxes' => array('title' => 'oro.email.system_configuration.mailbox_configuration.label', 'priority' => -10, 'page_reload' => false), 'google_settings' => array('icon' => 'fa-google', 'title' => 'oro.sso.system_configuration.groups.google_settings.title', 'page_reload' => false), 'google_integration_settings' => array('title' => 'oro.sso.system_configuration.groups.google_integration_settings.title', 'page_reload' => false), 'integrations' => array('title' => 'oro.integration.system_configuration.groups.integrations.title', 'page_reload' => false), 'activity_list_settings' => array('title' => 'oro.activitylist.system_configuration.activity_list.label', 'page_reload' => false), 'calendar_settings' => array('title' => 'oro.calendar.system_configuration.groups.calendar_settings.title', 'page_reload' => false), 'platform' => array('title' => 'oro.config.system_configuration.groups.platform.title', 'icon' => 'icon-hdd', 'page_reload' => false), 'general_setup' => array('title' => 'oro.config.system_configuration.groups.general_setup.title', 'page_reload' => false), 'look_and_feel' => array('title' => 'oro.grid.system_configuration.groups.look_and_feel.title', 'icon' => 'icon-eye-open', 'page_reload' => true), 'grid_settings' => array('title' => 'oro.grid.system_configuration.groups.grid_settings.title', 'page_reload' => false), 'wysiwyg_settings' => array('title' => 'oro.form.system_configuration.groups.wysiwyg_settings.title', 'page_reload' => false), 'localization' => array('title' => 'oro.locale.system_configuration.groups.localization.title', 'icon' => 'icon-flag', 'page_reload' => true), 'language_settings' => array('title' => 'oro.locale.system_configuration.groups.language_settings.title', 'icon' => 'icon-font', 'page_reload' => false), 'language_languages' => array('title' => 'oro.locale.system_configuration.groups.language_languages.title', 'page_reload' => false), 'locale_settings' => array('title' => 'oro.locale.system_configuration.groups.locale_settings.title', 'page_reload' => false), 'map_settings' => array('title' => 'oro.locale.system_configuration.groups.map_settings.title', 'page_reload' => false), 'email_notifications_settings' => array('title' => 'oro.notification.system_configuration.title', 'page_reload' => false), 'sidebar_settings' => array('title' => 'oro.sidebar.system_configuration.groups.sidebar_settings.title', 'page_reload' => false), 'tracking' => array('title' => 'oro.tracking.system_configuration.groups.tracking.title', 'icon' => 'icon-screenshot', 'page_reload' => false), 'tracking_settings' => array('title' => 'oro.tracking.system_configuration.groups.tracking_settings.title', 'icon' => 'icon-screenshot', 'page_reload' => false)), 'fields' => array('oro_ui.application_url' => array('data_type' => 'string', 'type' => 'text', 'options' => array('label' => 'oro.ui.system_configuration.fields.application_url.label')), 'oro_ui.navbar_position' => array('data_type' => 'string', 'type' => 'choice', 'options' => array('label' => 'oro.ui.system_configuration.fields.navbar_position.label', 'choices' => array('top' => 'oro.ui.system_configuration.fields.navbar_position.choices.top', 'left' => 'oro.ui.system_configuration.fields.navbar_position.choices.left'))), 'oro_attachment.upload_file_mime_types' => array('data_type' => 'string', 'type' => 'textarea', 'options' => array('label' => 'oro.attachment.config.upload_file_mime_types.label', 'tooltip' => 'oro.attachment.config.upload_file_mime_types.tooltip')), 'oro_attachment.upload_image_mime_types' => array('data_type' => 'string', 'type' => 'textarea', 'options' => array('label' => 'oro.attachment.config.upload_image_mime_types.label', 'tooltip' => 'oro.attachment.config.upload_image_mime_types.tooltip')), 'oro_email.minimum_input_length' => array('data_type' => 'integer', 'type' => 'number', 'options' => array('label' => 'oro.email.system_configuration.email_autocomplete_configuration.minimum_input_length.label', 'precision' => 0, 'constraints' => array(0 => array('NotBlank' => NULL)))), 'oro_email.signature' => array('data_type' => 'string', 'type' => 'oro_rich_text', 'options' => array('label' => 'oro.email.system_configuration.signature_configuration.signature.label', 'required' => false)), 'oro_email.append_signature' => array('data_type' => 'boolean', 'type' => 'choice', 'options' => array('label' => 'oro.email.system_configuration.signature_configuration.append_signature.label', 'choices' => array(1 => 'oro.email.system_configuration.signature_configuration.append_signature.choices.auto.label', 0 => 'oro.email.system_configuration.signature_configuration.append_signature.choices.manual.label'))), 'oro_email.default_button_reply' => array('data_type' => 'integer', 'type' => 'choice', 'options' => array('label' => 'oro.email.system_configuration.reply_configuration.default_button.label', 'choices' => array(1 => 'oro.email.reply', 2 => 'oro.email.reply_all'), 'required' => false)), 'oro_email.mailbox_grid' => array('type' => 'oro_email_mailbox_grid', 'ui_only' => true, 'options' => array('label' => false, 'required' => false, 'resettable' => false)), 'oro_sso.enable_google_sso' => array('data_type' => 'boolean', 'type' => 'oro_config_checkbox', 'options' => array('label' => 'oro.sso.system_configuration.fields.enable_google_sso.label', 'required' => false, 'resettable' => false), 'priority' => 40), 'oro_sso.google_sso_domains' => array('data_type' => 'array', 'type' => 'oro_textlist', 'options' => array('label' => 'oro.sso.system_configuration.fields.google_sso_domains.label', 'tooltip' => 'oro.sso.system_configuration.fields.google_sso_domains.tooltip', 'required' => false, 'resettable' => false), 'priority' => 10), 'oro_sso.google_sso_client_id' => array('data_type' => 'string', 'type' => 'text', 'options' => array('label' => 'oro.sso.system_configuration.fields.google_sso_client_id.label', 'resettable' => false, 'required' => false), 'priority' => 30), 'oro_sso.google_sso_client_secret' => array('data_type' => 'string', 'type' => 'text', 'options' => array('label' => 'oro.sso.system_configuration.fields.google_sso_client_secret.label', 'resettable' => false, 'required' => false), 'priority' => 20), 'oro_activity_list.sorting_field' => array('data_type' => 'string', 'type' => 'choice', 'options' => array('label' => 'oro.activitylist.system_configuration.fields.sorting_field.label', 'choices' => array('createdAt' => 'oro.activitylist.system_configuration.fields.sorting_field.choices.createdAt', 'updatedAt' => 'oro.activitylist.system_configuration.fields.sorting_field.choices.updatedAt'), 'constraints' => array(0 => array('NotBlank' => NULL)))), 'oro_activity_list.sorting_direction' => array('data_type' => 'string', 'type' => 'choice', 'options' => array('label' => 'oro.activitylist.system_configuration.fields.sorting_direction.label', 'choices' => array('DESC' => 'oro.activitylist.system_configuration.fields.sorting_direction.choices.DESC', 'ASC' => 'oro.activitylist.system_configuration.fields.sorting_direction.choices.ASC'), 'constraints' => array(0 => array('NotBlank' => NULL)))), 'oro_activity_list.per_page' => array('data_type' => 'integer', 'type' => 'choice', 'options' => array('label' => 'oro.activitylist.system_configuration.fields.per_page.label', 'choices' => array(10 => 10, 25 => 25, 50 => 50, 100 => 100), 'constraints' => array(0 => array('NotBlank' => NULL)))), 'oro_activity_list.grouping' => array('data_type' => 'boolean', 'type' => 'choice', 'options' => array('label' => 'oro.activitylist.system_configuration.email_threads.use_threads_in_activities.label', 'choices' => array(0 => 'oro.activitylist.system_configuration.email_threads.use_threads_in_activities.choices.non_threaded.label', 1 => 'oro.activitylist.system_configuration.email_threads.use_threads_in_activities.choices.threaded.label'))), 'oro_calendar.calendar_colors' => array('data_type' => 'array', 'type' => 'oro_color_table', 'options' => array('label' => 'oro.calendar.system_configuration.fields.calendar_colors.label')), 'oro_calendar.event_colors' => array('data_type' => 'array', 'type' => 'oro_color_table', 'options' => array('label' => 'oro.calendar.system_configuration.fields.event_colors.label')), 'oro_data_grid.default_per_page' => array('data_type' => 'integer', 'type' => 'choice', 'priority' => 200, 'options' => array('label' => 'oro.grid.system_configuration.fields.default_per_page.label', 'choices' => array(10 => 10, 25 => 25, 50 => 50, 100 => 100), 'constraints' => array(0 => array('NotBlank' => NULL)))), 'oro_data_grid.full_screen_layout_enabled' => array('data_type' => 'boolean', 'type' => 'oro_config_checkbox', 'priority' => 150, 'options' => array('label' => 'oro.grid.system_configuration.fields.full_screen_layout_enabled.label', 'tooltip' => 'oro.grid.system_configuration.fields.full_screen_layout_enabled.tooltip')), 'oro_entity_pagination.enabled' => array('data_type' => 'boolean', 'type' => 'oro_config_checkbox', 'priority' => 100, 'options' => array('label' => 'oro.entity_pagination.system_configuration.fields.enabled.label', 'tooltip' => 'oro.entity_pagination.system_configuration.fields.enabled.tooltip', 'required' => true)), 'oro_entity_pagination.limit' => array('data_type' => 'integer', 'type' => 'text', 'priority' => 90, 'options' => array('label' => 'oro.entity_pagination.system_configuration.fields.limit.label', 'tooltip' => 'oro.entity_pagination.system_configuration.fields.limit.tooltip', 'required' => true, 'constraints' => array(0 => array('NotBlank' => NULL), 1 => array('Range' => array('min' => 1))))), 'oro_form.wysiwyg_enabled' => array('data_type' => 'boolean', 'type' => 'oro_config_checkbox', 'priority' => 50, 'options' => array('label' => 'oro.form.system_configuration.fields.wysiwyg_enabled.label', 'tooltip' => 'oro.form.system_configuration.fields.wysiwyg_enabled.tooltip', 'required' => true)), 'oro_locale.locale' => array('data_type' => 'string', 'type' => 'oro_locale', 'priority' => 70, 'options' => array('label' => 'oro.locale.system_configuration.fields.locale.label', 'tooltip' => 'oro.locale.form.tooltip.locale', 'required' => true, 'constraints' => array(0 => array('NotBlank' => NULL)))), 'oro_locale.country' => array('data_type' => 'string', 'type' => 'oro_locale_country', 'priority' => 60, 'options' => array('label' => 'oro.locale.system_configuration.fields.country.label', 'tooltip' => 'oro.locale.form.tooltip.location', 'required' => true, 'constraints' => array(0 => array('NotBlank' => NULL)))), 'oro_locale.format_address_by_address_country' => array('data_type' => 'boolean', 'type' => 'oro_config_checkbox', 'priority' => 50, 'options' => array('label' => 'oro.locale.system_configuration.fields.format_address_by_address_country.label', 'tooltip' => 'oro.locale.form.tooltip.format_address_by_address_country', 'required' => true)), 'oro_locale.language' => array('data_type' => 'string', 'type' => 'oro_language', 'priority' => 40, 'options' => array('label' => 'oro.locale.system_configuration.fields.language.label', 'tooltip' => 'oro.locale.form.tooltip.language', 'required' => true, 'constraints' => array(0 => array('NotBlank' => NULL)))), 'oro_locale.languages' => array('data_type' => 'array', 'type' => 'oro_language', 'priority' => 35, 'options' => array('label' => 'oro.locale.system_configuration.fields.languages.label', 'tooltip' => 'oro.locale.form.tooltip.languages', 'required' => true, 'multiple' => true, 'constraints' => array(0 => array('NotBlank' => NULL)))), 'oro_locale.timezone' => array('data_type' => 'string', 'type' => 'oro_locale_timezone', 'priority' => 30, 'options' => array('label' => 'oro.locale.system_configuration.fields.timezone.label', 'tooltip' => 'oro.locale.form.tooltip.timezone', 'required' => true, 'constraints' => array(0 => array('NotBlank' => NULL)))), 'oro_locale.currency' => array('data_type' => 'string', 'type' => 'oro_currency', 'priority' => 20, 'options' => array('label' => 'oro.locale.system_configuration.fields.currency.label', 'tooltip' => 'oro.locale.form.tooltip.currency', 'required' => true, 'constraints' => array(0 => array('NotBlank' => NULL)))), 'oro_locale.quarter_start' => array('data_type' => 'array', 'type' => 'oro_quarter', 'priority' => 30, 'options' => array('label' => 'oro.locale.system_configuration.fields.quarter_start.label', 'tooltip' => 'oro.locale.form.tooltip.quarter_start', 'required' => true, 'constraints' => array(0 => array('NotBlank' => NULL)))), 'oro_locale.temperature_unit' => array('data_type' => 'string', 'type' => 'choice', 'priority' => 20, 'options' => array('label' => 'oro.locale.system_configuration.fields.temperature_unit.label', 'tooltip' => 'oro.locale.form.tooltip.temperature_unit', 'required' => true, 'constraints' => array(0 => array('NotBlank' => NULL)), 'choices' => array('fahrenheit' => 'oro.locale.system_configuration.fields.temperature_unit.choices.fahrenheit', 'celsius' => 'oro.locale.system_configuration.fields.temperature_unit.choices.celsius'))), 'oro_locale.wind_speed_unit' => array('data_type' => 'string', 'type' => 'choice', 'priority' => 10, 'options' => array('label' => 'oro.locale.system_configuration.fields.wind_speed_unit.label', 'tooltip' => 'oro.locale.form.tooltip.wind_speed_unit', 'required' => true, 'constraints' => array(0 => array('NotBlank' => NULL)), 'choices' => array('miles_per_hour' => 'oro.locale.system_configuration.fields.wind_speed_unit.choices.miles_per_hour', 'kilometers_per_hour' => 'oro.locale.system_configuration.fields.wind_speed_unit.choices.kilometers_per_hour', 'meters_per_second' => 'oro.locale.system_configuration.fields.wind_speed_unit.choices.meters_per_second'))), 'oro_notification.email_notification_sender_email' => array('data_type' => 'string', 'type' => 'email', 'options' => array('label' => 'oro.notification.system_configuration.email_notification_sender_email')), 'oro_notification.email_notification_sender_name' => array('data_type' => 'string', 'type' => 'text', 'options' => array('label' => 'oro.notification.system_configuration.email_notification_sender_name')), 'oro_sidebar.sidebar_left_active' => array('data_type' => 'boolean', 'type' => 'choice', 'options' => array('label' => 'oro.sidebar.system_configuration.fields.sidebar_left_active.label', 'choices' => array(0 => 'No', 1 => 'Yes'))), 'oro_sidebar.sidebar_right_active' => array('data_type' => 'boolean', 'type' => 'choice', 'options' => array('label' => 'oro.sidebar.system_configuration.fields.sidebar_right_active.label', 'choices' => array(0 => 'No', 1 => 'Yes'))), 'oro_translation.available_translations' => array('data_type' => 'array', 'type' => 'oro_translation_available_translations', 'options' => array('label' => 'oro.translation.system_configuration.fields.available_translations.label', 'required' => false, 'resettable' => false)), 'oro_navigation.maxItems' => array('data_type' => 'integer', 'options' => array()), 'oro_navigation.title_suffix' => array('data_type' => 'string', 'options' => array()), 'oro_navigation.title_delimiter' => array('data_type' => 'string', 'options' => array()), 'oro_navigation.breadcrumb_menu' => array('data_type' => 'string', 'options' => array()), 'oro_tracking.dynamic_tracking_enabled' => array('data_type' => 'boolean', 'type' => 'oro_config_checkbox', 'priority' => 50, 'options' => array('label' => 'oro.tracking.system_configuration.fields.dynamic_tracking_enabled.label', 'tooltip' => 'oro.tracking.form.tooltip.dynamic_tracking_enabled', 'required' => true)), 'oro_tracking.log_rotate_interval' => array('data_type' => 'integer', 'type' => 'choice', 'priority' => 40, 'options' => array('label' => 'oro.tracking.system_configuration.fields.log_rotate_interval.label', 'tooltip' => 'oro.tracking.form.tooltip.log_rotate_interval', 'required' => true, 'constraints' => array(0 => array('NotBlank' => NULL)), 'choices' => array(60 => 'oro.tracking.system_configuration.fields.log_rotate_interval.choices.60', 30 => 'oro.tracking.system_configuration.fields.log_rotate_interval.choices.30', 20 => 'oro.tracking.system_configuration.fields.log_rotate_interval.choices.20', 15 => 'oro.tracking.system_configuration.fields.log_rotate_interval.choices.15', 10 => 'oro.tracking.system_configuration.fields.log_rotate_interval.choices.10', 5 => 'oro.tracking.system_configuration.fields.log_rotate_interval.choices.5'))), 'oro_tracking.piwik_host' => array('data_type' => 'string', 'type' => 'text', 'priority' => 20, 'options' => array('label' => 'oro.tracking.system_configuration.fields.piwik_host.label', 'tooltip' => 'oro.tracking.form.tooltip.piwik_host', 'required' => false)), 'oro_tracking.piwik_token_auth' => array('data_type' => 'string', 'type' => 'text', 'priority' => 10, 'options' => array('label' => 'oro.tracking.system_configuration.fields.piwik_token_auth.label', 'tooltip' => 'oro.tracking.form.tooltip.piwik_token_auth', 'required' => false)), 'oro_tracking.wesite_configuration' => array('ui_only' => true, 'type' => 'oro_link_type', 'priority' => 0, 'options' => array('label' => false, 'required' => false, 'resettable' => false, 'route' => 'oro_tracking_website_index', 'acl' => 'oro_tracking_website_view', 'title' => 'oro.tracking.website_configuration'))), 'tree' => array('system_configuration' => array('platform' => array('children' => array('general_setup' => array('children' => array('application_settings' => array('priority' => 260, 'children' => array('application_name_settings' => array('children' => array(0 => 'oro_ui.application_url')))), 'look_and_feel' => array('children' => array('navbar_settings' => array('children' => array(0 => 'oro_ui.navbar_position')), 'activity_list_settings' => array('children' => array(0 => 'oro_activity_list.sorting_field', 1 => 'oro_activity_list.sorting_direction', 2 => 'oro_activity_list.per_page')), 'calendar_settings' => array('children' => array(0 => 'oro_calendar.calendar_colors', 1 => 'oro_calendar.event_colors')), 'grid_settings' => array('children' => array(0 => 'oro_data_grid.default_per_page', 1 => 'oro_data_grid.full_screen_layout_enabled', 2 => 'oro_entity_pagination.enabled', 3 => 'oro_entity_pagination.limit')), 'wysiwyg_settings' => array('children' => array(0 => 'oro_form.wysiwyg_enabled')), 'sidebar_settings' => array('children' => array(0 => 'oro_sidebar.sidebar_left_active', 1 => 'oro_sidebar.sidebar_right_active'))), 'priority' => 210), 'attachment_settings' => array('priority' => -10, 'children' => array('attachment_mime_types_settings' => array('children' => array(0 => 'oro_attachment.upload_file_mime_types', 1 => 'oro_attachment.upload_image_mime_types')))), 'email_configuration' => array('children' => array('email_autocomplete_configuration' => array('children' => array(0 => 'oro_email.minimum_input_length')), 'signature_configuration' => array('children' => array(0 => 'oro_email.signature', 1 => 'oro_email.append_signature')), 'reply_configuration' => array('children' => array(0 => 'oro_email.default_button_reply')), 'mailboxes' => array('children' => array(0 => 'oro_email.mailbox_grid')), 'email_threads' => array('children' => array(0 => 'oro_activity_list.grouping')), 'email_notifications_settings' => array('children' => array(0 => 'oro_notification.email_notification_sender_email', 1 => 'oro_notification.email_notification_sender_name')))), 'localization' => array('priority' => 255, 'children' => array('locale_settings' => array('priority' => 100, 'children' => array(0 => 'oro_locale.locale', 1 => 'oro_locale.country', 2 => 'oro_locale.format_address_by_address_country', 3 => 'oro_locale.timezone', 4 => 'oro_locale.currency', 5 => 'oro_locale.quarter_start')), 'map_settings' => array('priority' => 50, 'children' => array(0 => 'oro_locale.temperature_unit', 1 => 'oro_locale.wind_speed_unit')))), 'language_settings' => array('priority' => 230, 'children' => array('language_languages' => array('children' => array(0 => 'oro_locale.language', 1 => 'oro_locale.languages', 2 => 'oro_translation.available_translations')))), 'tracking' => array('priority' => 50, 'children' => array('tracking_settings' => array('priority' => 100, 'children' => array(0 => 'oro_tracking.dynamic_tracking_enabled', 1 => 'oro_tracking.log_rotate_interval', 2 => 'oro_tracking.piwik_host', 3 => 'oro_tracking.piwik_token_auth', 4 => 'oro_tracking.wesite_configuration'))))), 'priority' => 255), 'integrations' => array('children' => array('google_settings' => array('children' => array('google_integration_settings' => array('children' => array(0 => 'oro_sso.enable_google_sso', 1 => 'oro_sso.google_sso_domains', 2 => 'oro_sso.google_sso_client_id', 3 => 'oro_sso.google_sso_client_secret'))))))), 'priority' => 255))), 'api_tree' => array('application' => array('oro_ui.application_url' => array('type' => 'string'), 'section' => true), 'look-and-feel' => array('oro_ui.navbar_position' => array('type' => 'string'), 'oro_calendar.calendar_colors' => array('type' => 'array'), 'oro_calendar.event_colors' => array('type' => 'array'), 'oro_data_grid.default_per_page' => array('type' => 'integer'), 'oro_entity_pagination.enabled' => array('type' => 'boolean'), 'oro_form.wysiwyg_enabled' => array('type' => 'boolean'), 'oro_sidebar.sidebar_left_active' => array('type' => 'boolean'), 'oro_sidebar.sidebar_right_active' => array('type' => 'boolean'), 'oro_navigation.maxItems' => array('type' => 'integer'), 'oro_navigation.title_suffix' => array('type' => 'string'), 'oro_navigation.title_delimiter' => array('type' => 'string'), 'oro_navigation.breadcrumb_menu' => array('type' => 'string'), 'section' => true), 'attachments' => array('oro_attachment.upload_file_mime_types' => array('type' => 'string'), 'oro_attachment.upload_image_mime_types' => array('type' => 'string'), 'section' => true), 'signature_configuration' => array('oro_email.signature' => array('type' => 'string'), 'oro_email.append_signature' => array('type' => 'boolean'), 'section' => true), 'reply_configuration' => array('oro_email.default_button_reply' => array('type' => 'integer'), 'section' => true), 'activity_list' => array('oro_activity_list.sorting_field' => array('type' => 'string'), 'oro_activity_list.sorting_direction' => array('type' => 'string'), 'oro_activity_list.per_page' => array('type' => 'integer'), 'section' => true), 'email_threads' => array('oro_activity_list.grouping' => array('type' => 'boolean'), 'section' => true), 'localization' => array('oro_locale.language' => array('type' => 'string'), 'oro_locale.languages' => array('type' => 'array'), 'oro_locale.locale' => array('type' => 'string'), 'oro_locale.country' => array('type' => 'string'), 'oro_locale.format_address_by_address_country' => array('type' => 'boolean'), 'oro_locale.timezone' => array('type' => 'string'), 'oro_locale.currency' => array('type' => 'string'), 'oro_locale.quarter_start' => array('type' => 'array'), 'oro_locale.temperature_unit' => array('type' => 'string'), 'oro_locale.wind_speed_unit' => array('type' => 'string'), 'oro_translation.available_translations' => array('type' => 'array'), 'section' => true), 'email_configuration' => array('oro_notification.email_notification_sender_email' => array('type' => 'string'), 'oro_notification.email_notification_sender_name' => array('type' => 'string'), 'section' => true), 'tracking' => array('oro_tracking.dynamic_tracking_enabled' => array('type' => 'boolean'), 'oro_tracking.log_rotate_interval' => array('type' => 'integer'), 'oro_tracking.piwik_host' => array('type' => 'string'), 'oro_tracking.piwik_token_auth' => array('type' => 'string'), 'section' => true))), $this);
    }

    /**
     * Gets the 'oro_config.config_definition_bag' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ConfigBundle\Config\ConfigDefinitionImmutableBag A Oro\Bundle\ConfigBundle\Config\ConfigDefinitionImmutableBag instance.
     */
    protected function getOroConfig_ConfigDefinitionBagService()
    {
        return $this->services['oro_config.config_definition_bag'] = new \Oro\Bundle\ConfigBundle\Config\ConfigDefinitionImmutableBag(array('oro_ui' => array('resolved' => true, 'organization_name' => array('value' => 'ORO', 'scope' => 'app'), 'application_url' => array('value' => 'http://localhost/oro/', 'scope' => 'app'), 'navbar_position' => array('value' => 'top', 'scope' => 'app')), 'oro_attachment' => array('resolved' => true, 'upload_file_mime_types' => array('value' => 'application/msword
application/vnd.ms-excel
application/pdf
application/zip', 'scope' => 'app'), 'upload_image_mime_types' => array('value' => 'image/gif
image/jpeg
image/png', 'scope' => 'app')), 'oro_email' => array('resolved' => true, 'signature' => array('value' => '', 'scope' => 'app'), 'append_signature' => array('value' => true, 'scope' => 'app'), 'default_button_reply' => array('value' => true, 'scope' => 'app'), 'use_threads_in_emails' => array('value' => true, 'scope' => 'app'), 'minimum_input_length' => array('value' => 2, 'scope' => 'app')), 'oro_sso' => array('resolved' => true, 'enable_google_sso' => array('value' => false, 'scope' => 'app'), 'google_sso_domains' => array('value' => array(), 'scope' => 'app'), 'google_sso_client_id' => array('value' => NULL, 'scope' => 'app'), 'google_sso_client_secret' => array('value' => NULL, 'scope' => 'app')), 'oro_activity_list' => array('resolved' => true, 'sorting_field' => array('value' => 'updatedAt', 'scope' => 'app'), 'sorting_direction' => array('value' => 'DESC', 'scope' => 'app'), 'per_page' => array('value' => 10, 'scope' => 'app'), 'grouping' => array('value' => true, 'scope' => 'app')), 'oro_calendar' => array('resolved' => true, 'calendar_colors' => array('value' => array(0 => '#AC725E', 1 => '#D06B64', 2 => '#F83A22', 3 => '#FA573C', 4 => '#FF7537', 5 => '#FFAD46', 6 => '#42D692', 7 => '#16A765', 8 => '#7BD148', 9 => '#B3DC6C', 10 => '#FBE983', 11 => '#FAD165', 12 => '#92E1C0', 13 => '#9FE1E7', 14 => '#9FC6E7', 15 => '#4986E7', 16 => '#9A9CFF', 17 => '#B99AFF', 18 => '#C2C2C2', 19 => '#CABDBF', 20 => '#CCA6AC', 21 => '#F691B2', 22 => '#CD74E6', 23 => '#A47AE2'), 'scope' => 'app'), 'event_colors' => array('value' => array(0 => '#5484ED', 1 => '#A4BDFC', 2 => '#46D6DB', 3 => '#7AE7BF', 4 => '#51B749', 5 => '#FBD75B', 6 => '#FFB878', 7 => '#FF887C', 8 => '#DC2127', 9 => '#DBADFF', 10 => '#E1E1E1'), 'scope' => 'app')), 'oro_data_grid' => array('resolved' => true, 'default_per_page' => array('value' => 25, 'scope' => 'app'), 'full_screen_layout_enabled' => array('value' => true, 'scope' => 'app')), 'oro_entity_pagination' => array('resolved' => true, 'enabled' => array('value' => true, 'scope' => 'app'), 'limit' => array('value' => 1000, 'scope' => 'app')), 'oro_form' => array('resolved' => true, 'wysiwyg_enabled' => array('value' => true, 'scope' => 'app')), 'oro_locale' => array('resolved' => true, 'locale' => array('value' => 'fr', 'scope' => 'app'), 'language' => array('value' => 'fr', 'scope' => 'app'), 'country' => array('value' => 'US', 'scope' => 'app'), 'currency' => array('value' => 'USD', 'scope' => 'app'), 'timezone' => array('value' => 'Europe/Paris', 'scope' => 'app'), 'format_address_by_address_country' => array('value' => true, 'scope' => 'app'), 'qwerty' => array('value' => array(), 'scope' => 'app'), 'languages' => array('value' => array(0 => 'en'), 'scope' => 'app'), 'quarter_start' => array('value' => array('month' => '1', 'day' => '1'), 'scope' => 'app'), 'temperature_unit' => array('value' => 'fahrenheit', 'scope' => 'app'), 'wind_speed_unit' => array('value' => 'miles_per_hour', 'scope' => 'app')), 'oro_notification' => array('resolved' => true, 'email_notification_sender_email' => array('value' => 'no-reply@ArseneLeQuebeco.example', 'scope' => 'app'), 'email_notification_sender_name' => array('value' => 'Oro', 'scope' => 'app')), 'oro_sidebar' => array('resolved' => true, 'sidebar_left_active' => array('value' => false, 'scope' => 'app'), 'sidebar_right_active' => array('value' => true, 'scope' => 'app')), 'oro_translation' => array('resolved' => true, 'available_translations' => array('value' => array(), 'scope' => 'app'), 'installed_translation_meta' => array('value' => array(), 'scope' => 'app')), 'oro_navigation' => array('resolved' => true, 'maxItems' => array('value' => 20, 'scope' => 'app'), 'title_suffix' => array('value' => '', 'scope' => 'app'), 'title_delimiter' => array('value' => '-', 'scope' => 'app'), 'breadcrumb_menu' => array('value' => 'application_menu', 'scope' => 'app')), 'oro_tracking' => array('resolved' => true, 'dynamic_tracking_enabled' => array('value' => true, 'scope' => 'app'), 'log_rotate_interval' => array('value' => 60, 'scope' => 'app'), 'piwik_host' => array('value' => NULL, 'scope' => 'app'), 'piwik_token_auth' => array('value' => NULL, 'scope' => 'app'))));
    }

    /**
     * Gets the 'oro_config.form.config_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ConfigBundle\Form\EventListener\ConfigSubscriber A Oro\Bundle\ConfigBundle\Form\EventListener\ConfigSubscriber instance.
     */
    protected function getOroConfig_Form_ConfigSubscriberService()
    {
        return $this->services['oro_config.form.config_subscriber'] = new \Oro\Bundle\ConfigBundle\Form\EventListener\ConfigSubscriber($this->get('oro_config.user'));
    }

    /**
     * Gets the 'oro_config.form.handler.config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ConfigBundle\Form\Handler\ConfigHandler A Oro\Bundle\ConfigBundle\Form\Handler\ConfigHandler instance.
     */
    protected function getOroConfig_Form_Handler_ConfigService()
    {
        return $this->services['oro_config.form.handler.config'] = new \Oro\Bundle\ConfigBundle\Form\Handler\ConfigHandler($this->get('oro_config.global'));
    }

    /**
     * Gets the 'oro_config.global' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ConfigBundle\Config\ConfigManager A Oro\Bundle\ConfigBundle\Config\ConfigManager instance.
     */
    protected function getOroConfig_GlobalService()
    {
        $this->services['oro_config.global'] = $instance = new \Oro\Bundle\ConfigBundle\Config\ConfigManager($this->get('oro_config.config_definition_bag'), $this->get('debug.event_dispatcher'));

        $instance->addManager('global', $this->get('oro_config.scope.global'));
        $instance->setScopeName('global');

        return $instance;
    }

    /**
     * Gets the 'oro_config.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ConfigBundle\Config\ConfigManager A Oro\Bundle\ConfigBundle\Config\ConfigManager instance.
     */
    protected function getOroConfig_ManagerService()
    {
        $this->services['oro_config.manager'] = $instance = new \Oro\Bundle\ConfigBundle\Config\ConfigManager($this->get('oro_config.config_definition_bag'), $this->get('debug.event_dispatcher'));

        $instance->addManager('global', $this->get('oro_config.scope.global'));
        $instance->setScopeName('global');
        $instance->addManager('user', $this->get('oro_config.scope.user'));
        $instance->setScopeName('user');

        return $instance;
    }

    /**
     * Gets the 'oro_config.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\ConfigBundle\Config\ConfigApiManager A Oro\Bundle\ConfigBundle\Config\ConfigApiManager instance.
     */
    public function getOroConfig_Manager_ApiService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_config.manager.api'] = new OroBundleConfigBundleConfigConfigApiManager_000000002e47e3dc00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroConfig_Manager_ApiService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $a = $this->get('oro_config.config_definition_bag');
        $b = $this->get('debug.event_dispatcher');
        $c = $this->get('oro_config.scope.global');

        $d = new \Oro\Bundle\ConfigBundle\Config\ConfigManager($a, $b);
        $d->addManager('global', $c);
        $d->setScopeName('global');

        $e = new \Oro\Bundle\ConfigBundle\Config\ConfigManager($a, $b);
        $e->addManager('global', $c);
        $e->setScopeName('global');
        $e->addManager('user', $this->get('oro_config.scope.user'));
        $e->setScopeName('user');

        $instance = new \Oro\Bundle\ConfigBundle\Config\ConfigApiManager($this->get('oro_config.provider.system_configuration.form_provider'));

        $instance->addConfigManager('global', $d);
        $instance->addConfigManager('user', $e);

        return $instance;
    }

    /**
     * Gets the 'oro_config.provider.system_configuration.form_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\ConfigBundle\Provider\SystemConfigurationFormProvider A Oro\Bundle\ConfigBundle\Provider\SystemConfigurationFormProvider instance.
     */
    public function getOroConfig_Provider_SystemConfiguration_FormProviderService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_config.provider.system_configuration.form_provider'] = new OroBundleConfigBundleProviderSystemConfigurationFormProvider_000000002e47e3cb00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroConfig_Provider_SystemConfiguration_FormProviderService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\ConfigBundle\Provider\SystemConfigurationFormProvider($this->get('oro_config.config_bag'), $this->get('form.factory'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_config.scope.global' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ConfigBundle\Config\GlobalScopeManager A Oro\Bundle\ConfigBundle\Config\GlobalScopeManager instance.
     */
    protected function getOroConfig_Scope_GlobalService()
    {
        return $this->services['oro_config.scope.global'] = new \Oro\Bundle\ConfigBundle\Config\GlobalScopeManager($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_config.scope.user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ConfigBundle\Config\UserScopeManager A Oro\Bundle\ConfigBundle\Config\UserScopeManager instance.
     */
    protected function getOroConfig_Scope_UserService()
    {
        $this->services['oro_config.scope.user'] = $instance = new \Oro\Bundle\ConfigBundle\Config\UserScopeManager($this->get('doctrine.orm.default_entity_manager'));

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'oro_config.twig.config_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ConfigBundle\Twig\ConfigExtension A Oro\Bundle\ConfigBundle\Twig\ConfigExtension instance.
     */
    protected function getOroConfig_Twig_ConfigExtensionService()
    {
        return $this->services['oro_config.twig.config_extension'] = new \Oro\Bundle\ConfigBundle\Twig\ConfigExtension($this->get('oro_config.user'));
    }

    /**
     * Gets the 'oro_config.type.config_checkbox' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ConfigBundle\Form\Type\ConfigCheckbox A Oro\Bundle\ConfigBundle\Form\Type\ConfigCheckbox instance.
     */
    protected function getOroConfig_Type_ConfigCheckboxService()
    {
        return $this->services['oro_config.type.config_checkbox'] = new \Oro\Bundle\ConfigBundle\Form\Type\ConfigCheckbox();
    }

    /**
     * Gets the 'oro_config.type.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ConfigBundle\Form\Type\FormType A Oro\Bundle\ConfigBundle\Form\Type\FormType instance.
     */
    protected function getOroConfig_Type_FormService()
    {
        return $this->services['oro_config.type.form'] = new \Oro\Bundle\ConfigBundle\Form\Type\FormType($this->get('oro_config.form.config_subscriber'));
    }

    /**
     * Gets the 'oro_config.type.form_field' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ConfigBundle\Form\Type\FormFieldType A Oro\Bundle\ConfigBundle\Form\Type\FormFieldType instance.
     */
    protected function getOroConfig_Type_FormFieldService()
    {
        return $this->services['oro_config.type.form_field'] = new \Oro\Bundle\ConfigBundle\Form\Type\FormFieldType();
    }

    /**
     * Gets the 'oro_config.type.parent_scope_checkbox' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ConfigBundle\Form\Type\ParentScopeCheckbox A Oro\Bundle\ConfigBundle\Form\Type\ParentScopeCheckbox instance.
     */
    protected function getOroConfig_Type_ParentScopeCheckboxService()
    {
        return $this->services['oro_config.type.parent_scope_checkbox'] = new \Oro\Bundle\ConfigBundle\Form\Type\ParentScopeCheckbox();
    }

    /**
     * Gets the 'oro_config.user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ConfigBundle\Config\ConfigManager A Oro\Bundle\ConfigBundle\Config\ConfigManager instance.
     */
    protected function getOroConfig_UserService()
    {
        $this->services['oro_config.user'] = $instance = new \Oro\Bundle\ConfigBundle\Config\ConfigManager($this->get('oro_config.config_definition_bag'), $this->get('debug.event_dispatcher'));

        $instance->addManager('global', $this->get('oro_config.scope.global'));
        $instance->setScopeName('global');
        $instance->addManager('user', $this->get('oro_config.scope.user'));
        $instance->setScopeName('user');

        return $instance;
    }

    /**
     * Gets the 'oro_config.user_config_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ConfigBundle\Manager\UserConfigManager A Oro\Bundle\ConfigBundle\Manager\UserConfigManager instance.
     */
    protected function getOroConfig_UserConfigManagerService()
    {
        return $this->services['oro_config.user_config_manager'] = new \Oro\Bundle\ConfigBundle\Manager\UserConfigManager($this->get('oro_config.scope.user'));
    }

    /**
     * Gets the 'oro_cron.command_with_args_string_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CronBundle\Filter\CommandWithArgsFilter A Oro\Bundle\CronBundle\Filter\CommandWithArgsFilter instance.
     */
    protected function getOroCron_CommandWithArgsStringFilterService()
    {
        $a = new \Oro\Bundle\CronBundle\ORM\CommandArgsTokenizer();
        $a->addNormalizer(new \Oro\Bundle\CronBundle\ORM\CommandArgsNormalizer());
        $a->addNormalizer(new \Oro\Bundle\CronBundle\ORM\Pgsql92CommandArgsNormalizer());

        return $this->services['oro_cron.command_with_args_string_filter'] = new \Oro\Bundle\CronBundle\Filter\CommandWithArgsFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'), $a);
    }

    /**
     * Gets the 'oro_cron.job_daemon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CronBundle\Job\Daemon A Oro\Bundle\CronBundle\Job\Daemon instance.
     */
    protected function getOroCron_JobDaemonService()
    {
        return $this->services['oro_cron.job_daemon'] = new \Oro\Bundle\CronBundle\Job\Daemon('C:\\wamp\\www\\stockvalue~~\\app', 5, 3600, 'dev');
    }

    /**
     * Gets the 'oro_cron.job_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CronBundle\Entity\Manager\JobManager A Oro\Bundle\CronBundle\Entity\Manager\JobManager instance.
     */
    protected function getOroCron_JobManagerService()
    {
        return $this->services['oro_cron.job_manager'] = new \Oro\Bundle\CronBundle\Entity\Manager\JobManager($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_dashboard.config_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Model\ConfigProvider A Oro\Bundle\DashboardBundle\Model\ConfigProvider instance.
     */
    protected function getOroDashboard_ConfigProviderService()
    {
        return $this->services['oro_dashboard.config_provider'] = new \Oro\Bundle\DashboardBundle\Model\ConfigProvider(array('widgets' => array('recent_emails' => array('label' => 'oro.dashboard.recent_emails.title', 'route' => 'oro_email_dashboard_recent_emails', 'acl' => 'oro_email_email_view', 'description' => 'oro.dashboard.recent_emails.description', 'icon' => 'bundles/oroemail/img/recent_emails.png', 'route_parameters' => array('widget' => 'recent_emails'), 'enabled' => true, 'configuration' => array('title' => array('type' => 'oro_type_widget_title', 'options' => array('label' => 'oro.dashboard.title.label', 'required' => false), 'show_on_widget' => false, 'converter_attributes' => array())), 'data_items' => array()), 'my_calendar' => array('label' => 'oro.calendar.my_calendar_widget_title', 'route' => 'oro_calendar_dashboard_my_calendar', 'acl' => 'oro_calendar_view', 'description' => 'oro.calendar.my_calendar_widget_description', 'icon' => 'bundles/orocalendar/img/my_calendar.png', 'route_parameters' => array('widget' => 'my_calendar'), 'enabled' => true, 'configuration' => array('title' => array('type' => 'oro_type_widget_title', 'options' => array('label' => 'oro.dashboard.title.label', 'required' => false), 'show_on_widget' => false, 'converter_attributes' => array())), 'data_items' => array()), 'quick_launchpad' => array('items' => array('settings' => array('label' => 'oro.dashboard.widgets.quick_launchpad.title', 'icon' => 'cogs', 'route' => 'oro_config_configuration_system', 'acl' => 'oro_config_system', 'route_parameters' => array(), 'enabled' => true)), 'label' => 'oro.dashboard.title.quick_launchpad', 'route' => 'oro_dashboard_itemized_widget', 'route_parameters' => array('bundle' => 'OroDashboardBundle', 'name' => 'quickLaunchpad', 'widget' => 'quick_launchpad'), 'description' => 'oro.dashboard.quick_launchpad_widget_description', 'icon' => 'bundles/orodashboard/img/quick_launchpad.png', 'enabled' => true, 'configuration' => array('title' => array('type' => 'oro_type_widget_title', 'options' => array('label' => 'oro.dashboard.title.label', 'required' => false), 'show_on_widget' => false, 'converter_attributes' => array())), 'data_items' => array())), 'widgets_configuration' => array('title' => array('type' => 'oro_type_widget_title', 'options' => array('label' => 'oro.dashboard.title.label', 'required' => false), 'show_on_widget' => false, 'converter_attributes' => array())), 'dashboards' => array('main' => array('twig' => 'OroDashboardBundle:Index:default.html.twig'))), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_dashboard.config_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\Config\Resolver\SystemAwareResolver A Oro\Component\Config\Resolver\SystemAwareResolver instance.
     */
    protected function getOroDashboard_ConfigResolverService()
    {
        return $this->services['oro_dashboard.config_resolver'] = new \Oro\Component\Config\Resolver\SystemAwareResolver($this);
    }

    /**
     * Gets the 'oro_dashboard.datetime.helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Helper\DateHelper A Oro\Bundle\DashboardBundle\Helper\DateHelper instance.
     */
    protected function getOroDashboard_Datetime_HelperService()
    {
        return $this->services['oro_dashboard.datetime.helper'] = new \Oro\Bundle\DashboardBundle\Helper\DateHelper($this->get('oro_locale.settings'), $this->get('doctrine'), $this->get('oro_security.acl_helper'));
    }

    /**
     * Gets the 'oro_dashboard.event_listener.widget_configuration_load' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\EventListener\WidgetConfigurationLoadListener A Oro\Bundle\DashboardBundle\EventListener\WidgetConfigurationLoadListener instance.
     */
    protected function getOroDashboard_EventListener_WidgetConfigurationLoadService()
    {
        return $this->services['oro_dashboard.event_listener.widget_configuration_load'] = new \Oro\Bundle\DashboardBundle\EventListener\WidgetConfigurationLoadListener($this->get('oro_datagrid.datagrid.manager.link'), $this->get('oro_datagrid.datagrid.builder'));
    }

    /**
     * Gets the 'oro_dashboard.event_listener.widget_items_form_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Form\EventListener\WidgetItemsFormSubscriber A Oro\Bundle\DashboardBundle\Form\EventListener\WidgetItemsFormSubscriber instance.
     */
    protected function getOroDashboard_EventListener_WidgetItemsFormSubscriberService()
    {
        return $this->services['oro_dashboard.event_listener.widget_items_form_subscriber'] = new \Oro\Bundle\DashboardBundle\Form\EventListener\WidgetItemsFormSubscriber($this->get('oro_dashboard.widget_configs'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_dashboard.event_listener.widget_items_load_data' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\EventListener\WidgetItemsLoadDataListener A Oro\Bundle\DashboardBundle\EventListener\WidgetItemsLoadDataListener instance.
     */
    protected function getOroDashboard_EventListener_WidgetItemsLoadDataService()
    {
        return $this->services['oro_dashboard.event_listener.widget_items_load_data'] = new \Oro\Bundle\DashboardBundle\EventListener\WidgetItemsLoadDataListener();
    }

    /**
     * Gets the 'oro_dashboard.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Model\Factory A Oro\Bundle\DashboardBundle\Model\Factory instance.
     */
    protected function getOroDashboard_FactoryService()
    {
        return $this->services['oro_dashboard.factory'] = new \Oro\Bundle\DashboardBundle\Model\Factory($this->get('oro_dashboard.config_provider'), $this->get('oro_dashboard.manager.state'));
    }

    /**
     * Gets the 'oro_dashboard.form.type.edit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Form\Type\DashboardType A Oro\Bundle\DashboardBundle\Form\Type\DashboardType instance.
     */
    protected function getOroDashboard_Form_Type_EditService()
    {
        return $this->services['oro_dashboard.form.type.edit'] = new \Oro\Bundle\DashboardBundle\Form\Type\DashboardType();
    }

    /**
     * Gets the 'oro_dashboard.form.type.select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Form\Type\DashboardSelectType A Oro\Bundle\DashboardBundle\Form\Type\DashboardSelectType instance.
     */
    protected function getOroDashboard_Form_Type_SelectService()
    {
        return $this->services['oro_dashboard.form.type.select'] = new \Oro\Bundle\DashboardBundle\Form\Type\DashboardSelectType($this->get('oro_dashboard.manager'));
    }

    /**
     * Gets the 'oro_dashboard.form.type.widget_date_range' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Form\Type\WidgetDateRangeType A Oro\Bundle\DashboardBundle\Form\Type\WidgetDateRangeType instance.
     */
    protected function getOroDashboard_Form_Type_WidgetDateRangeService()
    {
        return $this->services['oro_dashboard.form.type.widget_date_range'] = new \Oro\Bundle\DashboardBundle\Form\Type\WidgetDateRangeType($this->get('translator'));
    }

    /**
     * Gets the 'oro_dashboard.form.type.widget_date_range_value' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Form\Type\WidgetDateRangeValueType A Oro\Bundle\DashboardBundle\Form\Type\WidgetDateRangeValueType instance.
     */
    protected function getOroDashboard_Form_Type_WidgetDateRangeValueService()
    {
        return $this->services['oro_dashboard.form.type.widget_date_range_value'] = new \Oro\Bundle\DashboardBundle\Form\Type\WidgetDateRangeValueType();
    }

    /**
     * Gets the 'oro_dashboard.form.type.widget_item' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Form\Type\WidgetItemType A Oro\Bundle\DashboardBundle\Form\Type\WidgetItemType instance.
     */
    protected function getOroDashboard_Form_Type_WidgetItemService()
    {
        return $this->services['oro_dashboard.form.type.widget_item'] = new \Oro\Bundle\DashboardBundle\Form\Type\WidgetItemType();
    }

    /**
     * Gets the 'oro_dashboard.form.type.widget_items' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Form\Type\WidgetItemsType A Oro\Bundle\DashboardBundle\Form\Type\WidgetItemsType instance.
     */
    protected function getOroDashboard_Form_Type_WidgetItemsService()
    {
        return $this->services['oro_dashboard.form.type.widget_items'] = new \Oro\Bundle\DashboardBundle\Form\Type\WidgetItemsType($this->get('oro_dashboard.event_listener.widget_items_form_subscriber'));
    }

    /**
     * Gets the 'oro_dashboard.form.type.widget_items_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Form\Type\WidgetItemsChoiceType A Oro\Bundle\DashboardBundle\Form\Type\WidgetItemsChoiceType instance.
     */
    protected function getOroDashboard_Form_Type_WidgetItemsChoiceService()
    {
        return $this->services['oro_dashboard.form.type.widget_items_choice'] = new \Oro\Bundle\DashboardBundle\Form\Type\WidgetItemsChoiceType();
    }

    /**
     * Gets the 'oro_dashboard.form.type.widget_previous_date_range' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Form\Type\WidgetPreviousDateRangeType A Oro\Bundle\DashboardBundle\Form\Type\WidgetPreviousDateRangeType instance.
     */
    protected function getOroDashboard_Form_Type_WidgetPreviousDateRangeService()
    {
        return $this->services['oro_dashboard.form.type.widget_previous_date_range'] = new \Oro\Bundle\DashboardBundle\Form\Type\WidgetPreviousDateRangeType();
    }

    /**
     * Gets the 'oro_dashboard.form.type.widget_widget_title' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Form\Type\WidgetTitleType A Oro\Bundle\DashboardBundle\Form\Type\WidgetTitleType instance.
     */
    protected function getOroDashboard_Form_Type_WidgetWidgetTitleService()
    {
        return $this->services['oro_dashboard.form.type.widget_widget_title'] = new \Oro\Bundle\DashboardBundle\Form\Type\WidgetTitleType();
    }

    /**
     * Gets the 'oro_dashboard.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Model\Manager A Oro\Bundle\DashboardBundle\Model\Manager instance.
     */
    protected function getOroDashboard_ManagerService()
    {
        return $this->services['oro_dashboard.manager'] = new \Oro\Bundle\DashboardBundle\Model\Manager($this->get('oro_dashboard.factory'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_security.acl_helper'), $this->get('security.context'));
    }

    /**
     * Gets the 'oro_dashboard.manager.state' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Model\StateManager A Oro\Bundle\DashboardBundle\Model\StateManager instance.
     */
    protected function getOroDashboard_Manager_StateService()
    {
        return $this->services['oro_dashboard.manager.state'] = new \Oro\Bundle\DashboardBundle\Model\StateManager($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_dashboard.navigation_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\EventListener\NavigationListener A Oro\Bundle\DashboardBundle\EventListener\NavigationListener instance.
     */
    protected function getOroDashboard_NavigationListenerService()
    {
        return $this->services['oro_dashboard.navigation_listener'] = new \Oro\Bundle\DashboardBundle\EventListener\NavigationListener($this->get('oro_security.security_facade'), $this->get('oro_dashboard.manager'));
    }

    /**
     * Gets the 'oro_dashboard.provider.widget_configuration_form_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Provider\WidgetConfigurationFormProvider A Oro\Bundle\DashboardBundle\Provider\WidgetConfigurationFormProvider instance.
     */
    protected function getOroDashboard_Provider_WidgetConfigurationFormProviderService()
    {
        return $this->services['oro_dashboard.provider.widget_configuration_form_provider'] = new \Oro\Bundle\DashboardBundle\Provider\WidgetConfigurationFormProvider($this->get('oro_dashboard.config_provider'), $this->get('form.factory'), $this->get('oro_form.validator.constraint_factory'));
    }

    /**
     * Gets the 'oro_dashboard.widget_config_value.date_range.converter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Provider\Converters\FilterDateTimeRangeConverter A Oro\Bundle\DashboardBundle\Provider\Converters\FilterDateTimeRangeConverter instance.
     */
    protected function getOroDashboard_WidgetConfigValue_DateRange_ConverterService()
    {
        return $this->services['oro_dashboard.widget_config_value.date_range.converter'] = new \Oro\Bundle\DashboardBundle\Provider\Converters\FilterDateTimeRangeConverter($this->get('oro_locale.formatter.date_time'), $this->get('oro_filter.expression.date.compiler'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_dashboard.widget_config_value.previous_date_range.converter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Provider\Converters\PreviousFilterDateRangeConverter A Oro\Bundle\DashboardBundle\Provider\Converters\PreviousFilterDateRangeConverter instance.
     */
    protected function getOroDashboard_WidgetConfigValue_PreviousDateRange_ConverterService()
    {
        return $this->services['oro_dashboard.widget_config_value.previous_date_range.converter'] = new \Oro\Bundle\DashboardBundle\Provider\Converters\PreviousFilterDateRangeConverter($this->get('oro_locale.formatter.date_time'), $this->get('oro_filter.expression.date.compiler'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_dashboard.widget_config_value.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Provider\ConfigValueProvider A Oro\Bundle\DashboardBundle\Provider\ConfigValueProvider instance.
     */
    protected function getOroDashboard_WidgetConfigValue_ProviderService()
    {
        $this->services['oro_dashboard.widget_config_value.provider'] = $instance = new \Oro\Bundle\DashboardBundle\Provider\ConfigValueProvider();

        $instance->addConverter('oro_type_widget_date_range', $this->get('oro_dashboard.widget_config_value.date_range.converter'));
        $instance->addConverter('oro_type_widget_previous_date_range', $this->get('oro_dashboard.widget_config_value.previous_date_range.converter'));
        $instance->addConverter('oro_type_widget_title', $this->get('oro_dashboard.widget_config_value.widget_title.converter'));
        $instance->addConverter('oro_type_widget_items_choice', $this->get('oro_dashboard.widget_config_value.widget_items_choice.converter'));

        return $instance;
    }

    /**
     * Gets the 'oro_dashboard.widget_config_value.widget_items_choice.converter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Provider\Converters\WidgetItemsChoiceTypeConverter A Oro\Bundle\DashboardBundle\Provider\Converters\WidgetItemsChoiceTypeConverter instance.
     */
    protected function getOroDashboard_WidgetConfigValue_WidgetItemsChoice_ConverterService()
    {
        return $this->services['oro_dashboard.widget_config_value.widget_items_choice.converter'] = new \Oro\Bundle\DashboardBundle\Provider\Converters\WidgetItemsChoiceTypeConverter();
    }

    /**
     * Gets the 'oro_dashboard.widget_config_value.widget_title.converter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Provider\Converters\WidgetTitleConverter A Oro\Bundle\DashboardBundle\Provider\Converters\WidgetTitleConverter instance.
     */
    protected function getOroDashboard_WidgetConfigValue_WidgetTitle_ConverterService()
    {
        return $this->services['oro_dashboard.widget_config_value.widget_title.converter'] = new \Oro\Bundle\DashboardBundle\Provider\Converters\WidgetTitleConverter();
    }

    /**
     * Gets the 'oro_dashboard.widget_configs' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Model\WidgetConfigs A Oro\Bundle\DashboardBundle\Model\WidgetConfigs instance.
     */
    protected function getOroDashboard_WidgetConfigsService()
    {
        $this->services['oro_dashboard.widget_configs'] = $instance = new \Oro\Bundle\DashboardBundle\Model\WidgetConfigs($this->get('oro_dashboard.config_provider'), $this->get('oro_security.security_facade'), $this->get('oro_dashboard.config_resolver'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_dashboard.widget_config_value.provider'), $this->get('translator'), $this->get('debug.event_dispatcher'));

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_dataaudit.audit.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroDataaudit_Audit_Manager_ApiService()
    {
        $this->services['oro_dataaudit.audit.manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\DataAuditBundle\\Entity\\Audit', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_dataaudit.dataaudit_grid_service' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataAuditBundle\EventListener\AuditGridListener A Oro\Bundle\DataAuditBundle\EventListener\AuditGridListener instance.
     */
    protected function getOroDataaudit_DataauditGridServiceService()
    {
        return $this->services['oro_dataaudit.dataaudit_grid_service'] = new \Oro\Bundle\DataAuditBundle\EventListener\AuditGridListener($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_dataaudit.event_listener.dataaudit_history_grid_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataAuditBundle\EventListener\AuditHistoryGridListener A Oro\Bundle\DataAuditBundle\EventListener\AuditHistoryGridListener instance.
     */
    protected function getOroDataaudit_EventListener_DataauditHistoryGridListenerService()
    {
        return $this->services['oro_dataaudit.event_listener.dataaudit_history_grid_listener'] = new \Oro\Bundle\DataAuditBundle\EventListener\AuditHistoryGridListener(array(0 => 'objectClass', 1 => 'objectId'));
    }

    /**
     * Gets the 'oro_dataaudit.event_listener.segment_condition_builder_options_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataAuditBundle\EventListener\SegmentConditionBuilderOptionsListener A Oro\Bundle\DataAuditBundle\EventListener\SegmentConditionBuilderOptionsListener instance.
     */
    protected function getOroDataaudit_EventListener_SegmentConditionBuilderOptionsListenerService()
    {
        return $this->services['oro_dataaudit.event_listener.segment_condition_builder_options_listener'] = new \Oro\Bundle\DataAuditBundle\EventListener\SegmentConditionBuilderOptionsListener();
    }

    /**
     * Gets the 'oro_dataaudit.event_listener.segment_widget_options_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataAuditBundle\EventListener\SegmentWidgetOptionsListener A Oro\Bundle\DataAuditBundle\EventListener\SegmentWidgetOptionsListener instance.
     */
    protected function getOroDataaudit_EventListener_SegmentWidgetOptionsListenerService()
    {
        $this->services['oro_dataaudit.event_listener.segment_widget_options_listener'] = $instance = new \Oro\Bundle\DataAuditBundle\EventListener\SegmentWidgetOptionsListener($this->get('http_kernel'));

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_dataaudit.filter.audit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataAuditBundle\Filter\AuditFilter A Oro\Bundle\DataAuditBundle\Filter\AuditFilter instance.
     */
    protected function getOroDataaudit_Filter_AuditService()
    {
        return $this->services['oro_dataaudit.filter.audit'] = new \Oro\Bundle\DataAuditBundle\Filter\AuditFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'), $this->get('oro_query_designer.query_designer.manager'));
    }

    /**
     * Gets the 'oro_dataaudit.form.type.filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataAuditBundle\Form\Type\FilterType A Oro\Bundle\DataAuditBundle\Form\Type\FilterType instance.
     */
    protected function getOroDataaudit_Form_Type_FilterService()
    {
        return $this->services['oro_dataaudit.form.type.filter'] = new \Oro\Bundle\DataAuditBundle\Form\Type\FilterType();
    }

    /**
     * Gets the 'oro_dataaudit.listener.deprecated_audit_data_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\DataAuditBundle\EventListener\DeprecatedAuditDataListener A Oro\Bundle\DataAuditBundle\EventListener\DeprecatedAuditDataListener instance.
     */
    public function getOroDataaudit_Listener_DeprecatedAuditDataListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_dataaudit.listener.deprecated_audit_data_listener'] = new OroBundleDataAuditBundleEventListenerDeprecatedAuditDataListener_000000002e47ec0800000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroDataaudit_Listener_DeprecatedAuditDataListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\DataAuditBundle\EventListener\DeprecatedAuditDataListener();
    }

    /**
     * Gets the 'oro_dataaudit.listener.entity_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\DataAuditBundle\EventListener\EntityListener A Oro\Bundle\DataAuditBundle\EventListener\EntityListener instance.
     */
    public function getOroDataaudit_Listener_EntityListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_dataaudit.listener.entity_listener'] = new OroBundleDataAuditBundleEventListenerEntityListener_000000002e47ec0e00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroDataaudit_Listener_EntityListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\DataAuditBundle\EventListener\EntityListener($this->get('oro_dataaudit.loggable.loggable_manager'), new \Oro\Bundle\DataAuditBundle\Metadata\ExtendMetadataFactory(new \Oro\Bundle\DataAuditBundle\Metadata\Driver\AnnotationDriver($this->get('annotation_reader'))));
    }

    /**
     * Gets the 'oro_dataaudit.listener.kernel_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataAuditBundle\EventListener\KernelListener A Oro\Bundle\DataAuditBundle\EventListener\KernelListener instance.
     */
    protected function getOroDataaudit_Listener_KernelListenerService()
    {
        return $this->services['oro_dataaudit.listener.kernel_listener'] = new \Oro\Bundle\DataAuditBundle\EventListener\KernelListener($this->get('oro_dataaudit.loggable.loggable_manager'), $this->get('security.context'));
    }

    /**
     * Gets the 'oro_dataaudit.loggable.audit_entity_mapper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataAuditBundle\Loggable\AuditEntityMapper A Oro\Bundle\DataAuditBundle\Loggable\AuditEntityMapper instance.
     */
    protected function getOroDataaudit_Loggable_AuditEntityMapperService()
    {
        $this->services['oro_dataaudit.loggable.audit_entity_mapper'] = $instance = new \Oro\Bundle\DataAuditBundle\Loggable\AuditEntityMapper();

        $instance->addAuditEntryClass('Oro\\Bundle\\UserBundle\\Entity\\User', 'Oro\\Bundle\\DataAuditBundle\\Entity\\Audit');
        $instance->addAuditEntryFieldClass('Oro\\Bundle\\UserBundle\\Entity\\User', 'Oro\\Bundle\\DataAuditBundle\\Entity\\AuditField');

        return $instance;
    }

    /**
     * Gets the 'oro_dataaudit.loggable.loggable_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataAuditBundle\Loggable\LoggableManager A Oro\Bundle\DataAuditBundle\Loggable\LoggableManager instance.
     */
    protected function getOroDataaudit_Loggable_LoggableManagerService()
    {
        return $this->services['oro_dataaudit.loggable.loggable_manager'] = new \Oro\Bundle\DataAuditBundle\Loggable\LoggableManager('Oro\\Bundle\\DataAuditBundle\\Entity\\Audit', 'Oro\\Bundle\\DataAuditBundle\\Entity\\AuditField', $this->get('oro_entity_config.provider.dataaudit'), $this->get('security.context.link'), $this->get('oro_dataaudit.loggable.audit_entity_mapper'));
    }

    /**
     * Gets the 'oro_dataaudit.migration.extension.audit_field' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataAuditBundle\Migration\Extension\AuditFieldExtension A Oro\Bundle\DataAuditBundle\Migration\Extension\AuditFieldExtension instance.
     */
    protected function getOroDataaudit_Migration_Extension_AuditFieldService()
    {
        return $this->services['oro_dataaudit.migration.extension.audit_field'] = new \Oro\Bundle\DataAuditBundle\Migration\Extension\AuditFieldExtension();
    }

    /**
     * Gets the 'oro_dataaudit.placeholder.filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataAuditBundle\Placeholder\AuditableFilter A Oro\Bundle\DataAuditBundle\Placeholder\AuditableFilter instance.
     */
    protected function getOroDataaudit_Placeholder_FilterService()
    {
        return $this->services['oro_dataaudit.placeholder.filter'] = new \Oro\Bundle\DataAuditBundle\Placeholder\AuditableFilter($this->get('oro_entity_config.provider.dataaudit'));
    }

    /**
     * Gets the 'oro_datagrid.configuration.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Provider\ConfigurationProvider A Oro\Bundle\DataGridBundle\Provider\ConfigurationProvider instance.
     */
    protected function getOroDatagrid_Configuration_ProviderService()
    {
        return $this->services['oro_datagrid.configuration.provider'] = new \Oro\Bundle\DataGridBundle\Provider\ConfigurationProvider(array('business-unit-grid' => array('options' => array('entityHint' => 'business unit', 'skip_acl_check' => true, 'entity_pagination' => true), 'source' => array('acl_resource' => 'oro_business_unit_view', 'type' => 'orm', 'query' => array('select' => array(0 => 'u.id', 1 => 'u.name', 2 => 'u.email', 3 => 'u.phone', 4 => 'u.createdAt', 5 => 'owner.name as ownerName'), 'from' => array(0 => array('table' => 'OroOrganizationBundle:BusinessUnit', 'alias' => 'u')), 'join' => array('left' => array('owner' => array('join' => 'u.owner', 'alias' => 'owner'))))), 'columns' => array('name' => array('label' => 'oro.organization.businessunit.name.label'), 'email' => array('label' => 'oro.organization.businessunit.email.label'), 'phone' => array('label' => 'oro.organization.businessunit.phone.label', 'frontend_type' => 'phone'), 'ownerName' => array('label' => 'oro.organization.businessunit.owner.label'), 'createdAt' => array('label' => 'oro.ui.created_at', 'frontend_type' => 'datetime')), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_business_unit_update', 'params' => array(0 => 'id')), 'view_link' => array('type' => 'url', 'route' => 'oro_business_unit_view', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_businessunit', 'params' => array(0 => 'id'))), 'actions' => array('view' => array('type' => 'navigate', 'label' => 'oro.grid.action.view', 'link' => 'view_link', 'icon' => 'eye-open', 'acl_resource' => 'oro_business_unit_view', 'rowAction' => true), 'update' => array('type' => 'navigate', 'label' => 'oro.grid.action.update', 'link' => 'update_link', 'icon' => 'edit', 'acl_resource' => 'oro_business_unit_update'), 'delete' => array('type' => 'delete', 'label' => 'oro.grid.action.delete', 'link' => 'delete_link', 'icon' => 'trash', 'acl_resource' => 'oro_business_unit_delete')), 'sorters' => array('columns' => array('name' => array('data_name' => 'u.name'), 'email' => array('data_name' => 'u.email'), 'phone' => array('data_name' => 'u.phone'), 'ownerName' => array('data_name' => 'owner.name'), 'createdAt' => array('data_name' => 'u.createdAt')), 'default' => array('name' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('name' => array('type' => 'string', 'data_name' => 'u.name'), 'email' => array('type' => 'string', 'data_name' => 'u.email'), 'phone' => array('type' => 'string', 'data_name' => 'u.phone'), 'ownerName' => array('type' => 'choice', 'data_name' => 'ownerName', 'options' => array('field_options' => array('choices' => '@oro_organization.provider.business_units_grid->getOwnerChoices', 'translatable_options' => false))), 'createdAt' => array('type' => 'datetime', 'data_name' => 'u.createdAt')))), 'bu-update-users-grid' => array('extends' => 'user-relation-grid', 'source' => array('acl_resource' => 'oro_business_unit_update', 'query' => array('select' => array(0 => '(CASE WHEN (:business_unit_id IS NOT NULL) THEN   CASE WHEN (:business_unit_id MEMBER OF u.businessUnits OR u.id IN (:data_in)) AND u.id NOT IN (:data_not_in)   THEN true ELSE false END ELSE   CASE WHEN u.id IN (:data_in) AND u.id NOT IN (:data_not_in)   THEN true ELSE false END END) as hasCurrentBusinessUnit')), 'bind_parameters' => array(0 => array('name' => 'business_unit_id', 'default' => NULL))), 'columns' => array('hasCurrentBusinessUnit' => array('label' => 'oro.business_unit.datagrid.has_business_unit', 'editable' => true, 'frontend_type' => 'boolean'), 'firstName' => array('label' => 'oro.user.first_name.label'), 'lastName' => array('label' => 'oro.user.last_name.label'), 'username' => array('label' => 'oro.user.username.label'), 'email' => array('label' => 'oro.user.email.label')), 'filters' => array('columns' => array('hasCurrentBusinessUnit' => array('type' => 'boolean', 'data_name' => 'hasCurrentBusinessUnit'), 'firstName' => array('type' => 'string', 'data_name' => 'u.firstName'), 'lastName' => array('type' => 'string', 'data_name' => 'u.lastName'), 'username' => array('type' => 'string', 'data_name' => 'u.username'), 'email' => array('type' => 'string', 'data_name' => 'u.email'))), 'sorters' => array('columns' => array('hasCurrentBusinessUnit' => array('data_name' => 'hasCurrentBusinessUnit')), 'default' => array('hasCurrentBusinessUnit' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC', 'lastName' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'options' => array('entityHint' => 'user', 'rowSelection' => array('dataField' => 'id', 'columnName' => 'hasCurrentBusinessUnit', 'selectors' => array('included' => '#businessUnitAppendUsers', 'excluded' => '#businessUnitRemoveUsers')))), 'bu-view-users-grid' => array('extends' => 'user-relation-grid', 'options' => array('entityHint' => 'user'), 'source' => array('acl_resource' => 'oro_business_unit_view', 'query' => array('where' => array('and' => array(0 => ':business_unit_id MEMBER OF u.businessUnits'))), 'bind_parameters' => array(0 => 'business_unit_id')), 'columns' => array('firstName' => array('label' => 'oro.user.first_name.label'), 'lastName' => array('label' => 'oro.user.last_name.label'), 'username' => array('label' => 'oro.user.username.label'), 'email' => array('label' => 'oro.user.email.label')), 'sorters' => array('default' => array('lastName' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('firstName' => array('type' => 'string', 'data_name' => 'u.firstName'), 'lastName' => array('type' => 'string', 'data_name' => 'u.lastName'), 'username' => array('type' => 'string', 'data_name' => 'u.username'), 'email' => array('type' => 'string', 'data_name' => 'u.email')))), 'attachment-grid' => array('source' => array('type' => 'orm', 'query' => array('select' => array(0 => 'attachment as att', 1 => 'attachment.id as id', 2 => 'attachment.comment as comment', 3 => 'file.originalFilename as originalFilename', 4 => 'file.fileSize as fileSize', 5 => 'file.createdAt as createdAt'), 'from' => array(0 => array('table' => 'OroAttachmentBundle:Attachment', 'alias' => 'attachment')), 'join' => array('left' => array(0 => array('join' => 'attachment.file', 'alias' => 'file'))), 'where' => array('and' => array(0 => 'entity.id = :entityId')))), 'columns' => array('originalFilename' => array('type' => 'twig', 'label' => 'oro.attachment.file.filename.label', 'frontend_type' => 'html', 'template' => 'OroAttachmentBundle:Attachment:Datagrid/Property/allachmentLink.html.twig'), 'fileSize' => array('label' => 'oro.attachment.file.file_size.label', 'type' => 'twig', 'frontend_type' => 'html', 'template' => 'OroAttachmentBundle:Attachment:Datagrid/Property/fileSize.html.twig'), 'createdAt' => array('label' => 'oro.ui.created_at', 'frontend_type' => 'datetime'), 'comment' => array('label' => 'oro.attachment.comment.label')), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_attachment_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_attachment', 'params' => array(0 => 'id'))), 'actions' => array('update' => array('type' => 'dialog', 'acl_resource' => 'oro_attachment_update', 'label' => 'oro.grid.action.update', 'icon' => 'edit', 'link' => 'update_link', 'widgetOptions' => array('reload-grid-name' => 'attachment-grid', 'options' => array('dialogOptions' => array('title' => 'Update attachment', 'width' => 550, 'allowMaximize' => false, 'allowMinimize' => false, 'modal' => true, 'maximizedHeightDecreaseBy' => 'minimize-bar'))), 'messages' => array('saved' => 'oro.attachment.action.saved')), 'delete' => array('type' => 'delete', 'acl_resource' => 'oro_attachment_delete', 'label' => 'oro.grid.action.delete', 'icon' => 'trash', 'link' => 'delete_link'))), 'email-auto-response-rules' => array('source' => array('type' => 'orm', 'acl_resource' => 'oro_email_autoresponserule_view', 'query' => array('select' => array(0 => 'r.id', 1 => 'r.name', 2 => 'r.active'), 'from' => array(0 => array('table' => 'OroEmailBundle:AutoResponseRule', 'alias' => 'r')), 'where' => array('or' => array(0 => 'r.mailbox = :mailbox', 1 => 'r.id IN (:ids)'))), 'bind_parameters' => array('mailbox' => array('default' => 0), 'ids' => array('default' => array()))), 'columns' => array('name' => array('label' => 'oro.email.autoresponserule.name.label'), 'active' => array('label' => 'oro.email.autoresponserule.status.label', 'type' => 'twig', 'frontend_type' => 'html', 'template' => 'OroEmailBundle:AutoResponseRule:Datagrid/Property/active.html.twig')), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_email_autoresponserule_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_autoresponserule', 'params' => array(0 => 'id'))), 'sorters' => array('columns' => array('name' => array('data_name' => 'r.name'), 'active' => array('data_name' => 'r.active'))), 'actions' => array('update' => array('type' => 'dialog', 'acl_resource' => 'oro_email_autoresponserule_update', 'label' => 'oro.grid.action.update', 'icon' => 'edit', 'link' => 'update_link', 'rowAction' => true, 'widgetOptions' => array('reload-grid-name' => 'email-auto-response-rules', 'options' => array('dialogOptions' => array('title' => '@translator->trans(oro.email.autoresponserule.action.update.title)', 'allowMaximize' => false, 'allowMinimize' => false, 'modal' => true, 'dblclick' => 'maximize', 'maximizedHeightDecreaseBy' => 'minimize-bar', 'width' => 700)))), 'delete' => array('type' => 'delete', 'acl_resource' => 'oro_email_autoresponserule_delete', 'label' => 'oro.grid.action.delete', 'icon' => 'trash', 'link' => 'delete_link')), 'mass_actions' => array('delete' => array('type' => 'delete', 'entity_name' => 'Oro\\Bundle\\EmailBundle\\Entity\\AutoResponseRule', 'data_identifier' => 'r.id', 'acl_resource' => 'oro_email_autoresponserule_update', 'label' => 'oro.grid.action.delete', 'icon' => 'trash')), 'options' => array('toolbarOptions' => array('hide' => true), 'requireJSModules' => array(0 => 'oroemail/js/datagrid/auto-response-rules-extension'))), 'base-email-grid' => array('source' => array('type' => 'orm', 'query' => array('select' => array(0 => 'partial eu.{id, email, folder}', 1 => 'CASE WHEN eu.seen = true THEN 0 ELSE 1 END as is_new'), 'from' => array(0 => array('table' => 'OroEmailBundle:EmailUser', 'alias' => 'eu')), 'join' => array('left' => array(0 => array('join' => 'eu.email', 'alias' => 'e'), 1 => array('join' => 'eu.mailboxOwner', 'alias' => 'mb'), 2 => array('join' => 'e.thread', 'alias' => 'thread'), 3 => array('join' => 'e.recipients', 'alias' => 'recipients'), 4 => array('join' => 'e.recipients', 'alias' => 'r_to', 'conditionType' => 'WITH', 'condition' => 'r_to.type = \'to\''), 5 => array('join' => 'e.recipients', 'alias' => 'r_cc_bcc', 'conditionType' => 'WITH', 'condition' => 'r_cc_bcc.type = \'cc\' OR r_cc_bcc.type = \'bcc\''), 6 => array('join' => 'eu.folder', 'alias' => 'f'), 7 => array('join' => 'f.origin', 'alias' => 'o'))), 'where' => array('and' => array(0 => 'o.isActive = true')), 'groupBy' => 'eu.id, e.sentAt')), 'columns' => array('contacts' => array('data_name' => 'email.contacts', 'type' => 'twig', 'label' => 'oro.email.contact.label', 'frontend_type' => 'html', 'template' => 'OroEmailBundle:Email:Datagrid/Property/contacts.html.twig'), 'subject' => array('data_name' => 'email.subject', 'type' => 'twig', 'label' => 'oro.email.subject.label', 'frontend_type' => 'html', 'template' => 'OroEmailBundle:Email:Datagrid/Property/subject.html.twig'), 'attachments' => array('data_name' => 'email.attachments', 'type' => 'twig', 'label' => NULL, 'frontend_type' => 'html', 'template' => 'OroEmailBundle:Email:Datagrid/Property/attachments.html.twig'), 'sentAt' => array('data_name' => 'email.sentAt', 'type' => 'twig', 'label' => 'oro.email.date.label', 'frontend_type' => 'html', 'template' => 'OroEmailBundle:Email:Datagrid/Property/date.html.twig')), 'properties' => array('id' => NULL), 'sorters' => array('columns' => array('subject' => array('data_name' => 'e.subject'), 'sentAt' => array('data_name' => 'e.sentAt')), 'default' => array('sentAt' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC')), 'options' => array('entityHint' => 'email', 'skip_acl_check' => true)), 'simplified-email-grid' => array('extends' => 'base-email-grid', 'options' => array('toolbarOptions' => array('turnOffToolbarRecordsNumber' => 5, 'addResetAction' => false))), 'email-grid' => array('extends' => 'base-email-grid', 'source' => array('query' => array('where' => array('and' => array(0 => 'e.head = true')))), 'filters' => array('columns' => array('subject' => array('type' => 'string', 'data_name' => 'e.subject'), 'to' => array('type' => 'string', 'data_name' => 'r_to.name', 'label' => 'oro.email.to.label'), 'ccBcc' => array('type' => 'string', 'data_name' => 'r_cc_bcc.name', 'label' => 'oro.email.cc_bcc.label'), 'date' => array('type' => 'datetime', 'data_name' => 'e.sentAt', 'label' => 'oro.email.date_time.label'), 'folder' => array('label' => 'oro.email.message_type.label', 'type' => 'multiselect-messagetype', 'options' => array('field_options' => array('multiple' => true, 'choices' => array('inbox' => 'oro.email.folder_type.inbox', 'sent' => 'oro.email.folder_type.sent'))), 'data_name' => 'f.type'), 'folders' => array('type' => 'multiselect-originfolder', 'data_name' => 'f.id', 'label' => 'oro.email.folders.label', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@oro_email.datagrid.origin_folder.provider->getListTypeChoices'))), 'is_new' => array('label' => 'oro.email.status.label', 'type' => 'boolean', 'options' => array('field_options' => array('choices' => array(2 => 'oro.email.status.unread.label', 1 => 'oro.email.status.read.label'))), 'data_name' => 'eu.seen'), 'mailbox' => array('label' => 'oro.email.mailbox.entity_label', 'data_name' => 'f.origin', 'type' => 'choice', 'options' => array('field_options' => array('required' => false, 'choices' => '@oro_email.mailbox_choice_list->getChoiceList'))))), 'views_list' => '@oro_email.emailfolder.datagrid_view_list'), 'activity-email-grid' => array('extends' => 'email-grid'), 'user-email-grid' => array('extends' => 'email-grid', 'properties' => array('id' => NULL, 'email.id' => NULL, 'view_thread_link' => array('type' => 'url', 'route' => 'oro_email_thread_view', 'params' => array('id' => 'email.id')), 'toggle_seen_link' => array('type' => 'url', 'route' => 'oro_email_toggle_seen', 'params' => array('id' => 'id')), 'row_class_name' => array('type' => 'callback', 'className' => 'email-row-is-readed', 'callable' => '@oro_email.helper.datagrid.emails->getReadedRowClosure')), 'actions' => array('view_thread' => array('type' => 'navigate', 'label' => 'oro.grid.action.view', 'link' => 'view_thread_link', 'icon' => 'eye-open', 'rowAction' => true), 'mark_as_read' => array('type' => 'ajax', 'label' => 'oro.email.datagrid.emails.action.mark_as_read', 'link' => 'toggle_seen_link', 'icon' => 'check', 'defaultMessages' => array('success' => 'oro.email.action.success_mark_read', 'error' => 'oro.email.action.error')), 'mark_as_unread' => array('type' => 'ajax', 'label' => 'oro.email.datagrid.emails.action.mark_as_unread', 'link' => 'toggle_seen_link', 'icon' => 'minus', 'defaultMessages' => array('success' => 'oro.email.action.success_mark_unread', 'error' => 'oro.email.action.error'))), 'action_configuration' => '@oro_email.helper.datagrid.emails->getActionConfigurationClosure', 'mass_actions' => array('emailmarkread' => array('type' => 'emailmarkread', 'entity_name' => 'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser', 'data_identifier' => 'eu.id', 'label' => 'oro.email.datagrid.emails.action.mark_as_read', 'icon' => 'check'), 'emailmarkunread' => array('type' => 'emailmarkunread', 'entity_name' => 'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser', 'data_identifier' => 'eu.id', 'label' => 'oro.email.datagrid.emails.action.mark_as_unread', 'icon' => 'minus'))), 'dashboard-recent-emails-grid' => array('source' => array('type' => 'orm', 'query' => array('select' => array(0 => 'partial e.{ id, subject, sentAt }', 1 => 'partial eu.{ id, receivedAt, email }', 2 => 'a', 3 => 'CASE WHEN eu.seen = true THEN 0 ELSE 1 END as is_new'), 'from' => array(0 => array('table' => 'OroEmailBundle:EmailUser', 'alias' => 'eu')), 'join' => array('left' => array(0 => array('join' => 'eu.email', 'alias' => 'e')), 'inner' => array(0 => array('join' => 'eu.folder', 'alias' => 'f'), 1 => array('join' => 'f.origin', 'alias' => 'o'), 2 => array('join' => 'e.fromEmailAddress', 'alias' => 'a'))), 'where' => array('and' => array(0 => 'o.id IN (:origin_ids)')))), 'properties' => array('id' => NULL, 'row_class_name' => array('type' => 'callback', 'className' => 'email-row-is-readed', 'callable' => '@oro_email.helper.datagrid.emails->getReadedRowClosure')), 'options' => array('entityHint' => 'email', 'toolbarOptions' => array('hide' => true, 'pageSize' => array('items' => array(0 => 10), 'default_per_page' => 10)))), 'dashboard-recent-emails-inbox-grid' => array('extends' => 'dashboard-recent-emails-grid', 'source' => array('query' => array('where' => array('and' => array(0 => 'f.type IN (\'Oro\\Bundle\\EmailBundle\\Model\\FolderType::INBOX\', \'Oro\\Bundle\\EmailBundle\\Model\\FolderType::OTHER\')')))), 'columns' => array('receivedAt' => array('type' => 'twig', 'label' => 'oro.email.received_at.label', 'frontend_type' => 'html', 'template' => 'OroEmailBundle:Email:Datagrid/Property/date_long.html.twig'), 'fromEmailExpression' => array('type' => 'twig', 'label' => 'oro.email.from_name.label', 'frontend_type' => 'html', 'template' => 'OroEmailBundle:Email:Datagrid/Property/from.html.twig'), 'subject' => array('data_name' => 'email.subject', 'type' => 'twig', 'label' => 'oro.email.subject.label', 'frontend_type' => 'html', 'template' => 'OroEmailBundle:Email:Datagrid/Property/subject.html.twig')), 'sorters' => array('columns' => array('fromEmailExpression' => array('data_name' => 'fromEmailExpression'), 'receivedAt' => array('data_name' => 'eu.receivedAt')), 'default' => array('receivedAt' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC'))), 'dashboard-recent-emails-sent-grid' => array('extends' => 'dashboard-recent-emails-grid', 'source' => array('query' => array('where' => array('and' => array(0 => 'f.type = \'Oro\\Bundle\\EmailBundle\\Model\\FolderType::SENT\'')))), 'columns' => array('sentAt' => array('data_name' => 'email.sentAt', 'label' => 'oro.email.sent_at.label', 'frontend_type' => 'datetime'), 'recipients' => array('data_name' => 'email.recipients', 'type' => 'twig', 'label' => 'oro.email.recipients.label', 'frontend_type' => 'html', 'template' => 'OroEmailBundle:Email:Datagrid/Property/recipients.html.twig'), 'subject' => array('data_name' => 'email.subject', 'type' => 'twig', 'label' => 'oro.email.subject.label', 'frontend_type' => 'html', 'template' => 'OroEmailBundle:Email:Datagrid/Property/subject.html.twig')), 'sorters' => array('columns' => array('sentAt' => array('data_name' => 'e.sentAt')), 'default' => array('sentAt' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC'))), 'dashboard-recent-emails-new-grid' => array('extends' => 'dashboard-recent-emails-grid', 'source' => array('query' => array('where' => array('and' => array(0 => 'eu.seen = false')))), 'columns' => array('receivedAt' => array('type' => 'twig', 'label' => 'oro.email.received_at.label', 'frontend_type' => 'html', 'template' => 'OroEmailBundle:Email:Datagrid/Property/date_long.html.twig'), 'fromEmailExpression' => array('type' => 'twig', 'label' => 'oro.email.from_name.label', 'frontend_type' => 'html', 'template' => 'OroEmailBundle:Email:Datagrid/Property/from.html.twig'), 'subject' => array('data_name' => 'email.subject', 'type' => 'twig', 'label' => 'oro.email.subject.label', 'frontend_type' => 'html', 'template' => 'OroEmailBundle:Email:Datagrid/Property/subject.html.twig')), 'sorters' => array('columns' => array('fromEmailExpression' => array('data_name' => 'fromEmailExpression'), 'receivedAt' => array('data_name' => 'eu.receivedAt')), 'default' => array('receivedAt' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC'))), 'email-templates' => array('source' => array('type' => 'orm', 'acl_resource' => 'oro_email_emailtemplate_index', 'query' => array('select' => array(0 => 't.id', 1 => 't.entityName', 2 => 't.name', 3 => 't.type', 4 => 't.isSystem'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\EmailBundle\\Entity\\EmailTemplate', 'alias' => 't')), 'where' => array('and' => array(0 => 't.visible = true')))), 'columns' => array('entityName' => array('label' => 'oro.email.emailtemplate.entity_name.label', 'type' => 'twig', 'template' => 'OroEntityBundle:Datagrid:Property/entity.html.twig', 'frontend_type' => 'html', 'context' => array('entity_provider' => '@oro_entity.entity_provider')), 'name' => array('label' => 'oro.email.emailtemplate.name.label'), 'type' => array('frontend_type' => 'select', 'label' => 'oro.email.emailtemplate.type.label', 'choices' => '@oro_email.emailtemplate.datagrid_helper->getTypeChoices'), 'isSystem' => array('frontend_type' => 'boolean', 'label' => 'oro.email.emailtemplate.is_system.label')), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_email_emailtemplate_update', 'params' => array(0 => 'id')), 'clone_link' => array('type' => 'url', 'route' => 'oro_email_emailtemplate_clone', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_emailtemplate', 'params' => array(0 => 'id'))), 'filters' => array('columns' => array('entityName' => array('type' => 'choice', 'data_name' => 't.entityName', 'null_value' => '_empty_', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@oro_email.emailtemplate.datagrid_helper->getEntityNames', 'translatable_options' => false))), 'name' => array('type' => 'string', 'data_name' => 't.name'), 'type' => array('type' => 'choice', 'data_name' => 't.type', 'options' => array('field_options' => array('choices' => '@oro_email.emailtemplate.datagrid_helper->getTypeChoices'))), 'isSystem' => array('type' => 'boolean', 'data_name' => 't.isSystem'))), 'sorters' => array('columns' => array('name' => array('data_name' => 't.name'), 'type' => array('data_name' => 't.type'), 'isSystem' => array('data_name' => 't.isSystem'))), 'actions' => array('update' => array('type' => 'navigate', 'label' => 'oro.grid.action.update', 'link' => 'update_link', 'icon' => 'edit', 'acl_resource' => 'oro_email_emailtemplate_update', 'rowAction' => true), 'clone' => array('type' => 'navigate', 'label' => 'oro.grid.action.clone', 'link' => 'clone_link', 'icon' => 'copy', 'acl_resource' => 'oro_email_emailtemplate_create'), 'delete' => array('type' => 'delete', 'label' => 'oro.grid.action.delete', 'acl_resource' => 'oro_email_emailtemplate_delete', 'icon' => 'trash', 'link' => 'delete_link')), 'options' => array('entity_pagination' => true), 'action_configuration' => '@oro_email.emailtemplate.datagrid_helper->getActionConfigurationClosure', 'views_list' => '@oro_email.emailtemplate.datagrid_view_list'), 'base-mailboxes-grid' => array('source' => array('type' => 'orm', 'query' => array('select' => array(0 => 'm'), 'from' => array(0 => array('table' => 'OroEmailBundle:Mailbox', 'alias' => 'm')), 'join' => array('left' => array(0 => array('join' => 'm.processSettings', 'alias' => 'process'))))), 'columns' => array('email' => array('label' => 'oro.email.mailbox.email.label'), 'label' => array('label' => 'oro.email.mailbox.label.label'), 'imap' => array('label' => 'oro.imap.configuration.use_imap.label', 'type' => 'twig', 'frontend_type' => 'html', 'data_name' => 'origin', 'template' => 'OroEmailBundle:Mailbox:Datagrid/Property/origin.html.twig'), 'smtp' => array('label' => 'oro.imap.configuration.use_smtp.label', 'type' => 'twig', 'frontend_type' => 'html', 'data_name' => 'origin', 'template' => 'OroEmailBundle:Mailbox:Datagrid/Property/originSmtp.html.twig'), 'processing' => array('data_name' => 'processSettings', 'type' => 'twig', 'label' => 'oro.email.mailbox.process.label', 'frontend_type' => 'html', 'template' => 'OroEmailBundle:Mailbox:Datagrid/Property/processSettings.html.twig')), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_email_mailbox_update', 'params' => array('id' => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_email_mailbox_delete', 'params' => array('id' => 'id'))), 'options' => array('skip_acl_check' => true, 'toolbarOptions' => array('hide' => true)), 'actions' => array('update' => array('type' => 'navigate', 'label' => 'oro.grid.action.update', 'link' => 'update_link', 'icon' => 'edit', 'rowAction' => true), 'delete' => array('type' => 'delete', 'label' => 'oro.grid.action.delete', 'icon' => 'trash', 'link' => 'delete_link'))), 'users-grid' => array('extended_entity_name' => 'Oro\\Bundle\\UserBundle\\Entity\\User', 'options' => array('entityHint' => 'user', 'entity_pagination' => true), 'source' => array('acl_resource' => 'oro_user_user_view', 'type' => 'orm', 'query' => array('select' => array(0 => 'u.id', 1 => 'u.username', 2 => 'u.email', 3 => 'u.firstName', 4 => 'u.lastName', 5 => 'u.createdAt', 6 => 'u.updatedAt', 7 => 'u.enabled'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\UserBundle\\Entity\\User', 'alias' => 'u')))), 'columns' => array('username' => array('label' => 'oro.user.username.label'), 'email' => array('label' => 'oro.user.email.label'), 'firstName' => array('label' => 'oro.user.first_name.label'), 'lastName' => array('label' => 'oro.user.last_name.label'), 'createdAt' => array('label' => 'oro.ui.created_at', 'frontend_type' => 'datetime'), 'updatedAt' => array('label' => 'oro.ui.updated_at', 'frontend_type' => 'datetime'), 'enabled' => array('label' => 'oro.user.enabled.label', 'frontend_type' => 'select', 'choices' => array(0 => 'Inactive', 1 => 'Active'))), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_user_update', 'params' => array(0 => 'id')), 'view_link' => array('type' => 'url', 'route' => 'oro_user_view', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_user', 'params' => array(0 => 'id'))), 'sorters' => array('columns' => array('username' => array('data_name' => 'u.username'), 'email' => array('data_name' => 'u.email'), 'firstName' => array('data_name' => 'u.firstName'), 'lastName' => array('data_name' => 'u.lastName'), 'createdAt' => array('data_name' => 'u.createdAt'), 'updatedAt' => array('data_name' => 'u.updatedAt'), 'enabled' => array('data_name' => 'u.enabled')), 'default' => array('username' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('username' => array('type' => 'string', 'data_name' => 'u.username'), 'email' => array('type' => 'string', 'data_name' => 'u.email'), 'firstName' => array('type' => 'string', 'data_name' => 'u.firstName'), 'lastName' => array('type' => 'string', 'data_name' => 'u.lastName'), 'createdAt' => array('type' => 'datetime', 'data_name' => 'u.createdAt'), 'updatedAt' => array('type' => 'datetime', 'data_name' => 'u.updatedAt'), 'enabled' => array('type' => 'choice', 'data_name' => 'u.enabled', 'options' => array('field_options' => array('choices' => array(0 => 'Inactive', 1 => 'Active')))))), 'actions' => array('view' => array('type' => 'navigate', 'label' => 'oro.grid.action.view', 'link' => 'view_link', 'icon' => 'eye-open', 'acl_resource' => 'oro_user_user_view', 'rowAction' => true), 'update' => array('type' => 'navigate', 'label' => 'oro.grid.action.update', 'link' => 'update_link', 'icon' => 'edit', 'acl_resource' => 'oro_user_user_update'), 'delete' => array('type' => 'delete', 'label' => 'oro.grid.action.delete', 'link' => 'delete_link', 'icon' => 'trash', 'acl_resource' => 'oro_user_user_delete'))), 'groups-grid' => array('options' => array('entityHint' => 'group', 'entity_pagination' => true), 'source' => array('acl_resource' => 'oro_user_group_view', 'type' => 'orm', 'query' => array('select' => array(0 => 'g.id', 1 => 'g.name'), 'from' => array(0 => array('table' => 'OroUserBundle:Group', 'alias' => 'g')))), 'columns' => array('name' => array('label' => 'oro.user.group.name.label')), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_user_group_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_group', 'params' => array(0 => 'id'))), 'actions' => array('update' => array('type' => 'navigate', 'label' => 'oro.grid.action.update', 'link' => 'update_link', 'icon' => 'edit', 'acl_resource' => 'oro_user_group_update', 'rowAction' => true), 'delete' => array('type' => 'delete', 'label' => 'oro.grid.action.delete', 'link' => 'delete_link', 'icon' => 'trash', 'acl_resource' => 'oro_user_group_delete')), 'sorters' => array('columns' => array('name' => array('data_name' => 'g.name')), 'default' => array('name' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('name' => array('type' => 'string', 'data_name' => 'g.name')))), 'roles-grid' => array('extended_entity_name' => 'Oro\\Bundle\\UserBundle\\Entity\\Role', 'options' => array('entityHint' => 'role', 'entity_pagination' => true), 'source' => array('acl_resource' => 'oro_user_role_view', 'type' => 'orm', 'query' => array('select' => array(0 => 'r.id', 1 => 'r.role', 2 => 'r.label'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\UserBundle\\Entity\\Role', 'alias' => 'r')), 'where' => array('and' => array(0 => 'r.role <> \'Oro\\Bundle\\UserBundle\\Entity\\User::ROLE_ANONYMOUS\'')))), 'columns' => array('label' => array('label' => 'oro.user.role.label.label')), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_user_role_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_role', 'params' => array(0 => 'id'))), 'actions' => array('update' => array('type' => 'navigate', 'label' => 'oro.grid.action.update', 'link' => 'update_link', 'icon' => 'edit', 'acl_resource' => 'oro_user_role_update', 'rowAction' => true), 'delete' => array('type' => 'delete', 'label' => 'oro.grid.action.delete', 'link' => 'delete_link', 'icon' => 'trash', 'acl_resource' => 'oro_user_role_delete')), 'sorters' => array('columns' => array('label' => array('data_name' => 'r.label')), 'default' => array('label' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('label' => array('type' => 'string', 'data_name' => 'r.label')))), 'user-relation-grid' => array('source' => array('type' => 'orm', 'query' => array('select' => array(0 => 'u.id', 1 => 'u.username', 2 => 'u.email', 3 => 'u.firstName', 4 => 'u.lastName'), 'from' => array(0 => array('table' => 'OroUserBundle:User', 'alias' => 'u')))), 'columns' => array(), 'properties' => array('id' => NULL), 'sorters' => array('columns' => array('username' => array('data_name' => 'u.username'), 'email' => array('data_name' => 'u.email'), 'firstName' => array('data_name' => 'u.firstName'), 'lastName' => array('data_name' => 'u.lastName')), 'default' => array('id' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array()), 'role-users-grid' => array('extends' => 'user-relation-grid', 'source' => array('acl_resource' => 'oro_user_role_update', 'query' => array('select' => array(0 => '(CASE WHEN (:role_id IS NOT NULL) THEN   CASE WHEN (:role_id MEMBER OF u.roles OR u.id IN (:data_in)) AND u.id NOT IN (:data_not_in)   THEN true ELSE false END ELSE   CASE WHEN u.id IN (:data_in) AND u.id NOT IN (:data_not_in)   THEN true ELSE false END END) as has_role')), 'bind_parameters' => array(0 => array('name' => 'role_id', 'default' => NULL))), 'columns' => array('has_role' => array('label' => 'oro.user.role.has_role.label', 'editable' => true, 'frontend_type' => 'boolean'), 'firstName' => array('label' => 'oro.user.first_name.label'), 'lastName' => array('label' => 'oro.user.last_name.label'), 'username' => array('label' => 'oro.user.username.label'), 'email' => array('label' => 'oro.user.email.label')), 'filters' => array('columns' => array('has_role' => array('type' => 'boolean', 'data_name' => 'has_role'), 'firstName' => array('type' => 'string', 'data_name' => 'u.firstName'), 'lastName' => array('type' => 'string', 'data_name' => 'u.lastName'), 'username' => array('type' => 'string', 'data_name' => 'u.username'), 'email' => array('type' => 'string', 'data_name' => 'u.email'))), 'sorters' => array('multiple_sorting' => true, 'columns' => array('has_role' => array('data_name' => 'has_role')), 'default' => array('has_role' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC', 'lastName' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'options' => array('rowSelection' => array('dataField' => 'id', 'columnName' => 'has_role', 'selectors' => array('included' => '#roleAppendUsers', 'excluded' => '#roleRemoveUsers')))), 'group-users-grid' => array('extends' => 'user-relation-grid', 'source' => array('acl_resource' => 'oro_user_group_update', 'query' => array('select' => array(0 => '(CASE WHEN (:group_id IS NOT NULL) THEN   CASE WHEN (:group_id MEMBER OF u.groups OR u.id IN (:data_in)) AND u.id NOT IN (:data_not_in)   THEN true ELSE false END ELSE   CASE WHEN u.id IN (:data_in) AND u.id NOT IN (:data_not_in)   THEN true ELSE false END END) as has_group')), 'bind_parameters' => array(0 => array('name' => 'group_id', 'default' => NULL))), 'columns' => array('has_group' => array('label' => 'oro.user.group.has_group.label', 'editable' => true, 'frontend_type' => 'boolean'), 'firstName' => array('label' => 'oro.user.first_name.label'), 'lastName' => array('label' => 'oro.user.last_name.label'), 'username' => array('label' => 'oro.user.username.label'), 'email' => array('label' => 'oro.user.email.label')), 'filters' => array('columns' => array('has_group' => array('type' => 'boolean', 'data_name' => 'has_group'), 'firstName' => array('type' => 'string', 'data_name' => 'u.firstName'), 'lastName' => array('type' => 'string', 'data_name' => 'u.lastName'), 'username' => array('type' => 'string', 'data_name' => 'u.username'), 'email' => array('type' => 'string', 'data_name' => 'u.email'))), 'sorters' => array('multiple_sorting' => true, 'columns' => array('has_group' => array('data_name' => 'has_group')), 'default' => array('has_group' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC', 'lastName' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'options' => array('rowSelection' => array('dataField' => 'id', 'columnName' => 'has_group', 'selectors' => array('included' => '#groupAppendUsers', 'excluded' => '#groupRemoveUsers')))), 'users-select-grid' => array('extended_entity_name' => 'Oro\\Bundle\\UserBundle\\Entity\\User', 'options' => array('entityHint' => 'user'), 'source' => array('acl_resource' => 'oro_user_user_view', 'type' => 'orm', 'query' => array('select' => array(0 => 'u.id', 1 => 'u.username', 2 => 'u.email', 3 => 'u.firstName', 4 => 'u.lastName', 5 => 'u.enabled'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\UserBundle\\Entity\\User', 'alias' => 'u')))), 'columns' => array('username' => array('label' => 'oro.user.username.label'), 'email' => array('label' => 'oro.user.email.label'), 'firstName' => array('label' => 'oro.user.first_name.label'), 'lastName' => array('label' => 'oro.user.last_name.label'), 'enabled' => array('label' => 'oro.user.enabled.label', 'frontend_type' => 'select', 'choices' => array(0 => 'Inactive', 1 => 'Active'))), 'properties' => array('id' => NULL), 'sorters' => array('columns' => array('username' => array('data_name' => 'u.username'), 'email' => array('data_name' => 'u.email'), 'firstName' => array('data_name' => 'u.firstName'), 'lastName' => array('data_name' => 'u.lastName'), 'enabled' => array('data_name' => 'u.enabled')), 'default' => array('username' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('username' => array('type' => 'string', 'data_name' => 'u.username'), 'email' => array('type' => 'string', 'data_name' => 'u.email'), 'firstName' => array('type' => 'string', 'data_name' => 'u.firstName'), 'lastName' => array('type' => 'string', 'data_name' => 'u.lastName'), 'enabled' => array('type' => 'choice', 'data_name' => 'u.enabled', 'options' => array('field_options' => array('choices' => array(0 => 'Inactive', 1 => 'Active'))))))), 'owner-users-select-grid' => array('extended_entity_name' => 'Oro\\Bundle\\UserBundle\\Entity\\User', 'options' => array('entityHint' => 'user', 'skip_acl_check' => true), 'source' => array('acl_resource' => 'oro_user_user_view', 'type' => 'orm', 'query' => array('select' => array(0 => 'u.id', 1 => 'u.username', 2 => 'u.firstName', 3 => 'u.lastName', 4 => 'u.enabled'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\UserBundle\\Entity\\User', 'alias' => 'u')))), 'columns' => array('username' => array('label' => 'oro.user.username.label'), 'firstName' => array('label' => 'oro.user.first_name.label'), 'lastName' => array('label' => 'oro.user.last_name.label'), 'enabled' => array('label' => 'oro.user.enabled.label', 'frontend_type' => 'select', 'choices' => array(0 => 'Inactive', 1 => 'Active'))), 'properties' => array('id' => NULL), 'sorters' => array('columns' => array('username' => array('data_name' => 'u.username'), 'firstName' => array('data_name' => 'u.firstName'), 'lastName' => array('data_name' => 'u.lastName'), 'enabled' => array('data_name' => 'u.enabled')), 'default' => array('username' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('username' => array('type' => 'string', 'data_name' => 'u.username'), 'firstName' => array('type' => 'string', 'data_name' => 'u.firstName'), 'lastName' => array('type' => 'string', 'data_name' => 'u.lastName'), 'enabled' => array('type' => 'choice', 'data_name' => 'u.enabled', 'options' => array('field_options' => array('choices' => array(0 => 'Inactive', 1 => 'Active'))))))), 'users-select-grid-exclude-owner' => array('extends' => 'users-select-grid', 'source' => array('query' => array('where' => array('and' => array(0 => 'u.id != @oro_security.security_facade->getLoggedUserId'))))), 'users-for-context-grid' => array('extended_entity_name' => 'Oro\\Bundle\\UserBundle\\Entity\\User', 'options' => array('entityHint' => 'user', 'entity_pagination' => true, 'toolbarOptions' => array('pageSize' => array('default_per_page' => 10)), 'routerEnabled' => false), 'source' => array('acl_resource' => 'oro_user_user_view', 'type' => 'orm', 'query' => array('select' => array(0 => 'u.id', 1 => 'u.username', 2 => 'u.email', 3 => 'u.firstName', 4 => 'u.lastName', 5 => 'u.enabled'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\UserBundle\\Entity\\User', 'alias' => 'u')), 'where' => array('and' => array(0 => 'u.id != @oro_security.security_facade->getLoggedUserId')))), 'columns' => array('id' => array('label' => 'oro.user.id.label'), 'username' => array('label' => 'oro.user.username.label'), 'email' => array('label' => 'oro.user.email.label'), 'firstName' => array('label' => 'oro.user.first_name.label'), 'lastName' => array('label' => 'oro.user.last_name.label'), 'enabled' => array('label' => 'oro.user.enabled.label', 'frontend_type' => 'select', 'choices' => array(0 => 'Inactive', 1 => 'Active'))), 'sorters' => array('columns' => array('username' => array('data_name' => 'u.username'), 'email' => array('data_name' => 'u.email'), 'firstName' => array('data_name' => 'u.firstName'), 'lastName' => array('data_name' => 'u.lastName'), 'enabled' => array('data_name' => 'u.enabled')), 'default' => array('username' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('username' => array('type' => 'string', 'data_name' => 'u.username'), 'email' => array('type' => 'string', 'data_name' => 'u.email'), 'firstName' => array('type' => 'string', 'data_name' => 'u.firstName'), 'lastName' => array('type' => 'string', 'data_name' => 'u.lastName'), 'enabled' => array('type' => 'choice', 'data_name' => 'u.enabled', 'options' => array('field_options' => array('choices' => array(0 => 'Inactive', 1 => 'Active'))))))), 'custom-entity-grid' => array('options' => array('base_datagrid_class' => 'Oro\\Bundle\\EntityBundle\\Grid\\CustomEntityDatagrid', 'entityHint' => 'entity', 'export' => true, 'entity_pagination' => true), 'source' => array('acl_resource' => NULL, 'type' => 'orm', 'query' => array('select' => array(0 => 'ce.id'), 'from' => array(0 => array('table' => 'ENTITY_NAME', 'alias' => 'ce')))), 'columns' => array('id' => array('renderable' => false)), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'callback', 'callable' => '@oro_entity.event_listener.custom_entity_grid_listener->getLinkProperty', 'route' => 'oro_entity_update', 'params' => array(0 => 'id')), 'view_link' => array('type' => 'callback', 'callable' => '@oro_entity.event_listener.custom_entity_grid_listener->getLinkProperty', 'route' => 'oro_entity_view', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'callback', 'callable' => '@oro_entity.event_listener.custom_entity_grid_listener->getLinkProperty', 'route' => 'oro_entity_delete', 'params' => array(0 => 'id'))), 'actions' => array('view' => array('type' => 'navigate', 'label' => 'oro.grid.action.view', 'icon' => 'eye-open', 'link' => 'view_link', 'rowAction' => true), 'update' => array('type' => 'navigate', 'label' => 'oro.grid.action.update', 'icon' => 'edit', 'link' => 'update_link'), 'delete' => array('type' => 'delete', 'label' => 'oro.grid.action.delete', 'icon' => 'trash', 'link' => 'delete_link')), 'sorters' => array('columns' => array('id' => array('data_name' => 'ce.id'))), 'filters' => array('columns' => array())), 'entity-relation-grid' => array('options' => array('entityHint' => 'entity', 'routerEnabled' => false, 'rowSelection' => array('dataField' => 'id', 'columnName' => 'assigned', 'selectors' => array('included' => '#appendRelation', 'excluded' => '#removeRelation'))), 'source' => array('acl_resource' => NULL, 'type' => 'orm'), 'columns' => array('assigned' => array('frontend_type' => 'boolean', 'label' => 'oro.entity.datagrid.assigned', 'editable' => true)), 'properties' => array('id' => NULL), 'sorters' => array('columns' => array('assigned' => array('data_name' => 'assigned')), 'default' => array('assigned' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC')), 'filters' => array('columns' => array('assigned' => array('type' => 'boolean', 'data_name' => 'assigned', 'filter_by_having' => true)))), 'entityconfig-grid' => array('options' => array('entityHint' => 'entity', 'toolbarOptions' => array('pageSize' => array('default_per_page' => 100))), 'source' => array('acl_resource' => 'oro_entityconfig_manage', 'type' => 'orm', 'query' => array('select' => array(0 => 'ce.id', 1 => 'ce.updated', 2 => 'ce.mode', 3 => 'ce.data'), 'from' => array(0 => array('table' => 'OroEntityConfigBundle:EntityConfigModel', 'alias' => 'ce')), 'where' => array('and' => array(0 => 'ce.mode <> \'Oro\\Bundle\\EntityConfigBundle\\Config\\ConfigModelManager::MODE_HIDDEN\'')))), 'columns' => array('updated' => array('label' => 'oro.ui.updated_at', 'frontend_type' => 'datetime')), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_entityconfig_update', 'params' => array(0 => 'id')), 'view_link' => array('type' => 'url', 'route' => 'oro_entityconfig_view', 'params' => array(0 => 'id'))), 'actions' => array('view' => array('type' => 'navigate', 'label' => 'oro.grid.action.view', 'icon' => 'eye-open', 'link' => 'view_link', 'rowAction' => true), 'update' => array('type' => 'navigate', 'label' => 'oro.grid.action.update', 'icon' => 'edit', 'link' => 'update_link')), 'sorters' => array('columns' => array('updated' => array('data_name' => 'ce.updated')), 'default' => array('entity' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('updated' => array('type' => 'datetime', 'data_name' => 'ce.updated')))), 'entityfields-grid' => array('options' => array('entityHint' => 'fields', 'toolbarOptions' => array('pageSize' => array('default_per_page' => 50))), 'source' => array('acl_resource' => 'oro_entityconfig_manage', 'type' => 'orm', 'query' => array('select' => array(0 => 'cf.id', 1 => 'ce.className', 2 => 'cf.fieldName', 3 => 'cf.type', 4 => 'cf.mode', 5 => 'ce.id as entity_id', 6 => 'cf.data'), 'from' => array(0 => array('table' => 'OroEntityConfigBundle:FieldConfigModel', 'alias' => 'cf')), 'join' => array('inner' => array(0 => array('join' => 'cf.entity', 'alias' => 'ce'))), 'where' => array('and' => array(0 => 'ce.id = :entity_id', 1 => 'cf.mode <> \'Oro\\Bundle\\EntityConfigBundle\\Config\\ConfigModelManager::MODE_HIDDEN\'')))), 'columns' => array('fieldName' => array('label' => 'oro.entity_config.field_config.field_name.label', 'frontend_type' => 'string'), 'type' => array('label' => 'oro.entity_config.field_config.type.label', 'frontend_type' => 'html', 'type' => 'twig', 'template' => 'OroEntityConfigBundle:Config:fieldType.html.twig')), 'properties' => array('update_link' => array('type' => 'url', 'route' => 'oro_entityconfig_field_update', 'params' => array(0 => 'id'))), 'actions' => array('update' => array('type' => 'navigate', 'label' => 'oro.grid.action.update', 'icon' => 'edit', 'link' => 'update_link', 'rowAction' => true)), 'sorters' => array('columns' => array('fieldName' => array('data_name' => 'cf.fieldName'))), 'filters' => NULL), 'entity-audit-grid' => array('options' => array('entityHint' => 'history'), 'source' => array('acl_resource' => 'oro_entityconfig_manage', 'type' => 'orm', 'query' => array('select' => array(0 => 'log', 1 => 'CONCAT(   CONCAT(       CONCAT(u.firstName, \' \'),       CONCAT(u.lastName, \' \')   ),   CONCAT(\' - \', u.email) ) as author'), 'from' => array(0 => array('table' => 'OroEntityConfigBundle:ConfigLog', 'alias' => 'log')), 'join' => array('left' => array('user' => array('join' => 'log.user', 'alias' => 'u')), 'inner' => array('diffs' => array('join' => 'log.diffs', 'alias' => 'diff', 'conditionType' => 'WITH'))))), 'columns' => array('author' => array('label' => 'oro.entity_config.config_log.user.label', 'type' => 'field', 'frontend_type' => 'string'), 'diffs' => array('label' => 'oro.entity_config.config_log.diffs.label', 'type' => 'twig', 'template' => 'OroEntityConfigBundle:Audit:data.html.twig', 'frontend_type' => 'html', 'context' => array('config_manager' => '@oro_entity_config.config_manager')), 'loggedAt' => array('label' => 'oro.entity_config.config_log.logged_at.label', 'type' => 'field', 'frontend_type' => 'datetime')), 'sorters' => array('columns' => array('author' => array('data_name' => 'author'), 'loggedAt' => array('data_name' => 'log.loggedAt')), 'default' => array('loggedAt' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC'))), 'audit-log-grid' => array('extends' => 'entity-audit-grid', 'source' => array('query' => array('join' => array('inner' => array('diffs' => array('condition' => 'diff.className = :objectClass AND diff.fieldName IS NULL'))))), 'columns' => array('diffs' => array('context' => array('is_entity' => true)))), 'auditfield-log-grid' => array('extends' => 'entity-audit-grid', 'source' => array('query' => array('join' => array('inner' => array('diffs' => array('condition' => 'diff.className = :objectClass AND diff.fieldName = :fieldName'))))), 'columns' => array('diffs' => array('context' => array('is_entity' => false, 'field_name' => NULL)))), 'oro-integration-grid' => array('source' => array('type' => 'orm', 'acl_resource' => 'oro_integration_view', 'query' => array('select' => array(0 => 'c.id', 1 => 'c.name', 2 => 'c.type', 3 => 'c.editMode', 4 => 'CASE WHEN c.enabled = true THEN \'enabled\' ELSE \'disabled\' END as enabled'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\IntegrationBundle\\Entity\\Channel', 'alias' => 'c')))), 'columns' => array('name' => array('label' => 'oro.integration.integration.name.label'), 'type' => array('label' => 'oro.integration.integration.type.label', 'type' => 'twig', 'template' => 'OroIntegrationBundle:Integration:Datagrid/type.html.twig', 'frontend_type' => 'html', 'context' => array('choices' => '@oro_integration.manager.types_registry->getAvailableChannelTypesChoiceList()', 'registry' => '@oro_integration.manager.types_registry')), 'enabled' => array('label' => 'oro.integration.integration.enabled.label', 'frontend_type' => 'select', 'choices' => array('enabled' => 'oro.integration.integration.enabled.active.label', 'disabled' => 'oro.integration.integration.enabled.inactive.label'))), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_integration_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_integration', 'params' => array(0 => 'id')), 'schedule_link' => array('type' => 'url', 'route' => 'oro_integration_schedule', 'params' => array(0 => 'id'))), 'sorters' => array('columns' => array('name' => array('data_name' => 'c.name'), 'type' => array('data_name' => 'c.type'), 'enabled' => array('data_name' => 'c.enabled'))), 'filters' => array('columns' => array('name' => array('data_name' => 'c.name', 'type' => 'string'), 'type' => array('data_name' => 'c.type', 'type' => 'choice', 'options' => array('field_options' => array('choices' => '@oro_integration.manager.types_registry->getAvailableChannelTypesChoiceList'))), 'enabled' => array('data_name' => 'c.enabled', 'type' => 'choice', 'options' => array('field_options' => array('choices' => array(0 => 'oro.integration.integration.enabled.inactive.label', 1 => 'oro.integration.integration.enabled.active.label')))))), 'actions' => array('update' => array('type' => 'navigate', 'link' => 'update_link', 'acl_resource' => 'oro_integration_update', 'icon' => 'edit', 'label' => 'oro.grid.action.update', 'rowAction' => true), 'schedule' => array('type' => 'schedule-sync', 'link' => 'schedule_link', 'acl_resource' => 'oro_integration_update', 'icon' => 'refresh', 'label' => 'oro.integration.datagrid.action.schedule_sync'), 'delete' => array('type' => 'delete', 'link' => 'delete_link', 'acl_resource' => 'oro_integration_delete', 'icon' => 'trash', 'label' => 'oro.grid.action.delete', 'defaultMessages' => array('confirm_content' => 'oro.integration.delete_sync_integration_window.content', 'confirm_ok' => 'oro.integration.delete_sync_integration_window.button_ok', 'confirm_title' => 'oro.integration.delete_sync_integration_window.title', 'success' => 'oro.integration.delete_sync_integration_window.success'))), 'action_configuration' => 'Oro\\Bundle\\IntegrationBundle\\Datagrid\\ActionConfiguration::getIsSyncAvailableCondition()', 'options' => array('entityHint' => 'channel', 'entity_pagination' => true)), 'oro-integration-status-grid' => array('source' => array('type' => 'orm', 'acl_resource' => 'oro_integration_view', 'query' => array('select' => array(0 => 's.code', 1 => 's.date', 2 => 's.connector', 3 => 's.message', 4 => 'i.type as integrationType'), 'from' => array(0 => array('table' => 'OroIntegrationBundle:Status', 'alias' => 's')), 'join' => array('left' => array(0 => array('join' => 's.channel', 'alias' => 'i'))), 'where' => array('and' => array(0 => 's.channel = :integrationId')))), 'columns' => array('code' => array('label' => 'oro.integration.integration_status.code.label', 'frontend_type' => 'select', 'choices' => array(1 => 'oro.integration.integration_status.competed.label', 2 => 'oro.integration.integration_status.failed.label')), 'connector' => array('type' => 'callback', 'label' => 'oro.integration.integration_status.connector.label', 'callable' => '@oro_integration.datagrid.status_grid_helper->connectorCodeProperty()'), 'message' => array('label' => 'oro.integration.integration_status.message.label', 'type' => 'twig', 'template' => 'OroIntegrationBundle:Integration:Datagrid/message.html.twig', 'frontend_type' => 'html'), 'date' => array('label' => 'oro.ui.created_at', 'frontend_type' => 'datetime')), 'sorters' => array('columns' => array('code' => array('data_name' => 's.code'), 'date' => array('data_name' => 's.date'), 'connector' => array('data_name' => 's.connector')), 'default' => array('date' => 'DESC')), 'properties' => array('id' => NULL), 'filters' => array('columns' => array('code' => array('data_name' => 's.code', 'type' => 'choice', 'options' => array('field_options' => array('choices' => array(1 => 'oro.integration.integration_status.competed.label', 2 => 'oro.integration.integration_status.failed.label')))), 'connector' => array('type' => 'choice', 'data_name' => 's.connector', 'options' => array('field_options' => array('choices' => array()))), 'message' => array('type' => 'string', 'data_name' => 's.message'), 'date' => array('type' => 'datetime', 'data_name' => 's.date'))), 'options' => array('toolbarOptions' => array('pageSize' => array('default_per_page' => 10)))), 'calendar-event-grid' => array('source' => array('type' => 'orm', 'acl_resource' => 'oro_calendar_event_view', 'query' => array('select' => array(0 => 'event.id', 1 => 'CONCAT(CASE WHEN calendar.name IS NOT NULL THEN calendar.name ELSE CONCAT(owner.firstName, \' \',owner.lastName) END, \'\') AS name', 2 => 'event.title', 3 => 'event.start', 4 => 'event.end', 5 => 'event.invitationStatus', 6 => 'parent.id as parentId', 7 => 'owner.id as ownerId', 8 => 'COUNT(children.id) as childrenCount'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent', 'alias' => 'event')), 'join' => array('left' => array(0 => array('join' => 'event.parent', 'alias' => 'parent'), 1 => array('join' => 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent', 'alias' => 'children', 'conditionType' => 'WITH', 'condition' => 'children.parent = event')), 'inner' => array(0 => array('join' => 'event.calendar', 'alias' => 'calendar'), 1 => array('join' => 'calendar.owner', 'alias' => 'owner'), 2 => array('join' => 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarProperty', 'alias' => 'connection', 'conditionType' => 'WITH', 'condition' => 'connection.calendarAlias = \'user\' AND connection.calendar = calendar.id AND connection.visible = true'), 3 => array('join' => 'connection.targetCalendar', 'alias' => 'targetCalendar'))), 'where' => array('and' => array(0 => 'targetCalendar.owner = @oro_security.security_facade->getLoggedUserId')), 'groupBy' => 'event.id, calendar.name, owner.firstName, owner.lastName, parentId, ownerId')), 'columns' => array('title' => array('label' => 'oro.calendar.calendarevent.title.label'), 'name' => array('label' => 'oro.calendar.calendarevent.calendar.label'), 'start' => array('label' => 'oro.calendar.calendarevent.start.label', 'frontend_type' => 'datetime'), 'end' => array('label' => 'oro.calendar.calendarevent.end.label', 'frontend_type' => 'datetime'), 'invitationStatus' => array('label' => 'oro.calendar.calendarevent.invitation_status.label', 'type' => 'twig', 'template' => 'OroCalendarBundle:CalendarEvent:Datagrid/Property/status.html.twig', 'frontend_type' => 'html')), 'sorters' => array('columns' => array('title' => array('data_name' => 'event.title'), 'name' => array('data_name' => 'name'), 'start' => array('data_name' => 'event.start'), 'end' => array('data_name' => 'event.end'), 'invitationStatus' => array('data_name' => 'event.invitationStatus')), 'default' => array('start' => 'ASC')), 'filters' => array('columns' => array('title' => array('type' => 'string', 'data_name' => 'event.title'), 'name' => array('type' => 'string', 'data_name' => 'name'), 'start' => array('type' => 'datetime', 'data_name' => 'event.start'), 'end' => array('type' => 'datetime', 'data_name' => 'event.end'), 'invitationStatus' => array('type' => 'choice', 'data_name' => 'event.invitationStatus', 'options' => array('field_options' => array('choices' => array('not_responded' => 'oro.calendar.calendarevent.statuses.not_responded', 'accepted' => 'oro.calendar.calendarevent.statuses.accepted', 'tentatively_accepted' => 'oro.calendar.calendarevent.statuses.tentatively_accepted', 'declined' => 'oro.calendar.calendarevent.statuses.declined')))))), 'properties' => array('id' => NULL, 'view_link' => array('type' => 'url', 'route' => 'oro_calendar_event_view', 'params' => array(0 => 'id')), 'update_link' => array('type' => 'url', 'route' => 'oro_calendar_event_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_calendarevent', 'params' => array(0 => 'id')), 'accept_link' => array('type' => 'url', 'route' => 'oro_calendar_event_accepted', 'params' => array(0 => 'id')), 'tentatively_link' => array('type' => 'url', 'route' => 'oro_calendar_event_tentatively_accepted', 'params' => array(0 => 'id')), 'decline_link' => array('type' => 'url', 'route' => 'oro_calendar_event_declined', 'params' => array(0 => 'id'))), 'actions' => array('accept' => array('type' => 'ajax', 'label' => 'Accept', 'link' => 'accept_link', 'icon' => 'ok', 'acl_recource' => 'oro_calendar_event_view'), 'tentatively' => array('type' => 'ajax', 'label' => 'Tentative', 'link' => 'tentatively_link', 'icon' => 'question', 'acl_recource' => 'oro_calendar_event_view'), 'decline' => array('type' => 'ajax', 'label' => 'Decline', 'link' => 'decline_link', 'icon' => 'remove', 'acl_recource' => 'oro_calendar_event_view'), 'view' => array('type' => 'navigate', 'label' => 'View', 'link' => 'view_link', 'icon' => 'eye-open', 'acl_recource' => 'oro_calendar_event_view', 'rowAction' => true), 'update' => array('type' => 'navigate', 'acl_resource' => 'oro_calendar_event_create', 'label' => 'Update', 'icon' => 'edit', 'link' => 'update_link'), 'delete' => array('type' => 'delete', 'acl_resource' => 'oro_calendar_event_delete', 'label' => 'Delete', 'icon' => 'trash', 'link' => 'delete_link')), 'action_configuration' => array(0 => '@oro_calendar.datagrid.action_permission_provider', 1 => 'getInvitationPermissions'), 'options' => array('entityHint' => 'calendar_events', 'entity_pagination' => true)), 'widget-base-calendar-event-grid' => array('source' => array('type' => 'orm', 'acl_resource' => 'oro_calendar_event_view', 'query' => array('select' => array(0 => 'event.id', 1 => 'event.title', 2 => 'event.start', 3 => 'event.end'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent', 'alias' => 'event')))), 'columns' => array('title' => array('label' => 'oro.calendar.calendarevent.title.label', 'type' => 'twig', 'template' => 'OroCalendarBundle:CalendarEvent:Datagrid/Property/title.html.twig', 'frontend_type' => 'html'), 'start' => array('label' => 'oro.calendar.calendarevent.start.label', 'frontend_type' => 'datetime'), 'end' => array('label' => 'oro.calendar.calendarevent.end.label', 'frontend_type' => 'datetime')), 'sorters' => array('columns' => array('title' => array('data_name' => 'event.title'), 'start' => array('data_name' => 'event.start'), 'end' => array('data_name' => 'event.end')), 'default' => array('start' => 'ASC')), 'properties' => array('id' => NULL), 'options' => array('entityHint' => 'calendar_events')), 'activity-calendar-event-grid' => array('extends' => 'widget-base-calendar-event-grid', 'filters' => array('columns' => array('title' => array('type' => 'string', 'data_name' => 'event.title'), 'start' => array('type' => 'datetime', 'data_name' => 'event.start'), 'end' => array('type' => 'datetime', 'data_name' => 'event.end')))), 'users-calendar-select-grid-exclude-owner' => array('options' => array('entityHint' => 'calendar'), 'source' => array('acl_resource' => 'oro_user_user_view', 'type' => 'orm', 'query' => array('select' => array(0 => 'calendar.id as id', 1 => 'u.username', 2 => 'u.email', 3 => 'u.firstName', 4 => 'u.lastName', 5 => 'u.enabled'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\CalendarBundle\\Entity\\Calendar', 'alias' => 'calendar')), 'join' => array('inner' => array(0 => array('join' => 'calendar.owner', 'alias' => 'u'))), 'where' => array('and' => array(0 => 'u.id != @oro_security.security_facade->getLoggedUserId')))), 'columns' => array('username' => array('label' => 'oro.user.username.label'), 'email' => array('label' => 'oro.user.email.label'), 'firstName' => array('label' => 'oro.user.first_name.label'), 'lastName' => array('label' => 'oro.user.last_name.label'), 'enabled' => array('label' => 'oro.user.enabled.label', 'frontend_type' => 'select', 'choices' => array(0 => 'Inactive', 1 => 'Active'))), 'properties' => array('id' => NULL), 'sorters' => array('columns' => array('username' => array('data_name' => 'u.username'), 'email' => array('data_name' => 'u.email'), 'firstName' => array('data_name' => 'u.firstName'), 'lastName' => array('data_name' => 'u.lastName'), 'enabled' => array('data_name' => 'u.enabled')), 'default' => array('username' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('username' => array('type' => 'string', 'data_name' => 'u.username'), 'email' => array('type' => 'string', 'data_name' => 'u.email'), 'firstName' => array('type' => 'string', 'data_name' => 'u.firstName'), 'lastName' => array('type' => 'string', 'data_name' => 'u.lastName'), 'enabled' => array('type' => 'choice', 'data_name' => 'u.enabled', 'options' => array('field_options' => array('choices' => array(0 => 'Inactive', 1 => 'Active'))))))), 'base-system-calendar-event-grid' => array('source' => array('type' => 'orm', 'query' => array('select' => array(0 => 'event.id', 1 => 'event.title', 2 => 'event.start', 3 => 'event.end'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent', 'alias' => 'event')), 'join' => array('inner' => array(0 => array('join' => 'event.systemCalendar', 'alias' => 'calendar'))), 'where' => array('and' => array(0 => 'calendar.id = :calendarId'))), 'bind_parameters' => array(0 => 'calendarId')), 'columns' => array('title' => array('label' => 'oro.calendar.calendarevent.title.label'), 'start' => array('label' => 'oro.calendar.calendarevent.start.label', 'frontend_type' => 'datetime'), 'end' => array('label' => 'oro.calendar.calendarevent.end.label', 'frontend_type' => 'datetime')), 'sorters' => array('columns' => array('title' => array('data_name' => 'event.title'), 'start' => array('data_name' => 'event.start'), 'end' => array('data_name' => 'event.end')), 'default' => array('start' => 'ASC')), 'filters' => array('columns' => array('title' => array('type' => 'string', 'data_name' => 'event.title'), 'start' => array('type' => 'datetime', 'data_name' => 'event.start'), 'end' => array('type' => 'datetime', 'data_name' => 'event.end'))), 'properties' => array('id' => NULL, 'view_link' => array('type' => 'url', 'route' => 'oro_system_calendar_event_view', 'params' => array(0 => 'id')), 'update_link' => array('type' => 'url', 'route' => 'oro_system_calendar_event_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_calendarevent', 'params' => array(0 => 'id'))), 'actions' => array('view' => array('type' => 'navigate', 'label' => 'View', 'link' => 'view_link', 'icon' => 'eye-open', 'acl_recource' => 'oro_calendar_event_view', 'rowAction' => true), 'update' => array('type' => 'navigate', 'acl_resource' => 'oro_calendar_event_create', 'label' => 'Update', 'icon' => 'edit', 'link' => 'update_link'), 'delete' => array('type' => 'delete', 'acl_resource' => 'oro_calendar_event_delete', 'label' => 'Delete', 'icon' => 'trash', 'link' => 'delete_link')), 'options' => array('entityHint' => 'calendar_events', 'skip_acl_check' => true, 'entity_pagination' => true)), 'system-calendar-event-grid' => array('extends' => 'base-system-calendar-event-grid', 'source' => array('query' => array('where' => array('and' => array(0 => 'calendar.public = false')))), 'action_configuration' => '@oro_calendar.system_calendar_event.datagrid_helper->getSystemActionConfigurationClosure'), 'public-system-calendar-event-grid' => array('extends' => 'base-system-calendar-event-grid', 'source' => array('query' => array('where' => array('and' => array(0 => 'calendar.public = true')))), 'action_configuration' => '@oro_calendar.system_calendar_event.datagrid_helper->getPublicActionConfigurationClosure'), 'system-calendar-grid' => array('source' => array('type' => 'orm', 'query' => array('select' => array(0 => 'sc.id', 1 => 'sc.name', 2 => 'sc.public'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\CalendarBundle\\Entity\\SystemCalendar', 'alias' => 'sc')))), 'columns' => array('name' => array('label' => 'oro.calendar.systemcalendar.name.label'), 'public' => array('label' => 'oro.calendar.systemcalendar.public.label', 'frontend_type' => 'select', 'choices' => array(0 => 'oro.calendar.systemcalendar.scope.organization', 1 => 'oro.calendar.systemcalendar.scope.system'))), 'sorters' => array('columns' => array('name' => array('data_name' => 'sc.name'), 'public' => array('data_name' => 'sc.public')), 'default' => array('name' => 'ASC')), 'filters' => array('columns' => array('name' => array('type' => 'string', 'data_name' => 'sc.name'), 'public' => array('type' => 'choice', 'data_name' => 'sc.public', 'options' => array('field_options' => array('choices' => array(0 => 'oro.calendar.systemcalendar.scope.organization', 1 => 'oro.calendar.systemcalendar.scope.system')))))), 'properties' => array('id' => NULL, 'view_link' => array('type' => 'url', 'route' => 'oro_system_calendar_view', 'params' => array(0 => 'id')), 'update_link' => array('type' => 'url', 'route' => 'oro_system_calendar_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_systemcalendar', 'params' => array(0 => 'id'))), 'actions' => array('view' => array('type' => 'navigate', 'label' => 'View', 'link' => 'view_link', 'icon' => 'eye-open', 'rowAction' => true), 'update' => array('type' => 'navigate', 'label' => 'Update', 'icon' => 'edit', 'link' => 'update_link'), 'delete' => array('type' => 'delete', 'label' => 'Delete', 'icon' => 'trash', 'link' => 'delete_link')), 'action_configuration' => '@oro_calendar.listener.datagrid.system_calendar->getActionConfigurationClosure', 'options' => array('skip_acl_check' => true)), 'jobs-grid' => array('source' => array('type' => 'orm', 'acl_resource' => 'oro_jobs', 'query' => array('select' => array(0 => 'partial j.{id, command, args, state, runtime, memoryUsageReal, priority, createdAt}'), 'from' => array(0 => array('table' => 'JMSJobQueueBundle:Job', 'alias' => 'j')), 'where' => array('and' => array(0 => 'j.originalJob IS NULL'))), 'hints' => array(0 => 'HINT_FORCE_PARTIAL_LOAD')), 'columns' => array('command' => array('label' => 'oro.cron.header.command', 'type' => 'twig', 'template' => 'OroCronBundle:Job:Datagrid/command.html.twig', 'frontend_type' => 'html'), 'state' => array('label' => 'oro.cron.header.state', 'type' => 'twig', 'template' => 'OroCronBundle:Job:Datagrid/state.html.twig', 'frontend_type' => 'html'), 'runtime' => array('label' => 'oro.cron.header.runtime', 'frontend_type' => 'integer'), 'memoryUsageReal' => array('label' => 'oro.cron.header.memory', 'type' => 'twig', 'template' => 'OroCronBundle:Job:Datagrid/memory.html.twig', 'frontend_type' => 'html'), 'priority' => array('label' => 'oro.cron.header.priority', 'frontend_type' => 'integer'), 'createdAt' => array('label' => 'oro.ui.created_at', 'frontend_type' => 'datetime')), 'sorters' => array('columns' => array('command' => array('data_name' => 'j.command'), 'state' => array('data_name' => 'j.state'), 'runtime' => array('data_name' => 'j.runtime'), 'memoryUsageReal' => array('data_name' => 'j.memoryUsageReal'), 'priority' => array('data_name' => 'j.priority * -1'), 'createdAt' => array('data_name' => 'j.createdAt')), 'default' => array('createdAt' => 'DESC')), 'filters' => array('columns' => array('command' => array('type' => 'command_with_args', 'data_name' => 'j.command, j.args'), 'state' => array('type' => 'choice', 'data_name' => 'j.state', 'options' => array('field_options' => array('choices' => array('new' => 'oro.cron.job.status.new', 'pending' => 'oro.cron.job.status.pending', 'canceled' => 'oro.cron.job.status.canceled', 'running' => 'oro.cron.job.status.running', 'finished' => 'oro.cron.job.status.finished', 'failed' => 'oro.cron.job.status.failed', 'terminated' => 'oro.cron.job.status.terminated', 'incomplete' => 'oro.cron.job.status.incomplete')))), 'runtime' => array('type' => 'number', 'data_name' => 'j.runtime'), 'priority' => array('type' => 'number', 'data_name' => 'j.priority * -1'), 'createdAt' => array('type' => 'datetime', 'data_name' => 'j.createdAt'))), 'properties' => array('id' => NULL, 'view_link' => array('type' => 'url', 'route' => 'oro_cron_job_view', 'params' => array(0 => 'id'))), 'actions' => array('view' => array('type' => 'navigate', 'label' => 'oro.grid.action.view', 'link' => 'view_link', 'icon' => 'eye-open', 'acl_recource' => 'oro_jobs', 'rowAction' => true)), 'options' => array('entityHint' => 'job')), 'audit-grid' => array('options' => array('entityHint' => 'audit'), 'source' => array('acl_resource' => 'oro_dataaudit_history', 'type' => 'orm', 'query' => array('select' => array(0 => 'a', 1 => 'a.id', 2 => 'a.action', 3 => 'a.version', 4 => 'a.objectClass', 5 => 'a.objectName', 6 => 'a.objectId', 7 => 'a.loggedAt', 8 => 'CONCAT(   CONCAT(       CONCAT(u.firstName, \' \'),       CONCAT(u.lastName, \' \')   ),   CONCAT(\' - \', u.email) ) as author
', 9 => 'o.name as organization'), 'from' => array(0 => array('table' => 'OroDataAuditBundle:Audit', 'alias' => 'a')), 'join' => array('left' => array('user' => array('join' => 'a.user', 'alias' => 'u'), 'organization' => array('join' => 'a.organization', 'alias' => 'o'), 'fields' => array('join' => 'a.fields', 'alias' => 'f'))), 'where' => array('and' => array(0 => 'o.id = @oro_security.security_facade->getOrganizationId')))), 'columns' => array('action' => array('label' => 'oro.dataaudit.datagrid.action', 'type' => 'twig', 'template' => 'OroDataAuditBundle:Datagrid:Property/action.html.twig', 'frontend_type' => 'html'), 'version' => array('label' => 'oro.dataaudit.datagrid.version'), 'objectClass' => array('label' => 'oro.dataaudit.datagrid.entity_type', 'frontend_type' => 'select', 'choices' => '@oro_dataaudit.dataaudit_grid_service->getObjectClassOptions'), 'objectName' => array('label' => 'oro.dataaudit.datagrid.entity_name'), 'objectId' => array('label' => 'oro.dataaudit.datagrid.entity_id', 'frontend_type' => 'integer'), 'data' => array('label' => 'oro.dataaudit.datagrid.data', 'type' => 'twig', 'template' => 'OroDataAuditBundle:Datagrid:Property/data.html.twig', 'frontend_type' => 'html'), 'author' => array('label' => 'oro.dataaudit.datagrid.author'), 'organization' => array('label' => 'oro.dataaudit.datagrid.organization'), 'loggedAt' => array('label' => 'oro.dataaudit.datagrid.logged_at', 'frontend_type' => 'datetime')), 'properties' => NULL, 'sorters' => array('columns' => array('action' => array('data_name' => 'a.action'), 'version' => array('data_name' => 'a.version'), 'objectClass' => array('data_name' => 'a.objectClass'), 'objectName' => array('data_name' => 'a.objectName'), 'objectId' => array('data_name' => 'a.objectId'), 'author' => array('data_name' => 'author'), 'loggedAt' => array('data_name' => 'a.loggedAt')), 'default' => array('loggedAt' => 'DESC')), 'filters' => array('columns' => array('action' => array('type' => 'choice', 'data_name' => 'a.action', 'options' => array('field_options' => array('choices' => array('create' => 'oro.dataaudit.action.create', 'update' => 'oro.dataaudit.action.update', 'remove' => 'oro.dataaudit.action.remove')))), 'version' => array('type' => 'number', 'data_name' => 'a.version', 'enabled' => false), 'objectClass' => array('type' => 'choice', 'data_name' => 'a.objectClass', 'options' => array('field_options' => array('choices' => '@oro_dataaudit.dataaudit_grid_service->getObjectClassOptions'))), 'objectName' => array('type' => 'string', 'data_name' => 'a.objectName'), 'objectId' => array('type' => 'number', 'data_name' => 'a.objectId'), 'author' => array('type' => 'string', 'data_name' => 'author'), 'loggedAt' => array('type' => 'datetime', 'data_name' => 'a.loggedAt', 'enabled' => false)))), 'audit-history-grid' => array('source' => array('acl_resource' => 'oro_dataaudit_history', 'type' => 'orm', 'query' => array('select' => array(0 => 'a', 1 => 'a.id', 2 => 'a.loggedAt', 3 => 'CONCAT(   CONCAT(       CONCAT(u.firstName, \' \'),       CONCAT(u.lastName, \' \')   ),   CONCAT(\' - \', u.email) ) as author'), 'from' => array(0 => array('table' => 'OroDataAuditBundle:Audit', 'alias' => 'a')), 'join' => array('left' => array('user' => array('join' => 'a.user', 'alias' => 'u'), 'fields' => array('join' => 'a.fields', 'alias' => 'f'))), 'where' => array('and' => array(0 => 'a.objectClass = :objectClass AND a.objectId = :objectId')))), 'columns' => array('author' => array('label' => 'oro.dataaudit.datagrid.author', 'type' => 'field', 'frontend_type' => 'string'), 'loggedAt' => array('label' => 'oro.dataaudit.datagrid.logged_at', 'type' => 'field', 'frontend_type' => 'datetime'), 'old' => array('label' => 'oro.dataaudit.datagrid.old_values', 'type' => 'twig', 'template' => 'OroDataAuditBundle:Datagrid:Property/old.html.twig', 'frontend_type' => 'html', 'data_name' => 'data'), 'new' => array('label' => 'oro.dataaudit.datagrid.new_values', 'type' => 'twig', 'template' => 'OroDataAuditBundle:Datagrid:Property/new.html.twig', 'frontend_type' => 'html', 'data_name' => 'data')), 'properties' => NULL, 'sorters' => array('columns' => array('author' => array('data_name' => 'author'), 'loggedAt' => array('data_name' => 'a.loggedAt')), 'default' => array('loggedAt' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC')), 'filters' => NULL), 'embedded-forms-grid' => array('source' => array('acl_resource' => 'oro_embedded_form_view', 'type' => 'orm', 'query' => array('select' => array(0 => 'embedded_form.id', 1 => 'embedded_form.title', 2 => 'embedded_form.formType'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\EmbeddedFormBundle\\Entity\\EmbeddedForm', 'alias' => 'embedded_form')))), 'columns' => array('title' => array('label' => 'oro.embeddedform.title.label'), 'formType' => array('label' => 'oro.embeddedform.form_type.label', 'type' => 'embedded_form_type')), 'sorters' => array('columns' => array('title' => array('data_name' => 'embedded_form.title')), 'default' => array('title' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('title' => array('type' => 'string', 'data_name' => 'embedded_form.title'), 'formType' => array('type' => 'choice', 'data_name' => 'embedded_form.formType', 'options' => array('field_options' => array('choices' => '@oro_embedded_form.manager->getAll'))))), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_embedded_form_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_embedded_form_delete', 'params' => array(0 => 'id')), 'view_link' => array('type' => 'url', 'route' => 'oro_embedded_form_view', 'params' => array(0 => 'id'))), 'actions' => array('view' => array('acl_resource' => 'oro_embedded_form_view', 'type' => 'navigate', 'label' => 'oro.grid.action.view', 'icon' => 'eye-open', 'link' => 'view_link', 'rowAction' => true), 'update' => array('acl_resource' => 'oro_embedded_form_update', 'type' => 'navigate', 'label' => 'oro.grid.action.update', 'icon' => 'edit', 'link' => 'update_link'), 'delete' => array('acl_resource' => 'oro_embedded_form_delete', 'type' => 'delete', 'label' => 'oro.grid.action.delete', 'icon' => 'trash', 'link' => 'delete_link')), 'options' => array('entityHint' => 'embedded form', 'entity_pagination' => true)), 'email-notification-grid' => array('options' => array('entityHint' => 'transactional email', 'entity_pagination' => true), 'source' => array('acl_resource' => 'oro_notification_emailnotification_view', 'type' => 'orm', 'query' => array('select' => array(0 => 'partial e.{id, entityName}', 1 => 'event.name as eventName', 2 => 'event.id as eventId', 3 => 'recipientList.owner as ownerRecipient', 4 => 'recipientList.email as emailRecipient', 5 => 'template.name as templateName'), 'from' => array(0 => array('table' => 'OroNotificationBundle:EmailNotification', 'alias' => 'e')), 'join' => array('left' => array(0 => array('join' => 'e.event', 'alias' => 'event'), 1 => array('join' => 'e.template', 'alias' => 'template'), 2 => array('join' => 'e.recipientList', 'alias' => 'recipientList'), 3 => array('join' => 'recipientList.users', 'alias' => 'recipientUsersList'), 4 => array('join' => 'recipientList.groups', 'alias' => 'recipientGroupsList'))))), 'columns' => array('entityName' => array('label' => 'oro.notification.emailnotification.entity_name.label', 'data_name' => 'entityName', 'type' => 'twig', 'template' => 'OroEntityBundle:Datagrid:Property/entity.html.twig', 'frontend_type' => 'html', 'context' => array('entity_provider' => '@oro_entity.entity_provider')), 'eventName' => array('label' => 'oro.notification.emailnotification.event.label', 'type' => 'translatable', 'choices' => '@oro_notification.event_listener.email_notification_service->getEventNameChoices'), 'templateName' => array('label' => 'oro.notification.emailnotification.template.label'), 'recipientUsersList' => array('label' => 'oro.notification.datagrid.recipient.user', 'type' => 'twig', 'template' => 'OroNotificationBundle:EmailNotification:Datagrid/Property/recipientUsersList.html.twig', 'frontend_type' => 'html'), 'recipientGroupsList' => array('label' => 'oro.notification.datagrid.recipient.group', 'type' => 'twig', 'template' => 'OroNotificationBundle:EmailNotification:Datagrid/Property/recipientGroupsList.html.twig', 'choices' => '@oro_notification.event_listener.email_notification_service->getRecipientGroupsChoices', 'frontend_type' => 'html'), 'emailRecipient' => array('label' => 'oro.notification.datagrid.recipient.custom_email', 'frontend_type' => 'string'), 'ownerRecipient' => array('label' => 'oro.notification.datagrid.recipient.owner', 'frontend_type' => 'boolean')), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_notification_emailnotification_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_emailnotication', 'params' => array(0 => 'id'))), 'actions' => array('update' => array('type' => 'navigate', 'label' => 'oro.grid.action.update', 'acl_resource' => 'oro_notification_emailnotification_update', 'icon' => 'edit', 'link' => 'update_link', 'rowAction' => true), 'delete' => array('type' => 'delete', 'label' => 'oro.grid.action.delete', 'acl_resource' => 'oro_notification_emailnotification_delete', 'icon' => 'trash', 'link' => 'delete_link')), 'sorters' => NULL, 'filters' => array('columns' => array('entityName' => array('type' => 'choice', 'data_name' => 'e.entityName', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@oro_entity.datagrid_helper->getEntityNames', 'translatable_options' => false))), 'eventName' => array('filter_by_having' => true, 'type' => 'choice', 'data_name' => 'eventId', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@oro_notification.event_listener.email_notification_service->getEventNameChoices'))), 'templateName' => array('type' => 'string', 'data_name' => 'template.name'), 'recipientUsersList' => array('type' => 'choice', 'data_name' => 'recipientUsersList.id', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@oro_notification.event_listener.email_notification_service->getRecipientUsersChoices'))), 'recipientGroupsList' => array('type' => 'choice', 'data_name' => 'recipientGroupsList.id', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@oro_notification.event_listener.email_notification_service->getRecipientGroupsChoices'))), 'emailRecipient' => array('type' => 'string', 'data_name' => 'emailRecipient'), 'ownerRecipient' => array('type' => 'boolean', 'data_name' => 'ownerRecipient')))), 'reports-grid' => array('source' => array('type' => 'orm', 'acl_resource' => 'oro_report_view', 'query' => array('select' => array(0 => 'r.id', 1 => 'r.name', 2 => 'r.entity', 3 => 'type.label as reportType'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\ReportBundle\\Entity\\Report', 'alias' => 'r')), 'join' => array('left' => array(0 => array('join' => 'r.type', 'alias' => 'type'))))), 'properties' => array('id' => NULL, 'view_link' => array('type' => 'url', 'route' => 'oro_report_view', 'params' => array(0 => 'id')), 'update_link' => array('type' => 'url', 'route' => 'oro_report_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_report', 'params' => array(0 => 'id'))), 'columns' => array('name' => array('label' => 'oro.report.name.label'), 'entity' => array('label' => 'oro.report.entity.label', 'type' => 'twig', 'template' => 'OroEntityBundle:Datagrid:Property/entity.html.twig', 'frontend_type' => 'html', 'context' => array('entity_provider' => '@oro_report.entity_provider')), 'reportType' => array('label' => 'oro.report.type.label', 'type' => 'translatable', 'choices' => '@oro_report.report_manager->getReportTypeChoices')), 'sorters' => array('columns' => array('name' => array('data_name' => 'r.name')), 'default' => array('name' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC')), 'filters' => array('columns' => array('name' => array('type' => 'string', 'data_name' => 'r.name'), 'entity' => array('type' => 'choice', 'data_name' => 'r.entity', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@oro_entity.datagrid_helper->getEntityNames', 'translatable_options' => false))), 'reportType' => array('type' => 'choice', 'data_name' => 'r.type', 'options' => array('field_options' => array('choices' => '@oro_report.report_manager->getReportTypeChoices'))))), 'actions' => array('view' => array('type' => 'navigate', 'acl_resource' => 'oro_report_view', 'label' => 'oro.grid.action.view', 'icon' => 'eye-open', 'link' => 'view_link', 'rowAction' => true), 'update' => array('type' => 'navigate', 'acl_resource' => 'oro_report_update', 'label' => 'oro.grid.action.update', 'icon' => 'edit', 'link' => 'update_link', 'launcherOptions' => array('className' => 'no-hash mobile-hide')), 'delete' => array('type' => 'delete', 'acl_resource' => 'oro_report_delete', 'label' => 'oro.grid.action.delete', 'icon' => 'trash', 'link' => 'delete_link', 'launcherOptions' => array('className' => 'no-hash mobile-hide'))), 'options' => array('entityHint' => 'report')), 'search-grid' => array('source' => array('type' => 'search'), 'columns' => array('entity' => array('label' => 'Item', 'type' => 'search-result', 'template' => NULL, 'frontend_type' => 'html')), 'properties' => NULL, 'sorters' => NULL, 'filters' => NULL), 'oro_segments-grid' => array('source' => array('type' => 'orm', 'acl_resource' => 'oro_segment_view', 'query' => array('select' => array(0 => 's.id', 1 => 's.name', 2 => 's.entity', 3 => 's.lastRun', 4 => 'type.label as segmentType'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\SegmentBundle\\Entity\\Segment', 'alias' => 's')), 'join' => array('left' => array(0 => array('join' => 's.type', 'alias' => 'type'))))), 'properties' => array('id' => NULL, 'view_link' => array('type' => 'url', 'route' => 'oro_segment_view', 'params' => array(0 => 'id')), 'update_link' => array('type' => 'url', 'route' => 'oro_segment_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_segment', 'params' => array(0 => 'id'))), 'columns' => array('name' => array('label' => 'oro.segment.name.label'), 'entity' => array('label' => 'oro.segment.entity.label', 'type' => 'twig', 'template' => 'OroEntityBundle:Datagrid:Property/entity.html.twig', 'frontend_type' => 'html', 'context' => array('entity_provider' => '@oro_segment.entity_provider')), 'segmentType' => array('label' => 'oro.segment.type.label', 'type' => 'translatable', 'choices' => '@oro_segment.segment_manager->getSegmentTypeChoices'), 'lastRun' => array('label' => 'oro.segment.last_run.label', 'frontend_type' => 'datetime')), 'sorters' => array('columns' => array('name' => array('data_name' => 's.name'), 'lastRun' => array('data_name' => 's.lastRun'))), 'filters' => array('columns' => array('name' => array('type' => 'string', 'data_name' => 's.name'), 'entity' => array('type' => 'choice', 'data_name' => 's.entity', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@oro_entity.datagrid_helper->getEntityNames', 'translatable_options' => false))), 'segmentType' => array('type' => 'choice', 'data_name' => 's.type', 'options' => array('field_options' => array('choices' => '@oro_segment.segment_manager->getSegmentTypeChoices'))), 'lastRun' => array('type' => 'datetime', 'data_name' => 's.lastRun', 'enabled' => false))), 'actions' => array('view' => array('type' => 'navigate', 'acl_resource' => 'oro_segment_view', 'label' => 'oro.grid.action.view', 'icon' => 'eye-open', 'link' => 'view_link', 'rowAction' => true), 'update' => array('type' => 'navigate', 'acl_resource' => 'oro_segment_update', 'label' => 'oro.grid.action.update', 'icon' => 'edit', 'link' => 'update_link', 'launcherOptions' => array('className' => 'no-hash mobile-hide')), 'delete' => array('type' => 'delete', 'acl_resource' => 'oro_segment_delete', 'label' => 'oro.grid.action.delete', 'icon' => 'trash', 'link' => 'delete_link', 'launcherOptions' => array('className' => 'no-hash mobile-hide'))), 'options' => array('entityHint' => 'segment')), 'tag-grid' => array('options' => array('entityHint' => 'tag', 'entity_pagination' => true), 'source' => array('acl_resource' => 'oro_tag_view', 'type' => 'orm', 'query' => array('select' => array(0 => 't.id', 1 => 't.name', 2 => 'COUNT(tt.id) as usage'), 'from' => array(0 => array('table' => 'OroTagBundle:Tag', 'alias' => 't')), 'join' => array('left' => array('tagging' => array('join' => 't.tagging', 'alias' => 'tt'))), 'groupBy' => 't.id')), 'columns' => array('name' => array('label' => 'oro.tag.name.label', 'type' => 'field', 'frontend_type' => 'string'), 'usage' => array('label' => 'oro.tag.datagrid.usage_count', 'type' => 'field', 'frontend_type' => 'integer')), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_tag_update', 'params' => array(0 => 'id')), 'search_link' => array('type' => 'url', 'route' => 'oro_tag_search', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_tag', 'params' => array(0 => 'id'))), 'sorters' => array('columns' => array('name' => array('data_name' => 't.name'), 'usage' => array('data_name' => 'usage')), 'default' => array('name' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC')), 'filters' => array('columns' => array('name' => array('type' => 'string', 'data_name' => 't.name'), 'usage' => array('type' => 'number', 'data_name' => 'usage', 'filter_by_having' => true))), 'actions' => array('search' => array('type' => 'navigate', 'label' => 'oro.tag.datagrid.search', 'link' => 'search_link', 'icon' => 'search', 'acl_resource' => 'oro_tag_view', 'rowAction' => true), 'update' => array('type' => 'navigate', 'label' => 'oro.grid.action.update', 'link' => 'update_link', 'icon' => 'edit', 'acl_resource' => 'oro_tag_update'), 'delete' => array('type' => 'delete', 'label' => 'oro.grid.action.delete', 'link' => 'delete_link', 'icon' => 'trash', 'acl_resource' => 'oro_tag_delete'))), 'tag-results-grid' => array('options' => array('entityHint' => 'result'), 'source' => array('acl_resource' => 'oro_tag_view', 'type' => 'orm', 'query' => array('select' => array(0 => 'tt.entityName', 1 => 'tt.recordId'), 'from' => array(0 => array('table' => 'OroTagBundle:Tagging', 'alias' => 'tt')), 'groupBy' => 'tt.entityName, tt.recordId', 'where' => array('and' => array(0 => 'tt.tag = :tag')))), 'columns' => array('entity' => array('label' => 'Item', 'type' => 'search-result', 'frontend_type' => 'html'))), 'process-definitions-grid' => array('options' => array('entityHint' => 'processes', 'export' => false), 'source' => array('type' => 'orm', 'acl_resource' => 'oro_process_definition_view', 'query' => array('select' => array(0 => 'process.name', 1 => 'process.label', 2 => 'process.relatedEntity', 3 => 'process.executionOrder', 4 => 'process.enabled', 5 => 'process.createdAt', 6 => 'process.name as processDefinition'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\WorkflowBundle\\Entity\\ProcessDefinition', 'alias' => 'process')))), 'columns' => array('label' => array('label' => 'oro.workflow.processdefinition.label.label'), 'relatedEntity' => array('label' => 'oro.workflow.processdefinition.related_entity.label', 'data_name' => 'relatedEntity', 'frontend_type' => 'select', 'choices' => '@oro_workflow.datagrid.process_definition_entity_name_provider->getRelatedEntitiesChoice'), 'executionOrder' => array('label' => 'oro.workflow.processdefinition.execution_order.label', 'frontend_type' => 'integer'), 'enabled' => array('label' => 'oro.workflow.processdefinition.enabled.label', 'frontend_type' => 'boolean'), 'createdAt' => array('label' => 'oro.ui.created_at', 'frontend_type' => 'datetime')), 'properties' => array('name' => NULL, 'processDefinition' => NULL, 'view_link' => array('type' => 'url', 'route' => 'oro_process_definition_view', 'params' => array(0 => 'name')), 'activate_link' => array('type' => 'url', 'route' => 'oro_workflow_api_rest_process_activate', 'params' => array(0 => 'processDefinition')), 'deactivate_link' => array('type' => 'url', 'route' => 'oro_workflow_api_rest_process_deactivate', 'params' => array(0 => 'processDefinition'))), 'sorters' => array('columns' => array('executionOrder' => array('data_name' => 'process.executionOrder'), 'label' => array('data_name' => 'process.label'), 'createdAt' => array('data_name' => 'process.createdAt')), 'default' => array('label' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'actions' => array('view' => array('type' => 'navigate', 'acl_resource' => 'oro_process_definition_view', 'label' => 'oro.grid.action.view', 'icon' => 'eye-open', 'link' => 'view_link', 'rowAction' => true), 'activate' => array('type' => 'ajax', 'acl_resource' => 'oro_process_definition_update', 'label' => 'oro.workflow.action.process.activate', 'icon' => 'ok', 'link' => 'activate_link'), 'deactivate' => array('type' => 'ajax', 'acl_resource' => 'oro_process_definition_update', 'label' => 'oro.workflow.action.process.deactivate', 'icon' => 'remove', 'link' => 'deactivate_link')), 'action_configuration' => array(0 => '@oro_workflow.datagrid.action_permission_provider', 1 => 'getProcessDefinitionPermissions'), 'filters' => array('columns' => array('label' => array('type' => 'string', 'data_name' => 'process.label'), 'relatedEntity' => array('type' => 'choice', 'data_name' => 'process.relatedEntity', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@oro_workflow.datagrid.process_definition_entity_name_provider->getRelatedEntitiesChoice'))), 'createdAt' => array('type' => 'datetime', 'data_name' => 'process.createdAt')))), 'workflow-definitions-grid' => array('options' => array('entityHint' => 'workflowssss', 'export' => false), 'source' => array('type' => 'orm', 'acl_resource' => 'oro_workflow_definition_view', 'query' => array('select' => array(0 => 'w.name as id', 1 => 'w.name', 2 => 'w.name as workflowDefinition', 3 => 'w.relatedEntity', 4 => 'w.relatedEntity as entityClass', 5 => 'w.relatedEntity as active', 6 => 'w.label', 7 => 'w.system', 8 => 'w.createdAt'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\WorkflowBundle\\Entity\\WorkflowDefinition', 'alias' => 'w')))), 'columns' => array('label' => array('label' => 'oro.workflow.workflowdefinition.label.label'), 'relatedEntity' => array('label' => 'oro.workflow.workflowdefinition.related_entity.label', 'data_name' => 'relatedEntity', 'frontend_type' => 'select', 'choices' => '@oro_workflow.datagrid.workflow_definition_entity_name_provider->getRelatedEntitiesChoice'), 'active' => array('label' => 'oro.workflow.workflowdefinition.active.label', 'type' => 'twig', 'template' => 'OroWorkflowBundle:Datagrid:Column/active.html.twig', 'frontend_type' => 'html'), 'system' => array('label' => 'oro.workflow.workflowdefinition.system.label', 'frontend_type' => 'boolean'), 'createdAt' => array('label' => 'oro.ui.created_at', 'frontend_type' => 'datetime')), 'properties' => array('id' => NULL, 'name' => NULL, 'workflowDefinition' => NULL, 'entityClass' => NULL, 'view_link' => array('type' => 'url', 'route' => 'oro_workflow_definition_view', 'params' => array(0 => 'name')), 'update_link' => array('type' => 'url', 'route' => 'oro_workflow_definition_update', 'params' => array(0 => 'name')), 'clone_link' => array('type' => 'url', 'route' => 'oro_workflow_definition_clone', 'params' => array(0 => 'name')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_workflow_definition_delete', 'params' => array(0 => 'workflowDefinition')), 'activate_link' => array('type' => 'url', 'route' => 'oro_workflow_api_rest_workflow_activate', 'params' => array(0 => 'workflowDefinition')), 'deactivate_link' => array('type' => 'url', 'route' => 'oro_workflow_api_rest_workflow_deactivate', 'params' => array(0 => 'entityClass'))), 'sorters' => array('columns' => array('label' => array('data_name' => 'w.label'), 'system' => array('data_name' => 'w.system'), 'createdAt' => array('data_name' => 'w.createdAt')), 'default' => array('label' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'actions' => array('view' => array('type' => 'navigate', 'acl_resource' => 'oro_workflow_definition_view', 'label' => 'oro.grid.action.view', 'icon' => 'eye-open', 'link' => 'view_link', 'rowAction' => true), 'activate' => array('type' => 'workflow-activate', 'acl_resource' => 'oro_workflow_definition_update', 'label' => 'oro.workflow.workflowdefinition.datagrid.activate', 'icon' => 'ok', 'link' => 'activate_link'), 'deactivate' => array('type' => 'ajax', 'acl_resource' => 'oro_workflow_definition_update', 'label' => 'oro.workflow.workflowdefinition.datagrid.deactivate', 'icon' => 'remove', 'link' => 'deactivate_link'), 'clone' => array('type' => 'navigate', 'acl_resource' => 'oro_workflow_definition_create', 'label' => 'oro.grid.action.clone', 'icon' => 'copy', 'link' => 'clone_link'), 'update' => array('type' => 'navigate', 'acl_resource' => 'oro_workflow_definition_update', 'label' => 'oro.grid.action.update', 'icon' => 'edit', 'link' => 'update_link'), 'delete' => array('type' => 'delete', 'acl_resource' => 'oro_workflow_definition_delete', 'label' => 'oro.grid.action.delete', 'icon' => 'trash', 'link' => 'delete_link')), 'action_configuration' => array(0 => '@oro_workflow.datagrid.action_permission_provider', 1 => 'getWorkflowDefinitionPermissions'), 'filters' => array('columns' => array('label' => array('type' => 'string', 'data_name' => 'w.label'), 'relatedEntity' => array('type' => 'choice', 'data_name' => 'w.relatedEntity', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@oro_workflow.datagrid.workflow_definition_entity_name_provider->getRelatedEntitiesChoice'))), 'system' => array('type' => 'boolean', 'data_name' => 'w.system'), 'createdAt' => array('type' => 'datetime', 'data_name' => 'w.createdAt')))), 'dashboards-grid' => array('source' => array('type' => 'orm', 'acl_resource' => 'oro_dashboard_view', 'query' => array('select' => array(0 => 'dashboard.id', 1 => 'dashboard.label', 2 => 'owner.id as ownerId', 3 => 'CONCAT(owner.firstName, CONCAT(\' \', owner.lastName)) as ownerName', 4 => 'dashboard.createdAt', 5 => 'dashboard.updatedAt'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\DashboardBundle\\Entity\\Dashboard', 'alias' => 'dashboard')), 'join' => array('left' => array(0 => array('join' => 'dashboard.owner', 'alias' => 'owner'))))), 'columns' => array('label' => array('label' => 'oro.dashboard.label.label'), 'ownerName' => array('type' => 'twig', 'label' => 'oro.dashboard.owner.label', 'frontend_type' => 'html', 'template' => 'OroDashboardBundle:Dashboard:Datagrid/Property/owner.html.twig'), 'createdAt' => array('label' => 'oro.ui.created_at', 'frontend_type' => 'datetime'), 'updatedAt' => array('label' => 'oro.ui.updated_at', 'frontend_type' => 'datetime')), 'sorters' => array('columns' => array('label' => array('data_name' => 'dashboard.label'), 'ownerName' => array('data_name' => 'ownerName'), 'createdAt' => array('data_name' => 'dashboard.createdAt'), 'updatedAt' => array('data_name' => 'dashboard.updatedAt')), 'default' => array('dueDate' => 'ASC')), 'filters' => array('columns' => array('label' => array('type' => 'string', 'data_name' => 'dashboard.label'), 'ownerName' => array('type' => 'string', 'data_name' => 'ownerName'), 'createdAt' => array('type' => 'datetime', 'data_name' => 'dashboard.createdAt'), 'updatedAt' => array('type' => 'datetime', 'data_name' => 'dashboard.updatedAt'))), 'properties' => array('id' => NULL, 'view_link' => array('type' => 'url', 'route' => 'oro_dashboard_view', 'params' => array(0 => 'id')), 'update_link' => array('type' => 'url', 'route' => 'oro_dashboard_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_dashboard', 'params' => array(0 => 'id'))), 'actions' => array('view' => array('type' => 'navigate', 'acl_resource' => 'oro_dashboard_view', 'label' => 'oro.grid.action.view', 'icon' => 'eye-open', 'link' => 'view_link', 'rowAction' => true), 'update' => array('type' => 'navigate', 'acl_resource' => 'oro_dashboard_update', 'label' => 'oro.grid.action.update', 'icon' => 'edit', 'link' => 'update_link'), 'delete' => array('type' => 'delete', 'acl_resource' => 'oro_dashboard_delete', 'label' => 'oro.grid.action.delete', 'icon' => 'trash', 'link' => 'delete_link'))), 'website-grid' => array('extended_entity_name' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingWebsite', 'source' => array('type' => 'orm', 'acl_resource' => 'oro_tracking_website_view', 'query' => array('select' => array(0 => 'website.id', 1 => 'website.name', 2 => 'website.identifier', 3 => 'website.url', 4 => 'owner.id as ownerId', 5 => 'CONCAT(owner.firstName, CONCAT(\' \', owner.lastName)) as ownerName', 6 => 'website.createdAt', 7 => 'website.updatedAt'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingWebsite', 'alias' => 'website')), 'join' => array('left' => array(0 => array('join' => 'website.owner', 'alias' => 'owner'))))), 'columns' => array('name' => array('label' => 'oro.tracking.trackingwebsite.name.label'), 'identifier' => array('label' => 'oro.tracking.trackingwebsite.identifier.label'), 'url' => array('type' => 'twig', 'label' => 'oro.tracking.trackingwebsite.url.label', 'frontend_type' => 'html', 'template' => 'OroTrackingBundle:TrackingWebsite:Property/url.html.twig'), 'ownerName' => array('type' => 'twig', 'label' => 'oro.tracking.trackingwebsite.owner.label', 'frontend_type' => 'html', 'template' => 'OroTrackingBundle:TrackingWebsite:Property/owner.html.twig'), 'createdAt' => array('label' => 'oro.ui.created_at', 'frontend_type' => 'datetime'), 'updatedAt' => array('label' => 'oro.ui.updated_at', 'frontend_type' => 'datetime')), 'sorters' => array('columns' => array('name' => array('data_name' => 'website.name'), 'identifier' => array('data_name' => 'website.identifier'), 'url' => array('data_name' => 'website.url'), 'ownerName' => array('data_name' => 'website.ownerName'), 'createdAt' => array('data_name' => 'website.createdAt'), 'updatedAt' => array('data_name' => 'website.updatedAt')), 'default' => array('identifier' => 'ASC')), 'filters' => array('columns' => array('name' => array('type' => 'string', 'data_name' => 'website.name'), 'identifier' => array('type' => 'string', 'data_name' => 'website.identifier'), 'url' => array('type' => 'string', 'data_name' => 'website.url'), 'ownerName' => array('type' => 'string', 'data_name' => 'ownerName'), 'createdAt' => array('type' => 'datetime', 'data_name' => 'website.createdAt'), 'updatedAt' => array('type' => 'datetime', 'data_name' => 'website.updatedAt'))), 'properties' => array('id' => NULL, 'view_link' => array('type' => 'url', 'route' => 'oro_tracking_website_view', 'params' => array(0 => 'id')), 'update_link' => array('type' => 'url', 'route' => 'oro_tracking_website_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_api_delete_tracking_website', 'params' => array(0 => 'id'))), 'actions' => array('view' => array('type' => 'navigate', 'acl_resource' => 'oro_tracking_website_view', 'label' => 'oro.grid.action.view', 'icon' => 'eye-open', 'link' => 'view_link', 'rowAction' => true), 'update' => array('type' => 'navigate', 'acl_resource' => 'oro_tracking_website_update', 'label' => 'oro.grid.action.update', 'icon' => 'edit', 'link' => 'update_link'), 'delete' => array('type' => 'delete', 'acl_resource' => 'oro_tracking_website_delete', 'label' => 'oro.grid.action.delete', 'icon' => 'trash', 'link' => 'delete_link')), 'options' => array('entity_pagination' => true)), 'tracking-events-grid' => array('extended_entity_name' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingEvent', 'source' => array('type' => 'orm', 'acl_resource' => 'oro_tracking_website_view', 'query' => array('select' => array(0 => 'e.id', 1 => 'e.name', 2 => 'e.value', 3 => 'e.userIdentifier', 4 => 'e.url', 5 => 'e.title', 6 => 'e.code', 7 => 'e.loggedAt'), 'from' => array(0 => array('table' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingEvent', 'alias' => 'e')))), 'columns' => array('name' => array('label' => 'oro.tracking.trackingevent.name.label'), 'value' => array('label' => 'oro.tracking.trackingevent.value.label'), 'userIdentifier' => array('label' => 'oro.tracking.trackingevent.userIdentifier.label'), 'url' => array('type' => 'twig', 'label' => 'oro.tracking.trackingevent.url.label', 'frontend_type' => 'html', 'template' => 'OroTrackingBundle:TrackingEvent:Property/url.html.twig'), 'code' => array('label' => 'oro.tracking.trackingevent.code.label'), 'loggedAt' => array('label' => 'oro.tracking.trackingevent.logged_at.label', 'frontend_type' => 'datetime')), 'sorters' => array('columns' => array('name' => array('data_name' => 'e.name'), 'value' => array('data_name' => 'e.value'), 'userIdentifier' => array('data_name' => 'e.userIdentifier'), 'code' => array('data_name' => 'e.code'), 'loggedAt' => array('data_name' => 'e.loggedAt')), 'default' => array('id' => 'DESC')), 'filters' => array('columns' => array('name' => array('type' => 'string', 'data_name' => 'e.name'), 'value' => array('type' => 'string', 'data_name' => 'e.value'), 'userIdentifier' => array('type' => 'string', 'data_name' => 'e.userIdentifier'), 'code' => array('type' => 'string', 'data_name' => 'e.code'), 'loggedAt' => array('type' => 'datetime', 'data_name' => 'e.loggedAt'))), 'properties' => array('id' => NULL)), 'website-tracking-events-grid' => array('extends' => 'tracking-events-grid', 'source' => array('query' => array('join' => array('inner' => array(0 => array('join' => 'e.website', 'alias' => 'w'))), 'where' => array('and' => array(0 => 'w.identifier = :websiteIdentifier'))), 'bind_parameters' => array(0 => 'websiteIdentifier')))), $this->get('oro_datagrid.provider.resolver'));
    }

    /**
     * Gets the 'oro_datagrid.configuration.provider.chain' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Provider\ChainConfigurationProvider A Oro\Bundle\DataGridBundle\Provider\ChainConfigurationProvider instance.
     */
    protected function getOroDatagrid_Configuration_Provider_ChainService()
    {
        $this->services['oro_datagrid.configuration.provider.chain'] = $instance = new \Oro\Bundle\DataGridBundle\Provider\ChainConfigurationProvider();

        $instance->addProvider($this->get('oro_segment.datagrid.configuration.provider'));
        $instance->addProvider($this->get('oro_report.datagrid.configuration.provider'));
        $instance->addProvider($this->get('oro_datagrid.configuration.provider'));

        return $instance;
    }

    /**
     * Gets the 'oro_datagrid.datagrid.builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\DataGridBundle\Datagrid\Builder A Oro\Bundle\DataGridBundle\Datagrid\Builder instance.
     */
    public function getOroDatagrid_Datagrid_BuilderService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_datagrid.datagrid.builder'] = new OroBundleDataGridBundleDatagridBuilder_000000002e47ec4700000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroDatagrid_Datagrid_BuilderService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\DataGridBundle\Datagrid\Builder('Oro\\Bundle\\DataGridBundle\\Datagrid\\Datagrid', 'Oro\\Bundle\\DataGridBundle\\Extension\\Acceptor', $this->get('oro_datagrid.event.dispatcher'));

        $instance->registerDatasource('orm', $this->get('oro_datagrid.datasource.orm'));
        $instance->registerDatasource('search', $this->get('oro_search.datasource.search'));
        $instance->registerExtension($this->get('oro_entity_extend.datagrid.extension.additional_fields'));
        $instance->registerExtension($this->get('oro_entity_extend.datagrid.extension.dynamic_fields'));
        $instance->registerExtension($this->get('oro_datagrid.extension.formatter'));
        $instance->registerExtension($this->get('oro_datagrid.extension.orm_pager'));
        $instance->registerExtension($this->get('oro_datagrid.extension.orm_sorter'));
        $instance->registerExtension($this->get('oro_datagrid.extension.action'));
        $instance->registerExtension($this->get('oro_datagrid.extension.mass_action'));
        $instance->registerExtension($this->get('oro_datagrid.extension.toolbar'));
        $instance->registerExtension($this->get('oro_datagrid.extension.views'));
        $instance->registerExtension($this->get('oro_datagrid.extension.export'));
        $instance->registerExtension($this->get('oro_datagrid.extension.gridparams'));
        $instance->registerExtension($this->get('oro_datagrid.extension.totals'));
        $instance->registerExtension($this->get('oro_entity_pagination.datagrid.extension.orm_entity_pagination'));
        $instance->registerExtension($this->get('oro_filter.extension.orm_filter'));
        $instance->registerExtension($this->get('oro_query_designer.grid.extension.orm_datasource'));
        $instance->registerExtension($this->get('oro_search.extension.search_results'));
        $instance->registerExtension($this->get('oro_search.extension.search_pager'));

        return $instance;
    }

    /**
     * Gets the 'oro_datagrid.datagrid.column_options_guesser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Datagrid\DefaultColumnOptionsGuesser A Oro\Bundle\DataGridBundle\Datagrid\DefaultColumnOptionsGuesser instance.
     */
    protected function getOroDatagrid_Datagrid_ColumnOptionsGuesserService()
    {
        return $this->services['oro_datagrid.datagrid.column_options_guesser'] = new \Oro\Bundle\DataGridBundle\Datagrid\DefaultColumnOptionsGuesser();
    }

    /**
     * Gets the 'oro_datagrid.datagrid.guesser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Datagrid\DatagridGuesser A Oro\Bundle\DataGridBundle\Datagrid\DatagridGuesser instance.
     */
    protected function getOroDatagrid_Datagrid_GuesserService()
    {
        return $this->services['oro_datagrid.datagrid.guesser'] = new \Oro\Bundle\DataGridBundle\Datagrid\DatagridGuesser($this, array(0 => 'oro_entity_extend.datagrid.column_options_guesser', 1 => 'oro_datagrid.datagrid.column_options_guesser', 2 => 'oro_filter.datagrid.column_options_guesser'));
    }

    /**
     * Gets the 'oro_datagrid.datagrid.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Datagrid\Manager A Oro\Bundle\DataGridBundle\Datagrid\Manager instance.
     */
    protected function getOroDatagrid_Datagrid_ManagerService()
    {
        return $this->services['oro_datagrid.datagrid.manager'] = new \Oro\Bundle\DataGridBundle\Datagrid\Manager($this->get('oro_datagrid.configuration.provider.chain'), $this->get('oro_datagrid.datagrid.builder'), $this->get('oro_datagrid.datagrid.request_parameters_factory'), $this->get('oro_datagrid.datagrid.name_strategy'));
    }

    /**
     * Gets the 'oro_datagrid.datagrid.name_strategy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DashboardBundle\Datagrid\NameStrategy A Oro\Bundle\DashboardBundle\Datagrid\NameStrategy instance.
     */
    protected function getOroDatagrid_Datagrid_NameStrategyService()
    {
        $this->services['oro_datagrid.datagrid.name_strategy'] = $instance = new \Oro\Bundle\DashboardBundle\Datagrid\NameStrategy();

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_datagrid.datagrid.request_parameters_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Datagrid\RequestParameterBagFactory A Oro\Bundle\DataGridBundle\Datagrid\RequestParameterBagFactory instance.
     */
    protected function getOroDatagrid_Datagrid_RequestParametersFactoryService()
    {
        $this->services['oro_datagrid.datagrid.request_parameters_factory'] = $instance = new \Oro\Bundle\DataGridBundle\Datagrid\RequestParameterBagFactory('Oro\\Bundle\\DataGridBundle\\Datagrid\\ParameterBag');

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_datagrid.datasource.orm' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Datasource\Orm\OrmDatasource A Oro\Bundle\DataGridBundle\Datasource\Orm\OrmDatasource instance.
     */
    protected function getOroDatagrid_Datasource_OrmService()
    {
        return $this->services['oro_datagrid.datasource.orm'] = new \Oro\Bundle\DataGridBundle\Datasource\Orm\OrmDatasource($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_datagrid.event.dispatcher'), $this->get('oro_datagrid.datasource.orm.parameter_binder'), $this->get('oro_entity.query_hint_resolver'));
    }

    /**
     * Gets the 'oro_datagrid.datasource.orm.parameter_binder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Datasource\Orm\ParameterBinder A Oro\Bundle\DataGridBundle\Datasource\Orm\ParameterBinder instance.
     */
    protected function getOroDatagrid_Datasource_Orm_ParameterBinderService()
    {
        return $this->services['oro_datagrid.datasource.orm.parameter_binder'] = new \Oro\Bundle\DataGridBundle\Datasource\Orm\ParameterBinder();
    }

    /**
     * Gets the 'oro_datagrid.event.dispatcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Event\EventDispatcher A Oro\Bundle\DataGridBundle\Event\EventDispatcher instance.
     */
    protected function getOroDatagrid_Event_DispatcherService()
    {
        return $this->services['oro_datagrid.event.dispatcher'] = new \Oro\Bundle\DataGridBundle\Event\EventDispatcher($this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_datagrid.event_listener.cell_selection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\EventListener\CellSelectionListener A Oro\Bundle\DataGridBundle\EventListener\CellSelectionListener instance.
     */
    protected function getOroDatagrid_EventListener_CellSelectionService()
    {
        return $this->services['oro_datagrid.event_listener.cell_selection'] = new \Oro\Bundle\DataGridBundle\EventListener\CellSelectionListener();
    }

    /**
     * Gets the 'oro_datagrid.event_listener.datasource_bind_parameters' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\EventListener\DatasourceBindParametersListener A Oro\Bundle\DataGridBundle\EventListener\DatasourceBindParametersListener instance.
     */
    protected function getOroDatagrid_EventListener_DatasourceBindParametersService()
    {
        return $this->services['oro_datagrid.event_listener.datasource_bind_parameters'] = new \Oro\Bundle\DataGridBundle\EventListener\DatasourceBindParametersListener();
    }

    /**
     * Gets the 'oro_datagrid.event_listener.grid_views_load' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\EventListener\GridViewsLoadListener A Oro\Bundle\DataGridBundle\EventListener\GridViewsLoadListener instance.
     */
    protected function getOroDatagrid_EventListener_GridViewsLoadService()
    {
        return $this->services['oro_datagrid.event_listener.grid_views_load'] = new \Oro\Bundle\DataGridBundle\EventListener\GridViewsLoadListener($this->get('doctrine'), $this->get('oro_security.security_facade'), $this->get('oro_security.acl_helper'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_datagrid.event_listener.ormdatasource_acl' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\EventListener\OrmDatasourceAclListener A Oro\Bundle\DataGridBundle\EventListener\OrmDatasourceAclListener instance.
     */
    protected function getOroDatagrid_EventListener_OrmdatasourceAclService()
    {
        return $this->services['oro_datagrid.event_listener.ormdatasource_acl'] = new \Oro\Bundle\DataGridBundle\EventListener\OrmDatasourceAclListener($this->get('oro_security.acl_helper'));
    }

    /**
     * Gets the 'oro_datagrid.event_listener.row_selection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\EventListener\RowSelectionListener A Oro\Bundle\DataGridBundle\EventListener\RowSelectionListener instance.
     */
    protected function getOroDatagrid_EventListener_RowSelectionService()
    {
        return $this->services['oro_datagrid.event_listener.row_selection'] = new \Oro\Bundle\DataGridBundle\EventListener\RowSelectionListener();
    }

    /**
     * Gets the 'oro_datagrid.extension.action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Action\ActionExtension A Oro\Bundle\DataGridBundle\Extension\Action\ActionExtension instance.
     */
    protected function getOroDatagrid_Extension_ActionService()
    {
        $this->services['oro_datagrid.extension.action'] = $instance = new \Oro\Bundle\DataGridBundle\Extension\Action\ActionExtension($this, $this->get('oro_security.security_facade'), $this->get('translator'));

        $instance->registerAction('dialog', 'oro_attachment.datagrid.action.dialog');
        $instance->registerAction('ajaxdeletefield', 'oro_entity_extend.datagrid.action.type.ajaxdeletefield');
        $instance->registerAction('schedule-sync', 'oro_integration.action.schedule_sync');
        $instance->registerAction('navigate', 'oro_datagrid.extension.action.type.navigate');
        $instance->registerAction('ajax', 'oro_datagrid.extension.action.type.ajax');
        $instance->registerAction('delete', 'oro_datagrid.extension.action.type.delete');
        $instance->registerAction('ajaxdelete', 'oro_datagrid.extension.action.type.ajaxdelete');
        $instance->registerAction('workflow-activate', 'oro_workflow.datagrid.action.workflow_activate');

        return $instance;
    }

    /**
     * Gets the 'oro_datagrid.extension.action.type.ajax' service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Action\Actions\AjaxAction A Oro\Bundle\DataGridBundle\Extension\Action\Actions\AjaxAction instance.
     */
    protected function getOroDatagrid_Extension_Action_Type_AjaxService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\Action\Actions\AjaxAction();
    }

    /**
     * Gets the 'oro_datagrid.extension.action.type.ajaxdelete' service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Action\Actions\AjaxDeleteAction A Oro\Bundle\DataGridBundle\Extension\Action\Actions\AjaxDeleteAction instance.
     */
    protected function getOroDatagrid_Extension_Action_Type_AjaxdeleteService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\Action\Actions\AjaxDeleteAction();
    }

    /**
     * Gets the 'oro_datagrid.extension.action.type.delete' service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Action\Actions\DeleteAction A Oro\Bundle\DataGridBundle\Extension\Action\Actions\DeleteAction instance.
     */
    protected function getOroDatagrid_Extension_Action_Type_DeleteService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\Action\Actions\DeleteAction();
    }

    /**
     * Gets the 'oro_datagrid.extension.action.type.navigate' service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Action\Actions\NavigateAction A Oro\Bundle\DataGridBundle\Extension\Action\Actions\NavigateAction instance.
     */
    protected function getOroDatagrid_Extension_Action_Type_NavigateService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\Action\Actions\NavigateAction();
    }

    /**
     * Gets the 'oro_datagrid.extension.export' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Export\ExportExtension A Oro\Bundle\DataGridBundle\Extension\Export\ExportExtension instance.
     */
    protected function getOroDatagrid_Extension_ExportService()
    {
        return $this->services['oro_datagrid.extension.export'] = new \Oro\Bundle\DataGridBundle\Extension\Export\ExportExtension($this->get('translator'));
    }

    /**
     * Gets the 'oro_datagrid.extension.formatter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Formatter\FormatterExtension A Oro\Bundle\DataGridBundle\Extension\Formatter\FormatterExtension instance.
     */
    public function getOroDatagrid_Extension_FormatterService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_datagrid.extension.formatter'] = new OroBundleDataGridBundleExtensionFormatterFormatterExtension_000000002e47eca300000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroDatagrid_Extension_FormatterService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\DataGridBundle\Extension\Formatter\FormatterExtension($this->get('translator'));

        $instance->registerProperty('field', $this->get('oro_datagrid.extension.formatter.field_property'));
        $instance->registerProperty('url', $this->get('oro_datagrid.extension.formatter.property.url_property'));
        $instance->registerProperty('link', $this->get('oro_datagrid.extension.formatter.property.link_property'));
        $instance->registerProperty('twig', $this->get('oro_datagrid.extension.formatter.property.twig_property'));
        $instance->registerProperty('translatable', $this->get('oro_datagrid.extension.formatter.property.translatable_property'));
        $instance->registerProperty('callback', $this->get('oro_datagrid.extension.formatter.property.callback_property'));
        $instance->registerProperty('localized_number', $this->get('oro_datagrid.extension.formatter.property.localized_number_property'));
        $instance->registerProperty('embedded_form_type', $this->get('oro_embedded_form.grid.formatter.embedded_form_type_property'));
        $instance->registerProperty('search-result', $this->get('oro_search.extension.formatter.property.search_result_property'));

        return $instance;
    }

    /**
     * Gets the 'oro_datagrid.extension.formatter.field_property' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\FieldProperty A Oro\Bundle\DataGridBundle\Extension\Formatter\Property\FieldProperty instance.
     */
    protected function getOroDatagrid_Extension_Formatter_FieldPropertyService()
    {
        return $this->services['oro_datagrid.extension.formatter.field_property'] = new \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\FieldProperty($this->get('translator'));
    }

    /**
     * Gets the 'oro_datagrid.extension.formatter.property.callback_property' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\CallbackProperty A Oro\Bundle\DataGridBundle\Extension\Formatter\Property\CallbackProperty instance.
     */
    protected function getOroDatagrid_Extension_Formatter_Property_CallbackPropertyService()
    {
        return $this->services['oro_datagrid.extension.formatter.property.callback_property'] = new \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\CallbackProperty();
    }

    /**
     * Gets the 'oro_datagrid.extension.formatter.property.link_property' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\LinkProperty A Oro\Bundle\DataGridBundle\Extension\Formatter\Property\LinkProperty instance.
     */
    protected function getOroDatagrid_Extension_Formatter_Property_LinkPropertyService()
    {
        return $this->services['oro_datagrid.extension.formatter.property.link_property'] = new \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\LinkProperty($this->get('router'), $this->get('twig'));
    }

    /**
     * Gets the 'oro_datagrid.extension.formatter.property.localized_number_property' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\LocalizedNumberProperty A Oro\Bundle\DataGridBundle\Extension\Formatter\Property\LocalizedNumberProperty instance.
     */
    protected function getOroDatagrid_Extension_Formatter_Property_LocalizedNumberPropertyService()
    {
        return $this->services['oro_datagrid.extension.formatter.property.localized_number_property'] = new \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\LocalizedNumberProperty($this->get('translator'), $this->get('oro_locale.formatter.number'));
    }

    /**
     * Gets the 'oro_datagrid.extension.formatter.property.translatable_property' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\TranslatableProperty A Oro\Bundle\DataGridBundle\Extension\Formatter\Property\TranslatableProperty instance.
     */
    protected function getOroDatagrid_Extension_Formatter_Property_TranslatablePropertyService()
    {
        return $this->services['oro_datagrid.extension.formatter.property.translatable_property'] = new \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\TranslatableProperty($this->get('translator'));
    }

    /**
     * Gets the 'oro_datagrid.extension.formatter.property.twig_property' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\TwigTemplateProperty A Oro\Bundle\DataGridBundle\Extension\Formatter\Property\TwigTemplateProperty instance.
     */
    protected function getOroDatagrid_Extension_Formatter_Property_TwigPropertyService()
    {
        return $this->services['oro_datagrid.extension.formatter.property.twig_property'] = new \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\TwigTemplateProperty($this->get('twig'));
    }

    /**
     * Gets the 'oro_datagrid.extension.formatter.property.url_property' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\UrlProperty A Oro\Bundle\DataGridBundle\Extension\Formatter\Property\UrlProperty instance.
     */
    protected function getOroDatagrid_Extension_Formatter_Property_UrlPropertyService()
    {
        return $this->services['oro_datagrid.extension.formatter.property.url_property'] = new \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\UrlProperty($this->get('router'));
    }

    /**
     * Gets the 'oro_datagrid.extension.gridparams' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\GridParams\GridParamsExtension A Oro\Bundle\DataGridBundle\Extension\GridParams\GridParamsExtension instance.
     */
    protected function getOroDatagrid_Extension_GridparamsService()
    {
        return $this->services['oro_datagrid.extension.gridparams'] = new \Oro\Bundle\DataGridBundle\Extension\GridParams\GridParamsExtension();
    }

    /**
     * Gets the 'oro_datagrid.extension.mass_action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\MassAction\MassActionExtension A Oro\Bundle\DataGridBundle\Extension\MassAction\MassActionExtension instance.
     */
    protected function getOroDatagrid_Extension_MassActionService()
    {
        $this->services['oro_datagrid.extension.mass_action'] = $instance = new \Oro\Bundle\DataGridBundle\Extension\MassAction\MassActionExtension($this, $this->get('oro_security.security_facade'), $this->get('translator'));

        $instance->registerAction('emailmarkread', 'oro_email.mass_action.mark.read');
        $instance->registerAction('emailmarkunread', 'oro_email.mass_action.mark.unread');
        $instance->registerAction('ajax', 'oro_datagrid.extension.mass_action.type.ajax');
        $instance->registerAction('delete', 'oro_datagrid.extension.mass_action.type.delete');
        $instance->registerAction('redirect', 'oro_datagrid.extension.mass_action.type.redirect');
        $instance->registerAction('widget', 'oro_datagrid.extension.mass_action.type.widget');
        $instance->registerAction('window', 'oro_datagrid.extension.mass_action.type.window');
        $instance->registerAction('merge', 'oro_entity_merge.mass_action.merge');

        return $instance;
    }

    /**
     * Gets the 'oro_datagrid.extension.mass_action.handler.delete' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\MassAction\DeleteMassActionHandler A Oro\Bundle\DataGridBundle\Extension\MassAction\DeleteMassActionHandler instance.
     */
    protected function getOroDatagrid_Extension_MassAction_Handler_DeleteService()
    {
        return $this->services['oro_datagrid.extension.mass_action.handler.delete'] = new \Oro\Bundle\DataGridBundle\Extension\MassAction\DeleteMassActionHandler($this->get('doctrine.orm.default_entity_manager'), $this->get('translator'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_datagrid.extension.mass_action.type.ajax' service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Ajax\AjaxMassAction A Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Ajax\AjaxMassAction instance.
     */
    protected function getOroDatagrid_Extension_MassAction_Type_AjaxService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Ajax\AjaxMassAction();
    }

    /**
     * Gets the 'oro_datagrid.extension.mass_action.type.delete' service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Ajax\DeleteMassAction A Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Ajax\DeleteMassAction instance.
     */
    protected function getOroDatagrid_Extension_MassAction_Type_DeleteService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Ajax\DeleteMassAction();
    }

    /**
     * Gets the 'oro_datagrid.extension.mass_action.type.redirect' service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Redirect\RedirectMassAction A Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Redirect\RedirectMassAction instance.
     */
    protected function getOroDatagrid_Extension_MassAction_Type_RedirectService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Redirect\RedirectMassAction();
    }

    /**
     * Gets the 'oro_datagrid.extension.mass_action.type.widget' service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Widget\WidgetMassAction A Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Widget\WidgetMassAction instance.
     */
    protected function getOroDatagrid_Extension_MassAction_Type_WidgetService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Widget\WidgetMassAction();
    }

    /**
     * Gets the 'oro_datagrid.extension.mass_action.type.window' service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Widget\WindowMassAction A Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Widget\WindowMassAction instance.
     */
    protected function getOroDatagrid_Extension_MassAction_Type_WindowService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Widget\WindowMassAction();
    }

    /**
     * Gets the 'oro_datagrid.extension.orm_pager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Pager\OrmPagerExtension A Oro\Bundle\DataGridBundle\Extension\Pager\OrmPagerExtension instance.
     */
    protected function getOroDatagrid_Extension_OrmPagerService()
    {
        return $this->services['oro_datagrid.extension.orm_pager'] = new \Oro\Bundle\DataGridBundle\Extension\Pager\OrmPagerExtension($this->get('oro_datagrid.extension.pager.orm.pager'));
    }

    /**
     * Gets the 'oro_datagrid.extension.orm_sorter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Sorter\OrmSorterExtension A Oro\Bundle\DataGridBundle\Extension\Sorter\OrmSorterExtension instance.
     */
    protected function getOroDatagrid_Extension_OrmSorterService()
    {
        return $this->services['oro_datagrid.extension.orm_sorter'] = new \Oro\Bundle\DataGridBundle\Extension\Sorter\OrmSorterExtension();
    }

    /**
     * Gets the 'oro_datagrid.extension.pager.orm.pager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Pager\Orm\Pager A Oro\Bundle\DataGridBundle\Extension\Pager\Orm\Pager instance.
     */
    protected function getOroDatagrid_Extension_Pager_Orm_PagerService()
    {
        return $this->services['oro_datagrid.extension.pager.orm.pager'] = new \Oro\Bundle\DataGridBundle\Extension\Pager\Orm\Pager($this->get('oro_security.acl_helper'), $this->get('oro_batch.orm.query_builder.count_query_optimizer'));
    }

    /**
     * Gets the 'oro_datagrid.extension.toolbar' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Toolbar\ToolbarExtension A Oro\Bundle\DataGridBundle\Extension\Toolbar\ToolbarExtension instance.
     */
    protected function getOroDatagrid_Extension_ToolbarService()
    {
        return $this->services['oro_datagrid.extension.toolbar'] = new \Oro\Bundle\DataGridBundle\Extension\Toolbar\ToolbarExtension($this->get('oro_config.user'));
    }

    /**
     * Gets the 'oro_datagrid.extension.totals' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\Totals\OrmTotalsExtension A Oro\Bundle\DataGridBundle\Extension\Totals\OrmTotalsExtension instance.
     */
    protected function getOroDatagrid_Extension_TotalsService()
    {
        return $this->services['oro_datagrid.extension.totals'] = new \Oro\Bundle\DataGridBundle\Extension\Totals\OrmTotalsExtension($this->get('translator'), $this->get('oro_locale.formatter.number'), $this->get('oro_locale.formatter.date_time'), $this->get('oro_security.acl_helper'));
    }

    /**
     * Gets the 'oro_datagrid.extension.views' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\GridViews\GridViewsExtension A Oro\Bundle\DataGridBundle\Extension\GridViews\GridViewsExtension instance.
     */
    protected function getOroDatagrid_Extension_ViewsService()
    {
        return $this->services['oro_datagrid.extension.views'] = new \Oro\Bundle\DataGridBundle\Extension\GridViews\GridViewsExtension($this->get('debug.event_dispatcher'), $this->get('oro_security.security_facade'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_datagrid.form.grid_view.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroDatagrid_Form_GridView_ApiService()
    {
        return $this->services['oro_datagrid.form.grid_view.api'] = $this->get('form.factory')->createNamed(NULL, 'oro_datagrid_grid_view');
    }

    /**
     * Gets the 'oro_datagrid.form.type.grid_view_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Form\Type\GridViewType A Oro\Bundle\DataGridBundle\Form\Type\GridViewType instance.
     */
    protected function getOroDatagrid_Form_Type_GridViewTypeService()
    {
        return $this->services['oro_datagrid.form.type.grid_view_type'] = new \Oro\Bundle\DataGridBundle\Form\Type\GridViewType();
    }

    /**
     * Gets the 'oro_datagrid.form.type.sorting_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Form\Type\GridSortingType A Oro\Bundle\DataGridBundle\Form\Type\GridSortingType instance.
     */
    protected function getOroDatagrid_Form_Type_SortingTypeService()
    {
        return $this->services['oro_datagrid.form.type.sorting_type'] = new \Oro\Bundle\DataGridBundle\Form\Type\GridSortingType();
    }

    /**
     * Gets the 'oro_datagrid.grid_view.form.handler.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Form\Handler\GridViewApiHandler A Oro\Bundle\DataGridBundle\Form\Handler\GridViewApiHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_datagrid.grid_view.form.handler.api' service is requested while the 'request' scope is not active
     */
    protected function getOroDatagrid_GridView_Form_Handler_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_datagrid.grid_view.form.handler.api', 'request');
        }

        return $this->services['oro_datagrid.grid_view.form.handler.api'] = $this->scopedServices['request']['oro_datagrid.grid_view.form.handler.api'] = new \Oro\Bundle\DataGridBundle\Form\Handler\GridViewApiHandler($this->get('oro_datagrid.form.grid_view.api'), $this->get('request'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_datagrid.grid_view.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroDatagrid_GridView_Manager_ApiService()
    {
        $this->services['oro_datagrid.grid_view.manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\DataGridBundle\\Entity\\GridView', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_datagrid.importexport.data_converter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\ImportExport\DatagridDataConverter A Oro\Bundle\DataGridBundle\ImportExport\DatagridDataConverter instance.
     */
    protected function getOroDatagrid_Importexport_DataConverterService()
    {
        return $this->services['oro_datagrid.importexport.data_converter'] = new \Oro\Bundle\DataGridBundle\ImportExport\DatagridDataConverter($this->get('oro_datagrid.datagrid.manager.link'), $this->get('translator'), $this->get('oro_locale.formatter.number'), $this->get('oro_locale.formatter.date_time'));
    }

    /**
     * Gets the 'oro_datagrid.importexport.export_connector' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\ImportExport\DatagridExportConnector A Oro\Bundle\DataGridBundle\ImportExport\DatagridExportConnector instance.
     */
    protected function getOroDatagrid_Importexport_ExportConnectorService()
    {
        return $this->services['oro_datagrid.importexport.export_connector'] = new \Oro\Bundle\DataGridBundle\ImportExport\DatagridExportConnector($this->get('oro_datagrid.datagrid.manager.link'));
    }

    /**
     * Gets the 'oro_datagrid.importexport.export_reader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\ImportExport\DatagridExportReader A Oro\Bundle\DataGridBundle\ImportExport\DatagridExportReader instance.
     */
    protected function getOroDatagrid_Importexport_ExportReaderService()
    {
        return $this->services['oro_datagrid.importexport.export_reader'] = new \Oro\Bundle\DataGridBundle\ImportExport\DatagridExportReader($this->get('oro_importexport.context_registry'), $this->get('oro_datagrid.importexport.export_connector'));
    }

    /**
     * Gets the 'oro_datagrid.importexport.processor.export' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Processor\ExportProcessor A Oro\Bundle\ImportExportBundle\Processor\ExportProcessor instance.
     */
    protected function getOroDatagrid_Importexport_Processor_ExportService()
    {
        $this->services['oro_datagrid.importexport.processor.export'] = $instance = new \Oro\Bundle\ImportExportBundle\Processor\ExportProcessor();

        $instance->setSerializer($this->get('oro_importexport.serializer'));
        $instance->setDataConverter($this->get('oro_datagrid.importexport.data_converter'));

        return $instance;
    }

    /**
     * Gets the 'oro_datagrid.mass_action.dispatcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\MassAction\MassActionDispatcher A Oro\Bundle\DataGridBundle\Extension\MassAction\MassActionDispatcher instance.
     */
    protected function getOroDatagrid_MassAction_DispatcherService()
    {
        return $this->services['oro_datagrid.mass_action.dispatcher'] = new \Oro\Bundle\DataGridBundle\Extension\MassAction\MassActionDispatcher($this, $this->get('oro_datagrid.datagrid.manager'), $this->get('oro_security.acl_helper'));
    }

    /**
     * Gets the 'oro_datagrid.mass_action.parameters_parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Extension\MassAction\MassActionParametersParser A Oro\Bundle\DataGridBundle\Extension\MassAction\MassActionParametersParser instance.
     */
    protected function getOroDatagrid_MassAction_ParametersParserService()
    {
        return $this->services['oro_datagrid.mass_action.parameters_parser'] = new \Oro\Bundle\DataGridBundle\Extension\MassAction\MassActionParametersParser();
    }

    /**
     * Gets the 'oro_datagrid.provider.resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Provider\SystemAwareResolver A Oro\Bundle\DataGridBundle\Provider\SystemAwareResolver instance.
     */
    protected function getOroDatagrid_Provider_ResolverService()
    {
        return $this->services['oro_datagrid.provider.resolver'] = new \Oro\Bundle\DataGridBundle\Provider\SystemAwareResolver($this);
    }

    /**
     * Gets the 'oro_datagrid.twig.datagrid' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataGridBundle\Twig\DataGridExtension A Oro\Bundle\DataGridBundle\Twig\DataGridExtension instance.
     */
    protected function getOroDatagrid_Twig_DatagridService()
    {
        return $this->services['oro_datagrid.twig.datagrid'] = new \Oro\Bundle\DataGridBundle\Twig\DataGridExtension($this->get('oro_datagrid.datagrid.manager'), $this->get('oro_datagrid.datagrid.name_strategy'), $this->get('router'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_distribution.composer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Composer\Composer A Composer\Composer instance.
     */
    protected function getOroDistribution_ComposerService()
    {
        return $this->services['oro_distribution.composer'] = \Composer\Factory::create($this->get('oro_distribution.composer.io'), 'C:\\wamp\\www\\stockvalue~~\\app/../composer.json');
    }

    /**
     * Gets the 'oro_distribution.composer.json_file' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Composer\Json\JsonFile A Composer\Json\JsonFile instance.
     */
    protected function getOroDistribution_Composer_JsonFileService()
    {
        return $this->services['oro_distribution.composer.json_file'] = new \Composer\Json\JsonFile('C:\\wamp\\www\\stockvalue~~\\app/../composer.json');
    }

    /**
     * Gets the 'oro_distribution.expose_routing_loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DistributionBundle\Routing\OroExposeLoader A Oro\Bundle\DistributionBundle\Routing\OroExposeLoader instance.
     */
    protected function getOroDistribution_ExposeRoutingLoaderService()
    {
        $this->services['oro_distribution.expose_routing_loader'] = $instance = new \Oro\Bundle\DistributionBundle\Routing\OroExposeLoader($this->get('kernel'), $this->get('oro_distribution.routing_options_resolver'));

        $instance->setResolver($this->get('routing.resolver'));
        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_distribution.form.type.composer_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DistributionBundle\Form\Type\Composer\ConfigType A Oro\Bundle\DistributionBundle\Form\Type\Composer\ConfigType instance.
     */
    protected function getOroDistribution_Form_Type_ComposerConfigService()
    {
        return $this->services['oro_distribution.form.type.composer_config'] = new \Oro\Bundle\DistributionBundle\Form\Type\Composer\ConfigType();
    }

    /**
     * Gets the 'oro_distribution.form.type.composer_repository' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DistributionBundle\Form\Type\Composer\RepositoryType A Oro\Bundle\DistributionBundle\Form\Type\Composer\RepositoryType instance.
     */
    protected function getOroDistribution_Form_Type_ComposerRepositoryService()
    {
        return $this->services['oro_distribution.form.type.composer_repository'] = new \Oro\Bundle\DistributionBundle\Form\Type\Composer\RepositoryType();
    }

    /**
     * Gets the 'oro_distribution.listener.navigation_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DistributionBundle\EventListener\NavigationListener A Oro\Bundle\DistributionBundle\EventListener\NavigationListener instance.
     */
    protected function getOroDistribution_Listener_NavigationListenerService()
    {
        $this->services['oro_distribution.listener.navigation_listener'] = $instance = new \Oro\Bundle\DistributionBundle\EventListener\NavigationListener($this->get('security.context'), 'install.php');

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_distribution.package_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\DistributionBundle\Manager\PackageManager A Oro\Bundle\DistributionBundle\Manager\PackageManager instance.
     */
    public function getOroDistribution_PackageManagerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_distribution.package_manager'] = new OroBundleDistributionBundleManagerPackageManager_000000002e47eccc00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroDistribution_PackageManagerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $a = $this->get('oro_distribution.composer');
        $b = $this->get('oro_distribution.composer.io');
        $c = $this->get('monolog.logger.oro_distribution');

        return new \Oro\Bundle\DistributionBundle\Manager\PackageManager($a, call_user_func(array('Composer\\Installer', 'create'), $b, $a), $b, new \Oro\Bundle\DistributionBundle\Script\Runner($this->get('oro_distribution.composer')->getInstallationManager(), $c, 'C:\\wamp\\www\\stockvalue~~\\app', 'dev'), $this->get('oro_platform.maintenance'), $c, 'C:\\wamp\\www\\stockvalue~~\\app/../composer.json');
    }

    /**
     * Gets the 'oro_distribution.routing_loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DistributionBundle\Routing\OroAutoLoader A Oro\Bundle\DistributionBundle\Routing\OroAutoLoader instance.
     */
    protected function getOroDistribution_RoutingLoaderService()
    {
        $this->services['oro_distribution.routing_loader'] = $instance = new \Oro\Bundle\DistributionBundle\Routing\OroAutoLoader($this->get('kernel'), $this->get('oro_distribution.routing_options_resolver'));

        $instance->setResolver($this->get('routing.resolver'));
        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.acl.voter.email_voter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Acl\Voter\EmailVoter A Oro\Bundle\EmailBundle\Acl\Voter\EmailVoter instance.
     */
    protected function getOroEmail_Acl_Voter_EmailVoterService()
    {
        return $this->services['oro_email.acl.voter.email_voter'] = new \Oro\Bundle\EmailBundle\Acl\Voter\EmailVoter($this);
    }

    /**
     * Gets the 'oro_email.activity_list.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Provider\EmailActivityListProvider A Oro\Bundle\EmailBundle\Provider\EmailActivityListProvider instance.
     */
    protected function getOroEmail_ActivityList_ProviderService()
    {
        $this->services['oro_email.activity_list.provider'] = $instance = new \Oro\Bundle\EmailBundle\Provider\EmailActivityListProvider($this->get('oro_entity.doctrine_helper'), $this->get('oro_entity_config.link.entity_manager'), $this->get('oro_entity.entity_name_resolver'), $this->get('router'), $this->get('oro_entity_config.config_manager'), $this->get('oro_email.email.thread.provider'), $this->get('oro_ui.html_tag_helper'), $this->get('oro_security.security_facade.link'), $this->get('oro_email.mailbox.process_storage'));

        $instance->setSecurityContextLink($this->get('security.context.link'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.autocomplete.mailbox_user_search_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Autocomplete\MailboxUserSearchHandler A Oro\Bundle\EmailBundle\Autocomplete\MailboxUserSearchHandler instance.
     */
    protected function getOroEmail_Autocomplete_MailboxUserSearchHandlerService()
    {
        $this->services['oro_email.autocomplete.mailbox_user_search_handler'] = $instance = new \Oro\Bundle\EmailBundle\Autocomplete\MailboxUserSearchHandler($this->get('oro_attachment.manager'), 'Oro\\Bundle\\UserBundle\\Entity\\User', array(0 => 'username', 1 => 'namePrefix', 2 => 'firstName', 3 => 'middleName', 4 => 'lastName', 5 => 'nameSuffix', 6 => 'email'));

        $instance->initSearchIndexer($this->get('oro_search.index'), array('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization' => array('alias' => 'organization', 'search_template' => 'OroOrganizationBundle:Search:organizationResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit' => array('alias' => 'business_unit', 'search_template' => 'OroOrganizationBundle:Search:businessUnitResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser' => array('alias' => 'oro_email', 'label' => 'Emails', 'search_template' => 'OroEmailBundle:Email:searchResult.html.twig', 'route' => array('name' => 'oro_email_thread_view', 'parameters' => array('id' => 'email.id')), 'title_fields' => array(0 => 'email.subject'), 'fields' => array(0 => array('name' => 'email', 'relation_type' => 'many-to-one', 'relation_fields' => array(0 => array('name' => 'subject', 'target_type' => 'text', 'target_fields' => array(0 => 'subject'), 'relation_fields' => array())), 'target_fields' => array())), 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\User' => array('alias' => 'oro_user', 'title_fields' => array(0 => 'username'), 'route' => array('name' => 'oro_user_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroUserBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'username', 'target_type' => 'text', 'target_fields' => array(0 => 'username'), 'relation_fields' => array()), 1 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array()), 2 => array('name' => 'phone', 'target_type' => 'text', 'target_fields' => array(0 => 'phone'), 'relation_fields' => array()), 3 => array('name' => 'namePrefix', 'target_type' => 'text', 'target_fields' => array(0 => 'namePrefix'), 'relation_fields' => array()), 4 => array('name' => 'firstName', 'target_type' => 'text', 'target_fields' => array(0 => 'firstName'), 'relation_fields' => array()), 5 => array('name' => 'middleName', 'target_type' => 'text', 'target_fields' => array(0 => 'middleName'), 'relation_fields' => array()), 6 => array('name' => 'lastName', 'target_type' => 'text', 'target_fields' => array(0 => 'lastName'), 'relation_fields' => array()), 7 => array('name' => 'nameSuffix', 'target_type' => 'text', 'target_fields' => array(0 => 'nameSuffix'), 'relation_fields' => array()), 8 => array('name' => 'birthday', 'target_type' => 'datetime', 'target_fields' => array(0 => 'birthday'), 'relation_fields' => array()), 9 => array('name' => 'emails', 'relation_type' => 'one-to-many', 'relation_fields' => array(0 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array())), 'target_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\Role' => array('alias' => 'oro_access_role', 'title_fields' => array(0 => 'label'), 'search_template' => 'OroUserBundle:Role:Search\\result.html.twig', 'route' => array('name' => 'oro_user_role_index', 'parameters' => array()), 'fields' => array(0 => array('name' => 'label', 'target_type' => 'text', 'target_fields' => array(0 => 'label'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent' => array('alias' => 'oro_clendar_event', 'title_fields' => array(0 => 'title'), 'route' => array('name' => 'oro_calendar_view', 'parameters' => array('id' => 'calendar.id')), 'search_template' => 'OroCalendarBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'title', 'target_type' => 'text', 'target_fields' => array(0 => 'title'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array()), 2 => array('name' => 'start', 'target_type' => 'datetime', 'target_fields' => array(0 => 'start'), 'relation_fields' => array()), 3 => array('name' => 'end', 'target_type' => 'datetime', 'target_fields' => array(0 => 'end'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\ReportBundle\\Entity\\Report' => array('alias' => 'oro_report', 'title_fields' => array(0 => 'name'), 'route' => array('name' => 'oro_report_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroReportBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\TagBundle\\Entity\\Tag' => array('alias' => 'oro_tag', 'title_fields' => array(0 => 'name'), 'search_template' => 'OroTagBundle:Search:result.html.twig', 'route' => array('name' => 'oro_tag_search', 'parameters' => array('id' => 'id')), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal')));
        $instance->initDoctrinePropertiesByManagerRegistry($this->get('doctrine'));
        $instance->setAclHelper($this->get('oro_security.acl_helper'));
        $instance->setEntityNameResolver($this->get('oro_entity.entity_name_resolver'));
        $instance->setSecurityFacade($this->get('oro_security.security_facade'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.autoresponserule_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Manager\AutoResponseManager A Oro\Bundle\EmailBundle\Manager\AutoResponseManager instance.
     */
    protected function getOroEmail_AutoresponseruleManagerService()
    {
        return $this->services['oro_email.autoresponserule_manager'] = new \Oro\Bundle\EmailBundle\Manager\AutoResponseManager($this->get('doctrine'), $this->get('oro_email.email.model.builder'), $this->get('oro_email.mailer.processor'), $this->get('oro_email.email_renderer'), $this->get('logger'), 'fr');
    }

    /**
     * Gets the 'oro_email.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroEmail_CacheService()
    {
        $this->services['oro_email.cache'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_email.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_email.context_email_recipients.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Provider\ContextEmailRecipientsProvider A Oro\Bundle\EmailBundle\Provider\ContextEmailRecipientsProvider instance.
     */
    protected function getOroEmail_ContextEmailRecipients_ProviderService()
    {
        return $this->services['oro_email.context_email_recipients.provider'] = new \Oro\Bundle\EmailBundle\Provider\ContextEmailRecipientsProvider($this->get('oro_email.related_emails.provider'));
    }

    /**
     * Gets the 'oro_email.datagrid.origin_folder.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Datagrid\OriginFolderFilterProvider A Oro\Bundle\EmailBundle\Datagrid\OriginFolderFilterProvider instance.
     */
    protected function getOroEmail_Datagrid_OriginFolder_ProviderService()
    {
        return $this->services['oro_email.datagrid.origin_folder.provider'] = new \Oro\Bundle\EmailBundle\Datagrid\OriginFolderFilterProvider($this->get('doctrine'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_email.datagrid_query_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Datagrid\EmailQueryFactory A Oro\Bundle\EmailBundle\Datagrid\EmailQueryFactory instance.
     */
    protected function getOroEmail_DatagridQueryFactoryService()
    {
        return $this->services['oro_email.datagrid_query_factory'] = new \Oro\Bundle\EmailBundle\Datagrid\EmailQueryFactory($this->get('oro_email.email.owner.provider.storage'), $this->get('oro_entity.entity_name_resolver'), $this->get('doctrine'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_email.direct_mailer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Mailer\DirectMailer A Oro\Bundle\EmailBundle\Mailer\DirectMailer instance.
     */
    protected function getOroEmail_DirectMailerService()
    {
        return $this->services['oro_email.direct_mailer'] = new \Oro\Bundle\EmailBundle\Mailer\DirectMailer($this->get('swiftmailer.mailer.default'), $this);
    }

    /**
     * Gets the 'oro_email.email.activity.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Entity\Manager\EmailActivityManager A Oro\Bundle\EmailBundle\Entity\Manager\EmailActivityManager instance.
     */
    protected function getOroEmail_Email_Activity_ManagerService()
    {
        return $this->services['oro_email.email.activity.manager'] = new \Oro\Bundle\EmailBundle\Entity\Manager\EmailActivityManager($this->get('oro_activity.manager'), $this->get('oro_email.activity_list.provider'), $this->get('oro_email.email.thread.provider'), $this->get('security.token_storage'), $this->get('oro_security.owner.entity_owner_accessor.link'));
    }

    /**
     * Gets the 'oro_email.email.address.helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Tools\EmailAddressHelper A Oro\Bundle\EmailBundle\Tools\EmailAddressHelper instance.
     */
    protected function getOroEmail_Email_Address_HelperService()
    {
        return $this->services['oro_email.email.address.helper'] = new \Oro\Bundle\EmailBundle\Tools\EmailAddressHelper();
    }

    /**
     * Gets the 'oro_email.email.address.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Entity\Manager\EmailAddressManager A Oro\Bundle\EmailBundle\Entity\Manager\EmailAddressManager instance.
     */
    protected function getOroEmail_Email_Address_ManagerService()
    {
        return $this->services['oro_email.email.address.manager'] = new \Oro\Bundle\EmailBundle\Entity\Manager\EmailAddressManager('OroEntityProxy\\OroEmailBundle', '%sProxy');
    }

    /**
     * Gets the 'oro_email.email.cache.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Cache\EmailCacheManager A Oro\Bundle\EmailBundle\Cache\EmailCacheManager instance.
     */
    protected function getOroEmail_Email_Cache_ManagerService()
    {
        $a = new \Oro\Bundle\EmailBundle\Provider\EmailBodyLoaderSelector();
        $a->addLoader(new \Oro\Bundle\ImapBundle\Provider\ImapEmailBodyLoader($this->get('oro_imap.connector.factory'), $this->get('oro_security.encoder.mcrypt')));

        $this->services['oro_email.email.cache.manager'] = $instance = new \Oro\Bundle\EmailBundle\Cache\EmailCacheManager($a, $this->get('doctrine.orm.default_entity_manager'), $this->get('debug.event_dispatcher'));

        $instance->setLogger($this->get('logger'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.email.entity.builder' service.
     *
     * @return \Oro\Bundle\EmailBundle\Builder\EmailEntityBuilder A Oro\Bundle\EmailBundle\Builder\EmailEntityBuilder instance.
     */
    protected function getOroEmail_Email_Entity_BuilderService()
    {
        $a = $this->get('oro_email.email.address.manager');

        return new \Oro\Bundle\EmailBundle\Builder\EmailEntityBuilder(new \Oro\Bundle\EmailBundle\Builder\EmailEntityBatchProcessor($a, $this->get('oro_email.email.owner.provider'), $this->get('debug.event_dispatcher')), $a, $this->get('oro_email.email.address.helper'));
    }

    /**
     * Gets the 'oro_email.email.flag.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Manager\EmailFlagManager A Oro\Bundle\EmailBundle\Manager\EmailFlagManager instance.
     */
    protected function getOroEmail_Email_Flag_ManagerService()
    {
        $a = new \Oro\Bundle\EmailBundle\Provider\EmailFlagManagerLoaderSelector();
        $a->addLoader(new \Oro\Bundle\ImapBundle\Provider\ImapEmailFlagManagerLoader($this->get('oro_imap.connector.factory'), $this->get('oro_security.encoder.mcrypt')));

        $this->services['oro_email.email.flag.manager'] = $instance = new \Oro\Bundle\EmailBundle\Manager\EmailFlagManager($a, $this->get('doctrine.orm.default_entity_manager'));

        $instance->setLogger($this->get('logger'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.email.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Entity\Manager\EmailManager A Oro\Bundle\EmailBundle\Entity\Manager\EmailManager instance.
     */
    protected function getOroEmail_Email_ManagerService()
    {
        return $this->services['oro_email.email.manager'] = new \Oro\Bundle\EmailBundle\Entity\Manager\EmailManager($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_email.email.thread.manager'), $this->get('oro_email.email.thread.provider'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_email.email.model.builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Builder\EmailModelBuilder A Oro\Bundle\EmailBundle\Builder\EmailModelBuilder instance.
     */
    protected function getOroEmail_Email_Model_BuilderService()
    {
        $this->services['oro_email.email.model.builder'] = $instance = new \Oro\Bundle\EmailBundle\Builder\EmailModelBuilder($this->get('oro_email.email.model.builder.helper'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_config.user'), $this->get('oro_email.activity_list.provider'), $this->get('oro_email.provider.email_attachment_provider'), $this->get('oro_email.form.factory'));

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_email.email.model.builder.helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Builder\Helper\EmailModelBuilderHelper A Oro\Bundle\EmailBundle\Builder\Helper\EmailModelBuilderHelper instance.
     */
    protected function getOroEmail_Email_Model_Builder_HelperService()
    {
        return $this->services['oro_email.email.model.builder.helper'] = new \Oro\Bundle\EmailBundle\Builder\Helper\EmailModelBuilderHelper($this->get('oro_entity.routing_helper'), $this->get('oro_email.email.address.helper'), $this->get('oro_entity.entity_name_resolver'), $this->get('oro_security.security_facade'), $this->get('oro_email.email.address.manager'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_email.email.cache.manager'), $this->get('templating'));
    }

    /**
     * Gets the 'oro_email.email.thread.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Entity\Manager\EmailThreadManager A Oro\Bundle\EmailBundle\Entity\Manager\EmailThreadManager instance.
     */
    protected function getOroEmail_Email_Thread_ManagerService()
    {
        return $this->services['oro_email.email.thread.manager'] = new \Oro\Bundle\EmailBundle\Entity\Manager\EmailThreadManager($this->get('oro_email.email.thread.provider'));
    }

    /**
     * Gets the 'oro_email.email.thread.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Entity\Provider\EmailThreadProvider A Oro\Bundle\EmailBundle\Entity\Provider\EmailThreadProvider instance.
     */
    protected function getOroEmail_Email_Thread_ProviderService()
    {
        return $this->services['oro_email.email.thread.provider'] = new \Oro\Bundle\EmailBundle\Entity\Provider\EmailThreadProvider();
    }

    /**
     * Gets the 'oro_email.email_attachment_transformer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Tools\EmailAttachmentTransformer A Oro\Bundle\EmailBundle\Tools\EmailAttachmentTransformer instance.
     */
    protected function getOroEmail_EmailAttachmentTransformerService()
    {
        return $this->services['oro_email.email_attachment_transformer'] = new \Oro\Bundle\EmailBundle\Tools\EmailAttachmentTransformer($this->get('knp_gaufrette.filesystem_map'), $this->get('oro_email.form.factory'));
    }

    /**
     * Gets the 'oro_email.email_body_type_transformer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\DataTransformer\EmailBodyTypeApiTransformer A Oro\Bundle\EmailBundle\Form\DataTransformer\EmailBodyTypeApiTransformer instance.
     */
    protected function getOroEmail_EmailBodyTypeTransformerService()
    {
        return $this->services['oro_email.email_body_type_transformer'] = new \Oro\Bundle\EmailBundle\Form\DataTransformer\EmailBodyTypeApiTransformer();
    }

    /**
     * Gets the 'oro_email.email_holder_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Tools\EmailHolderHelper A Oro\Bundle\EmailBundle\Tools\EmailHolderHelper instance.
     */
    protected function getOroEmail_EmailHolderHelperService()
    {
        return $this->services['oro_email.email_holder_helper'] = new \Oro\Bundle\EmailBundle\Tools\EmailHolderHelper($this->get('oro_entity_config.provider.extend'));
    }

    /**
     * Gets the 'oro_email.email_importance_transformer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\DataTransformer\EmailImportanceApiTransformer A Oro\Bundle\EmailBundle\Form\DataTransformer\EmailImportanceApiTransformer instance.
     */
    protected function getOroEmail_EmailImportanceTransformerService()
    {
        return $this->services['oro_email.email_importance_transformer'] = new \Oro\Bundle\EmailBundle\Form\DataTransformer\EmailImportanceApiTransformer();
    }

    /**
     * Gets the 'oro_email.email_recipients.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Provider\EmailRecipientsProvider A Oro\Bundle\EmailBundle\Provider\EmailRecipientsProvider instance.
     */
    protected function getOroEmail_EmailRecipients_ProviderService()
    {
        $this->services['oro_email.email_recipients.provider'] = $instance = new \Oro\Bundle\EmailBundle\Provider\EmailRecipientsProvider($this->get('translator'), $this->get('oro_email.provider.email_recipients.helper'));

        $instance->setProviders(array('oro_email.recent_email_recipients.provider' => $this->get('oro_email.recent_email_recipients.provider'), 'oro_activity_list.provider.email_recipients' => $this->get('oro_activity_list.provider.email_recipients'), 'oro_email.context_email_recipients.provider' => $this->get('oro_email.context_email_recipients.provider'), 'oro_user.email_recipients_provider' => $this->get('oro_user.email_recipients_provider')));

        return $instance;
    }

    /**
     * Gets the 'oro_email.email_renderer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\EmailBundle\Provider\EmailRenderer A Oro\Bundle\EmailBundle\Provider\EmailRenderer instance.
     */
    public function getOroEmail_EmailRendererService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_email.email_renderer'] = new OroBundleEmailBundleProviderEmailRenderer_000000002e47e19b00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroEmail_EmailRendererService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\EmailBundle\Provider\EmailRenderer($this->get('oro_email.twig.string_loader'), array('strict_variables' => true), $this->get('oro_email.emailtemplate.variable_provider'), $this->get('oro_email.cache'), 'oro_email.available_in_template_fields', $this->get('oro_email.twig.email_sandbox'), $this->get('translator'));

        $instance->addExtension($this->get('oro_ui.twig.html_tag'));
        $instance->addExtension($this->get('oro_config.twig.config_extension'));
        $instance->addExtension($this->get('oro_ui.twig.extension.formatter'));
        $instance->addExtension($this->get('oro_calendar.twig.dateformat'));
        $instance->addExtension($this->get('oro_locale.twig.date_time'));
        $instance->addExtension($this->get('oro_entity.twig.extension.entity'));
        $instance->addExtension($this->get('twig.extension.intl'));
        $instance->addExtension($this->get('twig.extension.routing'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.email_synchronization_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Sync\EmailSynchronizationManager A Oro\Bundle\EmailBundle\Sync\EmailSynchronizationManager instance.
     */
    protected function getOroEmail_EmailSynchronizationManagerService()
    {
        $this->services['oro_email.email_synchronization_manager'] = $instance = new \Oro\Bundle\EmailBundle\Sync\EmailSynchronizationManager($this);

        $instance->addSynchronizer('oro_imap.email_synchronizer');

        return $instance;
    }

    /**
     * Gets the 'oro_email.email_websocket.processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Model\WebSocket\WebSocketSendProcessor A Oro\Bundle\EmailBundle\Model\WebSocket\WebSocketSendProcessor instance.
     */
    protected function getOroEmail_EmailWebsocket_ProcessorService()
    {
        return $this->services['oro_email.email_websocket.processor'] = new \Oro\Bundle\EmailBundle\Model\WebSocket\WebSocketSendProcessor($this->get('oro_wamp.publisher'));
    }

    /**
     * Gets the 'oro_email.emailfolder.datagrid_view_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Datagrid\EmailFolderViewList A Oro\Bundle\EmailBundle\Datagrid\EmailFolderViewList instance.
     */
    protected function getOroEmail_Emailfolder_DatagridViewListService()
    {
        return $this->services['oro_email.emailfolder.datagrid_view_list'] = new \Oro\Bundle\EmailBundle\Datagrid\EmailFolderViewList($this->get('translator'), $this->get('oro_email.mailbox_choice_list'));
    }

    /**
     * Gets the 'oro_email.emailseen.datagrid_view_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Datagrid\EmailSeenViewList A Oro\Bundle\EmailBundle\Datagrid\EmailSeenViewList instance.
     */
    protected function getOroEmail_Emailseen_DatagridViewListService()
    {
        return $this->services['oro_email.emailseen.datagrid_view_list'] = new \Oro\Bundle\EmailBundle\Datagrid\EmailSeenViewList($this->get('translator'), $this->get('oro_email.mailbox_choice_list'));
    }

    /**
     * Gets the 'oro_email.emailtemplate.datagrid_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Datagrid\EmailTemplateGridHelper A Oro\Bundle\EmailBundle\Datagrid\EmailTemplateGridHelper instance.
     */
    protected function getOroEmail_Emailtemplate_DatagridHelperService()
    {
        return $this->services['oro_email.emailtemplate.datagrid_helper'] = new \Oro\Bundle\EmailBundle\Datagrid\EmailTemplateGridHelper($this->get('oro_entity.entity_provider'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_email.emailtemplate.datagrid_view_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Datagrid\EmailTemplatesViewList A Oro\Bundle\EmailBundle\Datagrid\EmailTemplatesViewList instance.
     */
    protected function getOroEmail_Emailtemplate_DatagridViewListService()
    {
        return $this->services['oro_email.emailtemplate.datagrid_view_list'] = new \Oro\Bundle\EmailBundle\Datagrid\EmailTemplatesViewList($this->get('translator'));
    }

    /**
     * Gets the 'oro_email.emailtemplate.variable_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Provider\VariablesProvider A Oro\Bundle\EmailBundle\Provider\VariablesProvider instance.
     */
    protected function getOroEmail_Emailtemplate_VariableProviderService()
    {
        $this->services['oro_email.emailtemplate.variable_provider'] = $instance = new \Oro\Bundle\EmailBundle\Provider\VariablesProvider();

        $instance->addEntityVariablesProvider($this->get('oro_email.emailtemplate.variable_provider.entity'));
        $instance->addSystemVariablesProvider($this->get('oro_email.emailtemplate.variable_provider.system'));
        $instance->addSystemVariablesProvider($this->get('oro_email.emailtemplate.variable_provider.user'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.emailtemplate.variable_provider.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\EmailBundle\Provider\EntityVariablesProvider A Oro\Bundle\EmailBundle\Provider\EntityVariablesProvider instance.
     */
    public function getOroEmail_Emailtemplate_VariableProvider_EntityService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_email.emailtemplate.variable_provider.entity'] = new OroBundleEmailBundleProviderEntityVariablesProvider_000000002e47e1e100000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroEmail_Emailtemplate_VariableProvider_EntityService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\EmailBundle\Provider\EntityVariablesProvider($this->get('translator'), $this->get('oro_entity_config.provider.email'), $this->get('oro_entity_config.provider.entity'), $this->get('doctrine'), $this->get('oro_ui.formatter'));
    }

    /**
     * Gets the 'oro_email.emailtemplate.variable_provider.system' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\EmailBundle\Provider\SystemVariablesProvider A Oro\Bundle\EmailBundle\Provider\SystemVariablesProvider instance.
     */
    public function getOroEmail_Emailtemplate_VariableProvider_SystemService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_email.emailtemplate.variable_provider.system'] = new OroBundleEmailBundleProviderSystemVariablesProvider_000000002e47e1eb00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroEmail_Emailtemplate_VariableProvider_SystemService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\EmailBundle\Provider\SystemVariablesProvider($this->get('translator'), $this->get('oro_config.user'), $this->get('oro_locale.formatter.date_time'));
    }

    /**
     * Gets the 'oro_email.emailtemplate.variable_provider.user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\EmailBundle\Provider\LoggedUserVariablesProvider A Oro\Bundle\EmailBundle\Provider\LoggedUserVariablesProvider instance.
     */
    public function getOroEmail_Emailtemplate_VariableProvider_UserService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_email.emailtemplate.variable_provider.user'] = new OroBundleEmailBundleProviderLoggedUserVariablesProvider_000000002e47e1f700000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroEmail_Emailtemplate_VariableProvider_UserService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\EmailBundle\Provider\LoggedUserVariablesProvider($this->get('translator'), $this->get('oro_security.security_facade'), $this->get('oro_entity.entity_name_resolver'), $this->get('oro_config.user'));
    }

    /**
     * Gets the 'oro_email.entity.cache.clearer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Cache\EntityCacheClearer A Oro\Bundle\EmailBundle\Cache\EntityCacheClearer instance.
     */
    protected function getOroEmail_Entity_Cache_ClearerService()
    {
        return $this->services['oro_email.entity.cache.clearer'] = new \Oro\Bundle\EmailBundle\Cache\EntityCacheClearer('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev\\oro_entities\\OroEntityProxy\\OroEmailBundle', '%sProxy');
    }

    /**
     * Gets the 'oro_email.entity.cache.warmer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Cache\EntityCacheWarmer A Oro\Bundle\EmailBundle\Cache\EntityCacheWarmer instance.
     */
    protected function getOroEmail_Entity_Cache_WarmerService()
    {
        return $this->services['oro_email.entity.cache.warmer'] = new \Oro\Bundle\EmailBundle\Cache\EntityCacheWarmer($this->get('oro_email.email.owner.provider.storage'), 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev\\oro_entities\\OroEntityProxy\\OroEmailBundle', 'OroEntityProxy\\OroEmailBundle', '%sProxy', $this->get('kernel'));
    }

    /**
     * Gets the 'oro_email.event_listener.email_user_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\EmailUserListener A Oro\Bundle\EmailBundle\EventListener\EmailUserListener instance.
     */
    public function getOroEmail_EventListener_EmailUserListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_email.event_listener.email_user_listener'] = new OroBundleEmailBundleEventListenerEmailUserListener_000000002e47e1b000000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroEmail_EventListener_EmailUserListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\EmailBundle\EventListener\EmailUserListener($this->get('oro_email.email_websocket.processor'));
    }

    /**
     * Gets the 'oro_email.form.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroEmail_Form_EmailService()
    {
        return $this->services['oro_email.form.email'] = $this->get('form.factory')->createNamed('oro_email_email', 'oro_email_email', NULL);
    }

    /**
     * Gets the 'oro_email.form.email.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroEmail_Form_Email_ApiService()
    {
        return $this->services['oro_email.form.email.api'] = $this->get('form.factory')->createNamed(NULL, 'oro_email_email_api');
    }

    /**
     * Gets the 'oro_email.form.emailtemplate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroEmail_Form_EmailtemplateService()
    {
        return $this->services['oro_email.form.emailtemplate'] = $this->get('form.factory')->createNamed('oro_email_emailtemplate', 'oro_email_emailtemplate', NULL);
    }

    /**
     * Gets the 'oro_email.form.extension.mailbox_unbound_rules' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Extension\MailboxUnboudRulesExtension A Oro\Bundle\EmailBundle\Form\Extension\MailboxUnboudRulesExtension instance.
     */
    protected function getOroEmail_Form_Extension_MailboxUnboundRulesService()
    {
        return $this->services['oro_email.form.extension.mailbox_unbound_rules'] = new \Oro\Bundle\EmailBundle\Form\Extension\MailboxUnboudRulesExtension($this->get('doctrine'));
    }

    /**
     * Gets the 'oro_email.form.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Model\Factory A Oro\Bundle\EmailBundle\Form\Model\Factory instance.
     */
    protected function getOroEmail_Form_FactoryService()
    {
        return $this->services['oro_email.form.factory'] = new \Oro\Bundle\EmailBundle\Form\Model\Factory();
    }

    /**
     * Gets the 'oro_email.form.handler.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Handler\EmailHandler A Oro\Bundle\EmailBundle\Form\Handler\EmailHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_email.form.handler.email' service is requested while the 'request' scope is not active
     */
    protected function getOroEmail_Form_Handler_EmailService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_email.form.handler.email', 'request');
        }

        return $this->services['oro_email.form.handler.email'] = $this->scopedServices['request']['oro_email.form.handler.email'] = new \Oro\Bundle\EmailBundle\Form\Handler\EmailHandler($this->get('oro_email.form.email'), $this->get('request'), $this->get('oro_email.mailer.processor'), $this->get('logger'));
    }

    /**
     * Gets the 'oro_email.form.handler.email.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Handler\EmailApiHandler A Oro\Bundle\EmailBundle\Form\Handler\EmailApiHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_email.form.handler.email.api' service is requested while the 'request' scope is not active
     */
    protected function getOroEmail_Form_Handler_Email_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_email.form.handler.email.api', 'request');
        }

        $a = $this->get('debug.event_dispatcher');
        $b = $this->get('oro_email.email.address.manager');

        return $this->services['oro_email.form.handler.email.api'] = $this->scopedServices['request']['oro_email.form.handler.email.api'] = new \Oro\Bundle\EmailBundle\Form\Handler\EmailApiHandler($this->get('oro_email.form.email.api'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'), new \Oro\Bundle\EmailBundle\Builder\EmailEntityBuilder(new \Oro\Bundle\EmailBundle\Builder\EmailEntityBatchProcessor($b, $this->get('oro_email.email.owner.provider'), $a), $b, $this->get('oro_email.email.address.helper')), $this->get('oro_security.security_facade'), $a, $this->get('oro_email.email_importance_transformer'), $this->get('oro_email.email_body_type_transformer'));
    }

    /**
     * Gets the 'oro_email.form.handler.emailtemplate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Handler\EmailTemplateHandler A Oro\Bundle\EmailBundle\Form\Handler\EmailTemplateHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_email.form.handler.emailtemplate' service is requested while the 'request' scope is not active
     */
    protected function getOroEmail_Form_Handler_EmailtemplateService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_email.form.handler.emailtemplate', 'request');
        }

        $this->services['oro_email.form.handler.emailtemplate'] = $this->scopedServices['request']['oro_email.form.handler.emailtemplate'] = $instance = new \Oro\Bundle\EmailBundle\Form\Handler\EmailTemplateHandler($this->get('oro_email.form.emailtemplate'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'), $this->get('translator'));

        $instance->setDefaultLocale('en');

        return $instance;
    }

    /**
     * Gets the 'oro_email.form.handler.mailbox' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Handler\MailboxHandler A Oro\Bundle\EmailBundle\Form\Handler\MailboxHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_email.form.handler.mailbox' service is requested while the 'request' scope is not active
     */
    protected function getOroEmail_Form_Handler_MailboxService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_email.form.handler.mailbox', 'request');
        }

        return $this->services['oro_email.form.handler.mailbox'] = $this->scopedServices['request']['oro_email.form.handler.mailbox'] = new \Oro\Bundle\EmailBundle\Form\Handler\MailboxHandler($this->get('form.factory'), $this->get('request'), $this->get('doctrine'), $this->get('oro_email.mailbox.process_storage'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_email.form.subscriber.autoresponserule' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\EventListener\AutoResponseRuleSubscriber A Oro\Bundle\EmailBundle\Form\EventListener\AutoResponseRuleSubscriber instance.
     */
    protected function getOroEmail_Form_Subscriber_AutoresponseruleService()
    {
        return $this->services['oro_email.form.subscriber.autoresponserule'] = new \Oro\Bundle\EmailBundle\Form\EventListener\AutoResponseRuleSubscriber($this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_email.form.subscriber.emailtemplate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\EventListener\BuildTemplateFormSubscriber A Oro\Bundle\EmailBundle\Form\EventListener\BuildTemplateFormSubscriber instance.
     */
    protected function getOroEmail_Form_Subscriber_EmailtemplateService()
    {
        return $this->services['oro_email.form.subscriber.emailtemplate'] = new \Oro\Bundle\EmailBundle\Form\EventListener\BuildTemplateFormSubscriber($this->get('security.context'));
    }

    /**
     * Gets the 'oro_email.form.type.attachment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\EmailAttachmentType A Oro\Bundle\EmailBundle\Form\Type\EmailAttachmentType instance.
     */
    protected function getOroEmail_Form_Type_AttachmentService()
    {
        return $this->services['oro_email.form.type.attachment'] = new \Oro\Bundle\EmailBundle\Form\Type\EmailAttachmentType($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_email.email_attachment_transformer'));
    }

    /**
     * Gets the 'oro_email.form.type.attachments' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\EmailAttachmentsType A Oro\Bundle\EmailBundle\Form\Type\EmailAttachmentsType instance.
     */
    protected function getOroEmail_Form_Type_AttachmentsService()
    {
        return $this->services['oro_email.form.type.attachments'] = new \Oro\Bundle\EmailBundle\Form\Type\EmailAttachmentsType();
    }

    /**
     * Gets the 'oro_email.form.type.autoresponse_template' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\AutoResponseTemplateType A Oro\Bundle\EmailBundle\Form\Type\AutoResponseTemplateType instance.
     */
    protected function getOroEmail_Form_Type_AutoresponseTemplateService()
    {
        return $this->services['oro_email.form.type.autoresponse_template'] = new \Oro\Bundle\EmailBundle\Form\Type\AutoResponseTemplateType($this->get('oro_config.global'), $this->get('oro_config.user'), $this->get('oro_locale.settings'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_email.form.type.autoresponse_template_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\AutoResponseTemplateChoiceType A Oro\Bundle\EmailBundle\Form\Type\AutoResponseTemplateChoiceType instance.
     */
    protected function getOroEmail_Form_Type_AutoresponseTemplateChoiceService()
    {
        return $this->services['oro_email.form.type.autoresponse_template_choice'] = new \Oro\Bundle\EmailBundle\Form\Type\AutoResponseTemplateChoiceType($this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_email.form.type.autoresponserule' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\AutoResponseRuleType A Oro\Bundle\EmailBundle\Form\Type\AutoResponseRuleType instance.
     */
    protected function getOroEmail_Form_Type_AutoresponseruleService()
    {
        return $this->services['oro_email.form.type.autoresponserule'] = new \Oro\Bundle\EmailBundle\Form\Type\AutoResponseRuleType($this->get('oro_email.form.subscriber.autoresponserule'));
    }

    /**
     * Gets the 'oro_email.form.type.autoresponserule_condition' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\AutoResponseRuleConditionType A Oro\Bundle\EmailBundle\Form\Type\AutoResponseRuleConditionType instance.
     */
    protected function getOroEmail_Form_Type_AutoresponseruleConditionService()
    {
        return $this->services['oro_email.form.type.autoresponserule_condition'] = new \Oro\Bundle\EmailBundle\Form\Type\AutoResponseRuleConditionType();
    }

    /**
     * Gets the 'oro_email.form.type.contexts_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\ContextsSelectType A Oro\Bundle\EmailBundle\Form\Type\ContextsSelectType instance.
     */
    protected function getOroEmail_Form_Type_ContextsSelectService()
    {
        return $this->services['oro_email.form.type.contexts_select'] = new \Oro\Bundle\EmailBundle\Form\Type\ContextsSelectType($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_entity_config.config_manager'), $this->get('translator'), $this->get('oro_search.mapper'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_email.form.type.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\EmailType A Oro\Bundle\EmailBundle\Form\Type\EmailType instance.
     */
    protected function getOroEmail_Form_Type_EmailService()
    {
        return $this->services['oro_email.form.type.email'] = new \Oro\Bundle\EmailBundle\Form\Type\EmailType($this->get('security.context'), $this->get('oro_email.email_renderer'), $this->get('oro_email.email.model.builder.helper'));
    }

    /**
     * Gets the 'oro_email.form.type.email.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\EmailApiType A Oro\Bundle\EmailBundle\Form\Type\EmailApiType instance.
     */
    protected function getOroEmail_Form_Type_Email_ApiService()
    {
        return $this->services['oro_email.form.type.email.api'] = new \Oro\Bundle\EmailBundle\Form\Type\EmailApiType();
    }

    /**
     * Gets the 'oro_email.form.type.email_address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\EmailAddressType A Oro\Bundle\EmailBundle\Form\Type\EmailAddressType instance.
     */
    protected function getOroEmail_Form_Type_EmailAddressService()
    {
        return $this->services['oro_email.form.type.email_address'] = new \Oro\Bundle\EmailBundle\Form\Type\EmailAddressType();
    }

    /**
     * Gets the 'oro_email.form.type.email_address.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\EmailAddressApiType A Oro\Bundle\EmailBundle\Form\Type\EmailAddressApiType instance.
     */
    protected function getOroEmail_Form_Type_EmailAddress_ApiService()
    {
        return $this->services['oro_email.form.type.email_address.api'] = new \Oro\Bundle\EmailBundle\Form\Type\EmailAddressApiType();
    }

    /**
     * Gets the 'oro_email.form.type.email_address_from' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\EmailAddressFromType A Oro\Bundle\EmailBundle\Form\Type\EmailAddressFromType instance.
     */
    protected function getOroEmail_Form_Type_EmailAddressFromService()
    {
        return $this->services['oro_email.form.type.email_address_from'] = new \Oro\Bundle\EmailBundle\Form\Type\EmailAddressFromType($this->get('oro_security.security_facade'), $this->get('oro_email.related_emails.provider'));
    }

    /**
     * Gets the 'oro_email.form.type.email_address_recipients' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\EmailAddressRecipientsType A Oro\Bundle\EmailBundle\Form\Type\EmailAddressRecipientsType instance.
     */
    protected function getOroEmail_Form_Type_EmailAddressRecipientsService()
    {
        return $this->services['oro_email.form.type.email_address_recipients'] = new \Oro\Bundle\EmailBundle\Form\Type\EmailAddressRecipientsType($this->get('oro_config.global'));
    }

    /**
     * Gets the 'oro_email.form.type.email_folder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\EmailFolderType A Oro\Bundle\EmailBundle\Form\Type\EmailFolderType instance.
     */
    protected function getOroEmail_Form_Type_EmailFolderService()
    {
        return $this->services['oro_email.form.type.email_folder'] = new \Oro\Bundle\EmailBundle\Form\Type\EmailFolderType();
    }

    /**
     * Gets the 'oro_email.form.type.email_folder.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\EmailFolderApiType A Oro\Bundle\EmailBundle\Form\Type\EmailFolderApiType instance.
     */
    protected function getOroEmail_Form_Type_EmailFolder_ApiService()
    {
        return $this->services['oro_email.form.type.email_folder.api'] = new \Oro\Bundle\EmailBundle\Form\Type\EmailFolderApiType();
    }

    /**
     * Gets the 'oro_email.form.type.email_folder_tree' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\EmailFolderTreeType A Oro\Bundle\EmailBundle\Form\Type\EmailFolderTreeType instance.
     */
    protected function getOroEmail_Form_Type_EmailFolderTreeService()
    {
        return $this->services['oro_email.form.type.email_folder_tree'] = new \Oro\Bundle\EmailBundle\Form\Type\EmailFolderTreeType();
    }

    /**
     * Gets the 'oro_email.form.type.email_link_to_scope' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\EmailLinkToScopeType A Oro\Bundle\EmailBundle\Form\Type\EmailLinkToScopeType instance.
     */
    protected function getOroEmail_Form_Type_EmailLinkToScopeService()
    {
        return $this->services['oro_email.form.type.email_link_to_scope'] = new \Oro\Bundle\EmailBundle\Form\Type\EmailLinkToScopeType();
    }

    /**
     * Gets the 'oro_email.form.type.emailtemplate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\EmailTemplateType A Oro\Bundle\EmailBundle\Form\Type\EmailTemplateType instance.
     */
    protected function getOroEmail_Form_Type_EmailtemplateService()
    {
        return $this->services['oro_email.form.type.emailtemplate'] = new \Oro\Bundle\EmailBundle\Form\Type\EmailTemplateType($this->get('oro_config.user'), $this->get('oro_locale.settings'));
    }

    /**
     * Gets the 'oro_email.form.type.emailtemplate_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\EmailTemplateSelectType A Oro\Bundle\EmailBundle\Form\Type\EmailTemplateSelectType instance.
     */
    protected function getOroEmail_Form_Type_EmailtemplateSelectService()
    {
        return $this->services['oro_email.form.type.emailtemplate_select'] = new \Oro\Bundle\EmailBundle\Form\Type\EmailTemplateSelectType();
    }

    /**
     * Gets the 'oro_email.form.type.emailtemplate_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\EmailTemplateTranslationType A Oro\Bundle\EmailBundle\Form\Type\EmailTemplateTranslationType instance.
     */
    protected function getOroEmail_Form_Type_EmailtemplateTranslationService()
    {
        return $this->services['oro_email.form.type.emailtemplate_translation'] = new \Oro\Bundle\EmailBundle\Form\Type\EmailTemplateTranslationType($this->get('oro_config.user'));
    }

    /**
     * Gets the 'oro_email.form.type.filter.originfolder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\Filter\ChoiceOriginFolderFilterType A Oro\Bundle\EmailBundle\Form\Type\Filter\ChoiceOriginFolderFilterType instance.
     */
    protected function getOroEmail_Form_Type_Filter_OriginfolderService()
    {
        return $this->services['oro_email.form.type.filter.originfolder'] = new \Oro\Bundle\EmailBundle\Form\Type\Filter\ChoiceOriginFolderFilterType($this->get('translator'));
    }

    /**
     * Gets the 'oro_email.form.type.mailbox' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\MailboxType A Oro\Bundle\EmailBundle\Form\Type\MailboxType instance.
     */
    protected function getOroEmail_Form_Type_MailboxService()
    {
        return $this->services['oro_email.form.type.mailbox'] = new \Oro\Bundle\EmailBundle\Form\Type\MailboxType($this->get('oro_email.mailbox.process_storage'), $this->get('oro_security.encoder.mcrypt'));
    }

    /**
     * Gets the 'oro_email.form.type.mailbox_grid' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Form\Type\MailboxGridType A Oro\Bundle\EmailBundle\Form\Type\MailboxGridType instance.
     */
    protected function getOroEmail_Form_Type_MailboxGridService()
    {
        return $this->services['oro_email.form.type.mailbox_grid'] = new \Oro\Bundle\EmailBundle\Form\Type\MailboxGridType();
    }

    /**
     * Gets the 'oro_email.helper.datagrid.emails' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Datagrid\EmailGridHelper A Oro\Bundle\EmailBundle\Datagrid\EmailGridHelper instance.
     */
    protected function getOroEmail_Helper_Datagrid_EmailsService()
    {
        return $this->services['oro_email.helper.datagrid.emails'] = new \Oro\Bundle\EmailBundle\Datagrid\EmailGridHelper($this->get('oro_entity.doctrine_helper'), $this->get('oro_email.email_synchronization_manager'), $this->get('oro_activity.manager'), 'Oro\\Bundle\\UserBundle\\Entity\\User');
    }

    /**
     * Gets the 'oro_email.listener.auto_response_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\AutoResponseListener A Oro\Bundle\EmailBundle\EventListener\AutoResponseListener instance.
     */
    public function getOroEmail_Listener_AutoResponseListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_email.listener.auto_response_listener'] = new OroBundleEmailBundleEventListenerAutoResponseListener_000000002e47e18700000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroEmail_Listener_AutoResponseListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\EmailBundle\EventListener\AutoResponseListener(new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_email.autoresponserule_manager', false));
    }

    /**
     * Gets the 'oro_email.listener.config_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\ConfigSubscriber A Oro\Bundle\EmailBundle\EventListener\ConfigSubscriber instance.
     */
    protected function getOroEmail_Listener_ConfigSubscriberService()
    {
        return $this->services['oro_email.listener.config_subscriber'] = new \Oro\Bundle\EmailBundle\EventListener\ConfigSubscriber($this->get('oro_email.cache'), 'oro_email.available_in_template_fields');
    }

    /**
     * Gets the 'oro_email.listener.datagrid.activity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\Datagrid\ActivityGridListener A Oro\Bundle\EmailBundle\EventListener\Datagrid\ActivityGridListener instance.
     */
    protected function getOroEmail_Listener_Datagrid_ActivityService()
    {
        return $this->services['oro_email.listener.datagrid.activity'] = new \Oro\Bundle\EmailBundle\EventListener\Datagrid\ActivityGridListener($this->get('oro_email.helper.datagrid.emails'), $this->get('oro_entity.routing_helper'));
    }

    /**
     * Gets the 'oro_email.listener.datagrid.context.user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\Datagrid\ContextGridListener A Oro\Bundle\EmailBundle\EventListener\Datagrid\ContextGridListener instance.
     */
    protected function getOroEmail_Listener_Datagrid_Context_UserService()
    {
        return $this->services['oro_email.listener.datagrid.context.user'] = new \Oro\Bundle\EmailBundle\EventListener\Datagrid\ContextGridListener($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_email.listener.datagrid.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\Datagrid\EmailGridListener A Oro\Bundle\EmailBundle\EventListener\Datagrid\EmailGridListener instance.
     */
    protected function getOroEmail_Listener_Datagrid_EmailService()
    {
        return $this->services['oro_email.listener.datagrid.email'] = new \Oro\Bundle\EmailBundle\EventListener\Datagrid\EmailGridListener($this->get('oro_email.datagrid_query_factory'));
    }

    /**
     * Gets the 'oro_email.listener.datagrid.mailbox_grid' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\Datagrid\MailboxGridListener A Oro\Bundle\EmailBundle\EventListener\Datagrid\MailboxGridListener instance.
     */
    protected function getOroEmail_Listener_Datagrid_MailboxGridService()
    {
        return $this->services['oro_email.listener.datagrid.mailbox_grid'] = new \Oro\Bundle\EmailBundle\EventListener\Datagrid\MailboxGridListener($this->get('doctrine'), $this->get('oro_security.acl_helper'));
    }

    /**
     * Gets the 'oro_email.listener.datagrid.recent_emails.inbox' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\Datagrid\RecentEmailGridListener A Oro\Bundle\EmailBundle\EventListener\Datagrid\RecentEmailGridListener instance.
     */
    protected function getOroEmail_Listener_Datagrid_RecentEmails_InboxService()
    {
        return $this->services['oro_email.listener.datagrid.recent_emails.inbox'] = new \Oro\Bundle\EmailBundle\EventListener\Datagrid\RecentEmailGridListener($this->get('oro_email.helper.datagrid.emails'), $this->get('oro_email.datagrid_query_factory'));
    }

    /**
     * Gets the 'oro_email.listener.datagrid.recent_emails.new' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\Datagrid\RecentEmailGridListener A Oro\Bundle\EmailBundle\EventListener\Datagrid\RecentEmailGridListener instance.
     */
    protected function getOroEmail_Listener_Datagrid_RecentEmails_NewService()
    {
        return $this->services['oro_email.listener.datagrid.recent_emails.new'] = new \Oro\Bundle\EmailBundle\EventListener\Datagrid\RecentEmailGridListener($this->get('oro_email.helper.datagrid.emails'), $this->get('oro_email.datagrid_query_factory'));
    }

    /**
     * Gets the 'oro_email.listener.datagrid.recent_emails.sent' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\Datagrid\RecentEmailGridListener A Oro\Bundle\EmailBundle\EventListener\Datagrid\RecentEmailGridListener instance.
     */
    protected function getOroEmail_Listener_Datagrid_RecentEmails_SentService()
    {
        return $this->services['oro_email.listener.datagrid.recent_emails.sent'] = new \Oro\Bundle\EmailBundle\EventListener\Datagrid\RecentEmailGridListener($this->get('oro_email.helper.datagrid.emails'), $this->get('oro_email.datagrid_query_factory'));
    }

    /**
     * Gets the 'oro_email.listener.email_body_add_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\EmailBodyAddListener A Oro\Bundle\EmailBundle\EventListener\EmailBodyAddListener instance.
     */
    protected function getOroEmail_Listener_EmailBodyAddListenerService()
    {
        return $this->services['oro_email.listener.email_body_add_listener'] = new \Oro\Bundle\EmailBundle\EventListener\EmailBodyAddListener($this->get('oro_email.manager.email_attachment_manager'), $this->get('oro_entity_config.provider.attachment'), $this->get('oro_email.activity_list.provider'), $this->get('oro_security.security_facade.link'), $this->get('oro_activity_list.provider.chain'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_email.listener.entity_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\EntityListener A Oro\Bundle\EmailBundle\EventListener\EntityListener instance.
     */
    public function getOroEmail_Listener_EntityListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_email.listener.entity_listener'] = new OroBundleEmailBundleEventListenerEntityListener_000000002e47e1ba00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroEmail_Listener_EntityListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\EmailBundle\EventListener\EntityListener(new \Oro\Bundle\EmailBundle\Entity\Manager\EmailOwnerManager($this->get('oro_email.email.owner.provider.storage'), $this->get('oro_email.email.address.manager')), $this->get('oro_email.email.activity.manager'), $this->get('oro_email.email.thread.manager'), $this->get('oro_email.provider.emailowners.provider'));
    }

    /**
     * Gets the 'oro_email.listener.mailbox.authorization' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\MailboxAuthorizationListener A Oro\Bundle\EmailBundle\EventListener\MailboxAuthorizationListener instance.
     */
    protected function getOroEmail_Listener_Mailbox_AuthorizationService()
    {
        return $this->services['oro_email.listener.mailbox.authorization'] = new \Oro\Bundle\EmailBundle\EventListener\MailboxAuthorizationListener($this->get('doctrine'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_email.listener.mailbox_process_trigger_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\MailboxProcessTriggerListener A Oro\Bundle\EmailBundle\EventListener\MailboxProcessTriggerListener instance.
     */
    public function getOroEmail_Listener_MailboxProcessTriggerListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_email.listener.mailbox_process_trigger_listener'] = new OroBundleEmailBundleEventListenerMailboxProcessTriggerListener_000000002e47e2ba00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroEmail_Listener_MailboxProcessTriggerListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\EmailBundle\EventListener\MailboxProcessTriggerListener($this->get('oro_workflow.process.process_handler'), new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_email.mailbox.process_storage', false), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_email.listener.replace_embedded_attachments_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\ReplaceEmbeddedAttachmentsListener A Oro\Bundle\EmailBundle\EventListener\ReplaceEmbeddedAttachmentsListener instance.
     */
    protected function getOroEmail_Listener_ReplaceEmbeddedAttachmentsListenerService()
    {
        return $this->services['oro_email.listener.replace_embedded_attachments_listener'] = new \Oro\Bundle\EmailBundle\EventListener\ReplaceEmbeddedAttachmentsListener();
    }

    /**
     * Gets the 'oro_email.listener.search_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\EventListener\SearchListener A Oro\Bundle\EmailBundle\EventListener\SearchListener instance.
     */
    protected function getOroEmail_Listener_SearchListenerService()
    {
        return $this->services['oro_email.listener.search_listener'] = new \Oro\Bundle\EmailBundle\EventListener\SearchListener();
    }

    /**
     * Gets the 'oro_email.mailbox.entity_name_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Provider\MailboxEntityNameProvider A Oro\Bundle\EmailBundle\Provider\MailboxEntityNameProvider instance.
     */
    protected function getOroEmail_Mailbox_EntityNameProviderService()
    {
        return $this->services['oro_email.mailbox.entity_name_provider'] = new \Oro\Bundle\EmailBundle\Provider\MailboxEntityNameProvider($this->get('translator.default'));
    }

    /**
     * Gets the 'oro_email.mailbox.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroEmail_Mailbox_Manager_ApiService()
    {
        $this->services['oro_email.mailbox.manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\EmailBundle\\Entity\\Mailbox', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.mailbox.process_storage' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Mailbox\MailboxProcessStorage A Oro\Bundle\EmailBundle\Mailbox\MailboxProcessStorage instance.
     */
    protected function getOroEmail_Mailbox_ProcessStorageService()
    {
        return $this->services['oro_email.mailbox.process_storage'] = new \Oro\Bundle\EmailBundle\Mailbox\MailboxProcessStorage();
    }

    /**
     * Gets the 'oro_email.mailbox_choice_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Datagrid\MailboxChoiceList A Oro\Bundle\EmailBundle\Datagrid\MailboxChoiceList instance.
     */
    protected function getOroEmail_MailboxChoiceListService()
    {
        return $this->services['oro_email.mailbox_choice_list'] = new \Oro\Bundle\EmailBundle\Datagrid\MailboxChoiceList($this->get('doctrine'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_email.mailbox_email_owner_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Provider\MailboxEmailOwnerProvider A Oro\Bundle\EmailBundle\Provider\MailboxEmailOwnerProvider instance.
     */
    protected function getOroEmail_MailboxEmailOwnerProviderService()
    {
        return $this->services['oro_email.mailbox_email_owner_provider'] = new \Oro\Bundle\EmailBundle\Provider\MailboxEmailOwnerProvider();
    }

    /**
     * Gets the 'oro_email.mailer.processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Mailer\Processor A Oro\Bundle\EmailBundle\Mailer\Processor instance.
     */
    protected function getOroEmail_Mailer_ProcessorService()
    {
        $a = $this->get('oro_email.email.address.helper');
        $b = $this->get('oro_email.email.owner.provider');
        $c = $this->get('debug.event_dispatcher');
        $d = $this->get('oro_email.email.address.manager');

        return $this->services['oro_email.mailer.processor'] = new \Oro\Bundle\EmailBundle\Mailer\Processor($this->get('oro_entity.doctrine_helper'), $this->get('oro_email.direct_mailer'), $a, new \Oro\Bundle\EmailBundle\Builder\EmailEntityBuilder(new \Oro\Bundle\EmailBundle\Builder\EmailEntityBatchProcessor($d, $b, $c), $d, $a), $b, $this->get('oro_email.email.activity.manager'), $this->get('oro_security.security_facade.link'), $c, $this->get('oro_security.encoder.mcrypt'));
    }

    /**
     * Gets the 'oro_email.manager.autoresponserule.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroEmail_Manager_Autoresponserule_ApiService()
    {
        $this->services['oro_email.manager.autoresponserule.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\EmailBundle\\Entity\\AutoResponseRule', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.manager.email.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Entity\Manager\EmailApiEntityManager A Oro\Bundle\EmailBundle\Entity\Manager\EmailApiEntityManager instance.
     */
    protected function getOroEmail_Manager_Email_ApiService()
    {
        $this->services['oro_email.manager.email.api'] = $instance = new \Oro\Bundle\EmailBundle\Entity\Manager\EmailApiEntityManager('Oro\\Bundle\\EmailBundle\\Entity\\Email', $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_activity.manager'), $this->get('oro_entity_config.config_manager'), $this->get('oro_security.security_facade'), $this->get('router'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.manager.email_activity.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Entity\Manager\EmailActivityApiEntityManager A Oro\Bundle\EmailBundle\Entity\Manager\EmailActivityApiEntityManager instance.
     */
    protected function getOroEmail_Manager_EmailActivity_ApiService()
    {
        $this->services['oro_email.manager.email_activity.api'] = $instance = new \Oro\Bundle\EmailBundle\Entity\Manager\EmailActivityApiEntityManager('Oro\\Bundle\\EmailBundle\\Entity\\Email', $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_activity.manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.manager.email_activity_search.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Entity\Manager\EmailActivitySearchApiEntityManager A Oro\Bundle\EmailBundle\Entity\Manager\EmailActivitySearchApiEntityManager instance.
     */
    protected function getOroEmail_Manager_EmailActivitySearch_ApiService()
    {
        $this->services['oro_email.manager.email_activity_search.api'] = $instance = new \Oro\Bundle\EmailBundle\Entity\Manager\EmailActivitySearchApiEntityManager('Oro\\Bundle\\EmailBundle\\Entity\\Email', $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_activity.manager'), $this->get('oro_search.index'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.manager.email_attachment_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Manager\EmailAttachmentManager A Oro\Bundle\EmailBundle\Manager\EmailAttachmentManager instance.
     */
    protected function getOroEmail_Manager_EmailAttachmentManagerService()
    {
        return $this->services['oro_email.manager.email_attachment_manager'] = new \Oro\Bundle\EmailBundle\Manager\EmailAttachmentManager($this->get('knp_gaufrette.filesystem_map'), $this->get('doctrine.orm.default_entity_manager'), $this->get('kernel'), $this->get('oro_security.security_facade.link'), $this->get('oro_attachment.validator.file_config_validator'), $this->get('oro_attachment.config'));
    }

    /**
     * Gets the 'oro_email.manager.email_origin.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Entity\Manager\EmailOriginApiEntityManager A Oro\Bundle\EmailBundle\Entity\Manager\EmailOriginApiEntityManager instance.
     */
    protected function getOroEmail_Manager_EmailOrigin_ApiService()
    {
        $this->services['oro_email.manager.email_origin.api'] = $instance = new \Oro\Bundle\EmailBundle\Entity\Manager\EmailOriginApiEntityManager('Oro\\Bundle\\EmailBundle\\Entity\\EmailOrigin', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.manager.emailtemplate.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroEmail_Manager_Emailtemplate_ApiService()
    {
        $this->services['oro_email.manager.emailtemplate.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\EmailBundle\\Entity\\EmailTemplate', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.manager.notification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Manager\EmailNotificationManager A Oro\Bundle\EmailBundle\Manager\EmailNotificationManager instance.
     */
    protected function getOroEmail_Manager_NotificationService()
    {
        return $this->services['oro_email.manager.notification'] = new \Oro\Bundle\EmailBundle\Manager\EmailNotificationManager($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_ui.html_tag_helper'), $this->get('router'), $this->get('oro_email.email.cache.manager'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_email.mass_action.mark.read' service.
     *
     * @return \Oro\Bundle\EmailBundle\Datagrid\Extension\MassAction\Actions\MarkReadMassAction A Oro\Bundle\EmailBundle\Datagrid\Extension\MassAction\Actions\MarkReadMassAction instance.
     */
    protected function getOroEmail_MassAction_Mark_ReadService()
    {
        return new \Oro\Bundle\EmailBundle\Datagrid\Extension\MassAction\Actions\MarkReadMassAction($this->get('oro_entity_merge.metadata.registry'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_email.mass_action.mark.unread' service.
     *
     * @return \Oro\Bundle\EmailBundle\Datagrid\Extension\MassAction\Actions\MarkUnreadMassAction A Oro\Bundle\EmailBundle\Datagrid\Extension\MassAction\Actions\MarkUnreadMassAction instance.
     */
    protected function getOroEmail_MassAction_Mark_UnreadService()
    {
        return new \Oro\Bundle\EmailBundle\Datagrid\Extension\MassAction\Actions\MarkUnreadMassAction($this->get('oro_entity_merge.metadata.registry'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_email.mass_action.mark_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Datagrid\Extension\MassAction\MarkMassActionHandler A Oro\Bundle\EmailBundle\Datagrid\Extension\MassAction\MarkMassActionHandler instance.
     */
    protected function getOroEmail_MassAction_MarkHandlerService()
    {
        return $this->services['oro_email.mass_action.mark_handler'] = new \Oro\Bundle\EmailBundle\Datagrid\Extension\MassAction\MarkMassActionHandler($this->get('doctrine.orm.default_entity_manager'), $this->get('translator'), $this->get('security.context'), $this->get('oro_security.security_facade.link'), $this->get('oro_email.email.manager'));
    }

    /**
     * Gets the 'oro_email.provider.email_attachment_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Provider\EmailAttachmentProvider A Oro\Bundle\EmailBundle\Provider\EmailAttachmentProvider instance.
     */
    protected function getOroEmail_Provider_EmailAttachmentProviderService()
    {
        return $this->services['oro_email.provider.email_attachment_provider'] = new \Oro\Bundle\EmailBundle\Provider\EmailAttachmentProvider($this->get('oro_email.email.thread.provider'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_attachment.provider.attachment'), $this->get('oro_email.email_attachment_transformer'));
    }

    /**
     * Gets the 'oro_email.provider.email_recipients.helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Provider\EmailRecipientsHelper A Oro\Bundle\EmailBundle\Provider\EmailRecipientsHelper instance.
     */
    protected function getOroEmail_Provider_EmailRecipients_HelperService()
    {
        return $this->services['oro_email.provider.email_recipients.helper'] = new \Oro\Bundle\EmailBundle\Provider\EmailRecipientsHelper($this->get('oro_security.acl_helper'), $this->get('oro_locale.dql.formatter.name'), $this->get('oro_locale.formatter.name'), $this->get('oro_entity_config.config_manager'), $this->get('translator'), $this->get('oro_email.email.owner.provider'), $this->get('doctrine'), $this->get('oro_email.email.address.helper'));
    }

    /**
     * Gets the 'oro_email.provider.emailowners.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Provider\EmailOwnersProvider A Oro\Bundle\EmailBundle\Provider\EmailOwnersProvider instance.
     */
    protected function getOroEmail_Provider_Emailowners_ProviderService()
    {
        return $this->services['oro_email.provider.emailowners.provider'] = new \Oro\Bundle\EmailBundle\Provider\EmailOwnersProvider($this->get('oro_activity_list.provider.chain'), $this->get('oro_email.email.owner.provider.storage'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_email.recent_email_recipients.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Provider\RecentEmailRecipientsProvider A Oro\Bundle\EmailBundle\Provider\RecentEmailRecipientsProvider instance.
     */
    protected function getOroEmail_RecentEmailRecipients_ProviderService()
    {
        return $this->services['oro_email.recent_email_recipients.provider'] = new \Oro\Bundle\EmailBundle\Provider\RecentEmailRecipientsProvider($this->get('oro_security.security_facade'), $this->get('oro_email.related_emails.provider'), $this->get('oro_security.acl_helper'), $this->get('doctrine'), $this->get('oro_email.email.owner.provider'), $this->get('oro_email.provider.email_recipients.helper'));
    }

    /**
     * Gets the 'oro_email.related_emails.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Provider\RelatedEmailsProvider A Oro\Bundle\EmailBundle\Provider\RelatedEmailsProvider instance.
     */
    protected function getOroEmail_RelatedEmails_ProviderService()
    {
        return $this->services['oro_email.related_emails.provider'] = new \Oro\Bundle\EmailBundle\Provider\RelatedEmailsProvider($this->get('doctrine'), $this->get('oro_entity_config.provider.entity'), $this->get('oro_security.security_facade'), $this->get('oro_locale.formatter.name'), $this->get('oro_email.email.address.helper'), $this->get('oro_email.provider.email_recipients.helper'));
    }

    /**
     * Gets the 'oro_email.twig.email_sandbox' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Twig_Extension_Sandbox A Twig_Extension_Sandbox instance.
     */
    protected function getOroEmail_Twig_EmailSandboxService()
    {
        return $this->services['oro_email.twig.email_sandbox'] = new \Twig_Extension_Sandbox($this->get('oro_email.twig.email_security_policy'), true);
    }

    /**
     * Gets the 'oro_email.twig.email_security_policy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Twig_Sandbox_SecurityPolicy A Twig_Sandbox_SecurityPolicy instance.
     */
    protected function getOroEmail_Twig_EmailSecurityPolicyService()
    {
        return $this->services['oro_email.twig.email_security_policy'] = new \Twig_Sandbox_SecurityPolicy(array(0 => 'app', 1 => 'for', 2 => 'if', 3 => 'spaceless'), array(0 => 'default', 1 => 'date', 2 => 'escape', 3 => 'format', 4 => 'length', 5 => 'lower', 6 => 'nl2br', 7 => 'number_format', 8 => 'title', 9 => 'trim', 10 => 'upper', 11 => 'oro_tag_filter', 12 => 'oro_format', 13 => 'oro_format_date', 14 => 'oro_format_time', 15 => 'oro_format_datetime', 16 => 'oro_format_name', 17 => 'date'), array(), array(), array(0 => 'date', 1 => 'oro_config_value', 2 => 'calendar_date_range', 3 => 'url', 4 => 'path'));
    }

    /**
     * Gets the 'oro_email.twig.extension.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Twig\EmailExtension A Oro\Bundle\EmailBundle\Twig\EmailExtension instance.
     */
    protected function getOroEmail_Twig_Extension_EmailService()
    {
        return $this->services['oro_email.twig.extension.email'] = new \Oro\Bundle\EmailBundle\Twig\EmailExtension($this->get('oro_email.email_holder_helper'), $this->get('oro_email.email.address.helper'), $this->get('oro_email.manager.email_attachment_manager'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_email.mailbox.process_storage'));
    }

    /**
     * Gets the 'oro_email.twig.string_loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Twig_Loader_String A Twig_Loader_String instance.
     */
    protected function getOroEmail_Twig_StringLoaderService()
    {
        return $this->services['oro_email.twig.string_loader'] = new \Twig_Loader_String();
    }

    /**
     * Gets the 'oro_email.validator.email_address_validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Validator\EmailAddressValidator A Oro\Bundle\EmailBundle\Validator\EmailAddressValidator instance.
     */
    protected function getOroEmail_Validator_EmailAddressValidatorService()
    {
        return $this->services['oro_email.validator.email_address_validator'] = new \Oro\Bundle\EmailBundle\Validator\EmailAddressValidator($this->get('oro_email.email.address.helper'));
    }

    /**
     * Gets the 'oro_email.validator.email_recipients' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Validator\EmailRecipientsValidator A Oro\Bundle\EmailBundle\Validator\EmailRecipientsValidator instance.
     */
    protected function getOroEmail_Validator_EmailRecipientsService()
    {
        return $this->services['oro_email.validator.email_recipients'] = new \Oro\Bundle\EmailBundle\Validator\EmailRecipientsValidator();
    }

    /**
     * Gets the 'oro_email.validator.email_template_syntax' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Validator\EmailTemplateSyntaxValidator A Oro\Bundle\EmailBundle\Validator\EmailTemplateSyntaxValidator instance.
     */
    protected function getOroEmail_Validator_EmailTemplateSyntaxService()
    {
        return $this->services['oro_email.validator.email_template_syntax'] = new \Oro\Bundle\EmailBundle\Validator\EmailTemplateSyntaxValidator($this->get('oro_email.email_renderer'), $this->get('oro_locale.settings'), $this->get('oro_entity_config.provider.entity'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_email.workflow.action.add_activity_target' service.
     *
     * @return \Oro\Bundle\EmailBundle\Model\Action\AddActivityTarget A Oro\Bundle\EmailBundle\Model\Action\AddActivityTarget instance.
     */
    protected function getOroEmail_Workflow_Action_AddActivityTargetService()
    {
        $instance = new \Oro\Bundle\EmailBundle\Model\Action\AddActivityTarget($this->get('oro_workflow.context_accessor'), $this->get('oro_email.email.activity.manager'), $this->get('oro_activity_list.provider.chain'), $this->get('doctrine.orm.default_entity_manager'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.workflow.action.parse_first_name' service.
     *
     * @return \Oro\Bundle\EmailBundle\Model\Action\ParseFirstNameFromEmailAddress A Oro\Bundle\EmailBundle\Model\Action\ParseFirstNameFromEmailAddress instance.
     */
    protected function getOroEmail_Workflow_Action_ParseFirstNameService()
    {
        $instance = new \Oro\Bundle\EmailBundle\Model\Action\ParseFirstNameFromEmailAddress($this->get('oro_workflow.context_accessor'), $this->get('oro_email.email.address.helper'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.workflow.action.parse_last_name' service.
     *
     * @return \Oro\Bundle\EmailBundle\Model\Action\ParseLastNameFromEmailAddress A Oro\Bundle\EmailBundle\Model\Action\ParseLastNameFromEmailAddress instance.
     */
    protected function getOroEmail_Workflow_Action_ParseLastNameService()
    {
        $instance = new \Oro\Bundle\EmailBundle\Model\Action\ParseLastNameFromEmailAddress($this->get('oro_workflow.context_accessor'), $this->get('oro_email.email.address.helper'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.workflow.action.request_mailboxes' service.
     *
     * @return \Oro\Bundle\EmailBundle\Model\Action\RequestMailboxes A Oro\Bundle\EmailBundle\Model\Action\RequestMailboxes instance.
     */
    protected function getOroEmail_Workflow_Action_RequestMailboxesService()
    {
        $instance = new \Oro\Bundle\EmailBundle\Model\Action\RequestMailboxes($this->get('oro_workflow.context_accessor'), $this->get('doctrine'), $this->get('oro_email.mailbox.process_storage'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.workflow.action.send_email' service.
     *
     * @return \Oro\Bundle\EmailBundle\Workflow\Action\SendEmail A Oro\Bundle\EmailBundle\Workflow\Action\SendEmail instance.
     */
    protected function getOroEmail_Workflow_Action_SendEmailService()
    {
        $instance = new \Oro\Bundle\EmailBundle\Workflow\Action\SendEmail($this->get('oro_workflow.context_accessor'), $this->get('oro_email.mailer.processor'), $this->get('oro_email.email.address.helper'), $this->get('oro_entity.entity_name_resolver'));

        $instance->setLogger($this->get('logger'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.workflow.action.send_email_template' service.
     *
     * @return \Oro\Bundle\EmailBundle\Workflow\Action\SendEmailTemplate A Oro\Bundle\EmailBundle\Workflow\Action\SendEmailTemplate instance.
     */
    protected function getOroEmail_Workflow_Action_SendEmailTemplateService()
    {
        $instance = new \Oro\Bundle\EmailBundle\Workflow\Action\SendEmailTemplate($this->get('oro_workflow.context_accessor'), $this->get('oro_email.mailer.processor'), $this->get('oro_email.email.address.helper'), $this->get('oro_entity.entity_name_resolver'), $this->get('oro_email.email_renderer'), $this->get('doctrine.orm.default_entity_manager'), $this->get('validator'));

        $instance->setLogger($this->get('logger'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.workflow.action.strip_html_tags' service.
     *
     * @return \Oro\Bundle\EmailBundle\Model\Action\StripHtmlTags A Oro\Bundle\EmailBundle\Model\Action\StripHtmlTags instance.
     */
    protected function getOroEmail_Workflow_Action_StripHtmlTagsService()
    {
        $instance = new \Oro\Bundle\EmailBundle\Model\Action\StripHtmlTags($this->get('oro_workflow.context_accessor'), $this->get('oro_ui.html_tag_helper'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_email.workflow.condition.has_count' service.
     *
     * @return \Oro\Bundle\EmailBundle\Model\Condition\HasCount A Oro\Bundle\EmailBundle\Model\Condition\HasCount instance.
     */
    protected function getOroEmail_Workflow_Condition_HasCountService()
    {
        return new \Oro\Bundle\EmailBundle\Model\Condition\HasCount();
    }

    /**
     * Gets the 'oro_email.workflow.condition.instanceof' service.
     *
     * @return \Oro\Bundle\EmailBundle\Model\Condition\IsInstanceOf A Oro\Bundle\EmailBundle\Model\Condition\IsInstanceOf instance.
     */
    protected function getOroEmail_Workflow_Condition_InstanceofService()
    {
        return new \Oro\Bundle\EmailBundle\Model\Condition\IsInstanceOf();
    }

    /**
     * Gets the 'oro_email_filter.filter_massage_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Filter\ChoiceMessageTypeFilter A Oro\Bundle\EmailBundle\Filter\ChoiceMessageTypeFilter instance.
     */
    protected function getOroEmailFilter_FilterMassageTypeService()
    {
        return $this->services['oro_email_filter.filter_massage_type'] = new \Oro\Bundle\EmailBundle\Filter\ChoiceMessageTypeFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }

    /**
     * Gets the 'oro_email_filter.filter_origin_folder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmailBundle\Filter\ChoiceOriginFolderFilter A Oro\Bundle\EmailBundle\Filter\ChoiceOriginFolderFilter instance.
     */
    protected function getOroEmailFilter_FilterOriginFolderService()
    {
        return $this->services['oro_email_filter.filter_origin_folder'] = new \Oro\Bundle\EmailBundle\Filter\ChoiceOriginFolderFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }

    /**
     * Gets the 'oro_embedded_form.back_link.twig.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmbeddedFormBundle\Twig\BackLinkExtension A Oro\Bundle\EmbeddedFormBundle\Twig\BackLinkExtension instance.
     */
    protected function getOroEmbeddedForm_BackLink_Twig_ExtensionService()
    {
        return $this->services['oro_embedded_form.back_link.twig.extension'] = new \Oro\Bundle\EmbeddedFormBundle\Twig\BackLinkExtension($this->get('router'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_embedded_form.embed_form_layout_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmbeddedFormBundle\Manager\EmbedFormLayoutManager A Oro\Bundle\EmbeddedFormBundle\Manager\EmbedFormLayoutManager instance.
     */
    protected function getOroEmbeddedForm_EmbedFormLayoutManagerService()
    {
        return $this->services['oro_embedded_form.embed_form_layout_manager'] = new \Oro\Bundle\EmbeddedFormBundle\Manager\EmbedFormLayoutManager($this->get('oro_layout.layout_manager'), $this->get('oro_embedded_form.manager'));
    }

    /**
     * Gets the 'oro_embedded_form.form_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmbeddedFormBundle\Form\Type\EmbeddedFormType A Oro\Bundle\EmbeddedFormBundle\Form\Type\EmbeddedFormType instance.
     */
    protected function getOroEmbeddedForm_FormTypeService()
    {
        return $this->services['oro_embedded_form.form_type'] = new \Oro\Bundle\EmbeddedFormBundle\Form\Type\EmbeddedFormType();
    }

    /**
     * Gets the 'oro_embedded_form.form_type.available_embedded_form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmbeddedFormBundle\Form\Type\AvailableEmbeddedFormType A Oro\Bundle\EmbeddedFormBundle\Form\Type\AvailableEmbeddedFormType instance.
     */
    protected function getOroEmbeddedForm_FormType_AvailableEmbeddedFormService()
    {
        return $this->services['oro_embedded_form.form_type.available_embedded_form'] = new \Oro\Bundle\EmbeddedFormBundle\Form\Type\AvailableEmbeddedFormType($this->get('oro_embedded_form.manager'));
    }

    /**
     * Gets the 'oro_embedded_form.grid.formatter.embedded_form_type_property' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmbeddedFormBundle\DataGrid\Formatter\EmbeddedFormTypeProperty A Oro\Bundle\EmbeddedFormBundle\DataGrid\Formatter\EmbeddedFormTypeProperty instance.
     */
    protected function getOroEmbeddedForm_Grid_Formatter_EmbeddedFormTypePropertyService()
    {
        return $this->services['oro_embedded_form.grid.formatter.embedded_form_type_property'] = new \Oro\Bundle\EmbeddedFormBundle\DataGrid\Formatter\EmbeddedFormTypeProperty($this->get('oro_embedded_form.manager'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_embedded_form.layout.block_type.default_form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmbeddedFormBundle\Layout\Block\Type\EmbedFormType A Oro\Bundle\EmbeddedFormBundle\Layout\Block\Type\EmbedFormType instance.
     */
    protected function getOroEmbeddedForm_Layout_BlockType_DefaultFormService()
    {
        return $this->services['oro_embedded_form.layout.block_type.default_form'] = new \Oro\Bundle\EmbeddedFormBundle\Layout\Block\Type\EmbedFormType();
    }

    /**
     * Gets the 'oro_embedded_form.layout.block_type.success_message' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmbeddedFormBundle\Layout\Block\Type\EmbedFormSuccessType A Oro\Bundle\EmbeddedFormBundle\Layout\Block\Type\EmbedFormSuccessType instance.
     */
    protected function getOroEmbeddedForm_Layout_BlockType_SuccessMessageService()
    {
        return $this->services['oro_embedded_form.layout.block_type.success_message'] = new \Oro\Bundle\EmbeddedFormBundle\Layout\Block\Type\EmbedFormSuccessType();
    }

    /**
     * Gets the 'oro_embedded_form.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EmbeddedFormBundle\Manager\EmbeddedFormManager A Oro\Bundle\EmbeddedFormBundle\Manager\EmbeddedFormManager instance.
     */
    protected function getOroEmbeddedForm_ManagerService()
    {
        return $this->services['oro_embedded_form.manager'] = new \Oro\Bundle\EmbeddedFormBundle\Manager\EmbeddedFormManager($this, $this->get('form.factory'));
    }

    /**
     * Gets the 'oro_entity.datagrid_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Grid\GridHelper A Oro\Bundle\EntityBundle\Grid\GridHelper instance.
     */
    protected function getOroEntity_DatagridHelperService()
    {
        return $this->services['oro_entity.datagrid_helper'] = new \Oro\Bundle\EntityBundle\Grid\GridHelper($this->get('oro_entity.entity_provider'));
    }

    /**
     * Gets the 'oro_entity.doctrine_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\ORM\DoctrineHelper A Oro\Bundle\EntityBundle\ORM\DoctrineHelper instance.
     */
    protected function getOroEntity_DoctrineHelperService()
    {
        return $this->services['oro_entity.doctrine_helper'] = new \Oro\Bundle\EntityBundle\ORM\DoctrineHelper($this->get('doctrine'));
    }

    /**
     * Gets the 'oro_entity.entity_alias.cache.warmer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Cache\EntityAliasCacheWarmer A Oro\Bundle\EntityBundle\Cache\EntityAliasCacheWarmer instance.
     */
    protected function getOroEntity_EntityAlias_Cache_WarmerService()
    {
        return $this->services['oro_entity.entity_alias.cache.warmer'] = new \Oro\Bundle\EntityBundle\Cache\EntityAliasCacheWarmer($this->get('oro_entity.entity_alias_resolver'));
    }

    /**
     * Gets the 'oro_entity.entity_alias_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\EntityBundle\ORM\EntityAliasResolver A Oro\Bundle\EntityBundle\ORM\EntityAliasResolver instance.
     */
    public function getOroEntity_EntityAliasResolverService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_entity.entity_alias_resolver'] = new OroBundleEntityBundleORMEntityAliasResolver_000000002e47f31e00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroEntity_EntityAliasResolverService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $a = new \Oro\Bundle\EntityBundle\Provider\EntityAliasConfigBag(array('Oro\\Bundle\\UserBundle\\Entity\\Email' => array('alias' => 'useremail', 'plural_alias' => 'useremails'), 'Oro\\Bundle\\UserBundle\\Entity\\Group' => array('alias' => 'usergroup', 'plural_alias' => 'usergroups'), 'Oro\\Bundle\\UserBundle\\Entity\\Role' => array('alias' => 'userrole', 'plural_alias' => 'userroles'), 'Oro\\Bundle\\UserBundle\\Entity\\Status' => array('alias' => 'userstatus', 'plural_alias' => 'userstatuses'), 'Oro\\Bundle\\IntegrationBundle\\Entity\\Channel' => array('alias' => 'integrationchannel', 'plural_alias' => 'integrationchannels'), 'Oro\\Bundle\\IntegrationBundle\\Entity\\FieldsChanges' => array('alias' => 'integrationfieldschanges', 'plural_alias' => 'integrationfieldschanges'), 'Oro\\Bundle\\IntegrationBundle\\Entity\\Status' => array('alias' => 'integrationstatus', 'plural_alias' => 'integrationstatuses'), 'Oro\\Bundle\\IntegrationBundle\\Entity\\Transport' => array('alias' => 'integrationtransport', 'plural_alias' => 'integrationtransports'), 'JMS\\JobQueueBundle\\Entity\\Job' => array('alias' => 'job', 'plural_alias' => 'jobs'), 'Oro\\Bundle\\NotificationBundle\\Entity\\Event' => array('alias' => 'notificationevent', 'plural_alias' => 'notificationevents'), 'Oro\\Bundle\\NotificationBundle\\Entity\\RecipientList' => array('alias' => 'notificationrecipientlist', 'plural_alias' => 'notificationrecipientlist'), 'Oro\\Bundle\\SidebarBundle\\Entity\\Widget' => array('alias' => 'sidebarwidget', 'plural_alias' => 'sidebarwidgets'), 'Oro\\Bundle\\DashboardBundle\\Entity\\Widget' => array('alias' => 'dashboardwidget', 'plural_alias' => 'dashboardwidgets'), 'Oro\\Bundle\\DashboardBundle\\Entity\\WidgetState' => array('alias' => 'dashboardwidgetstate', 'plural_alias' => 'dashboardwidgetstates'), 'Oro\\Bundle\\NavigationBundle\\Entity\\Title' => array('alias' => 'pagetitle', 'plural_alias' => 'pagetitles')), array(0 => 'Oro\\Bundle\\EmailBundle\\Entity\\EmailAttachmentContent', 1 => 'Oro\\Bundle\\EmailBundle\\Entity\\EmailBody', 2 => 'Oro\\Bundle\\EmailBundle\\Entity\\EmailRecipient', 3 => 'Oro\\Bundle\\EmailBundle\\Entity\\InternalEmailOrigin', 4 => 'Oro\\Bundle\\EntityConfigBundle\\Entity\\ConfigLog', 5 => 'Oro\\Bundle\\EntityConfigBundle\\Entity\\ConfigLogDiff', 6 => 'Oro\\Bundle\\EntityConfigBundle\\Entity\\ConfigModelIndexValue', 7 => 'Oro\\Bundle\\EntityConfigBundle\\Entity\\EntityConfigModel', 8 => 'Oro\\Bundle\\EntityConfigBundle\\Entity\\FieldConfigModel', 9 => 'Oro\\Bundle\\EntityConfigBundle\\Entity\\OptionSet', 10 => 'Oro\\Bundle\\EntityConfigBundle\\Entity\\OptionSetRelation', 11 => 'Akeneo\\Bundle\\BatchBundle\\Entity\\FieldMapping', 12 => 'Akeneo\\Bundle\\BatchBundle\\Entity\\ItemMapping', 13 => 'Akeneo\\Bundle\\BatchBundle\\Entity\\JobExecution', 14 => 'Akeneo\\Bundle\\BatchBundle\\Entity\\JobInstance', 15 => 'Akeneo\\Bundle\\BatchBundle\\Entity\\StepExecution', 16 => 'Akeneo\\Bundle\\BatchBundle\\Entity\\Warning', 17 => 'Oro\\Bundle\\ConfigBundle\\Entity\\Config', 18 => 'Oro\\Bundle\\ConfigBundle\\Entity\\ConfigValue', 19 => 'Oro\\Bundle\\DataGridBundle\\Entity\\GridView', 20 => 'Oro\\Bundle\\ImapBundle\\Entity\\ImapEmail', 21 => 'Oro\\Bundle\\ImapBundle\\Entity\\ImapEmailFolder', 22 => 'Oro\\Bundle\\ImapBundle\\Entity\\UserEmailOrigin', 23 => 'Oro\\Bundle\\MigrationBundle\\Entity\\DataFixture', 24 => 'Oro\\Bundle\\MigrationBundle\\Entity\\DataMigration', 25 => 'Oro\\Bundle\\NotificationBundle\\Entity\\SpoolItem', 26 => 'Oro\\Bundle\\SearchBundle\\Entity\\IndexDatetime', 27 => 'Oro\\Bundle\\SearchBundle\\Entity\\IndexDecimal', 28 => 'Oro\\Bundle\\SearchBundle\\Entity\\IndexInteger', 29 => 'Oro\\Bundle\\SearchBundle\\Entity\\IndexText', 30 => 'Oro\\Bundle\\SearchBundle\\Entity\\Item', 31 => 'Oro\\Bundle\\SearchBundle\\Entity\\Query', 32 => 'Oro\\Bundle\\SearchBundle\\Entity\\UpdateEntity', 33 => 'Oro\\Bundle\\TagBundle\\Entity\\Tagging'));

        $instance = new \Oro\Bundle\EntityBundle\ORM\EntityAliasResolver($this->get('doctrine'), true);

        $instance->addProvider(new \Oro\Bundle\EmailBundle\Provider\EmailEntityAliasProvider($this->get('oro_email.email.address.manager')));
        $instance->addProvider(new \Oro\Bundle\EntityExtendBundle\Provider\ExtendEntityAliasProvider($a, $this->get('oro_entity_config.config_manager')));
        $instance->addProvider(new \Oro\Bundle\EntityBundle\Provider\EntityAliasProvider($a));

        return $instance;
    }

    /**
     * Gets the 'oro_entity.entity_class_name_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Tools\EntityClassNameHelper A Oro\Bundle\EntityBundle\Tools\EntityClassNameHelper instance.
     */
    protected function getOroEntity_EntityClassNameHelperService()
    {
        return $this->services['oro_entity.entity_class_name_helper'] = new \Oro\Bundle\EntityBundle\Tools\EntityClassNameHelper($this->get('oro_entity.entity_alias_resolver'));
    }

    /**
     * Gets the 'oro_entity.entity_context_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\EntityContextProvider A Oro\Bundle\EntityBundle\Provider\EntityContextProvider instance.
     */
    protected function getOroEntity_EntityContextProviderService()
    {
        return $this->services['oro_entity.entity_context_provider'] = new \Oro\Bundle\EntityBundle\Provider\EntityContextProvider($this->get('oro_entity.routing_helper'), $this->get('oro_entity.entity_provider'), $this->get('oro_entity_config.provider.entity'));
    }

    /**
     * Gets the 'oro_entity.entity_field_list_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\EntityWithFieldsProvider A Oro\Bundle\EntityBundle\Provider\EntityWithFieldsProvider instance.
     */
    protected function getOroEntity_EntityFieldListProviderService()
    {
        return $this->services['oro_entity.entity_field_list_provider'] = new \Oro\Bundle\EntityBundle\Provider\EntityWithFieldsProvider($this->get('oro_entity.entity_field_provider'), $this->get('oro_entity.entity_provider'));
    }

    /**
     * Gets the 'oro_entity.entity_field_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\EntityFieldProvider A Oro\Bundle\EntityBundle\Provider\EntityFieldProvider instance.
     */
    protected function getOroEntity_EntityFieldProviderService()
    {
        $this->services['oro_entity.entity_field_provider'] = $instance = new \Oro\Bundle\EntityBundle\Provider\EntityFieldProvider($this->get('oro_entity_config.provider.entity'), $this->get('oro_entity_config.provider.extend'), $this->get('oro_entity.orm.entity_class_resolver'), $this->get('oro_entity_extend.extend.field_type_helper'), $this->get('doctrine'), $this->get('translator'), array());

        $instance->setEntityProvider($this->get('oro_entity.entity_provider'));
        $instance->setVirtualFieldProvider($this->get('oro_entity.virtual_field_provider'));
        $instance->setVirtualRelationProvider($this->get('oro_entity.virtual_relation_provider.chain'));
        $instance->setExclusionProvider($this->get('oro_entity.exclusion_provider'));

        return $instance;
    }

    /**
     * Gets the 'oro_entity.entity_hierarchy_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\EntityHierarchyProvider A Oro\Bundle\EntityBundle\Provider\EntityHierarchyProvider instance.
     */
    protected function getOroEntity_EntityHierarchyProviderService()
    {
        return $this->services['oro_entity.entity_hierarchy_provider'] = new \Oro\Bundle\EntityBundle\Provider\EntityHierarchyProvider($this->get('oro_entity_config.provider.extend'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_entity.entity_identifier_accessor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\ORM\EntityIdAccessor A Oro\Bundle\EntityBundle\ORM\EntityIdAccessor instance.
     */
    protected function getOroEntity_EntityIdentifierAccessorService()
    {
        return $this->services['oro_entity.entity_identifier_accessor'] = new \Oro\Bundle\EntityBundle\ORM\EntityIdAccessor($this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_entity.entity_name_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\EntityNameResolver A Oro\Bundle\EntityBundle\Provider\EntityNameResolver instance.
     */
    protected function getOroEntity_EntityNameResolverService()
    {
        $this->services['oro_entity.entity_name_resolver'] = $instance = new \Oro\Bundle\EntityBundle\Provider\EntityNameResolver('full', array('full' => array('fallback' => 'short'), 'short' => array('fallback' => NULL)));

        $instance->addProvider($this->get('oro_email.mailbox.entity_name_provider'), 0);
        $instance->addProvider(new \Oro\Bundle\EntityBundle\Provider\EntityNameProvider($this->get('doctrine')), -100);
        $instance->addProvider(new \Oro\Bundle\LocaleBundle\Provider\EntityNameProvider(new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_locale.formatter.name', false), new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_locale.dql.formatter.name', false)), -90);

        return $instance;
    }

    /**
     * Gets the 'oro_entity.entity_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\EntityProvider A Oro\Bundle\EntityBundle\Provider\EntityProvider instance.
     */
    protected function getOroEntity_EntityProviderService()
    {
        $this->services['oro_entity.entity_provider'] = $instance = new \Oro\Bundle\EntityBundle\Provider\EntityProvider($this->get('oro_entity_config.provider.entity'), $this->get('oro_entity_config.provider.extend'), $this->get('oro_entity.orm.entity_class_resolver'), $this->get('translator'));

        $instance->setExclusionProvider($this->get('oro_entity.exclusion_provider'));

        return $instance;
    }

    /**
     * Gets the 'oro_entity.event_listener.custom_entity_grid_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\EventListener\CustomEntityGridListener A Oro\Bundle\EntityBundle\EventListener\CustomEntityGridListener instance.
     */
    protected function getOroEntity_EventListener_CustomEntityGridListenerService()
    {
        return $this->services['oro_entity.event_listener.custom_entity_grid_listener'] = new \Oro\Bundle\EntityBundle\EventListener\CustomEntityGridListener($this->get('router'));
    }

    /**
     * Gets the 'oro_entity.event_listener.entity_relation_grid_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\EventListener\EntityRelationGridListener A Oro\Bundle\EntityBundle\EventListener\EntityRelationGridListener instance.
     */
    protected function getOroEntity_EventListener_EntityRelationGridListenerService()
    {
        $this->services['oro_entity.event_listener.entity_relation_grid_listener'] = $instance = new \Oro\Bundle\EntityBundle\EventListener\EntityRelationGridListener($this->get('oro_entity_config.config_manager'));

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_entity.exclusion_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\ChainExclusionProvider A Oro\Bundle\EntityBundle\Provider\ChainExclusionProvider instance.
     */
    protected function getOroEntity_ExclusionProviderService()
    {
        $this->services['oro_entity.exclusion_provider'] = $instance = new \Oro\Bundle\EntityBundle\Provider\ChainExclusionProvider();

        $instance->addProvider($this->get('oro_entity.exclusion_provider.config'));

        return $instance;
    }

    /**
     * Gets the 'oro_entity.exclusion_provider.config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\ConfigExclusionProvider A Oro\Bundle\EntityBundle\Provider\ConfigExclusionProvider instance.
     */
    protected function getOroEntity_ExclusionProvider_ConfigService()
    {
        return $this->services['oro_entity.exclusion_provider.config'] = new \Oro\Bundle\EntityBundle\Provider\ConfigExclusionProvider($this->get('oro_entity.entity_hierarchy_provider'), array(0 => array('entity' => 'Oro\\Bundle\\AddressBundle\\Entity\\AbstractAddress', 'field' => 'regionText'), 1 => array('entity' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingData'), 2 => array('entity' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingEventDictionary'), 3 => array('entity' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingVisit'), 4 => array('entity' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingVisitEvent', 'field' => 'parsingCount'), 5 => array('entity' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingVisitEvent', 'field' => 'event'), 6 => array('entity' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingVisitEvent', 'field' => 'visit')));
    }

    /**
     * Gets the 'oro_entity.exclusion_provider.dictionary' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\DictionaryExclusionProvider A Oro\Bundle\EntityBundle\Provider\DictionaryExclusionProvider instance.
     */
    protected function getOroEntity_ExclusionProvider_DictionaryService()
    {
        return $this->services['oro_entity.exclusion_provider.dictionary'] = new \Oro\Bundle\EntityBundle\Provider\DictionaryExclusionProvider($this->get('oro_entity_config.provider.grouping'));
    }

    /**
     * Gets the 'oro_entity.extension.unique_entity_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Form\Extension\UniqueEntityExtension A Oro\Bundle\EntityBundle\Form\Extension\UniqueEntityExtension instance.
     */
    protected function getOroEntity_Extension_UniqueEntityExtensionService()
    {
        return $this->services['oro_entity.extension.unique_entity_extension'] = new \Oro\Bundle\EntityBundle\Form\Extension\UniqueEntityExtension($this->get('validator'), $this->get('translator'), $this->get('oro_entity_config.provider.entity'));
    }

    /**
     * Gets the 'oro_entity.form.guesser.doctrine_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Form\Guesser\DoctrineTypeGuesser A Oro\Bundle\EntityBundle\Form\Guesser\DoctrineTypeGuesser instance.
     */
    protected function getOroEntity_Form_Guesser_DoctrineTypeService()
    {
        $this->services['oro_entity.form.guesser.doctrine_type'] = $instance = new \Oro\Bundle\EntityBundle\Form\Guesser\DoctrineTypeGuesser($this->get('doctrine'), $this->get('oro_entity_config.provider.entity'));

        $instance->addDoctrineTypeMapping('string', 'text');
        $instance->addDoctrineTypeMapping('integer', 'text');
        $instance->addDoctrineTypeMapping('smallint', 'integer', array('precision' => 0));
        $instance->addDoctrineTypeMapping('bigint', 'integer', array('precision' => 0));
        $instance->addDoctrineTypeMapping('boolean', 'checkbox');
        $instance->addDoctrineTypeMapping('decimal', 'number');
        $instance->addDoctrineTypeMapping('date', 'oro_date');
        $instance->addDoctrineTypeMapping('time', 'time', array('model_timezone' => 'UTC', 'view_timezone' => 'UTC'));
        $instance->addDoctrineTypeMapping('datetime', 'oro_datetime');
        $instance->addDoctrineTypeMapping('datetimetz', 'oro_datetime');
        $instance->addDoctrineTypeMapping('text', 'textarea');
        $instance->addDoctrineTypeMapping('float', 'number');
        $instance->addDoctrineTypeMapping('guid', 'text');
        $instance->addDoctrineTypeMapping('percent', 'oro_percent');
        $instance->addDoctrineTypeMapping('money', 'oro_money');

        return $instance;
    }

    /**
     * Gets the 'oro_entity.form.guesser.form_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Form\Guesser\FormConfigGuesser A Oro\Bundle\EntityBundle\Form\Guesser\FormConfigGuesser instance.
     */
    protected function getOroEntity_Form_Guesser_FormConfigService()
    {
        return $this->services['oro_entity.form.guesser.form_config'] = new \Oro\Bundle\EntityBundle\Form\Guesser\FormConfigGuesser($this->get('doctrine'), $this->get('oro_entity_config.provider.entity'), $this->get('oro_entity_config.provider.form'));
    }

    /**
     * Gets the 'oro_entity.form.handler.entity_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Form\Handler\EntitySelectHandler A Oro\Bundle\EntityBundle\Form\Handler\EntitySelectHandler instance.
     */
    protected function getOroEntity_Form_Handler_EntitySelectService()
    {
        $this->services['oro_entity.form.handler.entity_select'] = $instance = new \Oro\Bundle\EntityBundle\Form\Handler\EntitySelectHandler();

        $instance->initDoctrinePropertiesByManagerRegistry($this->get('doctrine'));
        $instance->setAclHelper($this->get('oro_security.acl_helper'));

        return $instance;
    }

    /**
     * Gets the 'oro_entity.form.type.custom_entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Form\Type\CustomEntityType A Oro\Bundle\EntityBundle\Form\Type\CustomEntityType instance.
     */
    protected function getOroEntity_Form_Type_CustomEntityService()
    {
        return $this->services['oro_entity.form.type.custom_entity'] = new \Oro\Bundle\EntityBundle\Form\Type\CustomEntityType();
    }

    /**
     * Gets the 'oro_entity.form.type.entity_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Form\Type\EntityChoiceType A Oro\Bundle\EntityBundle\Form\Type\EntityChoiceType instance.
     */
    protected function getOroEntity_Form_Type_EntityChoiceService()
    {
        return $this->services['oro_entity.form.type.entity_choice'] = new \Oro\Bundle\EntityBundle\Form\Type\EntityChoiceType($this->get('oro_entity.entity_provider'));
    }

    /**
     * Gets the 'oro_entity.form.type.entity_field_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Form\Type\EntityFieldChoiceType A Oro\Bundle\EntityBundle\Form\Type\EntityFieldChoiceType instance.
     */
    protected function getOroEntity_Form_Type_EntityFieldChoiceService()
    {
        return $this->services['oro_entity.form.type.entity_field_choice'] = new \Oro\Bundle\EntityBundle\Form\Type\EntityFieldChoiceType($this->get('oro_entity.entity_provider'), $this->get('oro_entity.entity_field_provider'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_entity.form.type.entity_field_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Form\Type\EntityFieldSelectType A Oro\Bundle\EntityBundle\Form\Type\EntityFieldSelectType instance.
     */
    protected function getOroEntity_Form_Type_EntityFieldSelectService()
    {
        return $this->services['oro_entity.form.type.entity_field_select'] = new \Oro\Bundle\EntityBundle\Form\Type\EntityFieldSelectType($this->get('oro_entity.entity_provider'), $this->get('oro_entity.entity_field_provider'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_entity.form.type.entity_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Form\Type\EntitySelectType A Oro\Bundle\EntityBundle\Form\Type\EntitySelectType instance.
     */
    protected function getOroEntity_Form_Type_EntitySelectService()
    {
        return $this->services['oro_entity.form.type.entity_select'] = new \Oro\Bundle\EntityBundle\Form\Type\EntitySelectType($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity.form.type.option_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Form\Type\OptionSelectType A Oro\Bundle\EntityBundle\Form\Type\OptionSelectType instance.
     */
    protected function getOroEntity_Form_Type_OptionSelectService()
    {
        return $this->services['oro_entity.form.type.option_select'] = new \Oro\Bundle\EntityBundle\Form\Type\OptionSelectType($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity.helper.dictionary' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Helper\DictionaryHelper A Oro\Bundle\EntityBundle\Helper\DictionaryHelper instance.
     */
    protected function getOroEntity_Helper_DictionaryService()
    {
        return $this->services['oro_entity.helper.dictionary'] = new \Oro\Bundle\EntityBundle\Helper\DictionaryHelper();
    }

    /**
     * Gets the 'oro_entity.listener.navigation_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\EventListener\NavigationListener A Oro\Bundle\EntityBundle\EventListener\NavigationListener instance.
     */
    protected function getOroEntity_Listener_NavigationListenerService()
    {
        return $this->services['oro_entity.listener.navigation_listener'] = new \Oro\Bundle\EntityBundle\EventListener\NavigationListener($this->get('oro_security.security_facade'), $this->get('oro_entity_config.config_manager'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_entity.listener.orm.generated_value_strategy_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\EntityBundle\EventListener\ORM\GeneratedValueStrategyListener A Oro\Bundle\EntityBundle\EventListener\ORM\GeneratedValueStrategyListener instance.
     */
    public function getOroEntity_Listener_Orm_GeneratedValueStrategyListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_entity.listener.orm.generated_value_strategy_listener'] = new OroBundleEntityBundleEventListenerORMGeneratedValueStrategyListener_000000002e47f3e900000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroEntity_Listener_Orm_GeneratedValueStrategyListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\EntityBundle\EventListener\ORM\GeneratedValueStrategyListener('pdo_mysql');
    }

    /**
     * Gets the 'oro_entity.manager.dictionary.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Entity\Manager\DictionaryApiEntityManager A Oro\Bundle\EntityBundle\Entity\Manager\DictionaryApiEntityManager instance.
     */
    protected function getOroEntity_Manager_Dictionary_ApiService()
    {
        $this->services['oro_entity.manager.dictionary.api'] = $instance = new \Oro\Bundle\EntityBundle\Entity\Manager\DictionaryApiEntityManager($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_entity.dictionary_value_list_provider'), $this->get('oro_entity.helper.dictionary'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_entity.migration.extension.change_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Migrations\Extension\ChangeTypeExtension A Oro\Bundle\EntityBundle\Migrations\Extension\ChangeTypeExtension instance.
     */
    protected function getOroEntity_Migration_Extension_ChangeTypeService()
    {
        return $this->services['oro_entity.migration.extension.change_type'] = new \Oro\Bundle\EntityBundle\Migrations\Extension\ChangeTypeExtension();
    }

    /**
     * Gets the 'oro_entity.orm.entity_class_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\ORM\EntityClassResolver A Oro\Bundle\EntityBundle\ORM\EntityClassResolver instance.
     */
    protected function getOroEntity_Orm_EntityClassResolverService()
    {
        return $this->services['oro_entity.orm.entity_class_resolver'] = new \Oro\Bundle\EntityBundle\ORM\EntityClassResolver($this->get('doctrine'));
    }

    /**
     * Gets the 'oro_entity.owner.entity_config_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\EventListener\EntityConfigSubscriber A Oro\Bundle\EntityBundle\EventListener\EntityConfigSubscriber instance.
     */
    protected function getOroEntity_Owner_EntityConfigSubscriberService()
    {
        return $this->services['oro_entity.owner.entity_config_subscriber'] = new \Oro\Bundle\EntityBundle\EventListener\EntityConfigSubscriber();
    }

    /**
     * Gets the 'oro_entity.query_hint_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\ORM\QueryHintResolver A Oro\Bundle\EntityBundle\ORM\QueryHintResolver instance.
     */
    protected function getOroEntity_QueryHintResolverService()
    {
        $this->services['oro_entity.query_hint_resolver'] = $instance = new \Oro\Bundle\EntityBundle\ORM\QueryHintResolver();

        $instance->addTreeWalker('oro_security.filter_by_current_user', 'Oro\\Bundle\\SecurityBundle\\ORM\\Walker\\CurrentUserWalker', new \Oro\Bundle\SecurityBundle\ORM\Walker\CurrentUserWalkerHintProvider($this->get('security.context')), 'HINT_FILTER_BY_CURRENT_USER');
        $instance->addOutputWalker('oro_translation.translatable', 'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker', NULL, 'HINT_TRANSLATABLE');

        return $instance;
    }

    /**
     * Gets the 'oro_entity.routing_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Tools\EntityRoutingHelper A Oro\Bundle\EntityBundle\Tools\EntityRoutingHelper instance.
     */
    protected function getOroEntity_RoutingHelperService()
    {
        return $this->services['oro_entity.routing_helper'] = new \Oro\Bundle\EntityBundle\Tools\EntityRoutingHelper($this->get('oro_entity.entity_class_name_helper'), $this->get('oro_entity.doctrine_helper'), $this->get('router'));
    }

    /**
     * Gets the 'oro_entity.twig.extension.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Twig\EntityExtension A Oro\Bundle\EntityBundle\Twig\EntityExtension instance.
     */
    protected function getOroEntity_Twig_Extension_EntityService()
    {
        return $this->services['oro_entity.twig.extension.entity'] = new \Oro\Bundle\EntityBundle\Twig\EntityExtension($this->get('oro_entity.entity_identifier_accessor'), $this->get('oro_entity.routing_helper'), $this->get('oro_entity.entity_name_resolver'));
    }

    /**
     * Gets the 'oro_entity.virtual_field_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\ConfigVirtualFieldProvider A Oro\Bundle\EntityBundle\Provider\ConfigVirtualFieldProvider instance.
     */
    protected function getOroEntity_VirtualFieldProviderService()
    {
        return $this->services['oro_entity.virtual_field_provider'] = new \Oro\Bundle\EntityBundle\Provider\ConfigVirtualFieldProvider($this->get('oro_entity.entity_hierarchy_provider'), array('Oro\\Bundle\\AddressBundle\\Entity\\AbstractAddress' => array('region_name' => array('query' => array('select' => array('expr' => 'COALESCE(entity.regionText, region.name)', 'return_type' => 'string'), 'join' => array('left' => array(0 => array('join' => 'entity.region', 'alias' => 'region')))))), 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingVisitEvent' => array('ip' => array('query' => array('select' => array('expr' => 'visit.ip', 'return_type' => 'string'), 'join' => array('left' => array(0 => array('join' => 'entity.visit', 'alias' => 'visit'))))), 'os' => array('query' => array('select' => array('expr' => 'visit.os', 'return_type' => 'string'), 'join' => array('left' => array(0 => array('join' => 'entity.visit', 'alias' => 'visit'))))), 'osVersion' => array('query' => array('select' => array('expr' => 'visit.osVersion', 'return_type' => 'string'), 'join' => array('left' => array(0 => array('join' => 'entity.visit', 'alias' => 'visit'))))), 'client' => array('query' => array('select' => array('expr' => 'visit.client', 'return_type' => 'string'), 'join' => array('left' => array(0 => array('join' => 'entity.visit', 'alias' => 'visit'))))), 'clientVersion' => array('query' => array('select' => array('expr' => 'visit.clientVersion', 'return_type' => 'string'), 'join' => array('left' => array(0 => array('join' => 'entity.visit', 'alias' => 'visit'))))), 'clientType' => array('query' => array('select' => array('expr' => 'visit.clientType', 'return_type' => 'string'), 'join' => array('left' => array(0 => array('join' => 'entity.visit', 'alias' => 'visit'))))), 'desktop' => array('query' => array('select' => array('expr' => 'visit.desktop', 'return_type' => 'boolean'), 'join' => array('left' => array(0 => array('join' => 'entity.visit', 'alias' => 'visit'))))), 'mobile' => array('query' => array('select' => array('expr' => 'visit.mobile', 'return_type' => 'boolean'), 'join' => array('left' => array(0 => array('join' => 'entity.visit', 'alias' => 'visit'))))), 'bot' => array('query' => array('select' => array('expr' => 'visit.bot', 'return_type' => 'boolean'), 'join' => array('left' => array(0 => array('join' => 'entity.visit', 'alias' => 'visit'))))), 'identifierDetected' => array('query' => array('select' => array('expr' => 'visit.identifierDetected', 'return_type' => 'boolean'), 'join' => array('left' => array(0 => array('join' => 'entity.visit', 'alias' => 'visit'))))), 'url' => array('query' => array('select' => array('expr' => 'trackingEvent.url', 'return_type' => 'string'), 'join' => array('left' => array(0 => array('join' => 'entity.webEvent', 'alias' => 'trackingEvent'))))), 'title' => array('query' => array('select' => array('expr' => 'trackingEvent.title', 'return_type' => 'string'), 'join' => array('left' => array(0 => array('join' => 'entity.webEvent', 'alias' => 'trackingEvent'))))), 'eventDate' => array('query' => array('select' => array('expr' => 'trackingEvent.loggedAt', 'return_type' => 'datetime'), 'join' => array('left' => array(0 => array('join' => 'entity.webEvent', 'alias' => 'trackingEvent'))))), 'type' => array('query' => array('select' => array('expr' => 'eventType.name', 'return_type' => 'string'), 'join' => array('left' => array(0 => array('join' => 'entity.event', 'alias' => 'eventType'))))))));
    }

    /**
     * Gets the 'oro_entity.virtual_field_provider.chain' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\ChainVirtualFieldProvider A Oro\Bundle\EntityBundle\Provider\ChainVirtualFieldProvider instance.
     */
    protected function getOroEntity_VirtualFieldProvider_ChainService()
    {
        $this->services['oro_entity.virtual_field_provider.chain'] = $instance = new \Oro\Bundle\EntityBundle\Provider\ChainVirtualFieldProvider();

        $instance->addProvider($this->get('oro_entity.virtual_field_provider'), 0);
        $instance->addProvider($this->get('oro_entity.virtual_field_provider.dictionary'), 100);
        $instance->addProvider($this->get('oro_entity.virtual_field_provider.enum'), 100);

        return $instance;
    }

    /**
     * Gets the 'oro_entity.virtual_field_provider.dictionary' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\DictionaryVirtualFieldProvider A Oro\Bundle\EntityBundle\Provider\DictionaryVirtualFieldProvider instance.
     */
    protected function getOroEntity_VirtualFieldProvider_DictionaryService()
    {
        return $this->services['oro_entity.virtual_field_provider.dictionary'] = new \Oro\Bundle\EntityBundle\Provider\DictionaryVirtualFieldProvider($this->get('oro_entity_config.provider.grouping'), $this->get('oro_entity_config.provider.dictionary'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_entity.virtual_field_provider.enum' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\EnumVirtualFieldProvider A Oro\Bundle\EntityBundle\Provider\EnumVirtualFieldProvider instance.
     */
    protected function getOroEntity_VirtualFieldProvider_EnumService()
    {
        return $this->services['oro_entity.virtual_field_provider.enum'] = new \Oro\Bundle\EntityBundle\Provider\EnumVirtualFieldProvider($this->get('oro_entity_config.provider.extend'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_entity.virtual_relation_provider.chain' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\ChainVirtualRelationProvider A Oro\Bundle\EntityBundle\Provider\ChainVirtualRelationProvider instance.
     */
    protected function getOroEntity_VirtualRelationProvider_ChainService()
    {
        $this->services['oro_entity.virtual_relation_provider.chain'] = $instance = new \Oro\Bundle\EntityBundle\Provider\ChainVirtualRelationProvider();

        $instance->addProvider($this->get('oro_entity.virtual_relation_provider.config'), 0);
        $instance->addProvider($this->get('oro_tag.provider.virtual_relation.tags'), 150);

        return $instance;
    }

    /**
     * Gets the 'oro_entity.virtual_relation_provider.config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\ConfigVirtualRelationProvider A Oro\Bundle\EntityBundle\Provider\ConfigVirtualRelationProvider instance.
     */
    protected function getOroEntity_VirtualRelationProvider_ConfigService()
    {
        return $this->services['oro_entity.virtual_relation_provider.config'] = new \Oro\Bundle\EntityBundle\Provider\ConfigVirtualRelationProvider($this->get('oro_entity.entity_hierarchy_provider'), array());
    }

    /**
     * Gets the 'oro_entity_config.config_loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Tools\ExtendConfigLoader A Oro\Bundle\EntityExtendBundle\Tools\ExtendConfigLoader instance.
     */
    protected function getOroEntityConfig_ConfigLoaderService()
    {
        return $this->services['oro_entity_config.config_loader'] = new \Oro\Bundle\EntityExtendBundle\Tools\ExtendConfigLoader($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_config.config_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Config\ConfigManager A Oro\Bundle\EntityConfigBundle\Config\ConfigManager instance.
     */
    protected function getOroEntityConfig_ConfigManagerService()
    {
        return $this->services['oro_entity_config.config_manager'] = new \Oro\Bundle\EntityConfigBundle\Config\ConfigManager($this->get('oro_entity_config.metadata.annotation_metadata_factory'), $this->get('debug.event_dispatcher'), new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_entity_config.provider_bag', false), new \Oro\Bundle\EntityConfigBundle\Config\ConfigModelManager($this->get('oro_entity_config.link.entity_manager')), new \Oro\Bundle\EntityConfigBundle\Audit\AuditManager($this->get('security.token_storage')), new \Oro\Bundle\EntityConfigBundle\Config\ConfigCache($this->get('oro_entity_config.config_cache_impl'), $this->get('oro_entity_config.model_cache_impl'), true));
    }

    /**
     * Gets the 'oro_entity_config.event_listener.audit_log_grid_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\DataAuditBundle\EventListener\AuditHistoryGridListener A Oro\Bundle\DataAuditBundle\EventListener\AuditHistoryGridListener instance.
     */
    protected function getOroEntityConfig_EventListener_AuditLogGridListenerService()
    {
        return $this->services['oro_entity_config.event_listener.audit_log_grid_listener'] = new \Oro\Bundle\DataAuditBundle\EventListener\AuditHistoryGridListener(array(0 => 'objectClass', 1 => 'fieldName'));
    }

    /**
     * Gets the 'oro_entity_config.event_listener.entityconfig_grid_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\EventListener\EntityConfigGridListener A Oro\Bundle\EntityConfigBundle\EventListener\EntityConfigGridListener instance.
     */
    protected function getOroEntityConfig_EventListener_EntityconfigGridListenerService()
    {
        return $this->services['oro_entity_config.event_listener.entityconfig_grid_listener'] = new \Oro\Bundle\EntityConfigBundle\EventListener\EntityConfigGridListener($this->get('oro_entity_config.config_manager'), $this->get('oro_datagrid.provider.resolver'));
    }

    /**
     * Gets the 'oro_entity_config.event_listener.entityfields_grid_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\EventListener\FieldConfigGridListener A Oro\Bundle\EntityConfigBundle\EventListener\FieldConfigGridListener instance.
     */
    protected function getOroEntityConfig_EventListener_EntityfieldsGridListenerService()
    {
        return $this->services['oro_entity_config.event_listener.entityfields_grid_listener'] = new \Oro\Bundle\EntityConfigBundle\EventListener\FieldConfigGridListener($this->get('oro_entity_config.config_manager'), $this->get('oro_datagrid.provider.resolver'));
    }

    /**
     * Gets the 'oro_entity_config.event_listener.option_set_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\EntityConfigBundle\EventListener\OptionSetListener A Oro\Bundle\EntityConfigBundle\EventListener\OptionSetListener instance.
     */
    public function getOroEntityConfig_EventListener_OptionSetListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_entity_config.event_listener.option_set_listener'] = new OroBundleEntityConfigBundleEventListenerOptionSetListener_000000002e47f38900000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroEntityConfig_EventListener_OptionSetListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\EntityConfigBundle\EventListener\OptionSetListener();
    }

    /**
     * Gets the 'oro_entity_config.extension.config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Form\Extension\ConfigExtension A Oro\Bundle\EntityConfigBundle\Form\Extension\ConfigExtension instance.
     */
    protected function getOroEntityConfig_Extension_ConfigService()
    {
        return $this->services['oro_entity_config.extension.config'] = new \Oro\Bundle\EntityConfigBundle\Form\Extension\ConfigExtension();
    }

    /**
     * Gets the 'oro_entity_config.metadata.annotation_metadata_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Metadata\MetadataFactory A Metadata\MetadataFactory instance.
     */
    protected function getOroEntityConfig_Metadata_AnnotationMetadataFactoryService()
    {
        return $this->services['oro_entity_config.metadata.annotation_metadata_factory'] = new \Metadata\MetadataFactory(new \Oro\Bundle\EntityConfigBundle\Metadata\Driver\AnnotationDriver($this->get('annotation_reader')));
    }

    /**
     * Gets the 'oro_entity_config.migration.post_up.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\EventListener\PostUpMigrationListener A Oro\Bundle\EntityConfigBundle\EventListener\PostUpMigrationListener instance.
     */
    protected function getOroEntityConfig_Migration_PostUp_ListenerService()
    {
        return $this->services['oro_entity_config.migration.post_up.listener'] = new \Oro\Bundle\EntityConfigBundle\EventListener\PostUpMigrationListener($this->get('oro_entity_config.tools.command_executor'));
    }

    /**
     * Gets the 'oro_entity_config.provider.activity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_ActivityService()
    {
        return $this->services['oro_entity_config.provider.activity'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'activity', array('entity' => array('items' => array('activities' => array('options' => array('require_schema_update' => true, 'priority' => 250), 'form' => array('type' => 'oro_entity_extend_multiple_association_choice', 'options' => array('block' => 'associations', 'required' => false, 'label' => 'oro.activity.activities', 'association_class' => 'activity'))), 'immutable' => array('options' => array('auditable' => false)), 'route' => array('options' => array('auditable' => false)), 'acl' => array('options' => array('auditable' => false)), 'priority' => array('options' => array('auditable' => false)), 'action_button_widget' => array('options' => array('auditable' => false)), 'show_on_page' => array('options' => array('default_value' => '\\Oro\\Bundle\\ActivityBundle\\EntityConfig\\ActivityScope::VIEW_PAGE')), 'action_link_widget' => array('options' => array('auditable' => false))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.attachment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_AttachmentService()
    {
        return $this->services['oro_entity_config.provider.attachment'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'attachment', array('entity' => array('form' => array('block_config' => array('attachments' => array('title' => 'oro.attachment.block_titles.attachments.label', 'priority' => 0))), 'items' => array('enabled' => array('options' => array('priority' => 100, 'default_value' => false, 'require_schema_update' => true), 'form' => array('type' => 'oro_entity_extend_association_choice', 'options' => array('block' => 'attachments', 'required' => true, 'label' => 'oro.attachment.enabled', 'association_class' => 'OroAttachmentBundle:Attachment'))), 'maxsize' => array('options' => array('priority' => 90, 'default_value' => 1), 'form' => array('type' => 'oro_entity_extend_association_property_integer', 'options' => array('block' => 'attachments', 'required' => false, 'label' => 'oro.attachment.maxsize', 'association_class' => 'OroAttachmentBundle:Attachment'))), 'mimetypes' => array('options' => array('priority' => 80), 'form' => array('type' => 'oro_entity_extend_association_property_textarea', 'options' => array('block' => 'attachments', 'required' => false, 'label' => 'oro.attachment.mimetypes', 'association_class' => 'OroAttachmentBundle:Attachment', 'tooltip' => 'oro.attachment.mimetypes.tooltip'))), 'immutable' => array('options' => array('auditable' => false)), 'auto_link_attachments' => array('options' => array('require_schema_update' => false, 'priority' => 100, 'default_value' => false), 'form' => array('type' => 'oro_email_link_to_scope', 'options' => array('block' => 'attachments', 'choices' => array(0 => 'oro.email.system_configuration.attachment_configuration.link_to_scope.choices.manual.label', 1 => 'oro.email.system_configuration.attachment_configuration.link_to_scope.choices.auto.label'), 'empty_value' => false, 'required' => true, 'label' => 'oro.email.system_configuration.attachment_configuration.link_to_scope.label'))))), 'field' => array('items' => array('attachment' => array('options' => array('allowed_type' => array(0 => 'file', 1 => 'image'), 'auditable' => false), 'form' => array('type' => 'oro_attachment_file_config', 'options' => array('block' => 'general', 'subblock' => 'properties'))), 'maxsize' => array('options' => array('allowed_type' => array(0 => 'file', 1 => 'image')), 'constraints' => array(0 => array('NotBlank' => NULL), 1 => array('Type' => 'integer'), 2 => array('Range' => array('min' => 1))), 'form' => array('type' => 'integer', 'options' => array('required' => true, 'label' => 'oro.attachment.config.file_size.label', 'block' => 'general', 'subblock' => 'properties', 'empty_data' => 1, 'tooltip' => 'oro.attachment.max_size.tooltip'))), 'width' => array('options' => array('allowed_type' => array(0 => 'image')), 'constraints' => array(0 => array('Type' => array('type' => 'int'))), 'form' => array('type' => 'integer', 'options' => array('required' => true, 'label' => 'oro.attachment.config.thumb_width.label', 'block' => 'general', 'subblock' => 'properties', 'empty_data' => 32, 'tooltip' => 'oro.attachment.thumb_width.tooltip'))), 'height' => array('options' => array('allowed_type' => array(0 => 'image')), 'constraints' => array(0 => array('Type' => array('type' => 'int'))), 'form' => array('type' => 'integer', 'options' => array('required' => true, 'label' => 'oro.attachment.config.thumb_height.label', 'block' => 'general', 'subblock' => 'properties', 'empty_data' => 32, 'tooltip' => 'oro.attachment.thumb_height.tooltip')))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.comment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_CommentService()
    {
        return $this->services['oro_entity_config.provider.comment'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'comment', array('entity' => array('items' => array('enabled' => array('options' => array('require_schema_update' => true, 'priority' => 10, 'default_value' => false), 'form' => array('type' => 'oro_entity_extend_association_choice', 'options' => array('block' => 'associations', 'required' => true, 'label' => 'oro.comment.enabled', 'association_class' => 'OroCommentBundle:Comment'))), 'immutable' => array('options' => array('auditable' => false))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.dataaudit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_DataauditService()
    {
        return $this->services['oro_entity_config.provider.dataaudit'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'dataaudit', array('entity' => array('items' => array('auditable' => array('options' => array('priority' => 60, 'default_value' => false, 'indexed' => true), 'grid' => array('type' => 'boolean', 'label' => 'oro.dataaudit.entity_config.entity.items.auditable', 'filter_type' => 'boolean', 'required' => true, 'sortable' => true, 'filterable' => true, 'show_filter' => false), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.dataaudit.entity_config.entity.items.auditable'))))), 'field' => array('items' => array('auditable' => array('options' => array('priority' => 60, 'default_value' => false, 'allowed_type' => array(0 => 'string', 1 => 'text', 2 => 'integer', 3 => 'smallint', 4 => 'bigint', 5 => 'boolean', 6 => 'datetime', 7 => 'date', 8 => 'time', 9 => 'float', 10 => 'decimal', 11 => 'money', 12 => 'percent', 13 => 'enum', 14 => 'multiEnum', 15 => 'manyToOne', 16 => 'manyToMany', 17 => 'array', 18 => 'simple_array', 19 => 'json_array', 20 => 'ref-many', 21 => 'ref-one'), 'indexed' => true), 'grid' => array('type' => 'boolean', 'label' => 'oro.dataaudit.entity_config.field.items.auditable', 'filter_type' => 'boolean', 'required' => true, 'sortable' => true, 'filterable' => false, 'show_filter' => false), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.dataaudit.entity_config.field.items.auditable')))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.datagrid' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_DatagridService()
    {
        return $this->services['oro_entity_config.provider.datagrid'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'datagrid', array('field' => array('items' => array('is_visible' => array('options' => array('require_schema_update' => true, 'default_value' => true, 'allowed_type' => array(0 => 'string', 1 => 'integer', 2 => 'smallint', 3 => 'bigint', 4 => 'boolean', 5 => 'datetime', 6 => 'date', 7 => 'time', 8 => 'float', 9 => 'decimal', 10 => 'money', 11 => 'percent', 12 => 'enum', 13 => 'multiEnum'), 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'form' => array('type' => 'oro_entity_extend_choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.entity.entity_config.datagrid.field.items.is_visible'))), 'show_filter' => array('options' => array('allowed_type' => array(0 => 'string', 1 => 'integer', 2 => 'smallint', 3 => 'bigint', 4 => 'boolean', 5 => 'datetime', 6 => 'date', 7 => 'time', 8 => 'float', 9 => 'decimal', 10 => 'money', 11 => 'percent', 12 => 'enum', 13 => 'multiEnum'), 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.entity.entity_config.datagrid.field.items.show_filter')))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.dictionary' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_DictionaryService()
    {
        return $this->services['oro_entity_config.provider.dictionary'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'dictionary', array('entity' => array('items' => array('virtual_fields' => array('options' => array('auditable' => false))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_EmailService()
    {
        return $this->services['oro_entity_config.provider.email'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'email', array('field' => array('items' => array('available_in_template' => array('options' => array('default_value' => true, 'allowed_type' => array(0 => 'string', 1 => 'text', 2 => 'integer', 3 => 'smallint', 4 => 'bigint', 5 => 'boolean', 6 => 'datetime', 7 => 'date', 8 => 'time', 9 => 'float', 10 => 'decimal', 11 => 'money', 12 => 'percent', 13 => 'optionSet', 14 => 'enum', 15 => 'multiEnum', 16 => 'file', 17 => 'image', 18 => 'ref-one', 19 => 'manyToOne')), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.email.entity_config.email.field.items.available_in_template')))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_EntityService()
    {
        return $this->services['oro_entity_config.provider.entity'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'entity', array('entity' => array('form' => array('block_config' => array('general' => array('title' => 'oro.entity_config.block_titles.general.label', 'priority' => 100), 'associations' => array('title' => 'oro.entity_config.block_titles.associations.label', 'priority' => 50), 'other' => array('title' => 'oro.entity_config.block_titles.other.label', 'priority' => -255))), 'items' => array('icon' => array('options' => array('priority' => 10), 'form' => array('type' => 'oro_icon_select', 'options' => array('label' => 'oro.entity.entity_config.entity.entity.items.icon', 'block' => 'general', 'required' => false))), 'label' => array('options' => array('translatable' => true, 'priority' => 20), 'constraints' => array(0 => array('NotBlank' => NULL), 1 => array('Length' => array('min' => 2, 'max' => 50))), 'grid' => array('type' => 'html', 'label' => 'oro.entity.entity_config.entity.entity.items.label', 'required' => true, 'template' => 'OroEntityConfigBundle:Config:propertyLabel.html.twig'), 'form' => array('type' => 'text', 'options' => array('label' => 'oro.entity.entity_config.entity.entity.items.label', 'block' => 'general', 'required' => true))), 'plural_label' => array('options' => array('translatable' => true, 'priority' => 35), 'constraints' => array(0 => array('NotBlank' => NULL), 1 => array('Length' => array('min' => 2, 'max' => 50))), 'form' => array('type' => 'text', 'options' => array('label' => 'oro.entity.entity_config.entity.entity.items.plural_label', 'block' => 'general', 'required' => true))), 'description' => array('options' => array('translatable' => true, 'priority' => 50), 'constraints' => array(0 => array('Length' => array('max' => 500))), 'form' => array('type' => 'textarea', 'options' => array('label' => 'oro.entity.entity_config.entity.entity.items.description', 'block' => 'general', 'required' => false))))), 'field' => array('form' => array('block_config' => array('general' => array('title' => 'oro.entity_config.block_titles.general.label', 'priority' => 100), 'other' => array('title' => 'oro.entity_config.block_titles.other.label', 'priority' => -255))), 'items' => array('label' => array('options' => array('translatable' => true, 'priority' => 10), 'constraints' => array(0 => array('NotBlank' => NULL), 1 => array('Length' => array('min' => 2, 'max' => 50))), 'grid' => array('type' => 'html', 'label' => 'oro.entity.entity_config.entity.field.items.label', 'required' => true, 'template' => 'OroEntityConfigBundle:Config:propertyLabel.html.twig'), 'form' => array('type' => 'text', 'options' => array('label' => 'oro.entity.entity_config.entity.field.items.label', 'block' => 'general', 'required' => true))), 'description' => array('options' => array('translatable' => true, 'priority' => 30), 'constraints' => array(0 => array('Length' => array('max' => 500))), 'form' => array('type' => 'textarea', 'options' => array('label' => 'oro.entity.entity_config.entity.field.items.description', 'block' => 'general', 'required' => false)))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.entity_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_EntityConfigService()
    {
        return $this->services['oro_entity_config.provider.entity_config'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'entity_config', array('entity' => array('items' => array('entity_name' => array('options' => array('priority' => 200, 'indexed' => true), 'grid' => array('type' => 'string', 'label' => 'oro.entity_config.entity_config.entity_name.label', 'filter_type' => 'string', 'required' => true, 'sortable' => true, 'filterable' => true, 'show_filter' => true)), 'module_name' => array('options' => array('priority' => 210, 'indexed' => true), 'grid' => array('type' => 'string', 'label' => 'oro.entity_config.entity_config.module_name.label', 'filter_type' => 'choice', 'filter_options' => array('field_options' => array('multiple' => true, 'choices' => '@oro_entity_config.event_listener.entityconfig_grid_listener->getModuleChoices')), 'required' => true, 'sortable' => true, 'filterable' => true, 'show_filter' => true))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.enum' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_EnumService()
    {
        return $this->services['oro_entity_config.provider.enum'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'enum', array('entity' => array('items' => array('code' => array('options' => array('auditable' => false)), 'public' => array('options' => array()), 'multiple' => array('options' => array('auditable' => false)), 'immutable' => array('options' => array('auditable' => false)))), 'field' => array('items' => array('enum_code' => array('options' => array('auditable' => false)), 'enum_locale' => array('options' => array('auditable' => false)), 'enum_name' => array('options' => array('allowed_type' => array(0 => 'enum', 1 => 'multiEnum'), 'auditable' => false)), 'enum_public' => array('options' => array('allowed_type' => array(0 => 'enum', 1 => 'multiEnum'), 'auditable' => false)), 'enum_options' => array('options' => array('allowed_type' => array(0 => 'enum', 1 => 'multiEnum'), 'auditable' => false), 'form' => array('type' => 'oro_entity_extend_enum_value_collection', 'options' => array('block' => 'general', 'subblock' => 'properties', 'required' => false, 'label' => 'oro.entity_extend.enum_options', 'tooltip' => 'oro.entity_extend.enum_options.tooltip')))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.extend' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_ExtendService()
    {
        return $this->services['oro_entity_config.provider.extend'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'extend', array('entity' => array('require_js' => array(0 => 'oroentityextend/js/init-entity-extend-apply', 1 => 'oroentityextend/js/init-entity-extend-relation'), 'grid_action' => array(0 => array('name' => 'oro.entity_extend.entity_config.extend.entity.grid_action.remove', 'route' => 'oro_entityextend_entity_remove', 'type' => 'ajaxdelete', 'icon' => 'trash', 'filter' => array('extend_owner' => 'Custom', 'extend_state' => array(0 => 'New', 1 => 'Requires update', 2 => 'Active')), 'args' => array(0 => 'id')), 1 => array('name' => 'oro.entity_extend.entity_config.extend.entity.grid_action.restore', 'route' => 'oro_entityextend_entity_unremove', 'type' => 'ajax', 'icon' => 'backward', 'filter' => array('extend_owner' => 'Custom', 'extend_state' => array(0 => 'Deleted')), 'args' => array(0 => 'id'))), 'layout_action' => array(0 => array('name' => 'oro.entity_extend.entity_config.extend.entity.layout_action.create_entity', 'route' => 'oro_entityextend_entity_create')), 'items' => array('owner' => array('options' => array('priority' => 40, 'auditable' => false, 'default_value' => 'System', 'indexed' => true), 'grid' => array('type' => 'string', 'label' => 'oro.entity_extend.entity_config.extend.entity.items.owner', 'filter_type' => 'choice', 'choices' => array('System' => 'System', 'Custom' => 'Custom'), 'required' => true, 'sortable' => true, 'filterable' => true, 'show_filter' => true)), 'is_extend' => array('options' => array('priority' => 27, 'default_value' => false, 'auditable' => false, 'indexed' => true), 'grid' => array('type' => 'boolean', 'label' => 'oro.entity_extend.entity_config.extend.entity.items.is_extend', 'filter_type' => 'boolean', 'required' => true, 'sortable' => true, 'filterable' => true, 'show_filter' => false)), 'state' => array('options' => array('priority' => 25, 'default_value' => 'Active', 'indexed' => true), 'grid' => array('type' => 'string', 'label' => 'oro.entity_extend.entity_config.extend.entity.items.state', 'filter_type' => 'choice', 'choices' => array('system' => '', 'new' => 'New', 'active' => 'Active', 'updated' => 'Requires update', 'deleted' => 'To be deleted'), 'required' => true, 'sortable' => true, 'filterable' => false, 'show_filter' => false)), 'is_deleted' => array('options' => array('default_value' => false, 'auditable' => false, 'indexed' => true), 'grid' => array('type' => 'boolean', 'label' => 'oro.entity_extend.entity_config.extend.entity.items.is_deleted', 'renderable' => false, 'query' => array('operator' => '!=', 'value' => true))), 'unique_key' => array('options' => array('auditable' => false)), 'index' => array('options' => array('auditable' => false)), 'upgradeable' => array('options' => array('auditable' => false, 'default_value' => true)), 'origin' => array('options' => array('auditable' => false, 'default_value' => 'System')), 'relation' => array('options' => array('auditable' => false)), 'table' => array('options' => array('auditable' => false)), 'inherit' => array('options' => array('auditable' => false)), 'schema' => array('options' => array('auditable' => false)))), 'field' => array('grid_action' => array(0 => array('name' => 'oro.entity_extend.entity_config.extend.field.grid_action.remove', 'route' => 'oro_entityextend_field_remove', 'type' => 'ajaxdeletefield', 'icon' => 'trash', 'filter' => array('extend_owner' => 'Custom', 'mode' => 'default', 'extend_state' => array(0 => 'New', 1 => 'Requires update', 2 => 'Active')), 'args' => array(0 => 'id')), 1 => array('name' => 'oro.entity_extend.entity_config.extend.field.grid_action.restore', 'route' => 'oro_entityextend_field_unremove', 'type' => 'ajax', 'icon' => 'backward', 'filter' => array('extend_owner' => 'Custom', 'extend_state' => array(0 => 'Deleted')), 'args' => array(0 => 'id'))), 'layout_action' => array(0 => array('name' => 'oro.entity_extend.entity_config.extend.field.layout_action.manage_unique_keys', 'route' => 'oro_entityextend_entity_unique_key', 'entity_id' => true, 'filter' => array('is_extend' => true, 'mode' => 'default')), 1 => array('name' => 'oro.entity_extend.entity_config.extend.field.layout_action.create_field', 'route' => 'oro_entityextend_field_create', 'entity_id' => true, 'filter' => array('is_extend' => true, 'mode' => 'default', 'state' => array(0 => 'New', 1 => 'Requires update', 2 => 'Active'))), 2 => array('name' => 'oro.entity_extend.entity_config.extend.field.layout_action.update_schema', 'route' => 'oro_entityextend_update', 'entity_id' => true, 'aCss' => 'btn-danger entity-extend-apply', 'void' => true, 'filter' => array('upgradeable' => true, 'state' => array(0 => 'New', 1 => 'Requires update', 2 => 'Deleted')))), 'items' => array('owner' => array('options' => array('priority' => 20, 'default_value' => 'System', 'auditable' => false, 'indexed' => true), 'grid' => array('type' => 'string', 'label' => 'oro.entity_extend.entity_config.extend.field.items.owner', 'filter_type' => 'string', 'required' => true, 'sortable' => true, 'filterable' => false, 'show_filter' => false)), 'state' => array('options' => array('priority' => 25, 'default_value' => 'Active', 'indexed' => true), 'grid' => array('type' => 'string', 'label' => 'oro.entity_extend.entity_config.extend.field.items.state', 'filter_type' => 'choice', 'choices' => array('new' => 'New', 'applied' => 'Applied', 'updated' => 'Requires update', 'deleted' => 'To be deleted'), 'required' => true, 'sortable' => true, 'filterable' => false, 'show_filter' => false)), 'is_extend' => array('options' => array('default_value' => false, 'auditable' => false)), 'length' => array('options' => array('require_schema_update' => true, 'default_value' => 255, 'allowed_type' => array(0 => 'string'), 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'constraints' => array(0 => array('Regex' => '/^[0-9]*$/'), 1 => array('Range' => array('min' => 1, 'max' => 255))), 'form' => array('type' => 'oro_entity_extend_text', 'options' => array('required' => false, 'label' => 'oro.entity_extend.entity_config.extend.field.items.length', 'block' => 'general', 'subblock' => 'properties'))), 'precision' => array('options' => array('require_schema_update' => true, 'default_value' => 2, 'allowed_type' => array(0 => 'decimal'), 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'constraints' => array(0 => array('Regex' => '/^[0-9]*$/'), 1 => array('Range' => array('min' => 0))), 'form' => array('type' => 'oro_entity_extend_text', 'options' => array('required' => false, 'label' => 'oro.entity_extend.entity_config.extend.field.items.precision', 'block' => 'general', 'subblock' => 'properties'))), 'scale' => array('options' => array('require_schema_update' => true, 'default_value' => 2, 'allowed_type' => array(0 => 'decimal'), 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'constraints' => array(0 => array('Regex' => '/^[0-9]*$/'), 1 => array('Range' => array('min' => 0))), 'form' => array('type' => 'oro_entity_extend_text', 'options' => array('required' => false, 'label' => 'oro.entity_extend.entity_config.extend.field.items.scale', 'block' => 'general', 'subblock' => 'properties'))), 'is_deleted' => array('options' => array('default_value' => false, 'auditable' => false, 'indexed' => true), 'grid' => array('type' => 'boolean', 'label' => 'oro.entity_extend.entity_config.extend.field.items.is_deleted', 'renderable' => false, 'query' => array('operator' => '!=', 'value' => true))), 'origin' => array('options' => array('auditable' => false, 'default_value' => 'System')), 'relation' => array('options' => array('allowed_type' => array(0 => 'oneToOne', 1 => 'oneToMany', 2 => 'manyToOne', 3 => 'manyToMany'), 'auditable' => false, 'required_property' => array('config_id' => array('field_name' => NULL, 'scope' => 'extend'), 'code' => 'is_extend', 'value' => true)), 'form' => array('type' => 'oro_entity_relation_type', 'options' => array('block' => 'general', 'subblock' => 'properties'))), 'relation_key' => array('options' => array('auditable' => false)), 'without_default' => array('options' => array('auditable' => false)), 'target_entity' => array('options' => array('auditable' => false)), 'target_field' => array('options' => array('auditable' => false)), 'target_grid' => array('options' => array('auditable' => false)), 'target_title' => array('options' => array('auditable' => false)), 'target_detailed' => array('options' => array('auditable' => false)), 'cascade' => array('options' => array('auditable' => false)), 'set_expanded' => array('options' => array('allowed_type' => array(0 => 'optionSet'), 'create_only' => true), 'form' => array('type' => 'choice', 'options' => array('required' => false, 'choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'label' => 'oro.entity_extend.entity_config.extend.field.items.set_expanded', 'attr' => array('class' => 'is-option-set-expanded'), 'block' => 'general', 'subblock' => 'properties'))), 'set_options' => array('options' => array('allowed_type' => array(0 => 'optionSet'), 'auditable' => false), 'form' => array('type' => 'oro_entity_option_set_collection', 'options' => array('required' => false, 'label' => 'oro.entity_extend.entity_config.extend.field.items.set_options', 'block' => 'general', 'subblock' => 'properties', 'type' => 'oro_entity_option_set', 'tooltip' => 'oro.entity_extend.field.option_set.option.tooltip')))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_FormService()
    {
        return $this->services['oro_entity_config.provider.form'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'form', array('entity' => array('items' => array('form_type' => array('options' => array()), 'form_options' => array('options' => array('auditable' => false)))), 'field' => array('items' => array('form_type' => array('options' => array()), 'form_options' => array('options' => array('auditable' => false)), 'is_enabled' => array('options' => array('default_value' => true, 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.entity.entity_config.form.field.items.is_enabled')))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.grouping' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_GroupingService()
    {
        return $this->services['oro_entity_config.provider.grouping'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'grouping', array('entity' => array('items' => array('groups' => array('options' => array())))));
    }

    /**
     * Gets the 'oro_entity_config.provider.importexport' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_ImportexportService()
    {
        return $this->services['oro_entity_config.provider.importexport'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'importexport', array('field' => array('form' => array('block_config' => array('import_export' => array('title' => 'oro.importexport.entity_config.block_title', 'priority' => 30))), 'items' => array('header' => array('options' => array(), 'form' => array('type' => 'text', 'options' => array('label' => 'oro.importexport.entity_config.header.label', 'required' => false, 'block' => 'import_export', 'tooltip' => 'oro.importexport.entity_config.header.tooltip'))), 'order' => array('options' => array(), 'form' => array('type' => 'integer', 'options' => array('label' => 'oro.importexport.entity_config.order.label', 'precision' => 0, 'empty_data' => '', 'required' => false, 'block' => 'import_export'))), 'identity' => array('options' => array('allowed_type' => array(0 => 'string', 1 => 'text', 2 => 'integer', 3 => 'smallint', 4 => 'bigint', 5 => 'boolean', 6 => 'date', 7 => 'float', 8 => 'decimal', 9 => 'money', 10 => 'percent', 11 => 'enum')), 'form' => array('type' => 'choice', 'options' => array('label' => 'oro.importexport.entity_config.identity.label', 'choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'required' => false, 'block' => 'import_export'))), 'excluded' => array('options' => array(), 'form' => array('type' => 'choice', 'options' => array('label' => 'oro.importexport.entity_config.excluded.label', 'choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'required' => false, 'block' => 'import_export'))), 'full' => array('options' => array('allowed_type' => array(0 => 'ref-one', 1 => 'ref-many', 2 => 'manyToOne', 3 => 'oneToMany', 4 => 'manyToMany')), 'form' => array('type' => 'choice', 'options' => array('label' => 'oro.importexport.entity_config.full.label', 'choices' => array(0 => 'Identity only', 1 => 'All'), 'empty_value' => false, 'required' => false, 'block' => 'import_export', 'tooltip' => 'oro.importexport.entity_config.full.tooltip'))), 'process_as_scalar' => array('options' => array('allowed_type' => array(0 => 'ref-one', 1 => 'ref-many', 2 => 'manyToOne', 3 => 'oneToMany', 4 => 'manyToMany'), 'default_value' => false))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.merge' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_MergeService()
    {
        return $this->services['oro_entity_config.provider.merge'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'merge', array('entity' => array('items' => array('cast_method' => NULL, 'template' => NULL, 'enable' => NULL, 'max_entities_count' => 5)), 'field' => array('items' => array('label' => NULL, 'display' => NULL, 'readonly' => NULL, 'merge_modes' => array('options' => array('auditable' => false)), 'is_collection' => NULL, 'cast_method' => NULL, 'template' => NULL, 'setter' => NULL, 'getter' => NULL, 'inverse_display' => NULL, 'inverse_modes' => NULL, 'inverse_label' => NULL, 'inverse_cast_method' => NULL, 'render_number_style' => NULL, 'render_date_type' => NULL, 'render_time_type' => NULL, 'render_datetime_pattern' => NULL))));
    }

    /**
     * Gets the 'oro_entity_config.provider.note' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_NoteService()
    {
        return $this->services['oro_entity_config.provider.note'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'note', array('entity' => array('items' => array('enabled' => array('options' => array('require_schema_update' => true, 'priority' => 250, 'default_value' => false), 'form' => array('type' => 'oro_entity_extend_association_choice', 'options' => array('block' => 'associations', 'required' => true, 'label' => 'oro.note.enabled', 'association_class' => 'OroNoteBundle:Note'))), 'immutable' => array('options' => array('auditable' => false))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.ownership' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_OwnershipService()
    {
        return $this->services['oro_entity_config.provider.ownership'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'ownership', array('entity' => array('items' => array('owner_type' => array('options' => array('create_only' => true, 'priority' => 100, 'indexed' => true), 'grid' => array('type' => 'select', 'label' => 'Ownership Type', 'filter_type' => 'choice', 'required' => true, 'sortable' => true, 'filterable' => true, 'show_filter' => true, 'choices' => '@oro_organization.form.type.ownership_type->getOwnershipsArray'), 'form' => array('type' => 'oro_type_choice_ownership_type', 'options' => array('block' => 'other', 'required' => true, 'label' => 'Ownership Type')))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.reminder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_ReminderService()
    {
        return $this->services['oro_entity_config.provider.reminder'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'reminder', array('entity' => array('items' => array('reminder_template_name' => NULL))));
    }

    /**
     * Gets the 'oro_entity_config.provider.search' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_SearchService()
    {
        return $this->services['oro_entity_config.provider.search'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'search', array('entity' => array('items' => array('searchable' => array('form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.entity_extend.entity_config.search.field.items.searchable'))))), 'field' => array('items' => array('searchable' => array('options' => array('allowed_type' => array(0 => 'string', 1 => 'text', 2 => 'integer', 3 => 'smallint', 4 => 'bigint', 5 => 'boolean', 6 => 'datetime', 7 => 'date', 8 => 'time', 9 => 'float', 10 => 'decimal', 11 => 'money', 12 => 'percent', 13 => 'enum', 14 => 'multiEnum', 15 => 'manyToOne', 16 => 'manyToMany', 17 => 'ref-many', 18 => 'oneToMany'), 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.entity_extend.entity_config.search.field.items.searchable'))), 'title_field' => array('options' => array('allowed_type' => array(0 => 'string'), 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.entity_extend.entity_config.search.field.items.title_field', 'tooltip' => 'oro.entity_extend.entity_config.search.field.items.title_field.tooltip')))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.security' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_SecurityService()
    {
        return $this->services['oro_entity_config.provider.security'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'security', array('entity' => array('items' => array('type' => array('options' => array('auditable' => false)), 'permissions' => NULL, 'group_name' => NULL))));
    }

    /**
     * Gets the 'oro_entity_config.provider.view' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_ViewService()
    {
        return $this->services['oro_entity_config.provider.view'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'view', array('field' => array('items' => array('is_displayable' => array('options' => array('default_value' => true, 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.entity.entity_config.view.field.items.is_displayable'))), 'priority' => array('options' => array('required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'form' => array('type' => 'integer', 'options' => array('block' => 'other', 'label' => 'oro.entity.entity_config.view.field.items.priority', 'required' => false)))))));
    }

    /**
     * Gets the 'oro_entity_config.provider.workflow' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider A Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider instance.
     */
    protected function getOroEntityConfig_Provider_WorkflowService()
    {
        return $this->services['oro_entity_config.provider.workflow'] = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($this->get('oro_entity_config.config_manager'), 'workflow', array('entity' => array('items' => array('active_workflow' => array('options' => array('priority' => 200, 'default_value' => NULL)), 'show_step_in_grid' => array('options' => array('priority' => 250, 'default_value' => true), 'form' => array('type' => 'choice', 'options' => array('label' => 'oro.workflow.entity_config.show_step_in_grid.label', 'required' => false, 'choices' => array(0 => 'oro.workflow.entity_config.show_step_in_grid.choice.hide', 1 => 'oro.workflow.entity_config.show_step_in_grid.choice.show'), 'empty_value' => false, 'block' => 'other')))))));
    }

    /**
     * Gets the 'oro_entity_config.provider_bag' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Provider\ConfigProviderBag A Oro\Bundle\EntityConfigBundle\Provider\ConfigProviderBag instance.
     */
    protected function getOroEntityConfig_ProviderBagService()
    {
        $a = $this->get('oro_entity_config.config_manager');

        $this->services['oro_entity_config.provider_bag'] = $instance = new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProviderBag();

        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'ownership', array('entity' => array('items' => array('owner_type' => array('options' => array('create_only' => true, 'priority' => 100, 'indexed' => true), 'grid' => array('type' => 'select', 'label' => 'Ownership Type', 'filter_type' => 'choice', 'required' => true, 'sortable' => true, 'filterable' => true, 'show_filter' => true, 'choices' => '@oro_organization.form.type.ownership_type->getOwnershipsArray'), 'form' => array('type' => 'oro_type_choice_ownership_type', 'options' => array('block' => 'other', 'required' => true, 'label' => 'Ownership Type'))))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'security', array('entity' => array('items' => array('type' => array('options' => array('auditable' => false)), 'permissions' => NULL, 'group_name' => NULL)))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'attachment', array('entity' => array('form' => array('block_config' => array('attachments' => array('title' => 'oro.attachment.block_titles.attachments.label', 'priority' => 0))), 'items' => array('enabled' => array('options' => array('priority' => 100, 'default_value' => false, 'require_schema_update' => true), 'form' => array('type' => 'oro_entity_extend_association_choice', 'options' => array('block' => 'attachments', 'required' => true, 'label' => 'oro.attachment.enabled', 'association_class' => 'OroAttachmentBundle:Attachment'))), 'maxsize' => array('options' => array('priority' => 90, 'default_value' => 1), 'form' => array('type' => 'oro_entity_extend_association_property_integer', 'options' => array('block' => 'attachments', 'required' => false, 'label' => 'oro.attachment.maxsize', 'association_class' => 'OroAttachmentBundle:Attachment'))), 'mimetypes' => array('options' => array('priority' => 80), 'form' => array('type' => 'oro_entity_extend_association_property_textarea', 'options' => array('block' => 'attachments', 'required' => false, 'label' => 'oro.attachment.mimetypes', 'association_class' => 'OroAttachmentBundle:Attachment', 'tooltip' => 'oro.attachment.mimetypes.tooltip'))), 'immutable' => array('options' => array('auditable' => false)), 'auto_link_attachments' => array('options' => array('require_schema_update' => false, 'priority' => 100, 'default_value' => false), 'form' => array('type' => 'oro_email_link_to_scope', 'options' => array('block' => 'attachments', 'choices' => array(0 => 'oro.email.system_configuration.attachment_configuration.link_to_scope.choices.manual.label', 1 => 'oro.email.system_configuration.attachment_configuration.link_to_scope.choices.auto.label'), 'empty_value' => false, 'required' => true, 'label' => 'oro.email.system_configuration.attachment_configuration.link_to_scope.label'))))), 'field' => array('items' => array('attachment' => array('options' => array('allowed_type' => array(0 => 'file', 1 => 'image'), 'auditable' => false), 'form' => array('type' => 'oro_attachment_file_config', 'options' => array('block' => 'general', 'subblock' => 'properties'))), 'maxsize' => array('options' => array('allowed_type' => array(0 => 'file', 1 => 'image')), 'constraints' => array(0 => array('NotBlank' => NULL), 1 => array('Type' => 'integer'), 2 => array('Range' => array('min' => 1))), 'form' => array('type' => 'integer', 'options' => array('required' => true, 'label' => 'oro.attachment.config.file_size.label', 'block' => 'general', 'subblock' => 'properties', 'empty_data' => 1, 'tooltip' => 'oro.attachment.max_size.tooltip'))), 'width' => array('options' => array('allowed_type' => array(0 => 'image')), 'constraints' => array(0 => array('Type' => array('type' => 'int'))), 'form' => array('type' => 'integer', 'options' => array('required' => true, 'label' => 'oro.attachment.config.thumb_width.label', 'block' => 'general', 'subblock' => 'properties', 'empty_data' => 32, 'tooltip' => 'oro.attachment.thumb_width.tooltip'))), 'height' => array('options' => array('allowed_type' => array(0 => 'image')), 'constraints' => array(0 => array('Type' => array('type' => 'int'))), 'form' => array('type' => 'integer', 'options' => array('required' => true, 'label' => 'oro.attachment.config.thumb_height.label', 'block' => 'general', 'subblock' => 'properties', 'empty_data' => 32, 'tooltip' => 'oro.attachment.thumb_height.tooltip'))))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'email', array('field' => array('items' => array('available_in_template' => array('options' => array('default_value' => true, 'allowed_type' => array(0 => 'string', 1 => 'text', 2 => 'integer', 3 => 'smallint', 4 => 'bigint', 5 => 'boolean', 6 => 'datetime', 7 => 'date', 8 => 'time', 9 => 'float', 10 => 'decimal', 11 => 'money', 12 => 'percent', 13 => 'optionSet', 14 => 'enum', 15 => 'multiEnum', 16 => 'file', 17 => 'image', 18 => 'ref-one', 19 => 'manyToOne')), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.email.entity_config.email.field.items.available_in_template'))))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'entity', array('entity' => array('form' => array('block_config' => array('general' => array('title' => 'oro.entity_config.block_titles.general.label', 'priority' => 100), 'associations' => array('title' => 'oro.entity_config.block_titles.associations.label', 'priority' => 50), 'other' => array('title' => 'oro.entity_config.block_titles.other.label', 'priority' => -255))), 'items' => array('icon' => array('options' => array('priority' => 10), 'form' => array('type' => 'oro_icon_select', 'options' => array('label' => 'oro.entity.entity_config.entity.entity.items.icon', 'block' => 'general', 'required' => false))), 'label' => array('options' => array('translatable' => true, 'priority' => 20), 'constraints' => array(0 => array('NotBlank' => NULL), 1 => array('Length' => array('min' => 2, 'max' => 50))), 'grid' => array('type' => 'html', 'label' => 'oro.entity.entity_config.entity.entity.items.label', 'required' => true, 'template' => 'OroEntityConfigBundle:Config:propertyLabel.html.twig'), 'form' => array('type' => 'text', 'options' => array('label' => 'oro.entity.entity_config.entity.entity.items.label', 'block' => 'general', 'required' => true))), 'plural_label' => array('options' => array('translatable' => true, 'priority' => 35), 'constraints' => array(0 => array('NotBlank' => NULL), 1 => array('Length' => array('min' => 2, 'max' => 50))), 'form' => array('type' => 'text', 'options' => array('label' => 'oro.entity.entity_config.entity.entity.items.plural_label', 'block' => 'general', 'required' => true))), 'description' => array('options' => array('translatable' => true, 'priority' => 50), 'constraints' => array(0 => array('Length' => array('max' => 500))), 'form' => array('type' => 'textarea', 'options' => array('label' => 'oro.entity.entity_config.entity.entity.items.description', 'block' => 'general', 'required' => false))))), 'field' => array('form' => array('block_config' => array('general' => array('title' => 'oro.entity_config.block_titles.general.label', 'priority' => 100), 'other' => array('title' => 'oro.entity_config.block_titles.other.label', 'priority' => -255))), 'items' => array('label' => array('options' => array('translatable' => true, 'priority' => 10), 'constraints' => array(0 => array('NotBlank' => NULL), 1 => array('Length' => array('min' => 2, 'max' => 50))), 'grid' => array('type' => 'html', 'label' => 'oro.entity.entity_config.entity.field.items.label', 'required' => true, 'template' => 'OroEntityConfigBundle:Config:propertyLabel.html.twig'), 'form' => array('type' => 'text', 'options' => array('label' => 'oro.entity.entity_config.entity.field.items.label', 'block' => 'general', 'required' => true))), 'description' => array('options' => array('translatable' => true, 'priority' => 30), 'constraints' => array(0 => array('Length' => array('max' => 500))), 'form' => array('type' => 'textarea', 'options' => array('label' => 'oro.entity.entity_config.entity.field.items.description', 'block' => 'general', 'required' => false))))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'datagrid', array('field' => array('items' => array('is_visible' => array('options' => array('require_schema_update' => true, 'default_value' => true, 'allowed_type' => array(0 => 'string', 1 => 'integer', 2 => 'smallint', 3 => 'bigint', 4 => 'boolean', 5 => 'datetime', 6 => 'date', 7 => 'time', 8 => 'float', 9 => 'decimal', 10 => 'money', 11 => 'percent', 12 => 'enum', 13 => 'multiEnum'), 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'form' => array('type' => 'oro_entity_extend_choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.entity.entity_config.datagrid.field.items.is_visible'))), 'show_filter' => array('options' => array('allowed_type' => array(0 => 'string', 1 => 'integer', 2 => 'smallint', 3 => 'bigint', 4 => 'boolean', 5 => 'datetime', 6 => 'date', 7 => 'time', 8 => 'float', 9 => 'decimal', 10 => 'money', 11 => 'percent', 12 => 'enum', 13 => 'multiEnum'), 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.entity.entity_config.datagrid.field.items.show_filter'))))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'form', array('entity' => array('items' => array('form_type' => array('options' => array()), 'form_options' => array('options' => array('auditable' => false)))), 'field' => array('items' => array('form_type' => array('options' => array()), 'form_options' => array('options' => array('auditable' => false)), 'is_enabled' => array('options' => array('default_value' => true, 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.entity.entity_config.form.field.items.is_enabled'))))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'view', array('field' => array('items' => array('is_displayable' => array('options' => array('default_value' => true, 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.entity.entity_config.view.field.items.is_displayable'))), 'priority' => array('options' => array('required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'form' => array('type' => 'integer', 'options' => array('block' => 'other', 'label' => 'oro.entity.entity_config.view.field.items.priority', 'required' => false))))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'grouping', array('entity' => array('items' => array('groups' => array('options' => array()))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'dictionary', array('entity' => array('items' => array('virtual_fields' => array('options' => array('auditable' => false)))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'entity_config', array('entity' => array('items' => array('entity_name' => array('options' => array('priority' => 200, 'indexed' => true), 'grid' => array('type' => 'string', 'label' => 'oro.entity_config.entity_config.entity_name.label', 'filter_type' => 'string', 'required' => true, 'sortable' => true, 'filterable' => true, 'show_filter' => true)), 'module_name' => array('options' => array('priority' => 210, 'indexed' => true), 'grid' => array('type' => 'string', 'label' => 'oro.entity_config.entity_config.module_name.label', 'filter_type' => 'choice', 'filter_options' => array('field_options' => array('multiple' => true, 'choices' => '@oro_entity_config.event_listener.entityconfig_grid_listener->getModuleChoices')), 'required' => true, 'sortable' => true, 'filterable' => true, 'show_filter' => true)))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'extend', array('entity' => array('require_js' => array(0 => 'oroentityextend/js/init-entity-extend-apply', 1 => 'oroentityextend/js/init-entity-extend-relation'), 'grid_action' => array(0 => array('name' => 'oro.entity_extend.entity_config.extend.entity.grid_action.remove', 'route' => 'oro_entityextend_entity_remove', 'type' => 'ajaxdelete', 'icon' => 'trash', 'filter' => array('extend_owner' => 'Custom', 'extend_state' => array(0 => 'New', 1 => 'Requires update', 2 => 'Active')), 'args' => array(0 => 'id')), 1 => array('name' => 'oro.entity_extend.entity_config.extend.entity.grid_action.restore', 'route' => 'oro_entityextend_entity_unremove', 'type' => 'ajax', 'icon' => 'backward', 'filter' => array('extend_owner' => 'Custom', 'extend_state' => array(0 => 'Deleted')), 'args' => array(0 => 'id'))), 'layout_action' => array(0 => array('name' => 'oro.entity_extend.entity_config.extend.entity.layout_action.create_entity', 'route' => 'oro_entityextend_entity_create')), 'items' => array('owner' => array('options' => array('priority' => 40, 'auditable' => false, 'default_value' => 'System', 'indexed' => true), 'grid' => array('type' => 'string', 'label' => 'oro.entity_extend.entity_config.extend.entity.items.owner', 'filter_type' => 'choice', 'choices' => array('System' => 'System', 'Custom' => 'Custom'), 'required' => true, 'sortable' => true, 'filterable' => true, 'show_filter' => true)), 'is_extend' => array('options' => array('priority' => 27, 'default_value' => false, 'auditable' => false, 'indexed' => true), 'grid' => array('type' => 'boolean', 'label' => 'oro.entity_extend.entity_config.extend.entity.items.is_extend', 'filter_type' => 'boolean', 'required' => true, 'sortable' => true, 'filterable' => true, 'show_filter' => false)), 'state' => array('options' => array('priority' => 25, 'default_value' => 'Active', 'indexed' => true), 'grid' => array('type' => 'string', 'label' => 'oro.entity_extend.entity_config.extend.entity.items.state', 'filter_type' => 'choice', 'choices' => array('system' => '', 'new' => 'New', 'active' => 'Active', 'updated' => 'Requires update', 'deleted' => 'To be deleted'), 'required' => true, 'sortable' => true, 'filterable' => false, 'show_filter' => false)), 'is_deleted' => array('options' => array('default_value' => false, 'auditable' => false, 'indexed' => true), 'grid' => array('type' => 'boolean', 'label' => 'oro.entity_extend.entity_config.extend.entity.items.is_deleted', 'renderable' => false, 'query' => array('operator' => '!=', 'value' => true))), 'unique_key' => array('options' => array('auditable' => false)), 'index' => array('options' => array('auditable' => false)), 'upgradeable' => array('options' => array('auditable' => false, 'default_value' => true)), 'origin' => array('options' => array('auditable' => false, 'default_value' => 'System')), 'relation' => array('options' => array('auditable' => false)), 'table' => array('options' => array('auditable' => false)), 'inherit' => array('options' => array('auditable' => false)), 'schema' => array('options' => array('auditable' => false)))), 'field' => array('grid_action' => array(0 => array('name' => 'oro.entity_extend.entity_config.extend.field.grid_action.remove', 'route' => 'oro_entityextend_field_remove', 'type' => 'ajaxdeletefield', 'icon' => 'trash', 'filter' => array('extend_owner' => 'Custom', 'mode' => 'default', 'extend_state' => array(0 => 'New', 1 => 'Requires update', 2 => 'Active')), 'args' => array(0 => 'id')), 1 => array('name' => 'oro.entity_extend.entity_config.extend.field.grid_action.restore', 'route' => 'oro_entityextend_field_unremove', 'type' => 'ajax', 'icon' => 'backward', 'filter' => array('extend_owner' => 'Custom', 'extend_state' => array(0 => 'Deleted')), 'args' => array(0 => 'id'))), 'layout_action' => array(0 => array('name' => 'oro.entity_extend.entity_config.extend.field.layout_action.manage_unique_keys', 'route' => 'oro_entityextend_entity_unique_key', 'entity_id' => true, 'filter' => array('is_extend' => true, 'mode' => 'default')), 1 => array('name' => 'oro.entity_extend.entity_config.extend.field.layout_action.create_field', 'route' => 'oro_entityextend_field_create', 'entity_id' => true, 'filter' => array('is_extend' => true, 'mode' => 'default', 'state' => array(0 => 'New', 1 => 'Requires update', 2 => 'Active'))), 2 => array('name' => 'oro.entity_extend.entity_config.extend.field.layout_action.update_schema', 'route' => 'oro_entityextend_update', 'entity_id' => true, 'aCss' => 'btn-danger entity-extend-apply', 'void' => true, 'filter' => array('upgradeable' => true, 'state' => array(0 => 'New', 1 => 'Requires update', 2 => 'Deleted')))), 'items' => array('owner' => array('options' => array('priority' => 20, 'default_value' => 'System', 'auditable' => false, 'indexed' => true), 'grid' => array('type' => 'string', 'label' => 'oro.entity_extend.entity_config.extend.field.items.owner', 'filter_type' => 'string', 'required' => true, 'sortable' => true, 'filterable' => false, 'show_filter' => false)), 'state' => array('options' => array('priority' => 25, 'default_value' => 'Active', 'indexed' => true), 'grid' => array('type' => 'string', 'label' => 'oro.entity_extend.entity_config.extend.field.items.state', 'filter_type' => 'choice', 'choices' => array('new' => 'New', 'applied' => 'Applied', 'updated' => 'Requires update', 'deleted' => 'To be deleted'), 'required' => true, 'sortable' => true, 'filterable' => false, 'show_filter' => false)), 'is_extend' => array('options' => array('default_value' => false, 'auditable' => false)), 'length' => array('options' => array('require_schema_update' => true, 'default_value' => 255, 'allowed_type' => array(0 => 'string'), 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'constraints' => array(0 => array('Regex' => '/^[0-9]*$/'), 1 => array('Range' => array('min' => 1, 'max' => 255))), 'form' => array('type' => 'oro_entity_extend_text', 'options' => array('required' => false, 'label' => 'oro.entity_extend.entity_config.extend.field.items.length', 'block' => 'general', 'subblock' => 'properties'))), 'precision' => array('options' => array('require_schema_update' => true, 'default_value' => 2, 'allowed_type' => array(0 => 'decimal'), 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'constraints' => array(0 => array('Regex' => '/^[0-9]*$/'), 1 => array('Range' => array('min' => 0))), 'form' => array('type' => 'oro_entity_extend_text', 'options' => array('required' => false, 'label' => 'oro.entity_extend.entity_config.extend.field.items.precision', 'block' => 'general', 'subblock' => 'properties'))), 'scale' => array('options' => array('require_schema_update' => true, 'default_value' => 2, 'allowed_type' => array(0 => 'decimal'), 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'constraints' => array(0 => array('Regex' => '/^[0-9]*$/'), 1 => array('Range' => array('min' => 0))), 'form' => array('type' => 'oro_entity_extend_text', 'options' => array('required' => false, 'label' => 'oro.entity_extend.entity_config.extend.field.items.scale', 'block' => 'general', 'subblock' => 'properties'))), 'is_deleted' => array('options' => array('default_value' => false, 'auditable' => false, 'indexed' => true), 'grid' => array('type' => 'boolean', 'label' => 'oro.entity_extend.entity_config.extend.field.items.is_deleted', 'renderable' => false, 'query' => array('operator' => '!=', 'value' => true))), 'origin' => array('options' => array('auditable' => false, 'default_value' => 'System')), 'relation' => array('options' => array('allowed_type' => array(0 => 'oneToOne', 1 => 'oneToMany', 2 => 'manyToOne', 3 => 'manyToMany'), 'auditable' => false, 'required_property' => array('config_id' => array('field_name' => NULL, 'scope' => 'extend'), 'code' => 'is_extend', 'value' => true)), 'form' => array('type' => 'oro_entity_relation_type', 'options' => array('block' => 'general', 'subblock' => 'properties'))), 'relation_key' => array('options' => array('auditable' => false)), 'without_default' => array('options' => array('auditable' => false)), 'target_entity' => array('options' => array('auditable' => false)), 'target_field' => array('options' => array('auditable' => false)), 'target_grid' => array('options' => array('auditable' => false)), 'target_title' => array('options' => array('auditable' => false)), 'target_detailed' => array('options' => array('auditable' => false)), 'cascade' => array('options' => array('auditable' => false)), 'set_expanded' => array('options' => array('allowed_type' => array(0 => 'optionSet'), 'create_only' => true), 'form' => array('type' => 'choice', 'options' => array('required' => false, 'choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'label' => 'oro.entity_extend.entity_config.extend.field.items.set_expanded', 'attr' => array('class' => 'is-option-set-expanded'), 'block' => 'general', 'subblock' => 'properties'))), 'set_options' => array('options' => array('allowed_type' => array(0 => 'optionSet'), 'auditable' => false), 'form' => array('type' => 'oro_entity_option_set_collection', 'options' => array('required' => false, 'label' => 'oro.entity_extend.entity_config.extend.field.items.set_options', 'block' => 'general', 'subblock' => 'properties', 'type' => 'oro_entity_option_set', 'tooltip' => 'oro.entity_extend.field.option_set.option.tooltip'))))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'enum', array('entity' => array('items' => array('code' => array('options' => array('auditable' => false)), 'public' => array('options' => array()), 'multiple' => array('options' => array('auditable' => false)), 'immutable' => array('options' => array('auditable' => false)))), 'field' => array('items' => array('enum_code' => array('options' => array('auditable' => false)), 'enum_locale' => array('options' => array('auditable' => false)), 'enum_name' => array('options' => array('allowed_type' => array(0 => 'enum', 1 => 'multiEnum'), 'auditable' => false)), 'enum_public' => array('options' => array('allowed_type' => array(0 => 'enum', 1 => 'multiEnum'), 'auditable' => false)), 'enum_options' => array('options' => array('allowed_type' => array(0 => 'enum', 1 => 'multiEnum'), 'auditable' => false), 'form' => array('type' => 'oro_entity_extend_enum_value_collection', 'options' => array('block' => 'general', 'subblock' => 'properties', 'required' => false, 'label' => 'oro.entity_extend.enum_options', 'tooltip' => 'oro.entity_extend.enum_options.tooltip'))))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'search', array('entity' => array('items' => array('searchable' => array('form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.entity_extend.entity_config.search.field.items.searchable'))))), 'field' => array('items' => array('searchable' => array('options' => array('allowed_type' => array(0 => 'string', 1 => 'text', 2 => 'integer', 3 => 'smallint', 4 => 'bigint', 5 => 'boolean', 6 => 'datetime', 7 => 'date', 8 => 'time', 9 => 'float', 10 => 'decimal', 11 => 'money', 12 => 'percent', 13 => 'enum', 14 => 'multiEnum', 15 => 'manyToOne', 16 => 'manyToMany', 17 => 'ref-many', 18 => 'oneToMany'), 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.entity_extend.entity_config.search.field.items.searchable'))), 'title_field' => array('options' => array('allowed_type' => array(0 => 'string'), 'required_property' => array('config_id' => array('scope' => 'extend'), 'code' => 'owner', 'value' => 'Custom')), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.entity_extend.entity_config.search.field.items.title_field', 'tooltip' => 'oro.entity_extend.entity_config.search.field.items.title_field.tooltip'))))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'activity', array('entity' => array('items' => array('activities' => array('options' => array('require_schema_update' => true, 'priority' => 250), 'form' => array('type' => 'oro_entity_extend_multiple_association_choice', 'options' => array('block' => 'associations', 'required' => false, 'label' => 'oro.activity.activities', 'association_class' => 'activity'))), 'immutable' => array('options' => array('auditable' => false)), 'route' => array('options' => array('auditable' => false)), 'acl' => array('options' => array('auditable' => false)), 'priority' => array('options' => array('auditable' => false)), 'action_button_widget' => array('options' => array('auditable' => false)), 'show_on_page' => array('options' => array('default_value' => '\\Oro\\Bundle\\ActivityBundle\\EntityConfig\\ActivityScope::VIEW_PAGE')), 'action_link_widget' => array('options' => array('auditable' => false)))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'dataaudit', array('entity' => array('items' => array('auditable' => array('options' => array('priority' => 60, 'default_value' => false, 'indexed' => true), 'grid' => array('type' => 'boolean', 'label' => 'oro.dataaudit.entity_config.entity.items.auditable', 'filter_type' => 'boolean', 'required' => true, 'sortable' => true, 'filterable' => true, 'show_filter' => false), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.dataaudit.entity_config.entity.items.auditable'))))), 'field' => array('items' => array('auditable' => array('options' => array('priority' => 60, 'default_value' => false, 'allowed_type' => array(0 => 'string', 1 => 'text', 2 => 'integer', 3 => 'smallint', 4 => 'bigint', 5 => 'boolean', 6 => 'datetime', 7 => 'date', 8 => 'time', 9 => 'float', 10 => 'decimal', 11 => 'money', 12 => 'percent', 13 => 'enum', 14 => 'multiEnum', 15 => 'manyToOne', 16 => 'manyToMany', 17 => 'array', 18 => 'simple_array', 19 => 'json_array', 20 => 'ref-many', 21 => 'ref-one'), 'indexed' => true), 'grid' => array('type' => 'boolean', 'label' => 'oro.dataaudit.entity_config.field.items.auditable', 'filter_type' => 'boolean', 'required' => true, 'sortable' => true, 'filterable' => false, 'show_filter' => false), 'form' => array('type' => 'choice', 'options' => array('choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'block' => 'other', 'label' => 'oro.dataaudit.entity_config.field.items.auditable'))))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'merge', array('entity' => array('items' => array('cast_method' => NULL, 'template' => NULL, 'enable' => NULL, 'max_entities_count' => 5)), 'field' => array('items' => array('label' => NULL, 'display' => NULL, 'readonly' => NULL, 'merge_modes' => array('options' => array('auditable' => false)), 'is_collection' => NULL, 'cast_method' => NULL, 'template' => NULL, 'setter' => NULL, 'getter' => NULL, 'inverse_display' => NULL, 'inverse_modes' => NULL, 'inverse_label' => NULL, 'inverse_cast_method' => NULL, 'render_number_style' => NULL, 'render_date_type' => NULL, 'render_time_type' => NULL, 'render_datetime_pattern' => NULL)))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'importexport', array('field' => array('form' => array('block_config' => array('import_export' => array('title' => 'oro.importexport.entity_config.block_title', 'priority' => 30))), 'items' => array('header' => array('options' => array(), 'form' => array('type' => 'text', 'options' => array('label' => 'oro.importexport.entity_config.header.label', 'required' => false, 'block' => 'import_export', 'tooltip' => 'oro.importexport.entity_config.header.tooltip'))), 'order' => array('options' => array(), 'form' => array('type' => 'integer', 'options' => array('label' => 'oro.importexport.entity_config.order.label', 'precision' => 0, 'empty_data' => '', 'required' => false, 'block' => 'import_export'))), 'identity' => array('options' => array('allowed_type' => array(0 => 'string', 1 => 'text', 2 => 'integer', 3 => 'smallint', 4 => 'bigint', 5 => 'boolean', 6 => 'date', 7 => 'float', 8 => 'decimal', 9 => 'money', 10 => 'percent', 11 => 'enum')), 'form' => array('type' => 'choice', 'options' => array('label' => 'oro.importexport.entity_config.identity.label', 'choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'required' => false, 'block' => 'import_export'))), 'excluded' => array('options' => array(), 'form' => array('type' => 'choice', 'options' => array('label' => 'oro.importexport.entity_config.excluded.label', 'choices' => array(0 => 'No', 1 => 'Yes'), 'empty_value' => false, 'required' => false, 'block' => 'import_export'))), 'full' => array('options' => array('allowed_type' => array(0 => 'ref-one', 1 => 'ref-many', 2 => 'manyToOne', 3 => 'oneToMany', 4 => 'manyToMany')), 'form' => array('type' => 'choice', 'options' => array('label' => 'oro.importexport.entity_config.full.label', 'choices' => array(0 => 'Identity only', 1 => 'All'), 'empty_value' => false, 'required' => false, 'block' => 'import_export', 'tooltip' => 'oro.importexport.entity_config.full.tooltip'))), 'process_as_scalar' => array('options' => array('allowed_type' => array(0 => 'ref-one', 1 => 'ref-many', 2 => 'manyToOne', 3 => 'oneToMany', 4 => 'manyToMany'), 'default_value' => false)))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'note', array('entity' => array('items' => array('enabled' => array('options' => array('require_schema_update' => true, 'priority' => 250, 'default_value' => false), 'form' => array('type' => 'oro_entity_extend_association_choice', 'options' => array('block' => 'associations', 'required' => true, 'label' => 'oro.note.enabled', 'association_class' => 'OroNoteBundle:Note'))), 'immutable' => array('options' => array('auditable' => false)))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'workflow', array('entity' => array('items' => array('active_workflow' => array('options' => array('priority' => 200, 'default_value' => NULL)), 'show_step_in_grid' => array('options' => array('priority' => 250, 'default_value' => true), 'form' => array('type' => 'choice', 'options' => array('label' => 'oro.workflow.entity_config.show_step_in_grid.label', 'required' => false, 'choices' => array(0 => 'oro.workflow.entity_config.show_step_in_grid.choice.hide', 1 => 'oro.workflow.entity_config.show_step_in_grid.choice.show'), 'empty_value' => false, 'block' => 'other'))))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'comment', array('entity' => array('items' => array('enabled' => array('options' => array('require_schema_update' => true, 'priority' => 10, 'default_value' => false), 'form' => array('type' => 'oro_entity_extend_association_choice', 'options' => array('block' => 'associations', 'required' => true, 'label' => 'oro.comment.enabled', 'association_class' => 'OroCommentBundle:Comment'))), 'immutable' => array('options' => array('auditable' => false)))))));
        $instance->addProvider(new \Oro\Bundle\EntityConfigBundle\Provider\ConfigProvider($a, 'reminder', array('entity' => array('items' => array('reminder_template_name' => NULL)))));

        return $instance;
    }

    /**
     * Gets the 'oro_entity_config.tools.command_executor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Tools\CommandExecutor A Oro\Bundle\EntityConfigBundle\Tools\CommandExecutor instance.
     */
    protected function getOroEntityConfig_Tools_CommandExecutorService()
    {
        return $this->services['oro_entity_config.tools.command_executor'] = new \Oro\Bundle\EntityConfigBundle\Tools\CommandExecutor('C:\\wamp\\www\\stockvalue~~\\app/console', 'dev', $this->get('oro_cache.oro_data_cache_manager'));
    }

    /**
     * Gets the 'oro_entity_config.twig.extension.config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Twig\ConfigExtension A Oro\Bundle\EntityConfigBundle\Twig\ConfigExtension instance.
     */
    protected function getOroEntityConfig_Twig_Extension_ConfigService()
    {
        return $this->services['oro_entity_config.twig.extension.config'] = new \Oro\Bundle\EntityConfigBundle\Twig\ConfigExtension($this->get('oro_entity_config.config_manager'), $this->get('router'));
    }

    /**
     * Gets the 'oro_entity_config.type.choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Form\Type\ChoiceType A Oro\Bundle\EntityConfigBundle\Form\Type\ChoiceType instance.
     */
    protected function getOroEntityConfig_Type_ChoiceService()
    {
        return $this->services['oro_entity_config.type.choice'] = new \Oro\Bundle\EntityConfigBundle\Form\Type\ChoiceType($this->get('oro_entity_config.config_type_helper'));
    }

    /**
     * Gets the 'oro_entity_config.type.config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Form\Type\ConfigType A Oro\Bundle\EntityConfigBundle\Form\Type\ConfigType instance.
     */
    protected function getOroEntityConfig_Type_ConfigService()
    {
        return $this->services['oro_entity_config.type.config'] = new \Oro\Bundle\EntityConfigBundle\Form\Type\ConfigType($this->get('oro_entity_config.config_manager'), $this->get('translator.default'), $this->get('oro_translation.database_translation.metadata.cache'));
    }

    /**
     * Gets the 'oro_entity_config.type.integer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Form\Type\IntegerType A Oro\Bundle\EntityConfigBundle\Form\Type\IntegerType instance.
     */
    protected function getOroEntityConfig_Type_IntegerService()
    {
        return $this->services['oro_entity_config.type.integer'] = new \Oro\Bundle\EntityConfigBundle\Form\Type\IntegerType($this->get('oro_entity_config.config_type_helper'));
    }

    /**
     * Gets the 'oro_entity_config.type.text' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Form\Type\TextType A Oro\Bundle\EntityConfigBundle\Form\Type\TextType instance.
     */
    protected function getOroEntityConfig_Type_TextService()
    {
        return $this->services['oro_entity_config.type.text'] = new \Oro\Bundle\EntityConfigBundle\Form\Type\TextType($this->get('oro_entity_config.config_type_helper'));
    }

    /**
     * Gets the 'oro_entity_config.type.textarea' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Form\Type\TextareaType A Oro\Bundle\EntityConfigBundle\Form\Type\TextareaType instance.
     */
    protected function getOroEntityConfig_Type_TextareaService()
    {
        return $this->services['oro_entity_config.type.textarea'] = new \Oro\Bundle\EntityConfigBundle\Form\Type\TextareaType($this->get('oro_entity_config.config_type_helper'));
    }

    /**
     * Gets the 'oro_entity_extend.association_builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Tools\AssociationBuilder A Oro\Bundle\EntityExtendBundle\Tools\AssociationBuilder instance.
     */
    protected function getOroEntityExtend_AssociationBuilderService()
    {
        return $this->services['oro_entity_extend.association_builder'] = new \Oro\Bundle\EntityExtendBundle\Tools\AssociationBuilder($this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.relation_builder'));
    }

    /**
     * Gets the 'oro_entity_extend.datagrid.action.type.ajaxdeletefield' service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Grid\Action\AjaxDeleteFieldAction A Oro\Bundle\EntityExtendBundle\Grid\Action\AjaxDeleteFieldAction instance.
     */
    protected function getOroEntityExtend_Datagrid_Action_Type_AjaxdeletefieldService()
    {
        return new \Oro\Bundle\EntityExtendBundle\Grid\Action\AjaxDeleteFieldAction();
    }

    /**
     * Gets the 'oro_entity_extend.datagrid.column_options_guesser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Grid\ExtendColumnOptionsGuesser A Oro\Bundle\EntityExtendBundle\Grid\ExtendColumnOptionsGuesser instance.
     */
    protected function getOroEntityExtend_Datagrid_ColumnOptionsGuesserService()
    {
        return $this->services['oro_entity_extend.datagrid.column_options_guesser'] = new \Oro\Bundle\EntityExtendBundle\Grid\ExtendColumnOptionsGuesser($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.datagrid.extension.additional_fields' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Grid\AdditionalFieldsExtension A Oro\Bundle\EntityExtendBundle\Grid\AdditionalFieldsExtension instance.
     */
    protected function getOroEntityExtend_Datagrid_Extension_AdditionalFieldsService()
    {
        return $this->services['oro_entity_extend.datagrid.extension.additional_fields'] = new \Oro\Bundle\EntityExtendBundle\Grid\AdditionalFieldsExtension($this->get('oro_entity_config.config_manager'), $this->get('oro_entity.orm.entity_class_resolver'), $this->get('oro_datagrid.datagrid.guesser'));
    }

    /**
     * Gets the 'oro_entity_extend.datagrid.extension.dynamic_fields' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Grid\DynamicFieldsExtension A Oro\Bundle\EntityExtendBundle\Grid\DynamicFieldsExtension instance.
     */
    protected function getOroEntityExtend_Datagrid_Extension_DynamicFieldsService()
    {
        return $this->services['oro_entity_extend.datagrid.extension.dynamic_fields'] = new \Oro\Bundle\EntityExtendBundle\Grid\DynamicFieldsExtension($this->get('oro_entity_config.config_manager'), $this->get('oro_entity.orm.entity_class_resolver'), $this->get('oro_datagrid.datagrid.guesser'));
    }

    /**
     * Gets the 'oro_entity_extend.dictionary_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Filter\DictionaryFilter A Oro\Bundle\EntityExtendBundle\Filter\DictionaryFilter instance.
     */
    protected function getOroEntityExtend_DictionaryFilterService()
    {
        return $this->services['oro_entity_extend.dictionary_filter'] = new \Oro\Bundle\EntityExtendBundle\Filter\DictionaryFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'), $this->get('oro_filter.builder.many_relation'));
    }

    /**
     * Gets the 'oro_entity_extend.entity_config_dumper.extension.enum' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Tools\DumperExtensions\EnumEntityConfigDumperExtension A Oro\Bundle\EntityExtendBundle\Tools\DumperExtensions\EnumEntityConfigDumperExtension instance.
     */
    protected function getOroEntityExtend_EntityConfigDumper_Extension_EnumService()
    {
        return $this->services['oro_entity_extend.entity_config_dumper.extension.enum'] = new \Oro\Bundle\EntityExtendBundle\Tools\DumperExtensions\EnumEntityConfigDumperExtension($this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.relation_builder'), $this->get('oro_entity_extend.extend.field_type_helper'), $this->get('oro_migration.db_id_name_generator'));
    }

    /**
     * Gets the 'oro_entity_extend.entity_config_dumper.extension.index' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Tools\DumperExtensions\IndexEntityConfigDumperExtension A Oro\Bundle\EntityExtendBundle\Tools\DumperExtensions\IndexEntityConfigDumperExtension instance.
     */
    protected function getOroEntityExtend_EntityConfigDumper_Extension_IndexService()
    {
        return $this->services['oro_entity_extend.entity_config_dumper.extension.index'] = new \Oro\Bundle\EntityExtendBundle\Tools\DumperExtensions\IndexEntityConfigDumperExtension($this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.extend.field_type_helper'));
    }

    /**
     * Gets the 'oro_entity_extend.entity_config_dumper.extension.relation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Tools\DumperExtensions\RelationEntityConfigDumperExtension A Oro\Bundle\EntityExtendBundle\Tools\DumperExtensions\RelationEntityConfigDumperExtension instance.
     */
    protected function getOroEntityExtend_EntityConfigDumper_Extension_RelationService()
    {
        return $this->services['oro_entity_extend.entity_config_dumper.extension.relation'] = new \Oro\Bundle\EntityExtendBundle\Tools\DumperExtensions\RelationEntityConfigDumperExtension($this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.extend.field_type_helper'));
    }

    /**
     * Gets the 'oro_entity_extend.entity_config_type.extension.enum' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Extension\EnumFieldConfigExtension A Oro\Bundle\EntityExtendBundle\Form\Extension\EnumFieldConfigExtension instance.
     */
    protected function getOroEntityExtend_EntityConfigType_Extension_EnumService()
    {
        return $this->services['oro_entity_extend.entity_config_type.extension.enum'] = new \Oro\Bundle\EntityExtendBundle\Form\Extension\EnumFieldConfigExtension($this->get('oro_entity_config.config_manager'), $this->get('translator'), $this->get('oro_entity_extend.enum_synchronizer'));
    }

    /**
     * Gets the 'oro_entity_extend.entity_generator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Tools\EntityGenerator A Oro\Bundle\EntityExtendBundle\Tools\EntityGenerator instance.
     */
    protected function getOroEntityExtend_EntityGeneratorService()
    {
        $this->services['oro_entity_extend.entity_generator'] = $instance = new \Oro\Bundle\EntityExtendBundle\Tools\EntityGenerator('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev');

        $instance->addExtension($this->get('oro_attachment.entity_generator.extension'));
        $instance->addExtension($this->get('oro_entity_extend.entity_generator.extension'), 255);
        $instance->addExtension($this->get('oro_activity.entity_generator.extension'));
        $instance->addExtension($this->get('oro_activity_list.entity_generator.extension'));
        $instance->addExtension($this->get('oro_note.entity_generator.extension'));
        $instance->addExtension($this->get('oro_comment.entity_generator.extension'));
        $instance->addExtension($this->get('oro_tracking.entity_generator.visit_identifie.extension'));
        $instance->addExtension($this->get('oro_tracking.entity_generator.visit_event_association.extension'));

        return $instance;
    }

    /**
     * Gets the 'oro_entity_extend.entity_generator.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Tools\GeneratorExtensions\ExtendEntityGeneratorExtension A Oro\Bundle\EntityExtendBundle\Tools\GeneratorExtensions\ExtendEntityGeneratorExtension instance.
     */
    protected function getOroEntityExtend_EntityGenerator_ExtensionService()
    {
        return $this->services['oro_entity_extend.entity_generator.extension'] = new \Oro\Bundle\EntityExtendBundle\Tools\GeneratorExtensions\ExtendEntityGeneratorExtension();
    }

    /**
     * Gets the 'oro_entity_extend.entity_metadata_builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\ORM\ExtendMetadataBuilder A Oro\Bundle\EntityExtendBundle\ORM\ExtendMetadataBuilder instance.
     */
    protected function getOroEntityExtend_EntityMetadataBuilderService()
    {
        $this->services['oro_entity_extend.entity_metadata_builder'] = $instance = new \Oro\Bundle\EntityExtendBundle\ORM\ExtendMetadataBuilder($this->get('oro_entity_config.provider.extend'));

        $instance->addBuilder($this->get('oro_entity_extend.entity_metadata_builder.indices'));
        $instance->addBuilder($this->get('oro_entity_extend.entity_metadata_builder.relations'));

        return $instance;
    }

    /**
     * Gets the 'oro_entity_extend.entity_metadata_builder.indices' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\ORM\IndexMetadataBuilder A Oro\Bundle\EntityExtendBundle\ORM\IndexMetadataBuilder instance.
     */
    protected function getOroEntityExtend_EntityMetadataBuilder_IndicesService()
    {
        return $this->services['oro_entity_extend.entity_metadata_builder.indices'] = new \Oro\Bundle\EntityExtendBundle\ORM\IndexMetadataBuilder($this->get('oro_entity_config.provider.extend'), $this->get('oro_migration.db_id_name_generator'));
    }

    /**
     * Gets the 'oro_entity_extend.entity_metadata_builder.relations' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\ORM\RelationMetadataBuilder A Oro\Bundle\EntityExtendBundle\ORM\RelationMetadataBuilder instance.
     */
    protected function getOroEntityExtend_EntityMetadataBuilder_RelationsService()
    {
        return $this->services['oro_entity_extend.entity_metadata_builder.relations'] = new \Oro\Bundle\EntityExtendBundle\ORM\RelationMetadataBuilder($this->get('oro_entity_config.provider.extend'), $this->get('oro_migration.db_id_name_generator'));
    }

    /**
     * Gets the 'oro_entity_extend.enum_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Filter\EnumFilter A Oro\Bundle\EntityExtendBundle\Filter\EnumFilter instance.
     */
    protected function getOroEntityExtend_EnumFilterService()
    {
        return $this->services['oro_entity_extend.enum_filter'] = new \Oro\Bundle\EntityExtendBundle\Filter\EnumFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }

    /**
     * Gets the 'oro_entity_extend.enum_synchronizer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Tools\EnumSynchronizer A Oro\Bundle\EntityExtendBundle\Tools\EnumSynchronizer instance.
     */
    protected function getOroEntityExtend_EnumSynchronizerService()
    {
        return $this->services['oro_entity_extend.enum_synchronizer'] = new \Oro\Bundle\EntityExtendBundle\Tools\EnumSynchronizer($this->get('oro_entity_config.config_manager'), $this->get('doctrine'), $this->get('translator'), $this->get('oro_translation.database_translation.metadata.cache'));
    }

    /**
     * Gets the 'oro_entity_extend.enum_value_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Provider\EnumValueProvider A Oro\Bundle\EntityExtendBundle\Provider\EnumValueProvider instance.
     */
    protected function getOroEntityExtend_EnumValueProviderService()
    {
        return $this->services['oro_entity_extend.enum_value_provider'] = new \Oro\Bundle\EntityExtendBundle\Provider\EnumValueProvider($this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_entity_extend.extend.entity_processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Extend\EntityProcessor A Oro\Bundle\EntityExtendBundle\Extend\EntityProcessor instance.
     */
    protected function getOroEntityExtend_Extend_EntityProcessorService()
    {
        return $this->services['oro_entity_extend.extend.entity_processor'] = new \Oro\Bundle\EntityExtendBundle\Extend\EntityProcessor($this->get('oro_platform.maintenance'), $this->get('oro_entity_config.tools.command_executor'), $this->get('logger'), $this->get('profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'oro_entity_extend.extend.entity_proxy_generator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Extend\EntityProxyGenerator A Oro\Bundle\EntityExtendBundle\Extend\EntityProxyGenerator instance.
     */
    protected function getOroEntityExtend_Extend_EntityProxyGeneratorService()
    {
        return $this->services['oro_entity_extend.extend.entity_proxy_generator'] = new \Oro\Bundle\EntityExtendBundle\Extend\EntityProxyGenerator($this->get('oro_entity_config.config_manager'), 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev');
    }

    /**
     * Gets the 'oro_entity_extend.extend.field_type_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Extend\FieldTypeHelper A Oro\Bundle\EntityExtendBundle\Extend\FieldTypeHelper instance.
     */
    protected function getOroEntityExtend_Extend_FieldTypeHelperService()
    {
        return $this->services['oro_entity_extend.extend.field_type_helper'] = new \Oro\Bundle\EntityExtendBundle\Extend\FieldTypeHelper(array('file' => 'manyToOne', 'image' => 'manyToOne', 'enum' => 'manyToOne', 'multiEnum' => 'manyToMany'));
    }

    /**
     * Gets the 'oro_entity_extend.form.extension.dynamic_fields' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Extension\DynamicFieldsExtension A Oro\Bundle\EntityExtendBundle\Form\Extension\DynamicFieldsExtension instance.
     */
    protected function getOroEntityExtend_Form_Extension_DynamicFieldsService()
    {
        return $this->services['oro_entity_extend.form.extension.dynamic_fields'] = new \Oro\Bundle\EntityExtendBundle\Form\Extension\DynamicFieldsExtension($this->get('oro_entity_config.config_manager'), $this->get('router'), $this->get('translator'), $this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_entity_extend.form.guesser.extend_field' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Guesser\ExtendFieldTypeGuesser A Oro\Bundle\EntityExtendBundle\Form\Guesser\ExtendFieldTypeGuesser instance.
     */
    protected function getOroEntityExtend_Form_Guesser_ExtendFieldService()
    {
        $this->services['oro_entity_extend.form.guesser.extend_field'] = $instance = new \Oro\Bundle\EntityExtendBundle\Form\Guesser\ExtendFieldTypeGuesser($this->get('doctrine'), $this->get('oro_entity_config.provider.entity'), $this->get('oro_entity_config.provider.form'), $this->get('oro_entity_config.provider.extend'), $this->get('oro_entity_config.provider.enum'));

        $instance->addExtendTypeMapping('string', 'text');
        $instance->addExtendTypeMapping('integer', 'text');
        $instance->addExtendTypeMapping('smallint', 'integer', array('precision' => 0));
        $instance->addExtendTypeMapping('bigint', 'integer', array('precision' => 0));
        $instance->addExtendTypeMapping('decimal', 'number');
        $instance->addExtendTypeMapping('date', 'oro_date');
        $instance->addExtendTypeMapping('time', 'time', array('model_timezone' => 'UTC', 'view_timezone' => 'UTC'));
        $instance->addExtendTypeMapping('datetime', 'oro_datetime');
        $instance->addExtendTypeMapping('datetimetz', 'oro_datetime');
        $instance->addExtendTypeMapping('text', 'textarea');
        $instance->addExtendTypeMapping('float', 'number');
        $instance->addExtendTypeMapping('guid', 'text');
        $instance->addExtendTypeMapping('percent', 'oro_percent');
        $instance->addExtendTypeMapping('money', 'oro_money');
        $instance->addExtendTypeMapping('boolean', 'choice');
        $instance->addExtendTypeMapping('file', 'oro_file');
        $instance->addExtendTypeMapping('image', 'oro_image');
        $instance->addExtendTypeMapping('manyToOne', 'oro_entity_select');
        $instance->addExtendTypeMapping('oneToMany', 'oro_entity_extend_multiple_entity');
        $instance->addExtendTypeMapping('manyToMany', 'oro_entity_extend_multiple_entity');
        $instance->addExtendTypeMapping('optionSet', 'oro_option_select');
        $instance->addExtendTypeMapping('enum', 'oro_enum_select');
        $instance->addExtendTypeMapping('multiEnum', 'oro_enum_choice');

        return $instance;
    }

    /**
     * Gets the 'oro_entity_extend.importexport.normalizer.enum' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\ImportExport\Serializer\EnumNormalizer A Oro\Bundle\EntityExtendBundle\ImportExport\Serializer\EnumNormalizer instance.
     */
    protected function getOroEntityExtend_Importexport_Normalizer_EnumService()
    {
        return $this->services['oro_entity_extend.importexport.normalizer.enum'] = new \Oro\Bundle\EntityExtendBundle\ImportExport\Serializer\EnumNormalizer($this->get('oro_importexport.field.field_helper'));
    }

    /**
     * Gets the 'oro_entity_extend.listener.before_map_object_search_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\EventListener\BeforeMapObjectSearchListener A Oro\Bundle\EntityExtendBundle\EventListener\BeforeMapObjectSearchListener instance.
     */
    protected function getOroEntityExtend_Listener_BeforeMapObjectSearchListenerService()
    {
        return $this->services['oro_entity_extend.listener.before_map_object_search_listener'] = new \Oro\Bundle\EntityExtendBundle\EventListener\BeforeMapObjectSearchListener($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.listener.config_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\EventListener\ConfigSubscriber A Oro\Bundle\EntityExtendBundle\EventListener\ConfigSubscriber instance.
     */
    protected function getOroEntityExtend_Listener_ConfigSubscriberService()
    {
        return $this->services['oro_entity_extend.listener.config_subscriber'] = new \Oro\Bundle\EntityExtendBundle\EventListener\ConfigSubscriber($this->get('oro_entity_config.provider.extend'));
    }

    /**
     * Gets the 'oro_entity_extend.listener.entity_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\EntityExtendBundle\EventListener\DoctrineListener A Oro\Bundle\EntityExtendBundle\EventListener\DoctrineListener instance.
     */
    public function getOroEntityExtend_Listener_EntityListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_entity_extend.listener.entity_listener'] = new OroBundleEntityExtendBundleEventListenerDoctrineListener_000000002e47fe8400000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroEntityExtend_Listener_EntityListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\EntityExtendBundle\EventListener\DoctrineListener(new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_entity_extend.entity_metadata_builder', false), $this->get('oro_entity_extend.manager.multi_enum_entity'), $this->get('annotation_reader'));
    }

    /**
     * Gets the 'oro_entity_extend.listener.extend_field_value_render' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\EventListener\ExtendFieldValueRenderListener A Oro\Bundle\EntityExtendBundle\EventListener\ExtendFieldValueRenderListener instance.
     */
    protected function getOroEntityExtend_Listener_ExtendFieldValueRenderService()
    {
        return $this->services['oro_entity_extend.listener.extend_field_value_render'] = new \Oro\Bundle\EntityExtendBundle\EventListener\ExtendFieldValueRenderListener($this->get('oro_entity_config.config_manager'), $this->get('router'), $this->get('oro_entity_extend.extend.field_type_helper'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.listener.search_entity_config_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\EventListener\SearchEntityConfigListener A Oro\Bundle\EntityExtendBundle\EventListener\SearchEntityConfigListener instance.
     */
    protected function getOroEntityExtend_Listener_SearchEntityConfigListenerService()
    {
        return $this->services['oro_entity_extend.listener.search_entity_config_listener'] = new \Oro\Bundle\EntityExtendBundle\EventListener\SearchEntityConfigListener($this->get('doctrine'));
    }

    /**
     * Gets the 'oro_entity_extend.manager.multi_enum_entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Entity\Manager\MultiEnumManager A Oro\Bundle\EntityExtendBundle\Entity\Manager\MultiEnumManager instance.
     */
    protected function getOroEntityExtend_Manager_MultiEnumEntityService()
    {
        return $this->services['oro_entity_extend.manager.multi_enum_entity'] = new \Oro\Bundle\EntityExtendBundle\Entity\Manager\MultiEnumManager();
    }

    /**
     * Gets the 'oro_entity_extend.migration.config_processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Migration\ExtendConfigProcessor A Oro\Bundle\EntityExtendBundle\Migration\ExtendConfigProcessor instance.
     */
    protected function getOroEntityExtend_Migration_ConfigProcessorService()
    {
        return $this->services['oro_entity_extend.migration.config_processor'] = new \Oro\Bundle\EntityExtendBundle\Migration\ExtendConfigProcessor($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.migration.entity_metadata_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Migration\EntityMetadataHelper A Oro\Bundle\EntityExtendBundle\Migration\EntityMetadataHelper instance.
     */
    protected function getOroEntityExtend_Migration_EntityMetadataHelperService()
    {
        return $this->services['oro_entity_extend.migration.entity_metadata_helper'] = new \Oro\Bundle\EntityExtendBundle\Migration\EntityMetadataHelper($this->get('doctrine'));
    }

    /**
     * Gets the 'oro_entity_extend.migration.extension.extend' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Migration\Extension\ExtendExtension A Oro\Bundle\EntityExtendBundle\Migration\Extension\ExtendExtension instance.
     */
    protected function getOroEntityExtend_Migration_Extension_ExtendService()
    {
        return $this->services['oro_entity_extend.migration.extension.extend'] = new \Oro\Bundle\EntityExtendBundle\Migration\Extension\ExtendExtension($this->get('oro_entity_extend.migration.options_manager'), $this->get('oro_entity_extend.migration.entity_metadata_helper'));
    }

    /**
     * Gets the 'oro_entity_extend.migration.extension.rename' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Migration\Extension\RenameExtension A Oro\Bundle\EntityExtendBundle\Migration\Extension\RenameExtension instance.
     */
    protected function getOroEntityExtend_Migration_Extension_RenameService()
    {
        return $this->services['oro_entity_extend.migration.extension.rename'] = new \Oro\Bundle\EntityExtendBundle\Migration\Extension\RenameExtension($this->get('oro_entity_extend.migration.options_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.migration.options_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Migration\ExtendOptionsManager A Oro\Bundle\EntityExtendBundle\Migration\ExtendOptionsManager instance.
     */
    protected function getOroEntityExtend_Migration_OptionsManagerService()
    {
        return $this->services['oro_entity_extend.migration.options_manager'] = new \Oro\Bundle\EntityExtendBundle\Migration\ExtendOptionsManager();
    }

    /**
     * Gets the 'oro_entity_extend.migration.options_parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Migration\ExtendOptionsParser A Oro\Bundle\EntityExtendBundle\Migration\ExtendOptionsParser instance.
     */
    protected function getOroEntityExtend_Migration_OptionsParserService()
    {
        return $this->services['oro_entity_extend.migration.options_parser'] = new \Oro\Bundle\EntityExtendBundle\Migration\ExtendOptionsParser($this->get('oro_entity_extend.migration.entity_metadata_helper'), $this->get('oro_entity_extend.extend.field_type_helper'));
    }

    /**
     * Gets the 'oro_entity_extend.migration.refresh_cache_before_entity_config_update.post_up.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\EventListener\RefreshExtendCachePostUpMigrationListener A Oro\Bundle\EntityExtendBundle\EventListener\RefreshExtendCachePostUpMigrationListener instance.
     */
    protected function getOroEntityExtend_Migration_RefreshCacheBeforeEntityConfigUpdate_PostUp_ListenerService()
    {
        return $this->services['oro_entity_extend.migration.refresh_cache_before_entity_config_update.post_up.listener'] = new \Oro\Bundle\EntityExtendBundle\EventListener\RefreshExtendCachePostUpMigrationListener($this->get('oro_entity_config.tools.command_executor'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.migration.update_config.post_up.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\EventListener\UpdateExtendConfigPostUpMigrationListener A Oro\Bundle\EntityExtendBundle\EventListener\UpdateExtendConfigPostUpMigrationListener instance.
     */
    protected function getOroEntityExtend_Migration_UpdateConfig_PostUp_ListenerService()
    {
        return $this->services['oro_entity_extend.migration.update_config.post_up.listener'] = new \Oro\Bundle\EntityExtendBundle\EventListener\UpdateExtendConfigPostUpMigrationListener($this->get('oro_entity_config.tools.command_executor'), 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_migration/extend_config_options.yml');
    }

    /**
     * Gets the 'oro_entity_extend.migration.update_indices.post_up.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\EventListener\UpdateExtendIndicesPostUpMigrationListener A Oro\Bundle\EntityExtendBundle\EventListener\UpdateExtendIndicesPostUpMigrationListener instance.
     */
    protected function getOroEntityExtend_Migration_UpdateIndices_PostUp_ListenerService()
    {
        return $this->services['oro_entity_extend.migration.update_indices.post_up.listener'] = new \Oro\Bundle\EntityExtendBundle\EventListener\UpdateExtendIndicesPostUpMigrationListener($this->get('oro_entity_extend.migration.entity_metadata_helper'), $this->get('oro_entity_extend.extend.field_type_helper'));
    }

    /**
     * Gets the 'oro_entity_extend.multi_enum_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Filter\MultiEnumFilter A Oro\Bundle\EntityExtendBundle\Filter\MultiEnumFilter instance.
     */
    protected function getOroEntityExtend_MultiEnumFilterService()
    {
        return $this->services['oro_entity_extend.multi_enum_filter'] = new \Oro\Bundle\EntityExtendBundle\Filter\MultiEnumFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'), $this->get('oro_filter.builder.many_relation'));
    }

    /**
     * Gets the 'oro_entity_extend.relation_builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Tools\RelationBuilder A Oro\Bundle\EntityExtendBundle\Tools\RelationBuilder instance.
     */
    protected function getOroEntityExtend_RelationBuilderService()
    {
        return $this->services['oro_entity_extend.relation_builder'] = new \Oro\Bundle\EntityExtendBundle\Tools\RelationBuilder($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.tools.dumper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Tools\ExtendConfigDumper A Oro\Bundle\EntityExtendBundle\Tools\ExtendConfigDumper instance.
     */
    protected function getOroEntityExtend_Tools_DumperService()
    {
        $this->services['oro_entity_extend.tools.dumper'] = $instance = new \Oro\Bundle\EntityExtendBundle\Tools\ExtendConfigDumper($this->get('oro_entity_config.provider.extend'), $this->get('oro_migration.db_id_name_generator'), $this->get('oro_entity_extend.extend.field_type_helper'), $this->get('oro_entity_extend.entity_generator'), 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev');

        $instance->addExtension($this->get('oro_organization.entity_config_dumper.extension'));
        $instance->addExtension($this->get('oro_attachment.entity_config_dumper.extension.file'));
        $instance->addExtension($this->get('oro_attachment.entity_config_dumper.extension'));
        $instance->addExtension($this->get('oro_entity_extend.entity_config_dumper.extension.index'), -255);
        $instance->addExtension($this->get('oro_entity_extend.entity_config_dumper.extension.relation'), 255);
        $instance->addExtension($this->get('oro_entity_extend.entity_config_dumper.extension.enum'));
        $instance->addExtension($this->get('oro_activity.entity_config_dumper.extension'));
        $instance->addExtension($this->get('oro_activity_list.entity_config_dumper.extension'));
        $instance->addExtension($this->get('oro_note.entity_config_dumper.extension'));
        $instance->addExtension($this->get('oro_comment.entity_config_dumper.extension'));
        $instance->addExtension($this->get('oro_tracking.entity_config_dumper.visit_identifier.extension'));
        $instance->addExtension($this->get('oro_tracking.entity_config_dumper.visit_event_association.extension'));

        return $instance;
    }

    /**
     * Gets the 'oro_entity_extend.twig.extension.dynamic_fields' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Twig\DynamicFieldsExtension A Oro\Bundle\EntityExtendBundle\Twig\DynamicFieldsExtension instance.
     */
    protected function getOroEntityExtend_Twig_Extension_DynamicFieldsService()
    {
        return $this->services['oro_entity_extend.twig.extension.dynamic_fields'] = new \Oro\Bundle\EntityExtendBundle\Twig\DynamicFieldsExtension($this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.extend.field_type_helper'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_entity_extend.twig.extension.enum' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Twig\EnumExtension A Oro\Bundle\EntityExtendBundle\Twig\EnumExtension instance.
     */
    protected function getOroEntityExtend_Twig_Extension_EnumService()
    {
        return $this->services['oro_entity_extend.twig.extension.enum'] = new \Oro\Bundle\EntityExtendBundle\Twig\EnumExtension($this->get('doctrine'));
    }

    /**
     * Gets the 'oro_entity_extend.type.association.choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\ChoiceAssociationPropertyType A Oro\Bundle\EntityExtendBundle\Form\Type\ChoiceAssociationPropertyType instance.
     */
    protected function getOroEntityExtend_Type_Association_ChoiceService()
    {
        return $this->services['oro_entity_extend.type.association.choice'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\ChoiceAssociationPropertyType($this->get('oro_entity_extend.association_type_helper'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.type.association.integer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\IntegerAssociationPropertyType A Oro\Bundle\EntityExtendBundle\Form\Type\IntegerAssociationPropertyType instance.
     */
    protected function getOroEntityExtend_Type_Association_IntegerService()
    {
        return $this->services['oro_entity_extend.type.association.integer'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\IntegerAssociationPropertyType($this->get('oro_entity_extend.association_type_helper'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.type.association.text' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\TextAssociationPropertyType A Oro\Bundle\EntityExtendBundle\Form\Type\TextAssociationPropertyType instance.
     */
    protected function getOroEntityExtend_Type_Association_TextService()
    {
        return $this->services['oro_entity_extend.type.association.text'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\TextAssociationPropertyType($this->get('oro_entity_extend.association_type_helper'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.type.association.textarea' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\TextareaAssociationPropertyType A Oro\Bundle\EntityExtendBundle\Form\Type\TextareaAssociationPropertyType instance.
     */
    protected function getOroEntityExtend_Type_Association_TextareaService()
    {
        return $this->services['oro_entity_extend.type.association.textarea'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\TextareaAssociationPropertyType($this->get('oro_entity_extend.association_type_helper'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.type.association_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\AssociationChoiceType A Oro\Bundle\EntityExtendBundle\Form\Type\AssociationChoiceType instance.
     */
    protected function getOroEntityExtend_Type_AssociationChoiceService()
    {
        return $this->services['oro_entity_extend.type.association_choice'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\AssociationChoiceType($this->get('oro_entity_extend.association_type_helper'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.type.choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\ChoiceType A Oro\Bundle\EntityExtendBundle\Form\Type\ChoiceType instance.
     */
    protected function getOroEntityExtend_Type_ChoiceService()
    {
        return $this->services['oro_entity_extend.type.choice'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\ChoiceType($this->get('oro_entity_config.config_type_helper'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.type.dictionary_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\DictionaryFilterType A Oro\Bundle\EntityExtendBundle\Form\Type\DictionaryFilterType instance.
     */
    protected function getOroEntityExtend_Type_DictionaryFilterService()
    {
        return $this->services['oro_entity_extend.type.dictionary_filter'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\DictionaryFilterType($this->get('translator'), $this->get('oro_entity_extend.enum_value_provider'));
    }

    /**
     * Gets the 'oro_entity_extend.type.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\EntityType A Oro\Bundle\EntityExtendBundle\Form\Type\EntityType instance.
     */
    protected function getOroEntityExtend_Type_EntityService()
    {
        return $this->services['oro_entity_extend.type.entity'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\EntityType($this->get('oro_migration.db_id_name_generator'));
    }

    /**
     * Gets the 'oro_entity_extend.type.enum_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\EnumChoiceType A Oro\Bundle\EntityExtendBundle\Form\Type\EnumChoiceType instance.
     */
    protected function getOroEntityExtend_Type_EnumChoiceService()
    {
        return $this->services['oro_entity_extend.type.enum_choice'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\EnumChoiceType($this->get('oro_entity_config.config_manager'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_entity_extend.type.enum_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\EnumFilterType A Oro\Bundle\EntityExtendBundle\Form\Type\EnumFilterType instance.
     */
    protected function getOroEntityExtend_Type_EnumFilterService()
    {
        return $this->services['oro_entity_extend.type.enum_filter'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\EnumFilterType($this->get('translator'), $this->get('oro_entity_extend.enum_value_provider'));
    }

    /**
     * Gets the 'oro_entity_extend.type.enum_name' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\EnumNameType A Oro\Bundle\EntityExtendBundle\Form\Type\EnumNameType instance.
     */
    protected function getOroEntityExtend_Type_EnumNameService()
    {
        return $this->services['oro_entity_extend.type.enum_name'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\EnumNameType($this->get('oro_entity_extend.enum_type_helper'), $this->get('oro_migration.db_id_name_generator'));
    }

    /**
     * Gets the 'oro_entity_extend.type.enum_public' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\EnumPublicType A Oro\Bundle\EntityExtendBundle\Form\Type\EnumPublicType instance.
     */
    protected function getOroEntityExtend_Type_EnumPublicService()
    {
        return $this->services['oro_entity_extend.type.enum_public'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\EnumPublicType($this->get('oro_entity_extend.enum_type_helper'));
    }

    /**
     * Gets the 'oro_entity_extend.type.enum_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\EnumSelectType A Oro\Bundle\EntityExtendBundle\Form\Type\EnumSelectType instance.
     */
    protected function getOroEntityExtend_Type_EnumSelectService()
    {
        return $this->services['oro_entity_extend.type.enum_select'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\EnumSelectType($this->get('oro_entity_config.config_manager'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_entity_extend.type.enum_value' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\EnumValueType A Oro\Bundle\EntityExtendBundle\Form\Type\EnumValueType instance.
     */
    protected function getOroEntityExtend_Type_EnumValueService()
    {
        return $this->services['oro_entity_extend.type.enum_value'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\EnumValueType();
    }

    /**
     * Gets the 'oro_entity_extend.type.enum_value_collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\EnumValueCollectionType A Oro\Bundle\EntityExtendBundle\Form\Type\EnumValueCollectionType instance.
     */
    protected function getOroEntityExtend_Type_EnumValueCollectionService()
    {
        return $this->services['oro_entity_extend.type.enum_value_collection'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\EnumValueCollectionType($this->get('oro_entity_extend.enum_type_helper'));
    }

    /**
     * Gets the 'oro_entity_extend.type.field' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\FieldType A Oro\Bundle\EntityExtendBundle\Form\Type\FieldType instance.
     */
    protected function getOroEntityExtend_Type_FieldService()
    {
        return $this->services['oro_entity_extend.type.field'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\FieldType($this->get('oro_entity_config.config_manager'), $this->get('translator'), $this->get('oro_migration.db_id_name_generator'));
    }

    /**
     * Gets the 'oro_entity_extend.type.integer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\IntegerType A Oro\Bundle\EntityExtendBundle\Form\Type\IntegerType instance.
     */
    protected function getOroEntityExtend_Type_IntegerService()
    {
        return $this->services['oro_entity_extend.type.integer'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\IntegerType($this->get('oro_entity_config.config_type_helper'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.type.multiple_association_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\MultipleAssociationChoiceType A Oro\Bundle\EntityExtendBundle\Form\Type\MultipleAssociationChoiceType instance.
     */
    protected function getOroEntityExtend_Type_MultipleAssociationChoiceService()
    {
        return $this->services['oro_entity_extend.type.multiple_association_choice'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\MultipleAssociationChoiceType($this->get('oro_entity_extend.association_type_helper'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.type.multiple_entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\MultipleEntityType A Oro\Bundle\EntityExtendBundle\Form\Type\MultipleEntityType instance.
     */
    protected function getOroEntityExtend_Type_MultipleEntityService()
    {
        return $this->services['oro_entity_extend.type.multiple_entity'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\MultipleEntityType($this->get('router'));
    }

    /**
     * Gets the 'oro_entity_extend.type.option_set' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\OptionSetType A Oro\Bundle\EntityExtendBundle\Form\Type\OptionSetType instance.
     */
    protected function getOroEntityExtend_Type_OptionSetService()
    {
        return $this->services['oro_entity_extend.type.option_set'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\OptionSetType();
    }

    /**
     * Gets the 'oro_entity_extend.type.option_set_collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\OptionSetCollectionType A Oro\Bundle\EntityExtendBundle\Form\Type\OptionSetCollectionType instance.
     */
    protected function getOroEntityExtend_Type_OptionSetCollectionService()
    {
        return $this->services['oro_entity_extend.type.option_set_collection'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\OptionSetCollectionType($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.type.relation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\RelationType A Oro\Bundle\EntityExtendBundle\Form\Type\RelationType instance.
     */
    protected function getOroEntityExtend_Type_RelationService()
    {
        return $this->services['oro_entity_extend.type.relation'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\RelationType($this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.type.target_field_type'));
    }

    /**
     * Gets the 'oro_entity_extend.type.target_field_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\TargetFieldType A Oro\Bundle\EntityExtendBundle\Form\Type\TargetFieldType instance.
     */
    protected function getOroEntityExtend_Type_TargetFieldTypeService()
    {
        return $this->services['oro_entity_extend.type.target_field_type'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\TargetFieldType($this->get('oro_entity_config.config_manager'), $this->get('oro_entity.entity_field_provider'));
    }

    /**
     * Gets the 'oro_entity_extend.type.text' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\TextType A Oro\Bundle\EntityExtendBundle\Form\Type\TextType instance.
     */
    protected function getOroEntityExtend_Type_TextService()
    {
        return $this->services['oro_entity_extend.type.text'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\TextType($this->get('oro_entity_config.config_type_helper'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.type.textarea' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\TextareaType A Oro\Bundle\EntityExtendBundle\Form\Type\TextareaType instance.
     */
    protected function getOroEntityExtend_Type_TextareaService()
    {
        return $this->services['oro_entity_extend.type.textarea'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\TextareaType($this->get('oro_entity_config.config_type_helper'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.type.unique_key_collection_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Type\UniqueKeyCollectionType A Oro\Bundle\EntityExtendBundle\Form\Type\UniqueKeyCollectionType instance.
     */
    protected function getOroEntityExtend_Type_UniqueKeyCollectionTypeService()
    {
        return $this->services['oro_entity_extend.type.unique_key_collection_type'] = new \Oro\Bundle\EntityExtendBundle\Form\Type\UniqueKeyCollectionType($this->get('oro_entity_config.provider.extend'), $this->get('oro_entity_config.provider.entity'));
    }

    /**
     * Gets the 'oro_entity_extend.validator.not_sql_keyword' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Validator\Constraints\NotSqlKeywordValidator A Oro\Bundle\EntityExtendBundle\Validator\Constraints\NotSqlKeywordValidator instance.
     */
    protected function getOroEntityExtend_Validator_NotSqlKeywordService()
    {
        return $this->services['oro_entity_extend.validator.not_sql_keyword'] = new \Oro\Bundle\EntityExtendBundle\Validator\Constraints\NotSqlKeywordValidator($this->get('doctrine'));
    }

    /**
     * Gets the 'oro_entity_extend.validator.unique_enum_name' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Validator\Constraints\UniqueEnumNameValidator A Oro\Bundle\EntityExtendBundle\Validator\Constraints\UniqueEnumNameValidator instance.
     */
    protected function getOroEntityExtend_Validator_UniqueEnumNameService()
    {
        return $this->services['oro_entity_extend.validator.unique_enum_name'] = new \Oro\Bundle\EntityExtendBundle\Validator\Constraints\UniqueEnumNameValidator($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_extend.validator.unique_keys' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Validator\Constraints\UniqueKeysValidator A Oro\Bundle\EntityExtendBundle\Validator\Constraints\UniqueKeysValidator instance.
     */
    protected function getOroEntityExtend_Validator_UniqueKeysService()
    {
        return $this->services['oro_entity_extend.validator.unique_keys'] = new \Oro\Bundle\EntityExtendBundle\Validator\Constraints\UniqueKeysValidator();
    }

    /**
     * Gets the 'oro_entity_merge.accessor.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Model\Accessor\DefaultAccessor A Oro\Bundle\EntityMergeBundle\Model\Accessor\DefaultAccessor instance.
     */
    protected function getOroEntityMerge_Accessor_DefaultService()
    {
        return $this->services['oro_entity_merge.accessor.default'] = new \Oro\Bundle\EntityMergeBundle\Model\Accessor\DefaultAccessor();
    }

    /**
     * Gets the 'oro_entity_merge.accessor.delegate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Model\Accessor\DelegateAccessor A Oro\Bundle\EntityMergeBundle\Model\Accessor\DelegateAccessor instance.
     */
    protected function getOroEntityMerge_Accessor_DelegateService()
    {
        $this->services['oro_entity_merge.accessor.delegate'] = $instance = new \Oro\Bundle\EntityMergeBundle\Model\Accessor\DelegateAccessor();

        $instance->add($this->get('oro_entity_merge.accessor.default'));
        $instance->add($this->get('oro_entity_merge.accessor.inverse_association'));

        return $instance;
    }

    /**
     * Gets the 'oro_entity_merge.accessor.inverse_association' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Model\Accessor\InverseAssociationAccessor A Oro\Bundle\EntityMergeBundle\Model\Accessor\InverseAssociationAccessor instance.
     */
    protected function getOroEntityMerge_Accessor_InverseAssociationService()
    {
        return $this->services['oro_entity_merge.accessor.inverse_association'] = new \Oro\Bundle\EntityMergeBundle\Model\Accessor\InverseAssociationAccessor($this->get('oro_entity_merge.doctrine_helper'));
    }

    /**
     * Gets the 'oro_entity_merge.data.entity_data_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Data\EntityDataFactory A Oro\Bundle\EntityMergeBundle\Data\EntityDataFactory instance.
     */
    protected function getOroEntityMerge_Data_EntityDataFactoryService()
    {
        return $this->services['oro_entity_merge.data.entity_data_factory'] = new \Oro\Bundle\EntityMergeBundle\Data\EntityDataFactory($this->get('oro_entity_merge.metadata.registry'), $this->get('oro_entity_merge.doctrine_helper'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_entity_merge.doctrine_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Doctrine\DoctrineHelper A Oro\Bundle\EntityMergeBundle\Doctrine\DoctrineHelper instance.
     */
    protected function getOroEntityMerge_DoctrineHelperService()
    {
        return $this->services['oro_entity_merge.doctrine_helper'] = new \Oro\Bundle\EntityMergeBundle\Doctrine\DoctrineHelper($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_entity_merge.form.type.merge' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Form\Type\MergeType A Oro\Bundle\EntityMergeBundle\Form\Type\MergeType instance.
     */
    protected function getOroEntityMerge_Form_Type_MergeService()
    {
        return $this->services['oro_entity_merge.form.type.merge'] = new \Oro\Bundle\EntityMergeBundle\Form\Type\MergeType();
    }

    /**
     * Gets the 'oro_entity_merge.form.type.merge_field' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Form\Type\MergeFieldType A Oro\Bundle\EntityMergeBundle\Form\Type\MergeFieldType instance.
     */
    protected function getOroEntityMerge_Form_Type_MergeFieldService()
    {
        return $this->services['oro_entity_merge.form.type.merge_field'] = new \Oro\Bundle\EntityMergeBundle\Form\Type\MergeFieldType($this->get('translator'));
    }

    /**
     * Gets the 'oro_entity_merge.listener.merge_field.cascade_remove_association' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\EventListener\MergeField\CascadeRemoveAssociationListener A Oro\Bundle\EntityMergeBundle\EventListener\MergeField\CascadeRemoveAssociationListener instance.
     */
    protected function getOroEntityMerge_Listener_MergeField_CascadeRemoveAssociationService()
    {
        return $this->services['oro_entity_merge.listener.merge_field.cascade_remove_association'] = new \Oro\Bundle\EntityMergeBundle\EventListener\MergeField\CascadeRemoveAssociationListener($this->get('oro_entity_merge.accessor.delegate'), $this->get('oro_entity_merge.doctrine_helper'));
    }

    /**
     * Gets the 'oro_entity_merge.listener.metadata.default_label' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\EventListener\Metadata\DefaultLabelListener A Oro\Bundle\EntityMergeBundle\EventListener\Metadata\DefaultLabelListener instance.
     */
    protected function getOroEntityMerge_Listener_Metadata_DefaultLabelService()
    {
        return $this->services['oro_entity_merge.listener.metadata.default_label'] = new \Oro\Bundle\EntityMergeBundle\EventListener\Metadata\DefaultLabelListener($this->get('oro_entity_merge.listener.metadata.entity_config.helper'));
    }

    /**
     * Gets the 'oro_entity_merge.listener.metadata.entity_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\EventListener\Metadata\EntityConfigListener A Oro\Bundle\EntityMergeBundle\EventListener\Metadata\EntityConfigListener instance.
     */
    protected function getOroEntityMerge_Listener_Metadata_EntityConfigService()
    {
        return $this->services['oro_entity_merge.listener.metadata.entity_config'] = new \Oro\Bundle\EntityMergeBundle\EventListener\Metadata\EntityConfigListener($this->get('oro_entity_merge.listener.metadata.entity_config.helper'));
    }

    /**
     * Gets the 'oro_entity_merge.listener.metadata.entity_config.helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\EventListener\Metadata\EntityConfigHelper A Oro\Bundle\EntityMergeBundle\EventListener\Metadata\EntityConfigHelper instance.
     */
    protected function getOroEntityMerge_Listener_Metadata_EntityConfig_HelperService()
    {
        return $this->services['oro_entity_merge.listener.metadata.entity_config.helper'] = new \Oro\Bundle\EntityMergeBundle\EventListener\Metadata\EntityConfigHelper($this->get('oro_entity_config.config_manager'), $this->get('oro_entity_config.provider.extend'));
    }

    /**
     * Gets the 'oro_entity_merge.listener.metadata.merge_modes' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\EventListener\Metadata\MergeModesListener A Oro\Bundle\EntityMergeBundle\EventListener\Metadata\MergeModesListener instance.
     */
    protected function getOroEntityMerge_Listener_Metadata_MergeModesService()
    {
        return $this->services['oro_entity_merge.listener.metadata.merge_modes'] = new \Oro\Bundle\EntityMergeBundle\EventListener\Metadata\MergeModesListener();
    }

    /**
     * Gets the 'oro_entity_merge.listener.render.localized_value_render' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\EventListener\Render\LocalizedValueRenderListener A Oro\Bundle\EntityMergeBundle\EventListener\Render\LocalizedValueRenderListener instance.
     */
    protected function getOroEntityMerge_Listener_Render_LocalizedValueRenderService()
    {
        return $this->services['oro_entity_merge.listener.render.localized_value_render'] = new \Oro\Bundle\EntityMergeBundle\EventListener\Render\LocalizedValueRenderListener($this->get('oro_locale.formatter.address'), $this->get('oro_locale.formatter.date_time'), $this->get('oro_entity.entity_name_resolver'), $this->get('oro_locale.formatter.number'));
    }

    /**
     * Gets the 'oro_entity_merge.mass_action.data_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\DataGrid\Extension\MassAction\MergeMassActionHandler A Oro\Bundle\EntityMergeBundle\DataGrid\Extension\MassAction\MergeMassActionHandler instance.
     */
    protected function getOroEntityMerge_MassAction_DataHandlerService()
    {
        return $this->services['oro_entity_merge.mass_action.data_handler'] = new \Oro\Bundle\EntityMergeBundle\DataGrid\Extension\MassAction\MergeMassActionHandler($this->get('oro_entity_merge.doctrine_helper'));
    }

    /**
     * Gets the 'oro_entity_merge.mass_action.merge' service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\DataGrid\Extension\MassAction\MergeMassAction A Oro\Bundle\EntityMergeBundle\DataGrid\Extension\MassAction\MergeMassAction instance.
     */
    protected function getOroEntityMerge_MassAction_MergeService()
    {
        return new \Oro\Bundle\EntityMergeBundle\DataGrid\Extension\MassAction\MergeMassAction($this->get('oro_entity_merge.metadata.registry'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_entity_merge.mass_action.merge_mass_action_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\EventListener\DataGrid\MergeMassActionListener A Oro\Bundle\EntityMergeBundle\EventListener\DataGrid\MergeMassActionListener instance.
     */
    protected function getOroEntityMerge_MassAction_MergeMassActionListenerService()
    {
        return $this->services['oro_entity_merge.mass_action.merge_mass_action_listener'] = new \Oro\Bundle\EntityMergeBundle\EventListener\DataGrid\MergeMassActionListener($this->get('oro_entity_merge.metadata.registry'));
    }

    /**
     * Gets the 'oro_entity_merge.merger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Model\EntityMerger A Oro\Bundle\EntityMergeBundle\Model\EntityMerger instance.
     */
    protected function getOroEntityMerge_MergerService()
    {
        return $this->services['oro_entity_merge.merger'] = new \Oro\Bundle\EntityMergeBundle\Model\EntityMerger(array(0 => $this->get('oro_entity_merge.step.validate'), 1 => $this->get('oro_entity_merge.step.merge_fields'), 2 => $this->get('oro_entity_merge.step.remove_entities')), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_entity_merge.metadata.builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Metadata\MetadataBuilder A Oro\Bundle\EntityMergeBundle\Metadata\MetadataBuilder instance.
     */
    protected function getOroEntityMerge_Metadata_BuilderService()
    {
        return $this->services['oro_entity_merge.metadata.builder'] = new \Oro\Bundle\EntityMergeBundle\Metadata\MetadataBuilder($this->get('oro_entity_merge.metadata.factory'), $this->get('oro_entity_merge.doctrine_helper'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_entity_merge.metadata.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Metadata\MetadataFactory A Oro\Bundle\EntityMergeBundle\Metadata\MetadataFactory instance.
     */
    protected function getOroEntityMerge_Metadata_FactoryService()
    {
        return $this->services['oro_entity_merge.metadata.factory'] = new \Oro\Bundle\EntityMergeBundle\Metadata\MetadataFactory();
    }

    /**
     * Gets the 'oro_entity_merge.metadata.registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Metadata\MetadataRegistry A Oro\Bundle\EntityMergeBundle\Metadata\MetadataRegistry instance.
     */
    protected function getOroEntityMerge_Metadata_RegistryService()
    {
        return $this->services['oro_entity_merge.metadata.registry'] = new \Oro\Bundle\EntityMergeBundle\Metadata\MetadataRegistry($this->get('oro_entity_merge.metadata.builder'));
    }

    /**
     * Gets the 'oro_entity_merge.step.merge_fields' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Model\Step\MergeFieldsStep A Oro\Bundle\EntityMergeBundle\Model\Step\MergeFieldsStep instance.
     */
    protected function getOroEntityMerge_Step_MergeFieldsService()
    {
        return $this->services['oro_entity_merge.step.merge_fields'] = new \Oro\Bundle\EntityMergeBundle\Model\Step\MergeFieldsStep($this->get('oro_entity_merge.strategy.delegate'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_entity_merge.step.remove_entities' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Model\Step\RemoveEntitiesStep A Oro\Bundle\EntityMergeBundle\Model\Step\RemoveEntitiesStep instance.
     */
    protected function getOroEntityMerge_Step_RemoveEntitiesService()
    {
        return $this->services['oro_entity_merge.step.remove_entities'] = new \Oro\Bundle\EntityMergeBundle\Model\Step\RemoveEntitiesStep($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_entity_merge.doctrine_helper'));
    }

    /**
     * Gets the 'oro_entity_merge.step.validate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Model\Step\ValidateStep A Oro\Bundle\EntityMergeBundle\Model\Step\ValidateStep instance.
     */
    protected function getOroEntityMerge_Step_ValidateService()
    {
        return $this->services['oro_entity_merge.step.validate'] = new \Oro\Bundle\EntityMergeBundle\Model\Step\ValidateStep($this->get('validator'));
    }

    /**
     * Gets the 'oro_entity_merge.strategy.delegate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Model\Strategy\DelegateStrategy A Oro\Bundle\EntityMergeBundle\Model\Strategy\DelegateStrategy instance.
     */
    protected function getOroEntityMerge_Strategy_DelegateService()
    {
        $this->services['oro_entity_merge.strategy.delegate'] = $instance = new \Oro\Bundle\EntityMergeBundle\Model\Strategy\DelegateStrategy();

        $instance->add($this->get('oro_entity_merge.strategy.replace'));
        $instance->add($this->get('oro_entity_merge.strategy.unite'));

        return $instance;
    }

    /**
     * Gets the 'oro_entity_merge.strategy.replace' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Model\Strategy\ReplaceStrategy A Oro\Bundle\EntityMergeBundle\Model\Strategy\ReplaceStrategy instance.
     */
    protected function getOroEntityMerge_Strategy_ReplaceService()
    {
        return $this->services['oro_entity_merge.strategy.replace'] = new \Oro\Bundle\EntityMergeBundle\Model\Strategy\ReplaceStrategy($this->get('oro_entity_merge.accessor.delegate'));
    }

    /**
     * Gets the 'oro_entity_merge.strategy.unite' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Model\Strategy\UniteStrategy A Oro\Bundle\EntityMergeBundle\Model\Strategy\UniteStrategy instance.
     */
    protected function getOroEntityMerge_Strategy_UniteService()
    {
        return $this->services['oro_entity_merge.strategy.unite'] = new \Oro\Bundle\EntityMergeBundle\Model\Strategy\UniteStrategy($this->get('oro_entity_merge.accessor.delegate'), $this->get('oro_entity_merge.doctrine_helper'));
    }

    /**
     * Gets the 'oro_entity_merge.twig.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Twig\MergeExtension A Oro\Bundle\EntityMergeBundle\Twig\MergeExtension instance.
     */
    protected function getOroEntityMerge_Twig_ExtensionService()
    {
        return $this->services['oro_entity_merge.twig.extension'] = new \Oro\Bundle\EntityMergeBundle\Twig\MergeExtension($this->get('oro_entity_merge.accessor.delegate'), $this->get('oro_entity_merge.twig.renderer'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_entity_merge.twig.renderer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Twig\MergeRenderer A Oro\Bundle\EntityMergeBundle\Twig\MergeRenderer instance.
     */
    protected function getOroEntityMerge_Twig_RendererService()
    {
        return $this->services['oro_entity_merge.twig.renderer'] = new \Oro\Bundle\EntityMergeBundle\Twig\MergeRenderer($this->get('twig'), $this->get('debug.event_dispatcher'), 'OroEntityMergeBundle:Form:mergeValue.html.twig');
    }

    /**
     * Gets the 'oro_entity_merge.validator.master_entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Validator\Constraints\MasterEntityValidator A Oro\Bundle\EntityMergeBundle\Validator\Constraints\MasterEntityValidator instance.
     */
    protected function getOroEntityMerge_Validator_MasterEntityService()
    {
        return $this->services['oro_entity_merge.validator.master_entity'] = new \Oro\Bundle\EntityMergeBundle\Validator\Constraints\MasterEntityValidator($this->get('oro_entity_merge.doctrine_helper'));
    }

    /**
     * Gets the 'oro_entity_merge.validator.max_entities_validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Validator\Constraints\MaxEntitiesCountValidator A Oro\Bundle\EntityMergeBundle\Validator\Constraints\MaxEntitiesCountValidator instance.
     */
    protected function getOroEntityMerge_Validator_MaxEntitiesValidatorService()
    {
        return $this->services['oro_entity_merge.validator.max_entities_validator'] = new \Oro\Bundle\EntityMergeBundle\Validator\Constraints\MaxEntitiesCountValidator();
    }

    /**
     * Gets the 'oro_entity_merge.validator.source_entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Validator\Constraints\SourceEntityValidator A Oro\Bundle\EntityMergeBundle\Validator\Constraints\SourceEntityValidator instance.
     */
    protected function getOroEntityMerge_Validator_SourceEntityService()
    {
        return $this->services['oro_entity_merge.validator.source_entity'] = new \Oro\Bundle\EntityMergeBundle\Validator\Constraints\SourceEntityValidator($this->get('oro_entity_merge.doctrine_helper'));
    }

    /**
     * Gets the 'oro_entity_merge.validator.unique_entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityMergeBundle\Validator\Constraints\UniqueEntityValidator A Oro\Bundle\EntityMergeBundle\Validator\Constraints\UniqueEntityValidator instance.
     */
    protected function getOroEntityMerge_Validator_UniqueEntityService()
    {
        return $this->services['oro_entity_merge.validator.unique_entity'] = new \Oro\Bundle\EntityMergeBundle\Validator\Constraints\UniqueEntityValidator($this->get('oro_entity_merge.doctrine_helper'));
    }

    /**
     * Gets the 'oro_entity_pagination.datagrid.extension.orm_entity_pagination' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityPaginationBundle\Datagrid\EntityPaginationExtension A Oro\Bundle\EntityPaginationBundle\Datagrid\EntityPaginationExtension instance.
     */
    protected function getOroEntityPagination_Datagrid_Extension_OrmEntityPaginationService()
    {
        return $this->services['oro_entity_pagination.datagrid.extension.orm_entity_pagination'] = new \Oro\Bundle\EntityPaginationBundle\Datagrid\EntityPaginationExtension();
    }

    /**
     * Gets the 'oro_entity_pagination.event_listener.entity_pagination' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityPaginationBundle\EventListener\EntityPaginationListener A Oro\Bundle\EntityPaginationBundle\EventListener\EntityPaginationListener instance.
     */
    protected function getOroEntityPagination_EventListener_EntityPaginationService()
    {
        return $this->services['oro_entity_pagination.event_listener.entity_pagination'] = new \Oro\Bundle\EntityPaginationBundle\EventListener\EntityPaginationListener($this->get('oro_entity.doctrine_helper'), $this->get('oro_entity_pagination.storage'), $this->get('oro_entity_pagination.manager'));
    }

    /**
     * Gets the 'oro_entity_pagination.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityPaginationBundle\Manager\EntityPaginationManager A Oro\Bundle\EntityPaginationBundle\Manager\EntityPaginationManager instance.
     */
    protected function getOroEntityPagination_ManagerService()
    {
        return $this->services['oro_entity_pagination.manager'] = new \Oro\Bundle\EntityPaginationBundle\Manager\EntityPaginationManager($this->get('oro_config.user'));
    }

    /**
     * Gets the 'oro_entity_pagination.message_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityPaginationBundle\Manager\MessageManager A Oro\Bundle\EntityPaginationBundle\Manager\MessageManager instance.
     */
    protected function getOroEntityPagination_MessageManagerService()
    {
        return $this->services['oro_entity_pagination.message_manager'] = new \Oro\Bundle\EntityPaginationBundle\Manager\MessageManager($this->get('session'), $this->get('translator'), $this->get('oro_entity_pagination.navigation'), $this->get('oro_entity_pagination.storage'));
    }

    /**
     * Gets the 'oro_entity_pagination.navigation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityPaginationBundle\Navigation\EntityPaginationNavigation A Oro\Bundle\EntityPaginationBundle\Navigation\EntityPaginationNavigation instance.
     */
    protected function getOroEntityPagination_NavigationService()
    {
        return $this->services['oro_entity_pagination.navigation'] = new \Oro\Bundle\EntityPaginationBundle\Navigation\EntityPaginationNavigation($this->get('oro_entity.doctrine_helper'), $this->get('oro_security.security_facade'), $this->get('oro_entity_pagination.storage'));
    }

    /**
     * Gets the 'oro_entity_pagination.storage' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityPaginationBundle\Storage\EntityPaginationStorage A Oro\Bundle\EntityPaginationBundle\Storage\EntityPaginationStorage instance.
     */
    protected function getOroEntityPagination_StorageService()
    {
        $this->services['oro_entity_pagination.storage'] = $instance = new \Oro\Bundle\EntityPaginationBundle\Storage\EntityPaginationStorage($this->get('oro_entity.doctrine_helper'), $this->get('oro_entity_pagination.manager'));

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_entity_pagination.storage.data_collector' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityPaginationBundle\Storage\StorageDataCollector A Oro\Bundle\EntityPaginationBundle\Storage\StorageDataCollector instance.
     */
    protected function getOroEntityPagination_Storage_DataCollectorService()
    {
        return $this->services['oro_entity_pagination.storage.data_collector'] = new \Oro\Bundle\EntityPaginationBundle\Storage\StorageDataCollector($this->get('oro_datagrid.datagrid.manager'), $this->get('oro_entity.doctrine_helper'), $this->get('oro_security.acl_helper'), $this->get('oro_datagrid.extension.pager.orm.pager'), $this->get('oro_entity_pagination.storage'), $this->get('oro_entity_pagination.manager'));
    }

    /**
     * Gets the 'oro_entity_pagination.twig_extension.entity_pagination' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityPaginationBundle\Twig\EntityPaginationExtension A Oro\Bundle\EntityPaginationBundle\Twig\EntityPaginationExtension instance.
     */
    protected function getOroEntityPagination_TwigExtension_EntityPaginationService()
    {
        $this->services['oro_entity_pagination.twig_extension.entity_pagination'] = $instance = new \Oro\Bundle\EntityPaginationBundle\Twig\EntityPaginationExtension($this->get('oro_entity_pagination.navigation'), $this->get('oro_entity_pagination.storage.data_collector'), $this->get('oro_entity_pagination.message_manager'));

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_filter.boolean_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Filter\BooleanFilter A Oro\Bundle\FilterBundle\Filter\BooleanFilter instance.
     */
    protected function getOroFilter_BooleanFilterService()
    {
        return $this->services['oro_filter.boolean_filter'] = new \Oro\Bundle\FilterBundle\Filter\BooleanFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }

    /**
     * Gets the 'oro_filter.builder.many_relation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Datasource\ManyRelationBuilder A Oro\Bundle\FilterBundle\Datasource\ManyRelationBuilder instance.
     */
    protected function getOroFilter_Builder_ManyRelationService()
    {
        $this->services['oro_filter.builder.many_relation'] = $instance = new \Oro\Bundle\FilterBundle\Datasource\ManyRelationBuilder();

        $instance->addBuilder($this->get('oro_filter.builder.many_relation.orm'));

        return $instance;
    }

    /**
     * Gets the 'oro_filter.builder.many_relation.orm' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Datasource\Orm\OrmManyRelationBuilder A Oro\Bundle\FilterBundle\Datasource\Orm\OrmManyRelationBuilder instance.
     */
    protected function getOroFilter_Builder_ManyRelation_OrmService()
    {
        return $this->services['oro_filter.builder.many_relation.orm'] = new \Oro\Bundle\FilterBundle\Datasource\Orm\OrmManyRelationBuilder($this->get('doctrine'));
    }

    /**
     * Gets the 'oro_filter.choice_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Filter\ChoiceFilter A Oro\Bundle\FilterBundle\Filter\ChoiceFilter instance.
     */
    protected function getOroFilter_ChoiceFilterService()
    {
        return $this->services['oro_filter.choice_filter'] = new \Oro\Bundle\FilterBundle\Filter\ChoiceFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }

    /**
     * Gets the 'oro_filter.currency_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Filter\CurrencyFilter A Oro\Bundle\FilterBundle\Filter\CurrencyFilter instance.
     */
    protected function getOroFilter_CurrencyFilterService()
    {
        return $this->services['oro_filter.currency_filter'] = new \Oro\Bundle\FilterBundle\Filter\CurrencyFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }

    /**
     * Gets the 'oro_filter.datagrid.column_options_guesser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Grid\DefaultColumnFilteringOptionsGuesser A Oro\Bundle\FilterBundle\Grid\DefaultColumnFilteringOptionsGuesser instance.
     */
    protected function getOroFilter_Datagrid_ColumnOptionsGuesserService()
    {
        return $this->services['oro_filter.datagrid.column_options_guesser'] = new \Oro\Bundle\FilterBundle\Grid\DefaultColumnFilteringOptionsGuesser();
    }

    /**
     * Gets the 'oro_filter.date_filter_utility' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Filter\DateFilterUtility A Oro\Bundle\FilterBundle\Filter\DateFilterUtility instance.
     */
    protected function getOroFilter_DateFilterUtilityService()
    {
        return $this->services['oro_filter.date_filter_utility'] = new \Oro\Bundle\FilterBundle\Filter\DateFilterUtility($this->get('oro_locale.settings'));
    }

    /**
     * Gets the 'oro_filter.date_range_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Filter\DateRangeFilter A Oro\Bundle\FilterBundle\Filter\DateRangeFilter instance.
     */
    protected function getOroFilter_DateRangeFilterService()
    {
        return $this->services['oro_filter.date_range_filter'] = new \Oro\Bundle\FilterBundle\Filter\DateRangeFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'), $this->get('oro_filter.date_filter_utility'));
    }

    /**
     * Gets the 'oro_filter.datetime_range_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Filter\DateTimeRangeFilter A Oro\Bundle\FilterBundle\Filter\DateTimeRangeFilter instance.
     */
    protected function getOroFilter_DatetimeRangeFilterService()
    {
        return $this->services['oro_filter.datetime_range_filter'] = new \Oro\Bundle\FilterBundle\Filter\DateTimeRangeFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'), $this->get('oro_filter.date_filter_utility'));
    }

    /**
     * Gets the 'oro_filter.dictionary_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Filter\DictionaryFilter A Oro\Bundle\FilterBundle\Filter\DictionaryFilter instance.
     */
    protected function getOroFilter_DictionaryFilterService()
    {
        return $this->services['oro_filter.dictionary_filter'] = new \Oro\Bundle\FilterBundle\Filter\DictionaryFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }

    /**
     * Gets the 'oro_filter.entity_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Filter\EntityFilter A Oro\Bundle\FilterBundle\Filter\EntityFilter instance.
     */
    protected function getOroFilter_EntityFilterService()
    {
        return $this->services['oro_filter.entity_filter'] = new \Oro\Bundle\FilterBundle\Filter\EntityFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }

    /**
     * Gets the 'oro_filter.expression.date.compiler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Expression\Date\Compiler A Oro\Bundle\FilterBundle\Expression\Date\Compiler instance.
     */
    protected function getOroFilter_Expression_Date_CompilerService()
    {
        return $this->services['oro_filter.expression.date.compiler'] = new \Oro\Bundle\FilterBundle\Expression\Date\Compiler($this->get('oro_filter.expression.date.lexer'), $this->get('oro_filter.expression.date.parser'));
    }

    /**
     * Gets the 'oro_filter.expression.date.lexer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Expression\Date\Lexer A Oro\Bundle\FilterBundle\Expression\Date\Lexer instance.
     */
    protected function getOroFilter_Expression_Date_LexerService()
    {
        return $this->services['oro_filter.expression.date.lexer'] = new \Oro\Bundle\FilterBundle\Expression\Date\Lexer($this->get('translator'), $this->get('oro_filter.provider.datemodifierprovider'));
    }

    /**
     * Gets the 'oro_filter.expression.date.parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Expression\Date\Parser A Oro\Bundle\FilterBundle\Expression\Date\Parser instance.
     */
    protected function getOroFilter_Expression_Date_ParserService()
    {
        return $this->services['oro_filter.expression.date.parser'] = new \Oro\Bundle\FilterBundle\Expression\Date\Parser($this->get('oro_locale.settings'));
    }

    /**
     * Gets the 'oro_filter.extension.orm_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Grid\Extension\OrmFilterExtension A Oro\Bundle\FilterBundle\Grid\Extension\OrmFilterExtension instance.
     */
    protected function getOroFilter_Extension_OrmFilterService()
    {
        $this->services['oro_filter.extension.orm_filter'] = $instance = new \Oro\Bundle\FilterBundle\Grid\Extension\OrmFilterExtension($this->get('translator'));

        $instance->addFilter('multiselect-originfolder', $this->get('oro_email_filter.filter_origin_folder'));
        $instance->addFilter('multiselect-messagetype', $this->get('oro_email_filter.filter_massage_type'));
        $instance->addFilter('enum', $this->get('oro_entity_extend.enum_filter'));
        $instance->addFilter('multi_enum', $this->get('oro_entity_extend.multi_enum_filter'));
        $instance->addFilter('dictionary', $this->get('oro_entity_extend.dictionary_filter'));
        $instance->addFilter('activityList', $this->get('oro_activity_list.filter.activity_list'));
        $instance->addFilter('command_with_args', $this->get('oro_cron.command_with_args_string_filter'));
        $instance->addFilter('audit', $this->get('oro_dataaudit.filter.audit'));
        $instance->addFilter('string', $this->get('oro_filter.string_filter'));
        $instance->addFilter('selectrow', $this->get('oro_filter.select_row_filter'));
        $instance->addFilter('number', $this->get('oro_filter.number_filter'));
        $instance->addFilter('percent', $this->get('oro_filter.percent_filter'));
        $instance->addFilter('currency', $this->get('oro_filter.currency_filter'));
        $instance->addFilter('choice', $this->get('oro_filter.choice_filter'));
        $instance->addFilter('single_choice', $this->get('oro_filter.single_choice_filter'));
        $instance->addFilter('entity', $this->get('oro_filter.entity_filter'));
        $instance->addFilter('boolean', $this->get('oro_filter.boolean_filter'));
        $instance->addFilter('date', $this->get('oro_filter.date_range_filter'));
        $instance->addFilter('datetime', $this->get('oro_filter.datetime_range_filter'));
        $instance->addFilter('many-to-many', $this->get('oro_filter.many_to_many_filter'));
        $instance->addFilter('dictionary', $this->get('oro_filter.dictionary_filter'));
        $instance->addFilter('segment', $this->get('oro_segment.filter.segment'));
        $instance->addFilter('tag', $this->get('oro_tag.filter.tags'));

        return $instance;
    }

    /**
     * Gets the 'oro_filter.filter_utility' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Filter\FilterUtility A Oro\Bundle\FilterBundle\Filter\FilterUtility instance.
     */
    protected function getOroFilter_FilterUtilityService()
    {
        return $this->services['oro_filter.filter_utility'] = new \Oro\Bundle\FilterBundle\Filter\FilterUtility();
    }

    /**
     * Gets the 'oro_filter.form.event_subscriber.date' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Form\EventListener\DateFilterSubscriber A Oro\Bundle\FilterBundle\Form\EventListener\DateFilterSubscriber instance.
     */
    protected function getOroFilter_Form_EventSubscriber_DateService()
    {
        return $this->services['oro_filter.form.event_subscriber.date'] = new \Oro\Bundle\FilterBundle\Form\EventListener\DateFilterSubscriber($this->get('oro_filter.expression.date.compiler'), $this->get('oro_locale.settings'));
    }

    /**
     * Gets the 'oro_filter.form.type.date_range' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Form\Type\DateRangeType A Oro\Bundle\FilterBundle\Form\Type\DateRangeType instance.
     */
    protected function getOroFilter_Form_Type_DateRangeService()
    {
        return $this->services['oro_filter.form.type.date_range'] = new \Oro\Bundle\FilterBundle\Form\Type\DateRangeType();
    }

    /**
     * Gets the 'oro_filter.form.type.datetime_range' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Form\Type\DateTimeRangeType A Oro\Bundle\FilterBundle\Form\Type\DateTimeRangeType instance.
     */
    protected function getOroFilter_Form_Type_DatetimeRangeService()
    {
        return $this->services['oro_filter.form.type.datetime_range'] = new \Oro\Bundle\FilterBundle\Form\Type\DateTimeRangeType($this->get('oro_locale.settings'));
    }

    /**
     * Gets the 'oro_filter.form.type.filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Form\Type\Filter\FilterType A Oro\Bundle\FilterBundle\Form\Type\Filter\FilterType instance.
     */
    protected function getOroFilter_Form_Type_FilterService()
    {
        return $this->services['oro_filter.form.type.filter'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\FilterType($this->get('translator'));
    }

    /**
     * Gets the 'oro_filter.form.type.filter.boolean' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Form\Type\Filter\BooleanFilterType A Oro\Bundle\FilterBundle\Form\Type\Filter\BooleanFilterType instance.
     */
    protected function getOroFilter_Form_Type_Filter_BooleanService()
    {
        return $this->services['oro_filter.form.type.filter.boolean'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\BooleanFilterType($this->get('translator'));
    }

    /**
     * Gets the 'oro_filter.form.type.filter.choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Form\Type\Filter\ChoiceFilterType A Oro\Bundle\FilterBundle\Form\Type\Filter\ChoiceFilterType instance.
     */
    protected function getOroFilter_Form_Type_Filter_ChoiceService()
    {
        return $this->services['oro_filter.form.type.filter.choice'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\ChoiceFilterType($this->get('translator'));
    }

    /**
     * Gets the 'oro_filter.form.type.filter.date_range' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Form\Type\Filter\DateRangeFilterType A Oro\Bundle\FilterBundle\Form\Type\Filter\DateRangeFilterType instance.
     */
    protected function getOroFilter_Form_Type_Filter_DateRangeService()
    {
        return $this->services['oro_filter.form.type.filter.date_range'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\DateRangeFilterType($this->get('translator'), $this->get('oro_filter.provider.datemodifierprovider'), $this->get('oro_filter.form.event_subscriber.date'));
    }

    /**
     * Gets the 'oro_filter.form.type.filter.datetime_range' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Form\Type\Filter\DateTimeRangeFilterType A Oro\Bundle\FilterBundle\Form\Type\Filter\DateTimeRangeFilterType instance.
     */
    protected function getOroFilter_Form_Type_Filter_DatetimeRangeService()
    {
        return $this->services['oro_filter.form.type.filter.datetime_range'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\DateTimeRangeFilterType($this->get('translator'), $this->get('oro_filter.provider.datemodifierprovider'), $this->get('oro_filter.form.event_subscriber.date'));
    }

    /**
     * Gets the 'oro_filter.form.type.filter.dictionary' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Form\Type\Filter\DictionaryFilterType A Oro\Bundle\FilterBundle\Form\Type\Filter\DictionaryFilterType instance.
     */
    protected function getOroFilter_Form_Type_Filter_DictionaryService()
    {
        return $this->services['oro_filter.form.type.filter.dictionary'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\DictionaryFilterType($this->get('translator'));
    }

    /**
     * Gets the 'oro_filter.form.type.filter.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Form\Type\Filter\EntityFilterType A Oro\Bundle\FilterBundle\Form\Type\Filter\EntityFilterType instance.
     */
    protected function getOroFilter_Form_Type_Filter_EntityService()
    {
        return $this->services['oro_filter.form.type.filter.entity'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\EntityFilterType($this->get('translator'));
    }

    /**
     * Gets the 'oro_filter.form.type.filter.many_to_many' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Form\Type\Filter\ManyToManyFilterType A Oro\Bundle\FilterBundle\Form\Type\Filter\ManyToManyFilterType instance.
     */
    protected function getOroFilter_Form_Type_Filter_ManyToManyService()
    {
        return $this->services['oro_filter.form.type.filter.many_to_many'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\ManyToManyFilterType($this->get('translator'));
    }

    /**
     * Gets the 'oro_filter.form.type.filter.number' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Form\Type\Filter\NumberFilterType A Oro\Bundle\FilterBundle\Form\Type\Filter\NumberFilterType instance.
     */
    protected function getOroFilter_Form_Type_Filter_NumberService()
    {
        return $this->services['oro_filter.form.type.filter.number'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\NumberFilterType($this->get('translator'));
    }

    /**
     * Gets the 'oro_filter.form.type.filter.selectrow' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Form\Type\Filter\SelectRowFilterType A Oro\Bundle\FilterBundle\Form\Type\Filter\SelectRowFilterType instance.
     */
    protected function getOroFilter_Form_Type_Filter_SelectrowService()
    {
        return $this->services['oro_filter.form.type.filter.selectrow'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\SelectRowFilterType($this->get('translator'));
    }

    /**
     * Gets the 'oro_filter.form.type.filter.text' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Form\Type\Filter\TextFilterType A Oro\Bundle\FilterBundle\Form\Type\Filter\TextFilterType instance.
     */
    protected function getOroFilter_Form_Type_Filter_TextService()
    {
        return $this->services['oro_filter.form.type.filter.text'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\TextFilterType($this->get('translator'));
    }

    /**
     * Gets the 'oro_filter.many_to_many_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Filter\ManyToManyFilter A Oro\Bundle\FilterBundle\Filter\ManyToManyFilter instance.
     */
    protected function getOroFilter_ManyToManyFilterService()
    {
        return $this->services['oro_filter.many_to_many_filter'] = new \Oro\Bundle\FilterBundle\Filter\ManyToManyFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }

    /**
     * Gets the 'oro_filter.number_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Filter\NumberFilter A Oro\Bundle\FilterBundle\Filter\NumberFilter instance.
     */
    protected function getOroFilter_NumberFilterService()
    {
        return $this->services['oro_filter.number_filter'] = new \Oro\Bundle\FilterBundle\Filter\NumberFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }

    /**
     * Gets the 'oro_filter.percent_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Filter\PercentFilter A Oro\Bundle\FilterBundle\Filter\PercentFilter instance.
     */
    protected function getOroFilter_PercentFilterService()
    {
        return $this->services['oro_filter.percent_filter'] = new \Oro\Bundle\FilterBundle\Filter\PercentFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }

    /**
     * Gets the 'oro_filter.provider.datemodifierprovider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Provider\DateModifierProvider A Oro\Bundle\FilterBundle\Provider\DateModifierProvider instance.
     */
    protected function getOroFilter_Provider_DatemodifierproviderService()
    {
        return $this->services['oro_filter.provider.datemodifierprovider'] = new \Oro\Bundle\FilterBundle\Provider\DateModifierProvider();
    }

    /**
     * Gets the 'oro_filter.select_row_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Filter\SelectRowFilter A Oro\Bundle\FilterBundle\Filter\SelectRowFilter instance.
     */
    protected function getOroFilter_SelectRowFilterService()
    {
        return $this->services['oro_filter.select_row_filter'] = new \Oro\Bundle\FilterBundle\Filter\SelectRowFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }

    /**
     * Gets the 'oro_filter.single_choice_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Filter\SingleChoiceFilter A Oro\Bundle\FilterBundle\Filter\SingleChoiceFilter instance.
     */
    protected function getOroFilter_SingleChoiceFilterService()
    {
        return $this->services['oro_filter.single_choice_filter'] = new \Oro\Bundle\FilterBundle\Filter\SingleChoiceFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }

    /**
     * Gets the 'oro_filter.string_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FilterBundle\Filter\StringFilter A Oro\Bundle\FilterBundle\Filter\StringFilter instance.
     */
    protected function getOroFilter_StringFilterService()
    {
        return $this->services['oro_filter.string_filter'] = new \Oro\Bundle\FilterBundle\Filter\StringFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }

    /**
     * Gets the 'oro_form.autocomplete.search_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Autocomplete\SearchRegistry A Oro\Bundle\FormBundle\Autocomplete\SearchRegistry instance.
     */
    protected function getOroForm_Autocomplete_SearchRegistryService()
    {
        $this->services['oro_form.autocomplete.search_registry'] = $instance = new \Oro\Bundle\FormBundle\Autocomplete\SearchRegistry();

        $instance->addSearchHandler('user_organizations', $this->get('oro_organization.autocomplete.organization_search_handler'));
        $instance->addSearchHandler('organization', $this->get('oro_organization.autocomplete.organization.search_handler'));
        $instance->addSearchHandler('acl_users', $this->get('oro_user.autocomplete.user.search_acl_handler'));
        $instance->addSearchHandler('users', $this->get('oro_user.autocomplete.user.search_handler'));
        $instance->addSearchHandler('organization_users', $this->get('oro_user.autocomplete.user.organization_search_handler'));
        $instance->addSearchHandler('users_without_current', $this->get('oro_user.autocomplete.user.search_without_current_handler'));
        $instance->addSearchHandler('roles', $this->get('oro_user.autocomplete.role.search_handler'));
        $instance->addSearchHandler('roles_authenticated', $this->get('oro_user.autocomplete.role.authenticated_search_handler'));
        $instance->addSearchHandler('entity_select', $this->get('oro_entity.form.handler.entity_select'));
        $instance->addSearchHandler('user_calendars', $this->get('oro_calendar.autocomplete.user_calendar_handler'));
        $instance->addSearchHandler('tags', $this->get('oro_tag.autocomplete.tag.search_handler'));

        return $instance;
    }

    /**
     * Gets the 'oro_form.autocomplete.security' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Autocomplete\Security A Oro\Bundle\FormBundle\Autocomplete\Security instance.
     */
    protected function getOroForm_Autocomplete_SecurityService()
    {
        $this->services['oro_form.autocomplete.security'] = $instance = new \Oro\Bundle\FormBundle\Autocomplete\Security($this->get('oro_security.security_facade'));

        $instance->setAutocompleteAclResource('organization', 'oro_organization_view');
        $instance->setAutocompleteAclResource('users', 'oro_user_user_view');
        $instance->setAutocompleteAclResource('organization_users', 'oro_user_user_view');
        $instance->setAutocompleteAclResource('users_without_current', 'oro_user_user_view');
        $instance->setAutocompleteAclResource('roles', 'oro_user_role_view');
        $instance->setAutocompleteAclResource('roles_authenticated', 'oro_user_role_view');
        $instance->setAutocompleteAclResource('entity_select', 'oro_search');
        $instance->setAutocompleteAclResource('user_calendars', 'oro_user_user_view');
        $instance->setAutocompleteAclResource('tags', 'oro_tag_assign_unassign');

        return $instance;
    }

    /**
     * Gets the 'oro_form.extension.client_validation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Extension\ClientValidationExtension A Oro\Bundle\FormBundle\Form\Extension\ClientValidationExtension instance.
     */
    protected function getOroForm_Extension_ClientValidationService()
    {
        return $this->services['oro_form.extension.client_validation'] = new \Oro\Bundle\FormBundle\Form\Extension\ClientValidationExtension();
    }

    /**
     * Gets the 'oro_form.extension.constraint_as_option' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Extension\ConstraintAsOptionExtension A Oro\Bundle\FormBundle\Form\Extension\ConstraintAsOptionExtension instance.
     */
    protected function getOroForm_Extension_ConstraintAsOptionService()
    {
        return $this->services['oro_form.extension.constraint_as_option'] = new \Oro\Bundle\FormBundle\Form\Extension\ConstraintAsOptionExtension($this->get('oro_form.validator.constraint_factory'));
    }

    /**
     * Gets the 'oro_form.extension.data_block' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Extension\DataBlockExtension A Oro\Bundle\FormBundle\Form\Extension\DataBlockExtension instance.
     */
    protected function getOroForm_Extension_DataBlockService()
    {
        return $this->services['oro_form.extension.data_block'] = new \Oro\Bundle\FormBundle\Form\Extension\DataBlockExtension();
    }

    /**
     * Gets the 'oro_form.extension.data_transformer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Extension\DataTransformerExtension A Oro\Bundle\FormBundle\Form\Extension\DataTransformerExtension instance.
     */
    protected function getOroForm_Extension_DataTransformerService()
    {
        return $this->services['oro_form.extension.data_transformer'] = new \Oro\Bundle\FormBundle\Form\Extension\DataTransformerExtension($this);
    }

    /**
     * Gets the 'oro_form.extension.js_validation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Extension\JsValidationExtension A Oro\Bundle\FormBundle\Form\Extension\JsValidationExtension instance.
     */
    protected function getOroForm_Extension_JsValidationService()
    {
        return $this->services['oro_form.extension.js_validation'] = new \Oro\Bundle\FormBundle\Form\Extension\JsValidationExtension($this->get('oro_form.extension.js_validation.constraints_provider'));
    }

    /**
     * Gets the 'oro_form.extension.js_validation.constraints_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Extension\JsValidation\ConstraintsProvider A Oro\Bundle\FormBundle\Form\Extension\JsValidation\ConstraintsProvider instance.
     */
    protected function getOroForm_Extension_JsValidation_ConstraintsProviderService()
    {
        return $this->services['oro_form.extension.js_validation.constraints_provider'] = new \Oro\Bundle\FormBundle\Form\Extension\JsValidation\ConstraintsProvider($this->get('validator'));
    }

    /**
     * Gets the 'oro_form.extension.js_validation.repeated' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Extension\JsValidation\RepeatedTypeExtension A Oro\Bundle\FormBundle\Form\Extension\JsValidation\RepeatedTypeExtension instance.
     */
    protected function getOroForm_Extension_JsValidation_RepeatedService()
    {
        return $this->services['oro_form.extension.js_validation.repeated'] = new \Oro\Bundle\FormBundle\Form\Extension\JsValidation\RepeatedTypeExtension();
    }

    /**
     * Gets the 'oro_form.extension.random_id' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Extension\RandomIdExtension A Oro\Bundle\FormBundle\Form\Extension\RandomIdExtension instance.
     */
    protected function getOroForm_Extension_RandomIdService()
    {
        return $this->services['oro_form.extension.random_id'] = new \Oro\Bundle\FormBundle\Form\Extension\RandomIdExtension();
    }

    /**
     * Gets the 'oro_form.extension.sortable' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Extension\SortableExtension A Oro\Bundle\FormBundle\Form\Extension\SortableExtension instance.
     */
    protected function getOroForm_Extension_SortableService()
    {
        return $this->services['oro_form.extension.sortable'] = new \Oro\Bundle\FormBundle\Form\Extension\SortableExtension();
    }

    /**
     * Gets the 'oro_form.form_handler.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Handler\ApiFormHandler A Oro\Bundle\FormBundle\Form\Handler\ApiFormHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_form.form_handler.api' service is requested while the 'request' scope is not active
     */
    protected function getOroForm_FormHandler_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_form.form_handler.api', 'request');
        }

        return $this->services['oro_form.form_handler.api'] = $this->scopedServices['request']['oro_form.form_handler.api'] = new \Oro\Bundle\FormBundle\Form\Handler\ApiFormHandler($this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_form.importexport.primary_item_collection_normalizer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\ImportExport\Serializer\Normalizer\PrimaryItemCollectionNormalizer A Oro\Bundle\FormBundle\ImportExport\Serializer\Normalizer\PrimaryItemCollectionNormalizer instance.
     */
    protected function getOroForm_Importexport_PrimaryItemCollectionNormalizerService()
    {
        return $this->services['oro_form.importexport.primary_item_collection_normalizer'] = new \Oro\Bundle\FormBundle\ImportExport\Serializer\Normalizer\PrimaryItemCollectionNormalizer();
    }

    /**
     * Gets the 'oro_form.model.update_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Model\UpdateHandler A Oro\Bundle\FormBundle\Model\UpdateHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_form.model.update_handler' service is requested while the 'request' scope is not active
     */
    protected function getOroForm_Model_UpdateHandlerService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_form.model.update_handler', 'request');
        }

        return $this->services['oro_form.model.update_handler'] = $this->scopedServices['request']['oro_form.model.update_handler'] = new \Oro\Bundle\FormBundle\Model\UpdateHandler($this->get('request'), $this->get('session'), $this->get('oro_ui.router'), $this->get('oro_entity.doctrine_helper'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_form.provider.html_tag_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Provider\HtmlTagProvider A Oro\Bundle\FormBundle\Provider\HtmlTagProvider instance.
     */
    protected function getOroForm_Provider_HtmlTagProviderService()
    {
        return $this->services['oro_form.provider.html_tag_provider'] = new \Oro\Bundle\FormBundle\Provider\HtmlTagProvider();
    }

    /**
     * Gets the 'oro_form.related_entity.form.type.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\RelatedEntityApiType A Oro\Bundle\FormBundle\Form\Type\RelatedEntityApiType instance.
     */
    protected function getOroForm_RelatedEntity_Form_Type_ApiService()
    {
        return $this->services['oro_form.related_entity.form.type.api'] = new \Oro\Bundle\FormBundle\Form\Type\RelatedEntityApiType(new \Oro\Bundle\FormBundle\Form\DataTransformer\RelatedEntityTransformer($this->get('oro_entity.doctrine_helper'), $this->get('oro_entity.entity_class_name_helper'), $this->get('oro_security.security_facade')));
    }

    /**
     * Gets the 'oro_form.related_entity_collection.form.type.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\RelatedEntityCollectionApiType A Oro\Bundle\FormBundle\Form\Type\RelatedEntityCollectionApiType instance.
     */
    protected function getOroForm_RelatedEntityCollection_Form_Type_ApiService()
    {
        return $this->services['oro_form.related_entity_collection.form.type.api'] = new \Oro\Bundle\FormBundle\Form\Type\RelatedEntityCollectionApiType();
    }

    /**
     * Gets the 'oro_form.related_entity_standalone_collection.form.type.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\DecoratorApiType A Oro\Bundle\FormBundle\Form\Type\DecoratorApiType instance.
     */
    protected function getOroForm_RelatedEntityStandaloneCollection_Form_Type_ApiService()
    {
        return $this->services['oro_form.related_entity_standalone_collection.form.type.api'] = new \Oro\Bundle\FormBundle\Form\Type\DecoratorApiType('oro_related_entity_standalone_collection_api', $this->get('oro_form.related_entity_collection.form.type.api'));
    }

    /**
     * Gets the 'oro_form.twig.form_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Twig\FormExtension A Oro\Bundle\FormBundle\Twig\FormExtension instance.
     */
    protected function getOroForm_Twig_FormExtensionService()
    {
        return $this->services['oro_form.twig.form_extension'] = new \Oro\Bundle\FormBundle\Twig\FormExtension();
    }

    /**
     * Gets the 'oro_form.twig.js_validation_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Twig\JsValidationExtension A Oro\Bundle\FormBundle\Twig\JsValidationExtension instance.
     */
    protected function getOroForm_Twig_JsValidationExtensionService()
    {
        return $this->services['oro_form.twig.js_validation_extension'] = new \Oro\Bundle\FormBundle\Twig\JsValidationExtension();
    }

    /**
     * Gets the 'oro_form.type.collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\CollectionType A Oro\Bundle\FormBundle\Form\Type\CollectionType instance.
     */
    protected function getOroForm_Type_CollectionService()
    {
        return $this->services['oro_form.type.collection'] = new \Oro\Bundle\FormBundle\Form\Type\CollectionType();
    }

    /**
     * Gets the 'oro_form.type.color_table' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroColorTableType A Oro\Bundle\FormBundle\Form\Type\OroColorTableType instance.
     */
    protected function getOroForm_Type_ColorTableService()
    {
        return $this->services['oro_form.type.color_table'] = new \Oro\Bundle\FormBundle\Form\Type\OroColorTableType();
    }

    /**
     * Gets the 'oro_form.type.date' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroDateType A Oro\Bundle\FormBundle\Form\Type\OroDateType instance.
     */
    protected function getOroForm_Type_DateService()
    {
        return $this->services['oro_form.type.date'] = new \Oro\Bundle\FormBundle\Form\Type\OroDateType();
    }

    /**
     * Gets the 'oro_form.type.datetime' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroDateTimeType A Oro\Bundle\FormBundle\Form\Type\OroDateTimeType instance.
     */
    protected function getOroForm_Type_DatetimeService()
    {
        return $this->services['oro_form.type.datetime'] = new \Oro\Bundle\FormBundle\Form\Type\OroDateTimeType();
    }

    /**
     * Gets the 'oro_form.type.download_links' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\DownloadLinksType A Oro\Bundle\FormBundle\Form\Type\DownloadLinksType instance.
     * 
     * @throws InactiveScopeException when the 'oro_form.type.download_links' service is requested while the 'request' scope is not active
     */
    protected function getOroForm_Type_DownloadLinksService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_form.type.download_links', 'request');
        }

        return $this->services['oro_form.type.download_links'] = $this->scopedServices['request']['oro_form.type.download_links'] = new \Oro\Bundle\FormBundle\Form\Type\DownloadLinksType($this->get('assets.packages'));
    }

    /**
     * Gets the 'oro_form.type.encoded_password' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroEncodedPasswordType A Oro\Bundle\FormBundle\Form\Type\OroEncodedPasswordType instance.
     */
    protected function getOroForm_Type_EncodedPasswordService()
    {
        return $this->services['oro_form.type.encoded_password'] = new \Oro\Bundle\FormBundle\Form\Type\OroEncodedPasswordType($this->get('oro_security.encoder.mcrypt'));
    }

    /**
     * Gets the 'oro_form.type.entity_changeset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\EntityChangesetType A Oro\Bundle\FormBundle\Form\Type\EntityChangesetType instance.
     */
    protected function getOroForm_Type_EntityChangesetService()
    {
        return $this->services['oro_form.type.entity_changeset'] = new \Oro\Bundle\FormBundle\Form\Type\EntityChangesetType($this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_form.type.entity_create_or_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroEntityCreateOrSelectType A Oro\Bundle\FormBundle\Form\Type\OroEntityCreateOrSelectType instance.
     */
    protected function getOroForm_Type_EntityCreateOrSelectService()
    {
        return $this->services['oro_form.type.entity_create_or_select'] = new \Oro\Bundle\FormBundle\Form\Type\OroEntityCreateOrSelectType($this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_form.type.entity_create_or_select_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroEntityCreateOrSelectChoiceType A Oro\Bundle\FormBundle\Form\Type\OroEntityCreateOrSelectChoiceType instance.
     */
    protected function getOroForm_Type_EntityCreateOrSelectChoiceService()
    {
        return $this->services['oro_form.type.entity_create_or_select_choice'] = new \Oro\Bundle\FormBundle\Form\Type\OroEntityCreateOrSelectChoiceType($this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_form.type.entity_identifier' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\EntityIdentifierType A Oro\Bundle\FormBundle\Form\Type\EntityIdentifierType instance.
     */
    protected function getOroForm_Type_EntityIdentifierService()
    {
        return $this->services['oro_form.type.entity_identifier'] = new \Oro\Bundle\FormBundle\Form\Type\EntityIdentifierType($this->get('doctrine'));
    }

    /**
     * Gets the 'oro_form.type.icon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroIconType A Oro\Bundle\FormBundle\Form\Type\OroIconType instance.
     */
    protected function getOroForm_Type_IconService()
    {
        return $this->services['oro_form.type.icon'] = new \Oro\Bundle\FormBundle\Form\Type\OroIconType($this->get('kernel'));
    }

    /**
     * Gets the 'oro_form.type.jqueryselect2_hidden' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroJquerySelect2HiddenType A Oro\Bundle\FormBundle\Form\Type\OroJquerySelect2HiddenType instance.
     */
    protected function getOroForm_Type_Jqueryselect2HiddenService()
    {
        return $this->services['oro_form.type.jqueryselect2_hidden'] = new \Oro\Bundle\FormBundle\Form\Type\OroJquerySelect2HiddenType($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_form.autocomplete.search_registry'), $this->get('oro_entity_config.provider.form'));
    }

    /**
     * Gets the 'oro_form.type.link' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\LinkType A Oro\Bundle\FormBundle\Form\Type\LinkType instance.
     */
    protected function getOroForm_Type_LinkService()
    {
        return $this->services['oro_form.type.link'] = new \Oro\Bundle\FormBundle\Form\Type\LinkType();
    }

    /**
     * Gets the 'oro_form.type.money' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroMoneyType A Oro\Bundle\FormBundle\Form\Type\OroMoneyType instance.
     */
    protected function getOroForm_Type_MoneyService()
    {
        return $this->services['oro_form.type.money'] = new \Oro\Bundle\FormBundle\Form\Type\OroMoneyType($this->get('oro_locale.settings'), $this->get('oro_locale.formatter.number'));
    }

    /**
     * Gets the 'oro_form.type.multiple_entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\MultipleEntityType A Oro\Bundle\FormBundle\Form\Type\MultipleEntityType instance.
     */
    protected function getOroForm_Type_MultipleEntityService()
    {
        return $this->services['oro_form.type.multiple_entity'] = new \Oro\Bundle\FormBundle\Form\Type\MultipleEntityType($this->get('oro_entity.doctrine_helper'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_form.type.oro_entity_create_or_select_inline' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroEntitySelectOrCreateInlineType A Oro\Bundle\FormBundle\Form\Type\OroEntitySelectOrCreateInlineType instance.
     */
    protected function getOroForm_Type_OroEntityCreateOrSelectInlineService()
    {
        return $this->services['oro_form.type.oro_entity_create_or_select_inline'] = new \Oro\Bundle\FormBundle\Form\Type\OroEntitySelectOrCreateInlineType($this->get('oro_security.security_facade'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_form.type.percent' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroPercentType A Oro\Bundle\FormBundle\Form\Type\OroPercentType instance.
     */
    protected function getOroForm_Type_PercentService()
    {
        return $this->services['oro_form.type.percent'] = new \Oro\Bundle\FormBundle\Form\Type\OroPercentType();
    }

    /**
     * Gets the 'oro_form.type.resizeable_rich_text' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroResizeableRichTextType A Oro\Bundle\FormBundle\Form\Type\OroResizeableRichTextType instance.
     */
    protected function getOroForm_Type_ResizeableRichTextService()
    {
        return $this->services['oro_form.type.resizeable_rich_text'] = new \Oro\Bundle\FormBundle\Form\Type\OroResizeableRichTextType();
    }

    /**
     * Gets the 'oro_form.type.rich_text' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroRichTextType A Oro\Bundle\FormBundle\Form\Type\OroRichTextType instance.
     */
    protected function getOroForm_Type_RichTextService()
    {
        $this->services['oro_form.type.rich_text'] = $instance = new \Oro\Bundle\FormBundle\Form\Type\OroRichTextType($this->get('oro_config.user'), $this->get('oro_form.provider.html_tag_provider'), 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev');

        $instance->setAssetHelper($this->get('assets.packages'));

        return $instance;
    }

    /**
     * Gets the 'oro_form.type.simple_color_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroSimpleColorChoiceType A Oro\Bundle\FormBundle\Form\Type\OroSimpleColorChoiceType instance.
     */
    protected function getOroForm_Type_SimpleColorChoiceService()
    {
        return $this->services['oro_form.type.simple_color_choice'] = new \Oro\Bundle\FormBundle\Form\Type\OroSimpleColorChoiceType($this->get('oro_config.user'));
    }

    /**
     * Gets the 'oro_form.type.simple_color_picker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroSimpleColorPickerType A Oro\Bundle\FormBundle\Form\Type\OroSimpleColorPickerType instance.
     */
    protected function getOroForm_Type_SimpleColorPickerService()
    {
        return $this->services['oro_form.type.simple_color_picker'] = new \Oro\Bundle\FormBundle\Form\Type\OroSimpleColorPickerType($this->get('oro_config.user'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_form.type.textlist' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroTextListType A Oro\Bundle\FormBundle\Form\Type\OroTextListType instance.
     */
    protected function getOroForm_Type_TextlistService()
    {
        return $this->services['oro_form.type.textlist'] = new \Oro\Bundle\FormBundle\Form\Type\OroTextListType();
    }

    /**
     * Gets the 'oro_form.type.time_interval' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Type\OroTimeIntervalType A Oro\Bundle\FormBundle\Form\Type\OroTimeIntervalType instance.
     */
    protected function getOroForm_Type_TimeIntervalService()
    {
        return $this->services['oro_form.type.time_interval'] = new \Oro\Bundle\FormBundle\Form\Type\OroTimeIntervalType();
    }

    /**
     * Gets the 'oro_form.validator.constraint_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Validator\ConstraintFactory A Oro\Bundle\FormBundle\Validator\ConstraintFactory instance.
     */
    protected function getOroForm_Validator_ConstraintFactoryService()
    {
        return $this->services['oro_form.validator.constraint_factory'] = new \Oro\Bundle\FormBundle\Validator\ConstraintFactory();
    }

    /**
     * Gets the 'oro_form.validator.entity_class' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Validator\Constraints\EntityClassValidator A Oro\Bundle\FormBundle\Validator\Constraints\EntityClassValidator instance.
     */
    protected function getOroForm_Validator_EntityClassService()
    {
        return $this->services['oro_form.validator.entity_class'] = new \Oro\Bundle\FormBundle\Validator\Constraints\EntityClassValidator($this->get('oro_entity.doctrine_helper'), $this->get('oro_entity.entity_class_name_helper'));
    }

    /**
     * Gets the 'oro_form.validator.related_entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Validator\Constraints\RelatedEntityValidator A Oro\Bundle\FormBundle\Validator\Constraints\RelatedEntityValidator instance.
     */
    protected function getOroForm_Validator_RelatedEntityService()
    {
        return $this->services['oro_form.validator.related_entity'] = new \Oro\Bundle\FormBundle\Validator\Constraints\RelatedEntityValidator($this->get('oro_entity.doctrine_helper'), $this->get('oro_entity.entity_class_name_helper'));
    }

    /**
     * Gets the 'oro_help.form.tooltip_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Form\Extension\TooltipFormExtension A Oro\Bundle\FormBundle\Form\Extension\TooltipFormExtension instance.
     */
    protected function getOroHelp_Form_TooltipExtensionService()
    {
        return $this->services['oro_help.form.tooltip_extension'] = new \Oro\Bundle\FormBundle\Form\Extension\TooltipFormExtension();
    }

    /**
     * Gets the 'oro_help.help_link.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroHelp_HelpLink_CacheService()
    {
        $this->services['oro_help.help_link.cache'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_help.help_link.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_help.listener.help_link' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\HelpBundle\EventListener\HelpLinkRequestListener A Oro\Bundle\HelpBundle\EventListener\HelpLinkRequestListener instance.
     */
    protected function getOroHelp_Listener_HelpLinkService()
    {
        return $this->services['oro_help.listener.help_link'] = new \Oro\Bundle\HelpBundle\EventListener\HelpLinkRequestListener($this);
    }

    /**
     * Gets the 'oro_help.model.help_link_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\HelpBundle\Model\HelpLinkProvider A Oro\Bundle\HelpBundle\Model\HelpLinkProvider instance.
     */
    protected function getOroHelp_Model_HelpLinkProviderService()
    {
        $this->services['oro_help.model.help_link_provider'] = $instance = new \Oro\Bundle\HelpBundle\Model\HelpLinkProvider($this->get('controller_name_converter'), $this->get('oro_platform.composer.version_helper'));

        $instance->setCache($this->get('oro_help.help_link.cache'));
        $instance->setConfiguration(array('resources' => array(), 'vendors' => array('Oro' => array('prefix' => NULL, 'alias' => 'Platform')), 'routes' => array('oro_default' => array('uri' => 'Platform/OroDashboardBundle')), 'defaults' => array('link' => 'http://www.orocrm.com/documentation/index', 'server' => 'http://help.orocrm.com/', 'prefix' => 'Third_Party')));

        return $instance;
    }

    /**
     * Gets the 'oro_help.twig.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\HelpBundle\Twig\HelpExtension A Oro\Bundle\HelpBundle\Twig\HelpExtension instance.
     */
    protected function getOroHelp_Twig_ExtensionService()
    {
        return $this->services['oro_help.twig.extension'] = new \Oro\Bundle\HelpBundle\Twig\HelpExtension($this->get('oro_help.model.help_link_provider'));
    }

    /**
     * Gets the 'oro_imap.connector.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImapBundle\Connector\ImapConnectorFactory A Oro\Bundle\ImapBundle\Connector\ImapConnectorFactory instance.
     */
    protected function getOroImap_Connector_FactoryService()
    {
        return $this->services['oro_imap.connector.factory'] = new \Oro\Bundle\ImapBundle\Connector\ImapConnectorFactory(new \Oro\Bundle\ImapBundle\Connector\ImapServicesFactory(array('' => array(0 => 'Oro\\Bundle\\ImapBundle\\Mail\\Storage\\Imap', 1 => 'Oro\\Bundle\\ImapBundle\\Connector\\Search\\SearchStringManager'), 'X-GM-EXT-1' => array(0 => 'Oro\\Bundle\\ImapBundle\\Mail\\Storage\\GmailImap', 1 => 'Oro\\Bundle\\ImapBundle\\Connector\\Search\\GmailSearchStringManager'))), 'Oro\\Bundle\\ImapBundle\\Connector\\ImapConnector');
    }

    /**
     * Gets the 'oro_imap.email_synchronizer' service.
     *
     * @return \Oro\Bundle\ImapBundle\Sync\ImapEmailSynchronizer A Oro\Bundle\ImapBundle\Sync\ImapEmailSynchronizer instance.
     */
    protected function getOroImap_EmailSynchronizerService()
    {
        $a = $this->get('doctrine');
        $b = $this->get('oro_email.email.address.manager');
        $c = $this->get('oro_email.email.address.helper');

        $instance = new \Oro\Bundle\ImapBundle\Sync\ImapEmailSynchronizer($a, new \Oro\Bundle\EmailBundle\Sync\KnownEmailAddressCheckerFactory($a, $b, $c, $this->get('oro_email.email.owner.provider.storage'), array()), new \Oro\Bundle\ImapBundle\Sync\ImapEmailSynchronizationProcessorFactory($a, new \Oro\Bundle\EmailBundle\Builder\EmailEntityBuilder(new \Oro\Bundle\EmailBundle\Builder\EmailEntityBatchProcessor($b, $this->get('oro_email.email.owner.provider'), $this->get('debug.event_dispatcher')), $b, $c), $c), $this->get('oro_imap.connector.factory'), $this->get('oro_security.encoder.mcrypt'));

        $instance->setTokenStorage(new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage());

        return $instance;
    }

    /**
     * Gets the 'oro_imap.form.type.configuration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImapBundle\Form\Type\ConfigurationType A Oro\Bundle\ImapBundle\Form\Type\ConfigurationType instance.
     */
    protected function getOroImap_Form_Type_ConfigurationService()
    {
        return $this->services['oro_imap.form.type.configuration'] = new \Oro\Bundle\ImapBundle\Form\Type\ConfigurationType($this->get('oro_security.encoder.mcrypt'), $this->get('oro_security.security_facade'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_imap.listener.user_email_origin' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\ImapBundle\EventListener\UserEmailOriginListener A Oro\Bundle\ImapBundle\EventListener\UserEmailOriginListener instance.
     */
    public function getOroImap_Listener_UserEmailOriginService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_imap.listener.user_email_origin'] = new OroBundleImapBundleEventListenerUserEmailOriginListener_000000002e47ef7d00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroImap_Listener_UserEmailOriginService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\ImapBundle\EventListener\UserEmailOriginListener($this->get('oro_security.encoder.mcrypt'), $this->get('oro_imap.connector.factory'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_imap.manager.clear' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImapBundle\Manager\ImapClearManager A Oro\Bundle\ImapBundle\Manager\ImapClearManager instance.
     */
    protected function getOroImap_Manager_ClearService()
    {
        $this->services['oro_imap.manager.clear'] = $instance = new \Oro\Bundle\ImapBundle\Manager\ImapClearManager($this->get('doctrine.orm.default_entity_manager'));

        $instance->setLogger($this->get('logger'));

        return $instance;
    }

    /**
     * Gets the 'oro_imap.workflow.action.dependency_job' service.
     *
     * @return \Oro\Bundle\ImapBundle\Workflow\Action\DependencyJob A Oro\Bundle\ImapBundle\Workflow\Action\DependencyJob instance.
     */
    protected function getOroImap_Workflow_Action_DependencyJobService()
    {
        $instance = new \Oro\Bundle\ImapBundle\Workflow\Action\DependencyJob($this->get('oro_workflow.context_accessor'), $this->get('doctrine'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_importexport.action.execute_job' service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Model\Action\ExecuteJobAction A Oro\Bundle\ImportExportBundle\Model\Action\ExecuteJobAction instance.
     */
    protected function getOroImportexport_Action_ExecuteJobService()
    {
        $instance = new \Oro\Bundle\ImportExportBundle\Model\Action\ExecuteJobAction($this->get('oro_workflow.context_accessor'), $this->get('oro_importexport.job_executor'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_importexport.context_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Context\ContextRegistry A Oro\Bundle\ImportExportBundle\Context\ContextRegistry instance.
     */
    protected function getOroImportexport_ContextRegistryService()
    {
        return $this->services['oro_importexport.context_registry'] = new \Oro\Bundle\ImportExportBundle\Context\ContextRegistry();
    }

    /**
     * Gets the 'oro_importexport.data_converter.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Converter\DefaultDataConverter A Oro\Bundle\ImportExportBundle\Converter\DefaultDataConverter instance.
     */
    protected function getOroImportexport_DataConverter_DefaultService()
    {
        return $this->services['oro_importexport.data_converter.default'] = new \Oro\Bundle\ImportExportBundle\Converter\DefaultDataConverter();
    }

    /**
     * Gets the 'oro_importexport.data_converter.relation_calculator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Converter\RelationCalculator A Oro\Bundle\ImportExportBundle\Converter\RelationCalculator instance.
     */
    protected function getOroImportexport_DataConverter_RelationCalculatorService()
    {
        return $this->services['oro_importexport.data_converter.relation_calculator'] = new \Oro\Bundle\ImportExportBundle\Converter\RelationCalculator($this->get('doctrine'), $this->get('oro_importexport.field.field_helper'));
    }

    /**
     * Gets the 'oro_importexport.data_converter.template_fixture.relation_calculator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Converter\TemplateFixtureRelationCalculator A Oro\Bundle\ImportExportBundle\Converter\TemplateFixtureRelationCalculator instance.
     */
    protected function getOroImportexport_DataConverter_TemplateFixture_RelationCalculatorService()
    {
        return $this->services['oro_importexport.data_converter.template_fixture.relation_calculator'] = new \Oro\Bundle\ImportExportBundle\Converter\TemplateFixtureRelationCalculator($this->get('oro_importexport.template_fixture.manager'), $this->get('oro_importexport.field.field_helper'));
    }

    /**
     * Gets the 'oro_importexport.field.database_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\ImportExportBundle\Field\DatabaseHelper A Oro\Bundle\ImportExportBundle\Field\DatabaseHelper instance.
     */
    public function getOroImportexport_Field_DatabaseHelperService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_importexport.field.database_helper'] = new OroBundleImportExportBundleFieldDatabaseHelper_000000002e47effd00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroImportexport_Field_DatabaseHelperService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\ImportExportBundle\Field\DatabaseHelper($this->get('doctrine'), $this->get('oro_entity.doctrine_helper'), new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_importexport.field.field_helper', false), $this->get('oro_security.security_facade.link'), $this->get('oro_security.owner.ownership_metadata_provider.link'));
    }

    /**
     * Gets the 'oro_importexport.field.field_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Field\FieldHelper A Oro\Bundle\ImportExportBundle\Field\FieldHelper instance.
     */
    protected function getOroImportexport_Field_FieldHelperService()
    {
        return $this->services['oro_importexport.field.field_helper'] = new \Oro\Bundle\ImportExportBundle\Field\FieldHelper($this->get('oro_entity.entity_field_provider'), $this->get('oro_entity_config.provider.importexport'), $this->get('oro_entity_extend.extend.field_type_helper'));
    }

    /**
     * Gets the 'oro_importexport.file.file_system_operator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\File\FileSystemOperator A Oro\Bundle\ImportExportBundle\File\FileSystemOperator instance.
     */
    protected function getOroImportexport_File_FileSystemOperatorService()
    {
        return $this->services['oro_importexport.file.file_system_operator'] = new \Oro\Bundle\ImportExportBundle\File\FileSystemOperator('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev', 'import_export');
    }

    /**
     * Gets the 'oro_importexport.file.mime_type_guesser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\MimeType\MimeTypeGuesser A Oro\Bundle\ImportExportBundle\MimeType\MimeTypeGuesser instance.
     */
    protected function getOroImportexport_File_MimeTypeGuesserService()
    {
        return $this->services['oro_importexport.file.mime_type_guesser'] = new \Oro\Bundle\ImportExportBundle\MimeType\MimeTypeGuesser();
    }

    /**
     * Gets the 'oro_importexport.form.type.import' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Form\Type\ImportType A Oro\Bundle\ImportExportBundle\Form\Type\ImportType instance.
     */
    protected function getOroImportexport_Form_Type_ImportService()
    {
        return $this->services['oro_importexport.form.type.import'] = new \Oro\Bundle\ImportExportBundle\Form\Type\ImportType($this->get('oro_importexport.processor.registry'));
    }

    /**
     * Gets the 'oro_importexport.handler.abstract' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Handler\AbstractHandler A Oro\Bundle\ImportExportBundle\Handler\AbstractHandler instance.
     */
    protected function getOroImportexport_Handler_AbstractService()
    {
        return $this->services['oro_importexport.handler.abstract'] = new \Oro\Bundle\ImportExportBundle\Handler\AbstractHandler($this->get('oro_importexport.job_executor'), $this->get('oro_importexport.processor.registry'), $this->get('oro_importexport.file.file_system_operator'));
    }

    /**
     * Gets the 'oro_importexport.handler.export' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\ImportExportBundle\Handler\ExportHandler A Oro\Bundle\ImportExportBundle\Handler\ExportHandler instance.
     */
    public function getOroImportexport_Handler_ExportService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_importexport.handler.export'] = new OroBundleImportExportBundleHandlerExportHandler_000000002e47d26100000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroImportexport_Handler_ExportService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\ImportExportBundle\Handler\ExportHandler($this->get('oro_importexport.job_executor'), $this->get('oro_importexport.processor.registry'), $this->get('oro_importexport.file.file_system_operator'));

        $instance->setMimeTypeGuesser($this->get('oro_importexport.file.mime_type_guesser'));
        $instance->setRouter($this->get('router'));

        return $instance;
    }

    /**
     * Gets the 'oro_importexport.handler.import.abstract' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Handler\AbstractImportHandler A Oro\Bundle\ImportExportBundle\Handler\AbstractImportHandler instance.
     */
    protected function getOroImportexport_Handler_Import_AbstractService()
    {
        $this->services['oro_importexport.handler.import.abstract'] = $instance = new \Oro\Bundle\ImportExportBundle\Handler\AbstractImportHandler($this->get('oro_importexport.job_executor'), $this->get('oro_importexport.processor.registry'), $this->get('oro_importexport.file.file_system_operator'));

        $instance->setTranslator($this->get('translator'));

        return $instance;
    }

    /**
     * Gets the 'oro_importexport.handler.import.cli' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\ImportExportBundle\Handler\CliImportHandler A Oro\Bundle\ImportExportBundle\Handler\CliImportHandler instance.
     */
    public function getOroImportexport_Handler_Import_CliService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_importexport.handler.import.cli'] = new OroBundleImportExportBundleHandlerCliImportHandler_000000002e47d26e00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroImportexport_Handler_Import_CliService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\ImportExportBundle\Handler\CliImportHandler($this->get('oro_importexport.job_executor'), $this->get('oro_importexport.processor.registry'), $this->get('oro_importexport.file.file_system_operator'));

        $instance->setTranslator($this->get('translator'));

        return $instance;
    }

    /**
     * Gets the 'oro_importexport.handler.import.http' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\ImportExportBundle\Handler\HttpImportHandler A Oro\Bundle\ImportExportBundle\Handler\HttpImportHandler instance.
     */
    public function getOroImportexport_Handler_Import_HttpService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_importexport.handler.import.http'] = new OroBundleImportExportBundleHandlerHttpImportHandler_000000002e47d26000000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroImportexport_Handler_Import_HttpService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\ImportExportBundle\Handler\HttpImportHandler($this->get('oro_importexport.job_executor'), $this->get('oro_importexport.processor.registry'), $this->get('oro_importexport.file.file_system_operator'));

        $instance->setTranslator($this->get('translator'));
        $instance->setSession($this->get('session'));
        $instance->setRouter($this->get('router'));

        return $instance;
    }

    /**
     * Gets the 'oro_importexport.job_executor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\ImportExportBundle\Job\JobExecutor A Oro\Bundle\ImportExportBundle\Job\JobExecutor instance.
     */
    public function getOroImportexport_JobExecutorService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_importexport.job_executor'] = new OroBundleImportExportBundleJobJobExecutor_000000002e47ef9800000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroImportexport_JobExecutorService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\ImportExportBundle\Job\JobExecutor($this->get('akeneo_batch.connectors'), $this->get('akeneo_batch.job_repository'), $this->get('oro_importexport.context_registry'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_importexport.processor.export_delegate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Processor\RegistryDelegateProcessor A Oro\Bundle\ImportExportBundle\Processor\RegistryDelegateProcessor instance.
     */
    protected function getOroImportexport_Processor_ExportDelegateService()
    {
        return $this->services['oro_importexport.processor.export_delegate'] = new \Oro\Bundle\ImportExportBundle\Processor\RegistryDelegateProcessor($this->get('oro_importexport.processor.registry'), 'export', $this->get('oro_importexport.context_registry'));
    }

    /**
     * Gets the 'oro_importexport.processor.export_template_delegate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Processor\RegistryDelegateProcessor A Oro\Bundle\ImportExportBundle\Processor\RegistryDelegateProcessor instance.
     */
    protected function getOroImportexport_Processor_ExportTemplateDelegateService()
    {
        return $this->services['oro_importexport.processor.export_template_delegate'] = new \Oro\Bundle\ImportExportBundle\Processor\RegistryDelegateProcessor($this->get('oro_importexport.processor.registry'), 'export_template', $this->get('oro_importexport.context_registry'));
    }

    /**
     * Gets the 'oro_importexport.processor.import_delegate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Processor\RegistryDelegateProcessor A Oro\Bundle\ImportExportBundle\Processor\RegistryDelegateProcessor instance.
     */
    protected function getOroImportexport_Processor_ImportDelegateService()
    {
        return $this->services['oro_importexport.processor.import_delegate'] = new \Oro\Bundle\ImportExportBundle\Processor\RegistryDelegateProcessor($this->get('oro_importexport.processor.registry'), 'import', $this->get('oro_importexport.context_registry'));
    }

    /**
     * Gets the 'oro_importexport.processor.import_validation_delegate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Processor\RegistryDelegateProcessor A Oro\Bundle\ImportExportBundle\Processor\RegistryDelegateProcessor instance.
     */
    protected function getOroImportexport_Processor_ImportValidationDelegateService()
    {
        return $this->services['oro_importexport.processor.import_validation_delegate'] = new \Oro\Bundle\ImportExportBundle\Processor\RegistryDelegateProcessor($this->get('oro_importexport.processor.registry'), 'import_validation', $this->get('oro_importexport.context_registry'));
    }

    /**
     * Gets the 'oro_importexport.processor.registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Processor\ProcessorRegistry A Oro\Bundle\ImportExportBundle\Processor\ProcessorRegistry instance.
     */
    protected function getOroImportexport_Processor_RegistryService()
    {
        $this->services['oro_importexport.processor.registry'] = $instance = new \Oro\Bundle\ImportExportBundle\Processor\ProcessorRegistry();

        $instance->registerProcessor($this->get('oro_user.importexport.processor.export'), 'export', 'Oro\\Bundle\\UserBundle\\Entity\\User', 'oro_user');
        $instance->registerProcessor($this->get('oro_user.importexport.processor.export_template'), 'export_template', 'Oro\\Bundle\\UserBundle\\Entity\\User', 'oro_user');
        $instance->registerProcessor($this->get('oro_datagrid.importexport.processor.export'), 'export', 'datagrid', 'oro_datagrid');
        $instance->registerProcessor($this->get('oro_tracking.importexport.processor.import.data'), 'import', 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingData', 'oro_tracking.processor.data');

        return $instance;
    }

    /**
     * Gets the 'oro_importexport.reader.csv' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Reader\CsvFileReader A Oro\Bundle\ImportExportBundle\Reader\CsvFileReader instance.
     */
    protected function getOroImportexport_Reader_CsvService()
    {
        return $this->services['oro_importexport.reader.csv'] = new \Oro\Bundle\ImportExportBundle\Reader\CsvFileReader($this->get('oro_importexport.context_registry'));
    }

    /**
     * Gets the 'oro_importexport.reader.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Reader\EntityReader A Oro\Bundle\ImportExportBundle\Reader\EntityReader instance.
     */
    protected function getOroImportexport_Reader_EntityService()
    {
        return $this->services['oro_importexport.reader.entity'] = new \Oro\Bundle\ImportExportBundle\Reader\EntityReader($this->get('oro_importexport.context_registry'), $this->get('doctrine'), $this->get('oro_security.owner.ownership_metadata_provider'));
    }

    /**
     * Gets the 'oro_importexport.reader.template_fixture' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Reader\TemplateFixtureReader A Oro\Bundle\ImportExportBundle\Reader\TemplateFixtureReader instance.
     */
    protected function getOroImportexport_Reader_TemplateFixtureService()
    {
        return $this->services['oro_importexport.reader.template_fixture'] = new \Oro\Bundle\ImportExportBundle\Reader\TemplateFixtureReader($this->get('oro_importexport.context_registry'), $this->get('oro_importexport.template_fixture.manager'));
    }

    /**
     * Gets the 'oro_importexport.serializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Serializer\Serializer A Oro\Bundle\ImportExportBundle\Serializer\Serializer instance.
     */
    protected function getOroImportexport_SerializerService()
    {
        return $this->services['oro_importexport.serializer'] = new \Oro\Bundle\ImportExportBundle\Serializer\Serializer(array(0 => $this->get('oro_entity_extend.importexport.normalizer.enum'), 1 => $this->get('oro_tracking.importexport.normalizer.data'), 2 => $this->get('oro_attachment.serializer.file_normalizer'), 3 => $this->get('oro_form.importexport.primary_item_collection_normalizer'), 4 => $this->get('oro_importexport.serializer.datetime_normalizer'), 5 => $this->get('oro_importexport.serializer.collection_normalizer'), 6 => $this->get('oro_importexport.serializer.configurable_entity_normalizer')), array(0 => $this->get('oro_importexport.serializer.dummy_encoder')));
    }

    /**
     * Gets the 'oro_importexport.serializer.collection_normalizer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Serializer\Normalizer\CollectionNormalizer A Oro\Bundle\ImportExportBundle\Serializer\Normalizer\CollectionNormalizer instance.
     */
    protected function getOroImportexport_Serializer_CollectionNormalizerService()
    {
        return $this->services['oro_importexport.serializer.collection_normalizer'] = new \Oro\Bundle\ImportExportBundle\Serializer\Normalizer\CollectionNormalizer();
    }

    /**
     * Gets the 'oro_importexport.serializer.configurable_entity_normalizer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Serializer\Normalizer\ConfigurableEntityNormalizer A Oro\Bundle\ImportExportBundle\Serializer\Normalizer\ConfigurableEntityNormalizer instance.
     */
    protected function getOroImportexport_Serializer_ConfigurableEntityNormalizerService()
    {
        return $this->services['oro_importexport.serializer.configurable_entity_normalizer'] = new \Oro\Bundle\ImportExportBundle\Serializer\Normalizer\ConfigurableEntityNormalizer($this->get('oro_importexport.field.field_helper'));
    }

    /**
     * Gets the 'oro_importexport.serializer.datetime_normalizer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Serializer\Normalizer\DateTimeNormalizer A Oro\Bundle\ImportExportBundle\Serializer\Normalizer\DateTimeNormalizer instance.
     */
    protected function getOroImportexport_Serializer_DatetimeNormalizerService()
    {
        return $this->services['oro_importexport.serializer.datetime_normalizer'] = new \Oro\Bundle\ImportExportBundle\Serializer\Normalizer\DateTimeNormalizer();
    }

    /**
     * Gets the 'oro_importexport.serializer.dummy_encoder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Serializer\Encoder\DummyEncoder A Oro\Bundle\ImportExportBundle\Serializer\Encoder\DummyEncoder instance.
     */
    protected function getOroImportexport_Serializer_DummyEncoderService()
    {
        return $this->services['oro_importexport.serializer.dummy_encoder'] = new \Oro\Bundle\ImportExportBundle\Serializer\Encoder\DummyEncoder();
    }

    /**
     * Gets the 'oro_importexport.strategy.import.helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Strategy\Import\ImportStrategyHelper A Oro\Bundle\ImportExportBundle\Strategy\Import\ImportStrategyHelper instance.
     */
    protected function getOroImportexport_Strategy_Import_HelperService()
    {
        return $this->services['oro_importexport.strategy.import.helper'] = new \Oro\Bundle\ImportExportBundle\Strategy\Import\ImportStrategyHelper($this->get('doctrine'), $this->get('validator'), $this->get('translator'), $this->get('oro_importexport.field.field_helper'));
    }

    /**
     * Gets the 'oro_importexport.template_fixture.entity_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\TemplateFixture\TemplateEntityRegistry A Oro\Bundle\ImportExportBundle\TemplateFixture\TemplateEntityRegistry instance.
     */
    protected function getOroImportexport_TemplateFixture_EntityRegistryService()
    {
        return $this->services['oro_importexport.template_fixture.entity_registry'] = new \Oro\Bundle\ImportExportBundle\TemplateFixture\TemplateEntityRegistry();
    }

    /**
     * Gets the 'oro_importexport.template_fixture.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\TemplateFixture\TemplateManager A Oro\Bundle\ImportExportBundle\TemplateFixture\TemplateManager instance.
     */
    protected function getOroImportexport_TemplateFixture_ManagerService()
    {
        $this->services['oro_importexport.template_fixture.manager'] = $instance = new \Oro\Bundle\ImportExportBundle\TemplateFixture\TemplateManager($this->get('oro_importexport.template_fixture.entity_registry'));

        $instance->addEntityRepository($this->get('oro_organization.importexport.template_fixture.business_unit'));
        $instance->addEntityRepository($this->get('oro_organization.importexport.template_fixture.organization'));
        $instance->addEntityRepository($this->get('oro_user.importexport.template_fixture.user'));
        $instance->addEntityRepository($this->get('oro_address.importexport.template_fixture.country'));
        $instance->addEntityRepository($this->get('oro_address.importexport.template_fixture.region'));
        $instance->addEntityRepository($this->get('oro_address.importexport.template_fixture.address'));
        $instance->addEntityRepository($this->get('oro_address.importexport.template_fixture.address_type'));

        return $instance;
    }

    /**
     * Gets the 'oro_importexport.writer.csv' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Writer\CsvFileWriter A Oro\Bundle\ImportExportBundle\Writer\CsvFileWriter instance.
     */
    protected function getOroImportexport_Writer_CsvService()
    {
        $this->services['oro_importexport.writer.csv'] = $instance = new \Oro\Bundle\ImportExportBundle\Writer\CsvFileWriter($this->get('oro_importexport.context_registry'));

        $instance->setClearWriter($this->get('oro_importexport.writer.doctrine_clear'));

        return $instance;
    }

    /**
     * Gets the 'oro_importexport.writer.doctrine_clear' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Writer\DoctrineClearWriter A Oro\Bundle\ImportExportBundle\Writer\DoctrineClearWriter instance.
     */
    protected function getOroImportexport_Writer_DoctrineClearService()
    {
        return $this->services['oro_importexport.writer.doctrine_clear'] = new \Oro\Bundle\ImportExportBundle\Writer\DoctrineClearWriter($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_importexport.writer.dummy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Writer\DummyWriter A Oro\Bundle\ImportExportBundle\Writer\DummyWriter instance.
     */
    protected function getOroImportexport_Writer_DummyService()
    {
        return $this->services['oro_importexport.writer.dummy'] = new \Oro\Bundle\ImportExportBundle\Writer\DummyWriter($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_importexport.writer.echo.csv' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Writer\CsvEchoWriter A Oro\Bundle\ImportExportBundle\Writer\CsvEchoWriter instance.
     */
    protected function getOroImportexport_Writer_Echo_CsvService()
    {
        return $this->services['oro_importexport.writer.echo.csv'] = new \Oro\Bundle\ImportExportBundle\Writer\CsvEchoWriter();
    }

    /**
     * Gets the 'oro_importexport.writer.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Writer\EntityWriter A Oro\Bundle\ImportExportBundle\Writer\EntityWriter instance.
     */
    protected function getOroImportexport_Writer_EntityService()
    {
        return $this->services['oro_importexport.writer.entity'] = new \Oro\Bundle\ImportExportBundle\Writer\EntityWriter($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_importexport.writer.entity_detach_fixer'), $this->get('oro_importexport.context_registry'));
    }

    /**
     * Gets the 'oro_importexport.writer.entity_detach_fixer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Writer\EntityDetachFixer A Oro\Bundle\ImportExportBundle\Writer\EntityDetachFixer instance.
     */
    protected function getOroImportexport_Writer_EntityDetachFixerService()
    {
        return $this->services['oro_importexport.writer.entity_detach_fixer'] = new \Oro\Bundle\ImportExportBundle\Writer\EntityDetachFixer($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_installer.form.type.configuration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\InstallerBundle\Form\Type\ConfigurationType A Oro\Bundle\InstallerBundle\Form\Type\ConfigurationType instance.
     */
    protected function getOroInstaller_Form_Type_ConfigurationService()
    {
        return $this->services['oro_installer.form.type.configuration'] = new \Oro\Bundle\InstallerBundle\Form\Type\ConfigurationType();
    }

    /**
     * Gets the 'oro_installer.form.type.configuration.database' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\InstallerBundle\Form\Type\Configuration\DatabaseType A Oro\Bundle\InstallerBundle\Form\Type\Configuration\DatabaseType instance.
     */
    protected function getOroInstaller_Form_Type_Configuration_DatabaseService()
    {
        return $this->services['oro_installer.form.type.configuration.database'] = new \Oro\Bundle\InstallerBundle\Form\Type\Configuration\DatabaseType();
    }

    /**
     * Gets the 'oro_installer.form.type.configuration.mailer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\InstallerBundle\Form\Type\Configuration\MailerType A Oro\Bundle\InstallerBundle\Form\Type\Configuration\MailerType instance.
     */
    protected function getOroInstaller_Form_Type_Configuration_MailerService()
    {
        return $this->services['oro_installer.form.type.configuration.mailer'] = new \Oro\Bundle\InstallerBundle\Form\Type\Configuration\MailerType();
    }

    /**
     * Gets the 'oro_installer.form.type.configuration.system' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\InstallerBundle\Form\Type\Configuration\SystemType A Oro\Bundle\InstallerBundle\Form\Type\Configuration\SystemType instance.
     */
    protected function getOroInstaller_Form_Type_Configuration_SystemService()
    {
        return $this->services['oro_installer.form.type.configuration.system'] = new \Oro\Bundle\InstallerBundle\Form\Type\Configuration\SystemType();
    }

    /**
     * Gets the 'oro_installer.form.type.configuration.websocket' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\InstallerBundle\Form\Type\Configuration\WebsocketType A Oro\Bundle\InstallerBundle\Form\Type\Configuration\WebsocketType instance.
     */
    protected function getOroInstaller_Form_Type_Configuration_WebsocketService()
    {
        return $this->services['oro_installer.form.type.configuration.websocket'] = new \Oro\Bundle\InstallerBundle\Form\Type\Configuration\WebsocketType();
    }

    /**
     * Gets the 'oro_installer.form.type.setup' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\InstallerBundle\Form\Type\SetupType A Oro\Bundle\InstallerBundle\Form\Type\SetupType instance.
     */
    protected function getOroInstaller_Form_Type_SetupService()
    {
        return $this->services['oro_installer.form.type.setup'] = new \Oro\Bundle\InstallerBundle\Form\Type\SetupType('Oro\\Bundle\\UserBundle\\Entity\\User');
    }

    /**
     * Gets the 'oro_installer.scenario' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\InstallerBundle\Process\InstallerScenario A Oro\Bundle\InstallerBundle\Process\InstallerScenario instance.
     */
    protected function getOroInstaller_ScenarioService()
    {
        $this->services['oro_installer.scenario'] = $instance = new \Oro\Bundle\InstallerBundle\Process\InstallerScenario();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'oro_installer.script_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\InstallerBundle\ScriptManager A Oro\Bundle\InstallerBundle\ScriptManager instance.
     */
    protected function getOroInstaller_ScriptManagerService()
    {
        return $this->services['oro_installer.script_manager'] = new \Oro\Bundle\InstallerBundle\ScriptManager($this->get('kernel'));
    }

    /**
     * Gets the 'oro_installer.yaml_persister' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\InstallerBundle\Persister\YamlPersister A Oro\Bundle\InstallerBundle\Persister\YamlPersister instance.
     */
    protected function getOroInstaller_YamlPersisterService()
    {
        return $this->services['oro_installer.yaml_persister'] = new \Oro\Bundle\InstallerBundle\Persister\YamlPersister('C:\\wamp\\www\\stockvalue~~\\app/config', 'dev');
    }

    /**
     * Gets the 'oro_integration.action.remove_fields_changes' service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Model\Action\RemoveFieldsChangesAction A Oro\Bundle\IntegrationBundle\Model\Action\RemoveFieldsChangesAction instance.
     */
    protected function getOroIntegration_Action_RemoveFieldsChangesService()
    {
        $instance = new \Oro\Bundle\IntegrationBundle\Model\Action\RemoveFieldsChangesAction($this->get('oro_workflow.context_accessor'));

        $instance->setFieldsChangesManager($this->get('oro_integration.manager.fields_changes'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_integration.action.save_fields_changes' service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Model\Action\SaveFieldsChangesAction A Oro\Bundle\IntegrationBundle\Model\Action\SaveFieldsChangesAction instance.
     */
    protected function getOroIntegration_Action_SaveFieldsChangesService()
    {
        $instance = new \Oro\Bundle\IntegrationBundle\Model\Action\SaveFieldsChangesAction($this->get('oro_workflow.context_accessor'));

        $instance->setFieldsChangesManager($this->get('oro_integration.manager.fields_changes'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_integration.action.schedule_sync' service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Datagrid\ScheduleSyncAction A Oro\Bundle\IntegrationBundle\Datagrid\ScheduleSyncAction instance.
     */
    protected function getOroIntegration_Action_ScheduleSyncService()
    {
        return new \Oro\Bundle\IntegrationBundle\Datagrid\ScheduleSyncAction();
    }

    /**
     * Gets the 'oro_integration.config_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\Config\Resolver\SystemAwareResolver A Oro\Component\Config\Resolver\SystemAwareResolver instance.
     */
    protected function getOroIntegration_ConfigResolverService()
    {
        return $this->services['oro_integration.config_resolver'] = new \Oro\Component\Config\Resolver\SystemAwareResolver($this);
    }

    /**
     * Gets the 'oro_integration.datagrid.status_grid_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Datagrid\StatusGridHelper A Oro\Bundle\IntegrationBundle\Datagrid\StatusGridHelper instance.
     */
    protected function getOroIntegration_Datagrid_StatusGridHelperService()
    {
        return $this->services['oro_integration.datagrid.status_grid_helper'] = new \Oro\Bundle\IntegrationBundle\Datagrid\StatusGridHelper($this->get('oro_integration.manager.types_registry'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_integration.delete_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Manager\DeleteManager A Oro\Bundle\IntegrationBundle\Manager\DeleteManager instance.
     */
    protected function getOroIntegration_DeleteManagerService()
    {
        return $this->services['oro_integration.delete_manager'] = new \Oro\Bundle\IntegrationBundle\Manager\DeleteManager($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_integration.event_listener.keep_avile' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\EventListener\KeepAliveListener A Oro\Bundle\IntegrationBundle\EventListener\KeepAliveListener instance.
     */
    protected function getOroIntegration_EventListener_KeepAvileService()
    {
        return $this->services['oro_integration.event_listener.keep_avile'] = new \Oro\Bundle\IntegrationBundle\EventListener\KeepAliveListener($this->get('akeneo_batch.job_repository'));
    }

    /**
     * Gets the 'oro_integration.form.channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroIntegration_Form_ChannelService()
    {
        return $this->services['oro_integration.form.channel'] = $this->get('form.factory')->createNamed('oro_integration_channel_form', 'oro_integration_channel_form', NULL);
    }

    /**
     * Gets the 'oro_integration.form.handler.integration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Form\Handler\ChannelHandler A Oro\Bundle\IntegrationBundle\Form\Handler\ChannelHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_integration.form.handler.integration' service is requested while the 'request' scope is not active
     */
    protected function getOroIntegration_Form_Handler_IntegrationService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_integration.form.handler.integration', 'request');
        }

        return $this->services['oro_integration.form.handler.integration'] = $this->scopedServices['request']['oro_integration.form.handler.integration'] = new \Oro\Bundle\IntegrationBundle\Form\Handler\ChannelHandler($this->get('request'), $this->get('oro_integration.form.channel'), $this->get('doctrine.orm.default_entity_manager'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_integration.form.subscriber.channel_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Form\EventListener\ChannelFormSubscriber A Oro\Bundle\IntegrationBundle\Form\EventListener\ChannelFormSubscriber instance.
     */
    protected function getOroIntegration_Form_Subscriber_ChannelSubscriberService()
    {
        return $this->services['oro_integration.form.subscriber.channel_subscriber'] = new \Oro\Bundle\IntegrationBundle\Form\EventListener\ChannelFormSubscriber($this->get('oro_integration.manager.types_registry'), $this->get('oro_integration.provider.settings_provider'));
    }

    /**
     * Gets the 'oro_integration.form.subscriber.default_owner_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Form\EventListener\DefaultOwnerSubscriber A Oro\Bundle\IntegrationBundle\Form\EventListener\DefaultOwnerSubscriber instance.
     */
    protected function getOroIntegration_Form_Subscriber_DefaultOwnerSubscriberService()
    {
        return $this->services['oro_integration.form.subscriber.default_owner_subscriber'] = new \Oro\Bundle\IntegrationBundle\Form\EventListener\DefaultOwnerSubscriber($this->get('oro_security.security_facade'), $this->get('oro_integration.manager.types_registry'));
    }

    /**
     * Gets the 'oro_integration.form.type.channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Form\Type\ChannelType A Oro\Bundle\IntegrationBundle\Form\Type\ChannelType instance.
     */
    protected function getOroIntegration_Form_Type_ChannelService()
    {
        return $this->services['oro_integration.form.type.channel'] = new \Oro\Bundle\IntegrationBundle\Form\Type\ChannelType($this->get('oro_integration.form.subscriber.default_owner_subscriber'), $this->get('oro_integration.form.subscriber.channel_subscriber'));
    }

    /**
     * Gets the 'oro_integration.form.type.oro_integration_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Form\Type\IntegrationSelectType A Oro\Bundle\IntegrationBundle\Form\Type\IntegrationSelectType instance.
     * 
     * @throws InactiveScopeException when the 'oro_integration.form.type.oro_integration_select' service is requested while the 'request' scope is not active
     */
    protected function getOroIntegration_Form_Type_OroIntegrationSelectService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_integration.form.type.oro_integration_select', 'request');
        }

        return $this->services['oro_integration.form.type.oro_integration_select'] = $this->scopedServices['request']['oro_integration.form.type.oro_integration_select'] = new \Oro\Bundle\IntegrationBundle\Form\Type\IntegrationSelectType($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_integration.manager.types_registry'), $this->get('assets.packages'), $this->get('oro_security.acl_helper'));
    }

    /**
     * Gets the 'oro_integration.form.type.oro_integration_type_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Form\Type\IntegrationTypeSelectType A Oro\Bundle\IntegrationBundle\Form\Type\IntegrationTypeSelectType instance.
     * 
     * @throws InactiveScopeException when the 'oro_integration.form.type.oro_integration_type_select' service is requested while the 'request' scope is not active
     */
    protected function getOroIntegration_Form_Type_OroIntegrationTypeSelectService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_integration.form.type.oro_integration_type_select', 'request');
        }

        return $this->services['oro_integration.form.type.oro_integration_type_select'] = $this->scopedServices['request']['oro_integration.form.type.oro_integration_type_select'] = new \Oro\Bundle\IntegrationBundle\Form\Type\IntegrationTypeSelectType($this->get('oro_integration.manager.types_registry'), $this->get('assets.packages'));
    }

    /**
     * Gets the 'oro_integration.helper.default_owner_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\ImportExport\Helper\DefaultOwnerHelper A Oro\Bundle\IntegrationBundle\ImportExport\Helper\DefaultOwnerHelper instance.
     */
    protected function getOroIntegration_Helper_DefaultOwnerHelperService()
    {
        return $this->services['oro_integration.helper.default_owner_helper'] = new \Oro\Bundle\IntegrationBundle\ImportExport\Helper\DefaultOwnerHelper($this->get('doctrine'), $this->get('oro_security.owner.ownership_metadata_provider'));
    }

    /**
     * Gets the 'oro_integration.job_executor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\IntegrationBundle\ImportExport\Job\Executor A Oro\Bundle\IntegrationBundle\ImportExport\Job\Executor instance.
     */
    public function getOroIntegration_JobExecutorService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_integration.job_executor'] = new OroBundleIntegrationBundleImportExportJobExecutor_000000002e47ff2d00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroIntegration_JobExecutorService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\IntegrationBundle\ImportExport\Job\Executor($this->get('akeneo_batch.connectors'), $this->get('akeneo_batch.job_repository'), $this->get('oro_importexport.context_registry'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_integration.logger.strategy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Logger\LoggerStrategy A Oro\Bundle\IntegrationBundle\Logger\LoggerStrategy instance.
     */
    protected function getOroIntegration_Logger_StrategyService()
    {
        return $this->services['oro_integration.logger.strategy'] = new \Oro\Bundle\IntegrationBundle\Logger\LoggerStrategy();
    }

    /**
     * Gets the 'oro_integration.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroIntegration_Manager_ApiService()
    {
        $this->services['oro_integration.manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\IntegrationBundle\\Entity\\Channel', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_integration.manager.fields_changes' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Manager\FieldsChangesManager A Oro\Bundle\IntegrationBundle\Manager\FieldsChangesManager instance.
     */
    protected function getOroIntegration_Manager_FieldsChangesService()
    {
        return $this->services['oro_integration.manager.fields_changes'] = new \Oro\Bundle\IntegrationBundle\Manager\FieldsChangesManager($this->get('oro_entity.doctrine_helper'), 'Oro\\Bundle\\IntegrationBundle\\Entity\\FieldsChanges');
    }

    /**
     * Gets the 'oro_integration.manager.types_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Manager\TypesRegistry A Oro\Bundle\IntegrationBundle\Manager\TypesRegistry instance.
     */
    protected function getOroIntegration_Manager_TypesRegistryService()
    {
        return $this->services['oro_integration.manager.types_registry'] = new \Oro\Bundle\IntegrationBundle\Manager\TypesRegistry(array());
    }

    /**
     * Gets the 'oro_integration.processor_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Provider\SyncProcessorRegistry A Oro\Bundle\IntegrationBundle\Provider\SyncProcessorRegistry instance.
     */
    protected function getOroIntegration_ProcessorRegistryService()
    {
        $this->services['oro_integration.processor_registry'] = $instance = new \Oro\Bundle\IntegrationBundle\Provider\SyncProcessorRegistry();

        $instance->setDefaultProcessor($this->get('oro_integration.sync.processor'));

        return $instance;
    }

    /**
     * Gets the 'oro_integration.provider.connector_context_mediator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Provider\ConnectorContextMediator A Oro\Bundle\IntegrationBundle\Provider\ConnectorContextMediator instance.
     */
    protected function getOroIntegration_Provider_ConnectorContextMediatorService()
    {
        return $this->services['oro_integration.provider.connector_context_mediator'] = new \Oro\Bundle\IntegrationBundle\Provider\ConnectorContextMediator(new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_integration.manager.types_registry', false), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_integration.provider.settings_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Provider\SettingsProvider A Oro\Bundle\IntegrationBundle\Provider\SettingsProvider instance.
     */
    protected function getOroIntegration_Provider_SettingsProviderService()
    {
        return $this->services['oro_integration.provider.settings_provider'] = new \Oro\Bundle\IntegrationBundle\Provider\SettingsProvider(array('form' => array('synchronization_settings' => array('isTwoWaySyncEnabled' => array('type' => 'checkbox', 'options' => array('label' => 'oro.integration.integration.is_two_way_sync_enabled.label', 'required' => false), 'applicable' => array(0 => '@oro_integration.utils.form_utils->hasTwoWaySyncConnectors($channelType$)')), 'syncPriority' => array('type' => 'choice', 'options' => array('label' => 'oro.integration.integration.sync_priority.label', 'tooltip' => 'oro.integration.integration.sync_priority.tooltip', 'required' => true, 'choices' => array('remote' => 'oro.integration.integration.remote_wins.label', 'local' => 'oro.integration.integration.local_wins.label')), 'applicable' => array(0 => '@oro_integration.utils.form_utils->hasTwoWaySyncConnectors($channelType$)'))))), $this->get('oro_integration.config_resolver'));
    }

    /**
     * Gets the 'oro_integration.reader.entity.by_id' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Reader\EntityReaderById A Oro\Bundle\IntegrationBundle\Reader\EntityReaderById instance.
     */
    protected function getOroIntegration_Reader_Entity_ByIdService()
    {
        return $this->services['oro_integration.reader.entity.by_id'] = new \Oro\Bundle\IntegrationBundle\Reader\EntityReaderById($this->get('oro_importexport.context_registry'), $this->get('doctrine'), $this->get('oro_security.owner.ownership_metadata_provider'));
    }

    /**
     * Gets the 'oro_integration.reverse_sync.processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\IntegrationBundle\Provider\ReverseSyncProcessor A Oro\Bundle\IntegrationBundle\Provider\ReverseSyncProcessor instance.
     */
    public function getOroIntegration_ReverseSync_ProcessorService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_integration.reverse_sync.processor'] = new OroBundleIntegrationBundleProviderReverseSyncProcessor_000000002e47fee900000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroIntegration_ReverseSync_ProcessorService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\IntegrationBundle\Provider\ReverseSyncProcessor($this->get('oro_importexport.processor.registry'), $this->get('oro_integration.job_executor'), $this->get('oro_integration.manager.types_registry'), $this->get('debug.event_dispatcher'), $this->get('oro_integration.logger.strategy'));
    }

    /**
     * Gets the 'oro_integration.sync.processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\IntegrationBundle\Provider\SyncProcessor A Oro\Bundle\IntegrationBundle\Provider\SyncProcessor instance.
     */
    public function getOroIntegration_Sync_ProcessorService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_integration.sync.processor'] = new OroBundleIntegrationBundleProviderSyncProcessor_000000002e47ffa300000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroIntegration_Sync_ProcessorService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\IntegrationBundle\Provider\SyncProcessor($this->get('doctrine'), $this->get('oro_importexport.processor.registry'), $this->get('oro_integration.job_executor'), $this->get('oro_integration.manager.types_registry'), $this->get('debug.event_dispatcher'), $this->get('oro_integration.logger.strategy'));
    }

    /**
     * Gets the 'oro_integration.sync_scheduler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Manager\SyncScheduler A Oro\Bundle\IntegrationBundle\Manager\SyncScheduler instance.
     */
    protected function getOroIntegration_SyncSchedulerService()
    {
        return $this->services['oro_integration.sync_scheduler'] = new \Oro\Bundle\IntegrationBundle\Manager\SyncScheduler($this->get('doctrine'), $this->get('oro_integration.manager.types_registry'));
    }

    /**
     * Gets the 'oro_integration.transport.rest.guzzle.client_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Provider\Rest\Client\Guzzle\GuzzleRestClientFactory A Oro\Bundle\IntegrationBundle\Provider\Rest\Client\Guzzle\GuzzleRestClientFactory instance.
     */
    protected function getOroIntegration_Transport_Rest_Guzzle_ClientFactoryService()
    {
        return $this->services['oro_integration.transport.rest.guzzle.client_factory'] = new \Oro\Bundle\IntegrationBundle\Provider\Rest\Client\Guzzle\GuzzleRestClientFactory();
    }

    /**
     * Gets the 'oro_integration.twig.integration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Twig\IntegrationExtension A Oro\Bundle\IntegrationBundle\Twig\IntegrationExtension instance.
     */
    protected function getOroIntegration_Twig_IntegrationService()
    {
        return $this->services['oro_integration.twig.integration'] = new \Oro\Bundle\IntegrationBundle\Twig\IntegrationExtension($this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_integration.utils.form_utils' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Utils\FormUtils A Oro\Bundle\IntegrationBundle\Utils\FormUtils instance.
     */
    protected function getOroIntegration_Utils_FormUtilsService()
    {
        return $this->services['oro_integration.utils.form_utils'] = new \Oro\Bundle\IntegrationBundle\Utils\FormUtils($this->get('oro_integration.manager.types_registry'));
    }

    /**
     * Gets the 'oro_integration.workflow.action.populate_integration_owner' service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Model\Action\PopulateIntegrationOwner A Oro\Bundle\IntegrationBundle\Model\Action\PopulateIntegrationOwner instance.
     */
    protected function getOroIntegration_Workflow_Action_PopulateIntegrationOwnerService()
    {
        $instance = new \Oro\Bundle\IntegrationBundle\Model\Action\PopulateIntegrationOwner($this->get('oro_workflow.context_accessor'), $this->get('oro_integration.helper.default_owner_helper'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_integration.workflow.condition.has_active_integration' service.
     *
     * @return \Oro\Bundle\IntegrationBundle\Model\Condition\HasActiveIntegration A Oro\Bundle\IntegrationBundle\Model\Condition\HasActiveIntegration instance.
     */
    protected function getOroIntegration_Workflow_Condition_HasActiveIntegrationService()
    {
        return new \Oro\Bundle\IntegrationBundle\Model\Condition\HasActiveIntegration($this->get('doctrine'));
    }

    /**
     * Gets the 'oro_integration.writer.persistent_batch_writer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\IntegrationBundle\ImportExport\Writer\PersistentBatchWriter A Oro\Bundle\IntegrationBundle\ImportExport\Writer\PersistentBatchWriter instance.
     */
    protected function getOroIntegration_Writer_PersistentBatchWriterService()
    {
        return $this->services['oro_integration.writer.persistent_batch_writer'] = new \Oro\Bundle\IntegrationBundle\ImportExport\Writer\PersistentBatchWriter($this->get('doctrine'), $this->get('debug.event_dispatcher'), $this->get('oro_importexport.context_registry'), $this->get('oro_integration.logger.strategy'));
    }

    /**
     * Gets the 'oro_layout.block_type.base' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\Layout\Block\Type\BaseType A Oro\Component\Layout\Block\Type\BaseType instance.
     */
    protected function getOroLayout_BlockType_BaseService()
    {
        return $this->services['oro_layout.block_type.base'] = new \Oro\Component\Layout\Block\Type\BaseType();
    }

    /**
     * Gets the 'oro_layout.block_type.body' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\BodyType A Oro\Bundle\LayoutBundle\Layout\Block\Type\BodyType instance.
     */
    protected function getOroLayout_BlockType_BodyService()
    {
        return $this->services['oro_layout.block_type.body'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\BodyType();
    }

    /**
     * Gets the 'oro_layout.block_type.button' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\ButtonType A Oro\Bundle\LayoutBundle\Layout\Block\Type\ButtonType instance.
     */
    protected function getOroLayout_BlockType_ButtonService()
    {
        return $this->services['oro_layout.block_type.button'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\ButtonType();
    }

    /**
     * Gets the 'oro_layout.block_type.button_group' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\ButtonGroupType A Oro\Bundle\LayoutBundle\Layout\Block\Type\ButtonGroupType instance.
     */
    protected function getOroLayout_BlockType_ButtonGroupService()
    {
        return $this->services['oro_layout.block_type.button_group'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\ButtonGroupType();
    }

    /**
     * Gets the 'oro_layout.block_type.container' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\Layout\Block\Type\ContainerType A Oro\Component\Layout\Block\Type\ContainerType instance.
     */
    protected function getOroLayout_BlockType_ContainerService()
    {
        return $this->services['oro_layout.block_type.container'] = new \Oro\Component\Layout\Block\Type\ContainerType();
    }

    /**
     * Gets the 'oro_layout.block_type.fieldset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\FieldsetType A Oro\Bundle\LayoutBundle\Layout\Block\Type\FieldsetType instance.
     */
    protected function getOroLayout_BlockType_FieldsetService()
    {
        return $this->services['oro_layout.block_type.fieldset'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\FieldsetType();
    }

    /**
     * Gets the 'oro_layout.block_type.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\FormType A Oro\Bundle\LayoutBundle\Layout\Block\Type\FormType instance.
     */
    protected function getOroLayout_BlockType_FormService()
    {
        return $this->services['oro_layout.block_type.form'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\FormType($this->get('oro_layout.form_layout_builder'));
    }

    /**
     * Gets the 'oro_layout.block_type.form_end' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\FormEndType A Oro\Bundle\LayoutBundle\Layout\Block\Type\FormEndType instance.
     */
    protected function getOroLayout_BlockType_FormEndService()
    {
        return $this->services['oro_layout.block_type.form_end'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\FormEndType();
    }

    /**
     * Gets the 'oro_layout.block_type.form_field' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\FormFieldType A Oro\Bundle\LayoutBundle\Layout\Block\Type\FormFieldType instance.
     */
    protected function getOroLayout_BlockType_FormFieldService()
    {
        return $this->services['oro_layout.block_type.form_field'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\FormFieldType();
    }

    /**
     * Gets the 'oro_layout.block_type.form_start' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\FormStartType A Oro\Bundle\LayoutBundle\Layout\Block\Type\FormStartType instance.
     */
    protected function getOroLayout_BlockType_FormStartService()
    {
        return $this->services['oro_layout.block_type.form_start'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\FormStartType();
    }

    /**
     * Gets the 'oro_layout.block_type.head' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\HeadType A Oro\Bundle\LayoutBundle\Layout\Block\Type\HeadType instance.
     */
    protected function getOroLayout_BlockType_HeadService()
    {
        return $this->services['oro_layout.block_type.head'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\HeadType();
    }

    /**
     * Gets the 'oro_layout.block_type.link' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\LinkType A Oro\Bundle\LayoutBundle\Layout\Block\Type\LinkType instance.
     */
    protected function getOroLayout_BlockType_LinkService()
    {
        return $this->services['oro_layout.block_type.link'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\LinkType();
    }

    /**
     * Gets the 'oro_layout.block_type.list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\ListType A Oro\Bundle\LayoutBundle\Layout\Block\Type\ListType instance.
     */
    protected function getOroLayout_BlockType_ListService()
    {
        return $this->services['oro_layout.block_type.list'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\ListType();
    }

    /**
     * Gets the 'oro_layout.block_type.list_item' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\ListItemType A Oro\Bundle\LayoutBundle\Layout\Block\Type\ListItemType instance.
     */
    protected function getOroLayout_BlockType_ListItemService()
    {
        return $this->services['oro_layout.block_type.list_item'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\ListItemType();
    }

    /**
     * Gets the 'oro_layout.block_type.meta' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\MetaType A Oro\Bundle\LayoutBundle\Layout\Block\Type\MetaType instance.
     */
    protected function getOroLayout_BlockType_MetaService()
    {
        return $this->services['oro_layout.block_type.meta'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\MetaType();
    }

    /**
     * Gets the 'oro_layout.block_type.ordered_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\OrderedListType A Oro\Bundle\LayoutBundle\Layout\Block\Type\OrderedListType instance.
     */
    protected function getOroLayout_BlockType_OrderedListService()
    {
        return $this->services['oro_layout.block_type.ordered_list'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\OrderedListType();
    }

    /**
     * Gets the 'oro_layout.block_type.resource' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\ExternalResourceType A Oro\Bundle\LayoutBundle\Layout\Block\Type\ExternalResourceType instance.
     */
    protected function getOroLayout_BlockType_ResourceService()
    {
        return $this->services['oro_layout.block_type.resource'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\ExternalResourceType();
    }

    /**
     * Gets the 'oro_layout.block_type.root' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\RootType A Oro\Bundle\LayoutBundle\Layout\Block\Type\RootType instance.
     */
    protected function getOroLayout_BlockType_RootService()
    {
        return $this->services['oro_layout.block_type.root'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\RootType();
    }

    /**
     * Gets the 'oro_layout.block_type.script' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\ScriptType A Oro\Bundle\LayoutBundle\Layout\Block\Type\ScriptType instance.
     */
    protected function getOroLayout_BlockType_ScriptService()
    {
        return $this->services['oro_layout.block_type.script'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\ScriptType();
    }

    /**
     * Gets the 'oro_layout.block_type.style' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\StyleType A Oro\Bundle\LayoutBundle\Layout\Block\Type\StyleType instance.
     */
    protected function getOroLayout_BlockType_StyleService()
    {
        return $this->services['oro_layout.block_type.style'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\StyleType();
    }

    /**
     * Gets the 'oro_layout.block_type.text' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Type\TextType A Oro\Bundle\LayoutBundle\Layout\Block\Type\TextType instance.
     */
    protected function getOroLayout_BlockType_TextService()
    {
        return $this->services['oro_layout.block_type.text'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Type\TextType();
    }

    /**
     * Gets the 'oro_layout.block_type_extension.class_attribute' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Extension\ClassAttributeExtension A Oro\Bundle\LayoutBundle\Layout\Block\Extension\ClassAttributeExtension instance.
     */
    protected function getOroLayout_BlockTypeExtension_ClassAttributeService()
    {
        return $this->services['oro_layout.block_type_extension.class_attribute'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Extension\ClassAttributeExtension($this->get('oro_layout.expression.encoder_registry'));
    }

    /**
     * Gets the 'oro_layout.block_type_extension.config_expression' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Extension\ConfigExpressionExtension A Oro\Bundle\LayoutBundle\Layout\Block\Extension\ConfigExpressionExtension instance.
     */
    protected function getOroLayout_BlockTypeExtension_ConfigExpressionService()
    {
        return $this->services['oro_layout.block_type_extension.config_expression'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Extension\ConfigExpressionExtension($this->get('oro_layout.expression.assembler'), $this->get('oro_layout.expression.encoder_registry'));
    }

    /**
     * Gets the 'oro_layout.block_type_extension.visible' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Block\Extension\VisibleExtension A Oro\Bundle\LayoutBundle\Layout\Block\Extension\VisibleExtension instance.
     */
    protected function getOroLayout_BlockTypeExtension_VisibleService()
    {
        return $this->services['oro_layout.block_type_extension.visible'] = new \Oro\Bundle\LayoutBundle\Layout\Block\Extension\VisibleExtension();
    }

    /**
     * Gets the 'oro_layout.data_provider.theme' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\Layout\Extension\Theme\DataProvider\ThemeDataProvider A Oro\Component\Layout\Extension\Theme\DataProvider\ThemeDataProvider instance.
     */
    protected function getOroLayout_DataProvider_ThemeService()
    {
        return $this->services['oro_layout.data_provider.theme'] = new \Oro\Component\Layout\Extension\Theme\DataProvider\ThemeDataProvider($this->get('oro_layout.theme_manager'));
    }

    /**
     * Gets the 'oro_layout.expression.andx' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\Andx A Oro\Component\ConfigExpression\Condition\Andx instance.
     */
    protected function getOroLayout_Expression_AndxService()
    {
        return new \Oro\Component\ConfigExpression\Condition\Andx();
    }

    /**
     * Gets the 'oro_layout.expression.assembler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\ConfigExpression\ExpressionAssembler A Oro\Component\ConfigExpression\ExpressionAssembler instance.
     */
    protected function getOroLayout_Expression_AssemblerService()
    {
        $this->services['oro_layout.expression.assembler'] = $instance = new \Oro\Component\ConfigExpression\ExpressionAssembler($this->get('oro_layout.expression.factory'));

        $instance->addConfigurationPass(new \Oro\Component\ConfigExpression\ConfigurationPass\ReplacePropertyPath());

        return $instance;
    }

    /**
     * Gets the 'oro_layout.expression.blank' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\Blank A Oro\Component\ConfigExpression\Condition\Blank instance.
     */
    protected function getOroLayout_Expression_BlankService()
    {
        return new \Oro\Component\ConfigExpression\Condition\Blank();
    }

    /**
     * Gets the 'oro_layout.expression.encoder_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Encoder\ConfigExpressionEncoderRegistry A Oro\Bundle\LayoutBundle\Layout\Encoder\ConfigExpressionEncoderRegistry instance.
     */
    protected function getOroLayout_Expression_EncoderRegistryService()
    {
        return $this->services['oro_layout.expression.encoder_registry'] = new \Oro\Bundle\LayoutBundle\Layout\Encoder\ConfigExpressionEncoderRegistry($this, array('json' => 'oro_layout.expression.json_encoder'));
    }

    /**
     * Gets the 'oro_layout.expression.equal_to' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\EqualTo A Oro\Component\ConfigExpression\Condition\EqualTo instance.
     */
    protected function getOroLayout_Expression_EqualToService()
    {
        return new \Oro\Component\ConfigExpression\Condition\EqualTo();
    }

    /**
     * Gets the 'oro_layout.expression.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\ConfigExpression\ExpressionFactory A Oro\Component\ConfigExpression\ExpressionFactory instance.
     */
    protected function getOroLayout_Expression_FactoryService()
    {
        $this->services['oro_layout.expression.factory'] = $instance = new \Oro\Component\ConfigExpression\ExpressionFactory(new \Oro\Component\ConfigExpression\ContextAccessor());

        $instance->addExtension(new \Oro\Component\ConfigExpression\Extension\DependencyInjection\DependencyInjectionExtension($this, array('and' => 'oro_layout.expression.andx', 'or' => 'oro_layout.expression.orx', 'not' => 'oro_layout.expression.not', 'true' => 'oro_layout.expression.true', 'false' => 'oro_layout.expression.false', 'eq' => 'oro_layout.expression.equal_to', 'equal' => 'oro_layout.expression.equal_to', 'neq' => 'oro_layout.expression.not_equal_to', 'not_equal' => 'oro_layout.expression.not_equal_to', 'empty' => 'oro_layout.expression.blank', 'blank' => 'oro_layout.expression.blank', 'not_empty' => 'oro_layout.expression.not_blank', 'not_blank' => 'oro_layout.expression.not_blank', 'has' => 'oro_layout.expression.has_value', 'has_value' => 'oro_layout.expression.has_value', 'not_has' => 'oro_layout.expression.not_has_value', 'not_has_value' => 'oro_layout.expression.not_has_value', 'gt' => 'oro_layout.expression.greater_than', 'greater' => 'oro_layout.expression.greater_than', 'gte' => 'oro_layout.expression.greater_than_or_equal', 'ge' => 'oro_layout.expression.greater_than_or_equal', 'greater_or_equal' => 'oro_layout.expression.greater_than_or_equal', 'lt' => 'oro_layout.expression.less_than', 'less' => 'oro_layout.expression.less_than', 'lte' => 'oro_layout.expression.less_than_or_equal', 'le' => 'oro_layout.expression.less_than_or_equal', 'less_or_equal' => 'oro_layout.expression.less_than_or_equal', 'value' => 'oro_layout.expression.value', 'get' => 'oro_layout.expression.value', 'iif' => 'oro_layout.expression.iif', 'trim' => 'oro_layout.expression.trim', 'join' => 'oro_layout.expression.join', 'acl' => 'oro_security.layout_expression.acl_granted', 'acl_granted' => 'oro_security.layout_expression.acl_granted')));

        return $instance;
    }

    /**
     * Gets the 'oro_layout.expression.false' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\False A Oro\Component\ConfigExpression\Condition\False instance.
     */
    protected function getOroLayout_Expression_FalseService()
    {
        return new \Oro\Component\ConfigExpression\Condition\False();
    }

    /**
     * Gets the 'oro_layout.expression.greater_than' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\GreaterThan A Oro\Component\ConfigExpression\Condition\GreaterThan instance.
     */
    protected function getOroLayout_Expression_GreaterThanService()
    {
        return new \Oro\Component\ConfigExpression\Condition\GreaterThan();
    }

    /**
     * Gets the 'oro_layout.expression.greater_than_or_equal' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\GreaterThanOrEqual A Oro\Component\ConfigExpression\Condition\GreaterThanOrEqual instance.
     */
    protected function getOroLayout_Expression_GreaterThanOrEqualService()
    {
        return new \Oro\Component\ConfigExpression\Condition\GreaterThanOrEqual();
    }

    /**
     * Gets the 'oro_layout.expression.has_value' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\HasValue A Oro\Component\ConfigExpression\Condition\HasValue instance.
     */
    protected function getOroLayout_Expression_HasValueService()
    {
        return new \Oro\Component\ConfigExpression\Condition\HasValue();
    }

    /**
     * Gets the 'oro_layout.expression.iif' service.
     *
     * @return \Oro\Component\ConfigExpression\Func\Iif A Oro\Component\ConfigExpression\Func\Iif instance.
     */
    protected function getOroLayout_Expression_IifService()
    {
        return new \Oro\Component\ConfigExpression\Func\Iif();
    }

    /**
     * Gets the 'oro_layout.expression.join' service.
     *
     * @return \Oro\Component\ConfigExpression\Func\Join A Oro\Component\ConfigExpression\Func\Join instance.
     */
    protected function getOroLayout_Expression_JoinService()
    {
        return new \Oro\Component\ConfigExpression\Func\Join();
    }

    /**
     * Gets the 'oro_layout.expression.json_encoder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Encoder\JsonConfigExpressionEncoder A Oro\Bundle\LayoutBundle\Layout\Encoder\JsonConfigExpressionEncoder instance.
     */
    protected function getOroLayout_Expression_JsonEncoderService()
    {
        return $this->services['oro_layout.expression.json_encoder'] = new \Oro\Bundle\LayoutBundle\Layout\Encoder\JsonConfigExpressionEncoder();
    }

    /**
     * Gets the 'oro_layout.expression.less_than' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\LessThan A Oro\Component\ConfigExpression\Condition\LessThan instance.
     */
    protected function getOroLayout_Expression_LessThanService()
    {
        return new \Oro\Component\ConfigExpression\Condition\LessThan();
    }

    /**
     * Gets the 'oro_layout.expression.less_than_or_equal' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\LessThanOrEqual A Oro\Component\ConfigExpression\Condition\LessThanOrEqual instance.
     */
    protected function getOroLayout_Expression_LessThanOrEqualService()
    {
        return new \Oro\Component\ConfigExpression\Condition\LessThanOrEqual();
    }

    /**
     * Gets the 'oro_layout.expression.not' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\Not A Oro\Component\ConfigExpression\Condition\Not instance.
     */
    protected function getOroLayout_Expression_NotService()
    {
        return new \Oro\Component\ConfigExpression\Condition\Not();
    }

    /**
     * Gets the 'oro_layout.expression.not_blank' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\NotBlank A Oro\Component\ConfigExpression\Condition\NotBlank instance.
     */
    protected function getOroLayout_Expression_NotBlankService()
    {
        return new \Oro\Component\ConfigExpression\Condition\NotBlank();
    }

    /**
     * Gets the 'oro_layout.expression.not_equal_to' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\NotEqualTo A Oro\Component\ConfigExpression\Condition\NotEqualTo instance.
     */
    protected function getOroLayout_Expression_NotEqualToService()
    {
        return new \Oro\Component\ConfigExpression\Condition\NotEqualTo();
    }

    /**
     * Gets the 'oro_layout.expression.not_has_value' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\NotHasValue A Oro\Component\ConfigExpression\Condition\NotHasValue instance.
     */
    protected function getOroLayout_Expression_NotHasValueService()
    {
        return new \Oro\Component\ConfigExpression\Condition\NotHasValue();
    }

    /**
     * Gets the 'oro_layout.expression.orx' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\Orx A Oro\Component\ConfigExpression\Condition\Orx instance.
     */
    protected function getOroLayout_Expression_OrxService()
    {
        return new \Oro\Component\ConfigExpression\Condition\Orx();
    }

    /**
     * Gets the 'oro_layout.expression.trim' service.
     *
     * @return \Oro\Component\ConfigExpression\Func\Trim A Oro\Component\ConfigExpression\Func\Trim instance.
     */
    protected function getOroLayout_Expression_TrimService()
    {
        return new \Oro\Component\ConfigExpression\Func\Trim();
    }

    /**
     * Gets the 'oro_layout.expression.true' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\True A Oro\Component\ConfigExpression\Condition\True instance.
     */
    protected function getOroLayout_Expression_TrueService()
    {
        return new \Oro\Component\ConfigExpression\Condition\True();
    }

    /**
     * Gets the 'oro_layout.expression.value' service.
     *
     * @return \Oro\Component\ConfigExpression\Func\GetValue A Oro\Component\ConfigExpression\Func\GetValue instance.
     */
    protected function getOroLayout_Expression_ValueService()
    {
        return new \Oro\Component\ConfigExpression\Func\GetValue();
    }

    /**
     * Gets the 'oro_layout.form_layout_builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Form\GroupingFormLayoutBuilder A Oro\Bundle\LayoutBundle\Layout\Form\GroupingFormLayoutBuilder instance.
     */
    protected function getOroLayout_FormLayoutBuilderService()
    {
        $this->services['oro_layout.form_layout_builder'] = $instance = new \Oro\Bundle\LayoutBundle\Layout\Form\GroupingFormLayoutBuilder();

        $instance->addSimpleFormTypes(array(0 => 'choice', 1 => 'datetime', 2 => 'date', 3 => 'time'));

        return $instance;
    }

    /**
     * Gets the 'oro_layout.layout_context_configurator.action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Extension\ActionContextConfigurator A Oro\Bundle\LayoutBundle\Layout\Extension\ActionContextConfigurator instance.
     */
    protected function getOroLayout_LayoutContextConfigurator_ActionService()
    {
        return $this->services['oro_layout.layout_context_configurator.action'] = new \Oro\Bundle\LayoutBundle\Layout\Extension\ActionContextConfigurator();
    }

    /**
     * Gets the 'oro_layout.layout_context_configurator.application' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Extension\ApplicationContextConfigurator A Oro\Bundle\LayoutBundle\Layout\Extension\ApplicationContextConfigurator instance.
     */
    protected function getOroLayout_LayoutContextConfigurator_ApplicationService()
    {
        return $this->services['oro_layout.layout_context_configurator.application'] = new \Oro\Bundle\LayoutBundle\Layout\Extension\ApplicationContextConfigurator($this->get('kernel'));
    }

    /**
     * Gets the 'oro_layout.layout_context_configurator.config_expression' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Extension\ConfigExpressionContextConfigurator A Oro\Bundle\LayoutBundle\Layout\Extension\ConfigExpressionContextConfigurator instance.
     */
    protected function getOroLayout_LayoutContextConfigurator_ConfigExpressionService()
    {
        return $this->services['oro_layout.layout_context_configurator.config_expression'] = new \Oro\Bundle\LayoutBundle\Layout\Extension\ConfigExpressionContextConfigurator();
    }

    /**
     * Gets the 'oro_layout.layout_context_configurator.data' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Extension\DataContextConfigurator A Oro\Bundle\LayoutBundle\Layout\Extension\DataContextConfigurator instance.
     */
    protected function getOroLayout_LayoutContextConfigurator_DataService()
    {
        return $this->services['oro_layout.layout_context_configurator.data'] = new \Oro\Bundle\LayoutBundle\Layout\Extension\DataContextConfigurator();
    }

    /**
     * Gets the 'oro_layout.layout_context_configurator.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Extension\FormContextConfigurator A Oro\Bundle\LayoutBundle\Layout\Extension\FormContextConfigurator instance.
     */
    protected function getOroLayout_LayoutContextConfigurator_FormService()
    {
        return $this->services['oro_layout.layout_context_configurator.form'] = new \Oro\Bundle\LayoutBundle\Layout\Extension\FormContextConfigurator($this);
    }

    /**
     * Gets the 'oro_layout.layout_context_configurator.route' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Extension\RouteContextConfigurator A Oro\Bundle\LayoutBundle\Layout\Extension\RouteContextConfigurator instance.
     */
    protected function getOroLayout_LayoutContextConfigurator_RouteService()
    {
        $this->services['oro_layout.layout_context_configurator.route'] = $instance = new \Oro\Bundle\LayoutBundle\Layout\Extension\RouteContextConfigurator();

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_layout.layout_context_configurator.theme' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\Layout\Extension\ThemeContextConfigurator A Oro\Bundle\LayoutBundle\Layout\Extension\ThemeContextConfigurator instance.
     */
    protected function getOroLayout_LayoutContextConfigurator_ThemeService()
    {
        $this->services['oro_layout.layout_context_configurator.theme'] = $instance = new \Oro\Bundle\LayoutBundle\Layout\Extension\ThemeContextConfigurator();

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_layout.layout_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\Layout\LayoutManager A Oro\Component\Layout\LayoutManager instance.
     */
    protected function getOroLayout_LayoutManagerService()
    {
        $a = new \Oro\Component\Layout\LayoutFactoryBuilder();
        $a->addExtension(new \Oro\Component\Layout\Extension\DependencyInjection\DependencyInjectionExtension($this, array('block' => 'oro_layout.block_type.base', 'container' => 'oro_layout.block_type.container', 'root' => 'oro_layout.block_type.root', 'head' => 'oro_layout.block_type.head', 'meta' => 'oro_layout.block_type.meta', 'script' => 'oro_layout.block_type.script', 'style' => 'oro_layout.block_type.style', 'body' => 'oro_layout.block_type.body', 'form' => 'oro_layout.block_type.form', 'form_start' => 'oro_layout.block_type.form_start', 'form_end' => 'oro_layout.block_type.form_end', 'form_field' => 'oro_layout.block_type.form_field', 'fieldset' => 'oro_layout.block_type.fieldset', 'text' => 'oro_layout.block_type.text', 'link' => 'oro_layout.block_type.link', 'button' => 'oro_layout.block_type.button', 'button_group' => 'oro_layout.block_type.button_group', 'external_resource' => 'oro_layout.block_type.resource', 'list' => 'oro_layout.block_type.list', 'ordered_list' => 'oro_layout.block_type.ordered_list', 'list_item' => 'oro_layout.block_type.list_item', 'embed_form_success' => 'oro_embedded_form.layout.block_type.success_message', 'embed_form_legacy_form' => 'oro_embedded_form.layout.block_type.default_form'), array('block' => array(0 => 'oro_layout.block_type_extension.visible', 1 => 'oro_layout.block_type_extension.config_expression', 2 => 'oro_layout.block_type_extension.class_attribute')), array(), array(0 => 'oro_layout.layout_context_configurator.action', 1 => 'oro_layout.layout_context_configurator.data', 2 => 'oro_layout.layout_context_configurator.form', 3 => 'oro_layout.layout_context_configurator.route', 4 => 'oro_layout.layout_context_configurator.theme', 5 => 'oro_layout.layout_context_configurator.application', 6 => 'oro_layout.layout_context_configurator.config_expression'), array('theme' => 'oro_layout.data_provider.theme')));
        $a->addExtension($this->get('oro_layout.theme_extension'));
        $a->setDefaultRenderer('twig');
        $a->addRenderer('php', new \Oro\Component\Layout\LayoutRenderer($this->get('oro_layout.php.renderer')));
        $a->addRenderer('twig', new \Oro\Bundle\LayoutBundle\Layout\TwigLayoutRenderer($this->get('oro_layout.twig.renderer'), $this->get('twig')));

        return $this->services['oro_layout.layout_manager'] = new \Oro\Component\Layout\LayoutManager($a);
    }

    /**
     * Gets the 'oro_layout.php.templating.helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\Layout\Templating\Helper\LayoutHelper A Oro\Component\Layout\Templating\Helper\LayoutHelper instance.
     */
    protected function getOroLayout_Php_Templating_HelperService()
    {
        return $this->services['oro_layout.php.templating.helper'] = new \Oro\Component\Layout\Templating\Helper\LayoutHelper($this->get('oro_layout.php.renderer'), $this->get('oro_layout.text.helper'));
    }

    /**
     * Gets the 'oro_layout.request.listener.theme' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\EventListener\ThemeListener A Oro\Bundle\LayoutBundle\EventListener\ThemeListener instance.
     */
    protected function getOroLayout_Request_Listener_ThemeService()
    {
        return $this->services['oro_layout.request.listener.theme'] = new \Oro\Bundle\LayoutBundle\EventListener\ThemeListener(NULL);
    }

    /**
     * Gets the 'oro_layout.text.helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\Layout\Templating\TextHelper A Oro\Component\Layout\Templating\TextHelper instance.
     */
    protected function getOroLayout_Text_HelperService()
    {
        return $this->services['oro_layout.text.helper'] = new \Oro\Component\Layout\Templating\TextHelper($this->get('translator'));
    }

    /**
     * Gets the 'oro_layout.theme_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\Layout\Extension\Theme\ThemeExtension A Oro\Component\Layout\Extension\Theme\ThemeExtension instance.
     */
    protected function getOroLayout_ThemeExtensionService()
    {
        $a = new \Oro\Component\Layout\Extension\Theme\Model\DependencyInitializer($this);
        $a->addKnownDependency('\\Oro\\Component\\ConfigExpression\\ExpressionFactoryAwareInterface', 'setExpressionFactory', 'oro_layout.expression.factory');

        $b = new \Oro\Component\Layout\Extension\Theme\PathProvider\ChainPathProvider();
        $b->addProvider(new \Oro\Component\Layout\Extension\Theme\PathProvider\ThemePathProvider($this->get('oro_layout.theme_manager')), 0);

        return $this->services['oro_layout.theme_extension'] = new \Oro\Component\Layout\Extension\Theme\ThemeExtension(array('embedded_default' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle\\Resources\\views\\layouts\\embedded_default\\default.yml', 'oro_embedded_form_submit' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle\\Resources\\views\\layouts\\embedded_default\\oro_embedded_form_submit\\default.yml', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle\\Resources\\views\\layouts\\embedded_default\\oro_embedded_form_submit\\default_legacy.yml'), 'oro_embedded_form_success' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle\\Resources\\views\\layouts\\embedded_default\\oro_embedded_form_success\\default.yml'))), $this->get('oro_layout.loader'), $a, $b);
    }

    /**
     * Gets the 'oro_layout.view.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LayoutBundle\EventListener\LayoutListener A Oro\Bundle\LayoutBundle\EventListener\LayoutListener instance.
     */
    protected function getOroLayout_View_ListenerService()
    {
        return $this->services['oro_layout.view.listener'] = new \Oro\Bundle\LayoutBundle\EventListener\LayoutListener($this);
    }

    /**
     * Gets the 'oro_locale.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroLocale_CacheService()
    {
        $this->services['oro_locale.cache'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_locale.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_locale.calendar' service.
     *
     * @return \Oro\Bundle\LocaleBundle\Model\Calendar A Oro\Bundle\LocaleBundle\Model\Calendar instance.
     */
    protected function getOroLocale_CalendarService()
    {
        return new \Oro\Bundle\LocaleBundle\Model\Calendar();
    }

    /**
     * Gets the 'oro_locale.calendar_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Model\CalendarFactory A Oro\Bundle\LocaleBundle\Model\CalendarFactory instance.
     */
    protected function getOroLocale_CalendarFactoryService()
    {
        return $this->services['oro_locale.calendar_factory'] = new \Oro\Bundle\LocaleBundle\Model\CalendarFactory($this);
    }

    /**
     * Gets the 'oro_locale.dql.formatter.name' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\DQL\DQLNameFormatter A Oro\Bundle\LocaleBundle\DQL\DQLNameFormatter instance.
     */
    protected function getOroLocale_Dql_Formatter_NameService()
    {
        return $this->services['oro_locale.dql.formatter.name'] = new \Oro\Bundle\LocaleBundle\DQL\DQLNameFormatter($this->get('oro_locale.formatter.name'));
    }

    /**
     * Gets the 'oro_locale.form.type.country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Form\Type\CountryType A Oro\Bundle\LocaleBundle\Form\Type\CountryType instance.
     */
    protected function getOroLocale_Form_Type_CountryService()
    {
        return $this->services['oro_locale.form.type.country'] = new \Oro\Bundle\LocaleBundle\Form\Type\CountryType();
    }

    /**
     * Gets the 'oro_locale.form.type.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Form\Type\CurrencyType A Oro\Bundle\LocaleBundle\Form\Type\CurrencyType instance.
     */
    protected function getOroLocale_Form_Type_CurrencyService()
    {
        return $this->services['oro_locale.form.type.currency'] = new \Oro\Bundle\LocaleBundle\Form\Type\CurrencyType();
    }

    /**
     * Gets the 'oro_locale.form.type.language' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Form\Type\LanguageType A Oro\Bundle\LocaleBundle\Form\Type\LanguageType instance.
     */
    protected function getOroLocale_Form_Type_LanguageService()
    {
        return $this->services['oro_locale.form.type.language'] = new \Oro\Bundle\LocaleBundle\Form\Type\LanguageType($this->get('oro_config.global'));
    }

    /**
     * Gets the 'oro_locale.form.type.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Form\Type\LocaleType A Oro\Bundle\LocaleBundle\Form\Type\LocaleType instance.
     */
    protected function getOroLocale_Form_Type_LocaleService()
    {
        return $this->services['oro_locale.form.type.locale'] = new \Oro\Bundle\LocaleBundle\Form\Type\LocaleType();
    }

    /**
     * Gets the 'oro_locale.form.type.name_format' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Form\Type\NameFormatType A Oro\Bundle\LocaleBundle\Form\Type\NameFormatType instance.
     */
    protected function getOroLocale_Form_Type_NameFormatService()
    {
        return $this->services['oro_locale.form.type.name_format'] = new \Oro\Bundle\LocaleBundle\Form\Type\NameFormatType($this->get('oro_locale.formatter.name'));
    }

    /**
     * Gets the 'oro_locale.form.type.quarter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Form\Type\QuarterType A Oro\Bundle\LocaleBundle\Form\Type\QuarterType instance.
     */
    protected function getOroLocale_Form_Type_QuarterService()
    {
        return $this->services['oro_locale.form.type.quarter'] = new \Oro\Bundle\LocaleBundle\Form\Type\QuarterType();
    }

    /**
     * Gets the 'oro_locale.form.type.timezone' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Form\Type\TimezoneType A Oro\Bundle\LocaleBundle\Form\Type\TimezoneType instance.
     */
    protected function getOroLocale_Form_Type_TimezoneService()
    {
        return $this->services['oro_locale.form.type.timezone'] = new \Oro\Bundle\LocaleBundle\Form\Type\TimezoneType($this->get('oro_locale.cache'));
    }

    /**
     * Gets the 'oro_locale.format.datetime' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Formatter\DateTimeValueFormatter A Oro\Bundle\LocaleBundle\Formatter\DateTimeValueFormatter instance.
     */
    protected function getOroLocale_Format_DatetimeService()
    {
        return $this->services['oro_locale.format.datetime'] = new \Oro\Bundle\LocaleBundle\Formatter\DateTimeValueFormatter($this->get('oro_locale.formatter.date_time'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_locale.format_converter.date_time.intl' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Converter\IntlDateTimeFormatConverter A Oro\Bundle\LocaleBundle\Converter\IntlDateTimeFormatConverter instance.
     */
    protected function getOroLocale_FormatConverter_DateTime_IntlService()
    {
        return $this->services['oro_locale.format_converter.date_time.intl'] = new \Oro\Bundle\LocaleBundle\Converter\IntlDateTimeFormatConverter($this->get('oro_locale.formatter.date_time'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_locale.format_converter.date_time.moment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Converter\MomentDateTimeFormatConverter A Oro\Bundle\LocaleBundle\Converter\MomentDateTimeFormatConverter instance.
     */
    protected function getOroLocale_FormatConverter_DateTime_MomentService()
    {
        return $this->services['oro_locale.format_converter.date_time.moment'] = new \Oro\Bundle\LocaleBundle\Converter\MomentDateTimeFormatConverter($this->get('oro_locale.formatter.date_time'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_locale.format_converter.date_time.php' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Converter\PhpDateTimeFormatConverter A Oro\Bundle\LocaleBundle\Converter\PhpDateTimeFormatConverter instance.
     */
    protected function getOroLocale_FormatConverter_DateTime_PhpService()
    {
        return $this->services['oro_locale.format_converter.date_time.php'] = new \Oro\Bundle\LocaleBundle\Converter\PhpDateTimeFormatConverter($this->get('oro_locale.formatter.date_time'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_locale.format_converter.date_time.registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Converter\DateTimeFormatConverterRegistry A Oro\Bundle\LocaleBundle\Converter\DateTimeFormatConverterRegistry instance.
     */
    protected function getOroLocale_FormatConverter_DateTime_RegistryService()
    {
        $a = $this->get('oro_locale.formatter.date_time');
        $b = $this->get('translator');

        $this->services['oro_locale.format_converter.date_time.registry'] = $instance = new \Oro\Bundle\LocaleBundle\Converter\DateTimeFormatConverterRegistry();

        $instance->addFormatConverter('jquery_ui', new \Oro\Bundle\UIBundle\Converter\JqueryUiDateTimeFormatConverter($a, $b));
        $instance->addFormatConverter('intl', new \Oro\Bundle\LocaleBundle\Converter\IntlDateTimeFormatConverter($a, $b));
        $instance->addFormatConverter('moment', new \Oro\Bundle\LocaleBundle\Converter\MomentDateTimeFormatConverter($a, $b));
        $instance->addFormatConverter('php', new \Oro\Bundle\LocaleBundle\Converter\PhpDateTimeFormatConverter($a, $b));

        return $instance;
    }

    /**
     * Gets the 'oro_locale.formatter.address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Formatter\AddressFormatter A Oro\Bundle\LocaleBundle\Formatter\AddressFormatter instance.
     */
    protected function getOroLocale_Formatter_AddressService()
    {
        return $this->services['oro_locale.formatter.address'] = new \Oro\Bundle\LocaleBundle\Formatter\AddressFormatter($this->get('oro_locale.settings'), $this->get('oro_locale.formatter.name'));
    }

    /**
     * Gets the 'oro_locale.formatter.date_time' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Formatter\DateTimeFormatter A Oro\Bundle\LocaleBundle\Formatter\DateTimeFormatter instance.
     */
    protected function getOroLocale_Formatter_DateTimeService()
    {
        return $this->services['oro_locale.formatter.date_time'] = new \Oro\Bundle\LocaleBundle\Formatter\DateTimeFormatter($this->get('oro_locale.settings'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_locale.formatter.name' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Formatter\NameFormatter A Oro\Bundle\LocaleBundle\Formatter\NameFormatter instance.
     */
    protected function getOroLocale_Formatter_NameService()
    {
        return $this->services['oro_locale.formatter.name'] = new \Oro\Bundle\LocaleBundle\Formatter\NameFormatter($this->get('oro_locale.settings'));
    }

    /**
     * Gets the 'oro_locale.formatter.number' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Formatter\NumberFormatter A Oro\Bundle\LocaleBundle\Formatter\NumberFormatter instance.
     */
    protected function getOroLocale_Formatter_NumberService()
    {
        return $this->services['oro_locale.formatter.number'] = new \Oro\Bundle\LocaleBundle\Formatter\NumberFormatter($this->get('oro_locale.settings'));
    }

    /**
     * Gets the 'oro_locale.locale_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\EventListener\LocaleListener A Oro\Bundle\LocaleBundle\EventListener\LocaleListener instance.
     */
    protected function getOroLocale_LocaleListenerService()
    {
        return $this->services['oro_locale.locale_listener'] = new \Oro\Bundle\LocaleBundle\EventListener\LocaleListener($this->get('oro_locale.settings'), $this->get('stof_doctrine_extensions.listener.translatable'), '2015-10-03T18:37:32+02:00', $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'oro_locale.settings' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Model\LocaleSettings A Oro\Bundle\LocaleBundle\Model\LocaleSettings instance.
     */
    protected function getOroLocale_SettingsService()
    {
        $this->services['oro_locale.settings'] = $instance = new \Oro\Bundle\LocaleBundle\Model\LocaleSettings($this->get('oro_config.user'), $this->get('oro_locale.calendar_factory'));

        $instance->addNameFormats(array('en' => '%prefix% %first_name% %middle_name% %last_name% %suffix%', 'en_US' => '%prefix% %first_name% %middle_name% %last_name% %suffix%', 'ru' => '%last_name% %first_name% %middle_name%', 'ru_RU' => '%last_name% %first_name% %middle_name%'));
        $instance->addAddressFormats(array('AD' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %REGION%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'region'), 'region_name_type' => 'parish', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'AE' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'AG' => array('require' => array(0 => 'street'), 'format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'AM' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code%\\n%city%\\n%region%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%postal_code%\\n%city%\\n%region%\\n%country%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'AR' => array('format' => '%name%\\n%organization%\\n%STREET%\\n%POSTAL_CODE% %CITY%\\n%region%\\n%country%', 'region_name_type' => 'region', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'AT' => array('format' => '%organization%\\n%name%\\n%street%\\n%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'AU' => array('format' => '%organization%\\n%name%\\n%street%\\n%CITY% %REGION% %COUNTRY% %postal_code%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region', 3 => 'postal_code'), 'region_name_type' => 'region', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'AZ' => array('format' => '%name%\\n%organization%\\n%street%\\nAZ %postal_code% %city%\\n%country%', 'postprefix' => 'AZ ', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'BA' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'BB' => array('region_name_type' => 'parish', 'format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'BD' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% - %postal_code%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'BE' => array('format' => '%organization%\\n%name%\\n%street%\\n%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'BF' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'BG' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'BH' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'BL' => array('format' => '%organization%\\n%name%\\n%STREET%\\n%postal_code% %CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'BN' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'BR' => array('format' => '%organization%\\n%name%\\n%street%\\n%CITY%-%REGION%\\n%COUNTRY%\\n%postal_code%', 'require' => array(0 => 'street', 1 => 'region', 2 => 'city', 3 => 'postal_code'), 'region_name_type' => 'region', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'BS' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%, %region%\\n%country%', 'region_name_type' => 'island', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'BY' => array('format' => '%country%\\n%region%\\n%postal_code% %city% %street%\\n%organization%\\n%name%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'CA' => array('format' => '%NAME%\\n%ORGANIZATION%\\n%STREET%\\n%CITY% %REGION%, %COUNTRY% %POSTAL_CODE%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region', 3 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'CD' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'CH' => array('format' => '%organization%\\n%name%\\n%street%\\nCH-%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'postprefix' => 'CH-', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'CI' => array('format' => '%name%\\n%organization% %street% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'CL' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%region%\\n%country%', 'region_name_type' => 'region', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'CN' => array('format' => '%postal_code%\\n%COUNTRY%\\n%REGION%%city%\\n%street%\\n%organization%\\n%name%', 'latin_format' => '%name%\\n%organization%\\n%street%, %city%\\n%REGION%, %COUNTRY% %postal_code%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region', 3 => 'postal_code'), 'has_disputed' => true, 'format_charset' => 'GB2312', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL), 'CO' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%, %region%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'CR' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'CV' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%region%\\n%country%', 'region_name_type' => 'island', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'CY' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'CZ' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'DE' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'DK' => array('format' => '%organization%\\n%name%\\n%street%\\n%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'DO' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'DZ' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'EC' => array('format' => '%name%\\n%organization%\\n%street%\\n%POSTAL_CODE%\\n%CITY%\\n%COUNTRY%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'EE' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'EG' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%region%\\n%country%\\n%postal_code%', 'direction' => 'rtl', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'ES' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %CITY% %REGION%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region', 3 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'ET' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'FI' => array('format' => '%organization%\\n%name%\\n%street%\\nFI-%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'postprefix' => 'FI-', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'FM' => array('format' => '%NAME%\\n%ORGANIZATION%\\n%STREET%\\n%CITY% %COUNTRY% %REGION% %postal_code%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region', 3 => 'postal_code'), 'zip_name_type' => 'zip', 'region_name_type' => 'region', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'FR' => array('format' => '%organization%\\n%name%\\n%street%\\n%postal_code% %CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'GB' => array('format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%region%\\n%country%\\n%POSTAL_CODE%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'region_name_type' => 'county', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'GE' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'GG' => array('format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%\\nGUERNSEY\\n%POSTAL_CODE%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'GL' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'GN' => array('format' => '%name%\\n%organization%\\n%postal_code% %street% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'GR' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'GT' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code%- %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'GW' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'HN' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%, %region%\\n%country%\\n%postal_code%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'HR' => array('format' => '%name%\\n%organization%\\n%street%\\nHR-%postal_code% %city%\\n%country%', 'postprefix' => 'HR-', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'HT' => array('format' => '%name%\\n%organization%\\n%street%\\nHT%postal_code% %city%\\n%country%', 'postprefix' => 'HT', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'HU' => array('format' => '%NAME%\\n%ORGANIZATION%\\n%CITY%\\n%STREET%\\n%COUNTRY%\\n%postal_code%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'ID' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%region%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'IE' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%region%\\n%country%', 'region_name_type' => 'county', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'IL' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%', 'direction' => 'rtl', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'IM' => array('format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%\\n%POSTAL_CODE%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'IN' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%region%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region', 3 => 'postal_code'), 'region_name_type' => 'region', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'IQ' => array('format' => '%organization%\\n%name%\\n%street%\\n%CITY%, %REGION%\\n%COUNTRY%\\n%postal_code%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'IS' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'IT' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %CITY% %REGION%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region', 3 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'JE' => array('format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%\\nJERSEY\\n%POSTAL_CODE%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'JM' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%region%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region'), 'region_name_type' => 'parish', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'JO' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'JP' => array('format' => '〒%postal_code%\\n%REGION%%city%\\n%street%\\n%organization%\\n%name%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%city%, %REGION%\\n%COUNTRY%\\n%postal_code%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region', 3 => 'postal_code'), 'region_name_type' => 'prefecture', 'format_charset' => 'ISO-2022-JP', 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false), 'KE' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%\\n%postal_code%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'KG' => array('format' => '%postal_code% %country% %city% %street%\\n%organization%\\n%name%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'KH' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'KI' => array('format' => '%NAME%\\n%ORGANIZATION%\\n%STREET%\\n%REGION%\\n%CITY%\\n%COUNTRY%', 'region_name_type' => 'island', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'KN' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%, %region%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region'), 'region_name_type' => 'island', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'KR' => array('format' => '%country%\\n%region% %city%\\n%street%\\n%organization%\\n%name%\\nSEOUL %POSTAL_CODE%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%region%\\n%country%\\nSEOUL %POSTAL_CODE%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region', 3 => 'postal_code'), 'region_name_type' => 'do_si', 'format_charset' => 'EUC-KR', 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false), 'KW' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'KZ' => array('format' => '%postal_code%\\n%country%\\n%region%\\n%city%\\n%street%\\n%organization%\\n%name%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'LA' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'LB' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'LI' => array('format' => '%organization%\\n%name%\\n%street%\\nFL-%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'postprefix' => 'FL-', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'LK' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%\\n%postal_code%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'LR' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'LS' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'LT' => array('format' => '%organization%\\n%name%\\n%street%\\nLT-%postal_code% %city%\\n%country%', 'postprefix' => 'LT-', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'LU' => array('format' => '%organization%\\n%name%\\n%street%\\nL-%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'postprefix' => 'L-', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'LV' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% %country%, %postal_code%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'MA' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'MD' => array('format' => '%name%\\n%organization%\\n%street%\\nMD-%postal_code% %city%\\n%country%', 'postprefix' => 'MD-', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'ME' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'MF' => array('format' => '%organization%\\n%name%\\n%STREET%\\n%postal_code% %CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'MG' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'MH' => array('format' => '%NAME%\\n%ORGANIZATION%\\n%STREET%\\n%CITY% %COUNTRY% %REGION% %postal_code%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region', 3 => 'postal_code'), 'zip_name_type' => 'zip', 'region_name_type' => 'region', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'MK' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'MN' => array('format' => '%name%\\n%organization%\\n%street%\\n%region% %city%\\n%country%\\n%postal_code%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'MO' => array('format' => '%street%\\n%organization%\\n%name%', 'latin_format' => '%name%\\n%organization%\\n%street%', 'require' => array(0 => 'street'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'MT' => array('format' => '%name%\\n%organization%\\n%street%\\n%CITY% %POSTAL_CODE%\\n%COUNTRY%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'MU' => array('format' => '%name%\\n%organization%\\n%street%\\n%POSTAL_CODE%\\n%CITY%\\n%COUNTRY%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'MV' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'MW' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'MX' => array('format' => '%name%\\n%organization%\\n%street%\\n%POSTAL_CODE% %CITY%, %REGION%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'region_name_type' => 'region', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'MY' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %CITY%, %REGION%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'region_name_type' => 'region', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'MZ' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'NE' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'NG' => array('format' => '%name%\\n%organization%\\n%street%\\n%CITY% %postal_code%\\n%REGION%\\n%COUNTRY%', 'region_name_type' => 'region', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'NI' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code%\\n%CITY%, %REGION%\\n%COUNTRY%', 'region_name_type' => 'department', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'NL' => array('format' => '%organization%\\n%name%\\n%street%\\n%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'NO' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'NP' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'NR' => array('format' => '%name%\\n%organization%\\n%street%\\n%region%\\n%country%', 'require' => array(0 => 'street', 1 => 'region'), 'region_name_type' => 'district', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'NZ' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'OM' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code%\\n%city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'PA' => array('format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%REGION%\\n%COUNTRY%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'PG' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code% %region%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'PH' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%region%\\n%country%', 'require' => array(0 => 'street', 1 => 'city'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'PK' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%-%postal_code%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'PL' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'PT' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'PW' => array('format' => '%NAME%\\n%ORGANIZATION%\\n%STREET%\\n%CITY% %COUNTRY% %REGION% %postal_code%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region', 3 => 'postal_code'), 'zip_name_type' => 'zip', 'region_name_type' => 'region', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'PY' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'RO' => array('format' => '%name%\\n%organization%\\n%STREET%\\n%postal_code% %CITY%\\n%COUNTRY%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'RS' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'RU' => array('format' => '%postal_code% %COUNTRY% %CITY%\\n%STREET%\\n%organization%\\n%name%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'SA' => array('format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'SC' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%REGION%\\n%COUNTRY%', 'region_name_type' => 'island', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'SE' => array('format' => '%organization%\\n%name%\\n%street%\\nSE-%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'postprefix' => 'SE-', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'SG' => array('format' => '%name%\\n%organization%\\n%street%\\nSINGAPORE %postal_code%', 'require' => array(0 => 'street', 1 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'SH' => array('format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%\\n%POSTAL_CODE%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'SI' => array('format' => '%name%\\n%organization%\\n%street%\\nSI- %postal_code% %city%\\n%country%', 'postprefix' => 'SI-', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'SK' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'SM' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'SN' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'SO' => array('format' => '%name%\\n%organization%\\n%STREET%\\n%CITY%, %REGION% %COUNTRY% %postal_code%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'SR' => array('format' => '%name%\\n%organization%\\n%STREET%\\n%city% %REGION%\\n%COUNTRY%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'ST' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'SV' => array('format' => '%name%\\n%organization%\\n%street%\\n%POSTAL_CODE%-%CITY%\\n%REGION%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'SZ' => array('format' => '%name%\\n%organization%\\n%STREET%\\n%CITY%\\n%COUNTRY%\\n%POSTAL_CODE%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'TH' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%REGION% %COUNTRY% %postal_code%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%REGION% %COUNTRY% %postal_code%', 'format_charset' => 'TIS-620', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false), 'TJ' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'TM' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'TN' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'TR' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%/%region%\\n%country%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'TV' => array('format' => '%name%\\n%organization%\\n%STREET%\\n%CITY%\\n%REGION%\\n%COUNTRY%', 'region_name_type' => 'island', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'TW' => array('format' => '%postal_code%\\n%country%\\n%region%%city%\\n%street%\\n%organization%\\n%name%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%city%, %region% %country% %postal_code%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region', 3 => 'postal_code'), 'region_name_type' => 'county', 'format_charset' => 'Big5', 'zip_name_type' => 'postal', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false), 'UA' => array('format' => '%postal_code% %country% %city%\\n%street%\\n%organization%\\n%name%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'UM' => array('format' => '%NAME%\\n%ORGANIZATION%\\n%STREET%\\n%CITY% %REGION% %COUNTRY% %postal_code%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region'), 'zip_name_type' => 'zip', 'region_name_type' => 'region', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'US' => array('format' => '%name%\\n%organization%\\n%street%\\n%CITY% %REGION_CODE% %COUNTRY_ISO2% %postal_code%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region', 3 => 'postal_code'), 'zip_name_type' => 'zip', 'region_name_type' => 'region', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'UY' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %CITY% %REGION%\\n%COUNTRY%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'UZ' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %CITY%\\n%REGION%\\n%COUNTRY%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'VE' => array('format' => '%name%\\n%organization%\\n%street%\\n%CITY% %postal_code%, %REGION%\\n%COUNTRY%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'region'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'VN' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%region%\\n%country%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%region%\\n%country%', 'require' => array(0 => 'street', 1 => 'city'), 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'YE' => array('require' => array(0 => 'street', 1 => 'city'), 'format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'ZA' => array('format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%\\n%postal_code%', 'require' => array(0 => 'street', 1 => 'city', 2 => 'postal_code'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8'), 'ZM' => array('format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%', 'require' => array(0 => 'street', 1 => 'city'), 'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%', 'zip_name_type' => 'postal', 'region_name_type' => 'province', 'direction' => 'ltr', 'postprefix' => NULL, 'has_disputed' => false, 'format_charset' => 'UTF-8')));
        $instance->addLocaleData(array('AD' => array('currency_code' => 'EUR', 'phone_prefix' => '376', 'default_locale' => 'ca'), 'AE' => array('currency_code' => 'AED', 'phone_prefix' => '971', 'default_locale' => 'ar_AE'), 'AF' => array('currency_code' => 'AFN', 'phone_prefix' => '93', 'default_locale' => 'fa_AF'), 'AG' => array('currency_code' => 'XCD', 'phone_prefix' => '+1-268', 'default_locale' => 'en_AG'), 'AL' => array('currency_code' => 'ALL', 'phone_prefix' => '355', 'default_locale' => 'sq'), 'AM' => array('currency_code' => 'AMD', 'phone_prefix' => '374', 'default_locale' => 'hy'), 'AO' => array('currency_code' => 'AOA', 'phone_prefix' => '244', 'default_locale' => 'pt_AO'), 'AR' => array('currency_code' => 'ARS', 'phone_prefix' => '54', 'default_locale' => 'es_AR'), 'AT' => array('currency_code' => 'EUR', 'phone_prefix' => '43', 'default_locale' => 'de_AT'), 'AU' => array('currency_code' => 'AUD', 'phone_prefix' => '61', 'default_locale' => 'en_AU'), 'AZ' => array('currency_code' => 'AZN', 'phone_prefix' => '994', 'default_locale' => 'az'), 'BA' => array('currency_code' => 'BAM', 'phone_prefix' => '387', 'default_locale' => 'bs'), 'BB' => array('currency_code' => 'BBD', 'phone_prefix' => '+1-246', 'default_locale' => 'en_BB'), 'BD' => array('currency_code' => 'BDT', 'phone_prefix' => '880', 'default_locale' => 'bn_BD'), 'BE' => array('currency_code' => 'EUR', 'phone_prefix' => '32', 'default_locale' => 'nl_BE'), 'BF' => array('currency_code' => 'XOF', 'phone_prefix' => '226', 'default_locale' => 'fr_BF'), 'BG' => array('currency_code' => 'BGN', 'phone_prefix' => '359', 'default_locale' => 'bg'), 'BH' => array('currency_code' => 'BHD', 'phone_prefix' => '973', 'default_locale' => 'ar_BH'), 'BI' => array('currency_code' => 'BIF', 'phone_prefix' => '257', 'default_locale' => 'fr_BI'), 'BJ' => array('currency_code' => 'XOF', 'phone_prefix' => '229', 'default_locale' => 'fr_BJ'), 'BL' => array('currency_code' => 'EUR', 'phone_prefix' => '590', 'default_locale' => 'fr'), 'BN' => array('currency_code' => 'BND', 'phone_prefix' => '673', 'default_locale' => 'ms_BN'), 'BO' => array('currency_code' => 'BOB', 'phone_prefix' => '591', 'default_locale' => 'es_BO'), 'BR' => array('currency_code' => 'BRL', 'phone_prefix' => '55', 'default_locale' => 'pt_BR'), 'BS' => array('currency_code' => 'BSD', 'phone_prefix' => '+1-242', 'default_locale' => 'en_BS'), 'BT' => array('currency_code' => 'BTN', 'phone_prefix' => '975', 'default_locale' => 'dz'), 'BW' => array('currency_code' => 'BWP', 'phone_prefix' => '267', 'default_locale' => 'en_BW'), 'BY' => array('currency_code' => 'BYR', 'phone_prefix' => '375', 'default_locale' => 'be'), 'BZ' => array('currency_code' => 'BZD', 'phone_prefix' => '501', 'default_locale' => 'en_BZ'), 'CA' => array('currency_code' => 'CAD', 'phone_prefix' => '1', 'default_locale' => 'en_CA'), 'CD' => array('currency_code' => 'CDF', 'phone_prefix' => '243', 'default_locale' => 'fr_CD'), 'CF' => array('currency_code' => 'XAF', 'phone_prefix' => '236', 'default_locale' => 'fr_CF'), 'CG' => array('currency_code' => 'XAF', 'phone_prefix' => '242', 'default_locale' => 'fr_CG'), 'CH' => array('currency_code' => 'CHF', 'phone_prefix' => '41', 'default_locale' => 'de_CH'), 'CI' => array('currency_code' => 'XOF', 'phone_prefix' => '225', 'default_locale' => 'fr_CI'), 'CL' => array('currency_code' => 'CLP', 'phone_prefix' => '56', 'default_locale' => 'es_CL'), 'CM' => array('currency_code' => 'XAF', 'phone_prefix' => '237', 'default_locale' => 'en_CM'), 'CN' => array('currency_code' => 'CNY', 'phone_prefix' => '86', 'default_locale' => 'zh_CN'), 'CO' => array('currency_code' => 'COP', 'phone_prefix' => '57', 'default_locale' => 'es_CO'), 'CR' => array('currency_code' => 'CRC', 'phone_prefix' => '506', 'default_locale' => 'es_CR'), 'CU' => array('currency_code' => 'CUP', 'phone_prefix' => '53', 'default_locale' => 'es_CU'), 'CV' => array('currency_code' => 'CVE', 'phone_prefix' => '238', 'default_locale' => 'pt_CV'), 'CY' => array('currency_code' => 'EUR', 'phone_prefix' => '357', 'default_locale' => 'el_CY'), 'CZ' => array('currency_code' => 'CZK', 'phone_prefix' => '420', 'default_locale' => 'cs'), 'DE' => array('currency_code' => 'EUR', 'phone_prefix' => '49', 'default_locale' => 'de'), 'DJ' => array('currency_code' => 'DJF', 'phone_prefix' => '253', 'default_locale' => 'fr_DJ'), 'DK' => array('currency_code' => 'DKK', 'phone_prefix' => '45', 'default_locale' => 'da_DK'), 'DM' => array('currency_code' => 'XCD', 'phone_prefix' => '+1-767', 'default_locale' => 'en_DM'), 'DO' => array('currency_code' => 'DOP', 'phone_prefix' => '+1-809', 'default_locale' => 'es_DO'), 'DZ' => array('currency_code' => 'DZD', 'phone_prefix' => '213', 'default_locale' => 'ar_DZ'), 'EC' => array('currency_code' => 'USD', 'phone_prefix' => '593', 'default_locale' => 'es_EC'), 'EE' => array('currency_code' => 'EUR', 'phone_prefix' => '372', 'default_locale' => 'et'), 'EG' => array('currency_code' => 'EGP', 'phone_prefix' => '20', 'default_locale' => 'ar_EG'), 'ER' => array('currency_code' => 'ERN', 'phone_prefix' => '291', 'default_locale' => 'ti_ER'), 'ES' => array('currency_code' => 'EUR', 'phone_prefix' => '34', 'default_locale' => 'es_ES'), 'ET' => array('currency_code' => 'ETB', 'phone_prefix' => '251', 'default_locale' => 'am'), 'FI' => array('currency_code' => 'EUR', 'phone_prefix' => '358', 'default_locale' => 'fi_FI'), 'FJ' => array('currency_code' => 'FJD', 'phone_prefix' => '679', 'default_locale' => 'en_FJ'), 'FM' => array('currency_code' => 'USD', 'phone_prefix' => '691', 'default_locale' => 'en_FM'), 'FR' => array('currency_code' => 'EUR', 'phone_prefix' => '33', 'default_locale' => 'fr_FR'), 'GA' => array('currency_code' => 'XAF', 'phone_prefix' => '241', 'default_locale' => 'fr_GA'), 'GB' => array('currency_code' => 'GBP', 'phone_prefix' => '44', 'default_locale' => 'en_GB'), 'GD' => array('currency_code' => 'XCD', 'phone_prefix' => '+1-473', 'default_locale' => 'en_GD'), 'GE' => array('currency_code' => 'GEL', 'phone_prefix' => '995', 'default_locale' => 'ka'), 'GG' => array('currency_code' => 'GBP', 'phone_prefix' => '+44-1481', 'default_locale' => 'en'), 'GH' => array('currency_code' => 'GHS', 'phone_prefix' => '233', 'default_locale' => 'en_GH'), 'GL' => array('currency_code' => 'DKK', 'phone_prefix' => '299', 'default_locale' => 'kl'), 'GM' => array('currency_code' => 'GMD', 'phone_prefix' => '220', 'default_locale' => 'en_GM'), 'GN' => array('currency_code' => 'GNF', 'phone_prefix' => '224', 'default_locale' => 'fr_GN'), 'GQ' => array('currency_code' => 'XAF', 'phone_prefix' => '240', 'default_locale' => 'es_GQ'), 'GR' => array('currency_code' => 'EUR', 'phone_prefix' => '30', 'default_locale' => 'el_GR'), 'GT' => array('currency_code' => 'GTQ', 'phone_prefix' => '502', 'default_locale' => 'es_GT'), 'GW' => array('currency_code' => 'XOF', 'phone_prefix' => '245', 'default_locale' => 'pt_GW'), 'GY' => array('currency_code' => 'GYD', 'phone_prefix' => '592', 'default_locale' => 'en_GY'), 'HN' => array('currency_code' => 'HNL', 'phone_prefix' => '504', 'default_locale' => 'es_HN'), 'HR' => array('currency_code' => 'HRK', 'phone_prefix' => '385', 'default_locale' => 'hr_HR'), 'HT' => array('currency_code' => 'HTG', 'phone_prefix' => '509', 'default_locale' => 'fr'), 'HU' => array('currency_code' => 'HUF', 'phone_prefix' => '36', 'default_locale' => 'hu_HU'), 'ID' => array('currency_code' => 'IDR', 'phone_prefix' => '62', 'default_locale' => 'id'), 'IE' => array('currency_code' => 'EUR', 'phone_prefix' => '353', 'default_locale' => 'en_IE'), 'IL' => array('currency_code' => 'ILS', 'phone_prefix' => '972', 'default_locale' => 'he'), 'IM' => array('currency_code' => 'GBP', 'phone_prefix' => '+44-1624', 'default_locale' => 'en'), 'IN' => array('currency_code' => 'INR', 'phone_prefix' => '91', 'default_locale' => 'en_IN'), 'IQ' => array('currency_code' => 'IQD', 'phone_prefix' => '964', 'default_locale' => 'ar_IQ'), 'IR' => array('currency_code' => 'IRR', 'phone_prefix' => '98', 'default_locale' => 'fa_IR'), 'IS' => array('currency_code' => 'ISK', 'phone_prefix' => '354', 'default_locale' => 'is'), 'IT' => array('currency_code' => 'EUR', 'phone_prefix' => '39', 'default_locale' => 'it_IT'), 'JE' => array('currency_code' => 'GBP', 'phone_prefix' => '+44-1534', 'default_locale' => 'en'), 'JM' => array('currency_code' => 'JMD', 'phone_prefix' => '+1-876', 'default_locale' => 'en_JM'), 'JO' => array('currency_code' => 'JOD', 'phone_prefix' => '962', 'default_locale' => 'ar_JO'), 'JP' => array('currency_code' => 'JPY', 'phone_prefix' => '81', 'default_locale' => 'ja'), 'KE' => array('currency_code' => 'KES', 'phone_prefix' => '254', 'default_locale' => 'en_KE'), 'KG' => array('currency_code' => 'KGS', 'phone_prefix' => '996', 'default_locale' => 'ru'), 'KH' => array('currency_code' => 'KHR', 'phone_prefix' => '855', 'default_locale' => 'km'), 'KI' => array('currency_code' => 'AUD', 'phone_prefix' => '686', 'default_locale' => 'en_KI'), 'KM' => array('currency_code' => 'KMF', 'phone_prefix' => '269', 'default_locale' => 'ar'), 'KN' => array('currency_code' => 'XCD', 'phone_prefix' => '+1-869', 'default_locale' => 'en_KN'), 'KP' => array('currency_code' => 'KPW', 'phone_prefix' => '850', 'default_locale' => 'ko_KP'), 'KR' => array('currency_code' => 'KRW', 'phone_prefix' => '82', 'default_locale' => 'ko_KR'), 'KW' => array('currency_code' => 'KWD', 'phone_prefix' => '965', 'default_locale' => 'ar_KW'), 'KZ' => array('currency_code' => 'KZT', 'phone_prefix' => '7', 'default_locale' => 'kk'), 'LA' => array('currency_code' => 'LAK', 'phone_prefix' => '856', 'default_locale' => 'lo'), 'LB' => array('currency_code' => 'LBP', 'phone_prefix' => '961', 'default_locale' => 'ar_LB'), 'LI' => array('currency_code' => 'CHF', 'phone_prefix' => '423', 'default_locale' => 'de_LI'), 'LK' => array('currency_code' => 'LKR', 'phone_prefix' => '94', 'default_locale' => 'si'), 'LR' => array('currency_code' => 'LRD', 'phone_prefix' => '231', 'default_locale' => 'en_LR'), 'LS' => array('currency_code' => 'LSL', 'phone_prefix' => '266', 'default_locale' => 'en_LS'), 'LT' => array('currency_code' => 'LTL', 'phone_prefix' => '370', 'default_locale' => 'lt'), 'LU' => array('currency_code' => 'EUR', 'phone_prefix' => '352', 'default_locale' => 'fr'), 'LV' => array('currency_code' => 'LVL', 'phone_prefix' => '371', 'default_locale' => 'lv'), 'LY' => array('currency_code' => 'LYD', 'phone_prefix' => '218', 'default_locale' => 'ar_LY'), 'MA' => array('currency_code' => 'MAD', 'phone_prefix' => '212', 'default_locale' => 'ar_MA'), 'MD' => array('currency_code' => 'MDL', 'phone_prefix' => '373', 'default_locale' => 'ro'), 'ME' => array('currency_code' => 'EUR', 'phone_prefix' => '382', 'default_locale' => 'sr'), 'MF' => array('currency_code' => 'EUR', 'phone_prefix' => '590', 'default_locale' => 'fr'), 'MG' => array('currency_code' => 'MGA', 'phone_prefix' => '261', 'default_locale' => 'fr_MG'), 'MH' => array('currency_code' => 'USD', 'phone_prefix' => '692', 'default_locale' => 'en'), 'MK' => array('currency_code' => 'MKD', 'phone_prefix' => '389', 'default_locale' => 'mk'), 'ML' => array('currency_code' => 'XOF', 'phone_prefix' => '223', 'default_locale' => 'fr_ML'), 'MM' => array('currency_code' => 'MMK', 'phone_prefix' => '95', 'default_locale' => 'my'), 'MN' => array('currency_code' => 'MNT', 'phone_prefix' => '976', 'default_locale' => 'mn'), 'MO' => array('currency_code' => 'MOP', 'phone_prefix' => '853', 'default_locale' => 'zh'), 'MR' => array('currency_code' => 'MRO', 'phone_prefix' => '222', 'default_locale' => 'ar_MR'), 'MT' => array('currency_code' => 'EUR', 'phone_prefix' => '356', 'default_locale' => 'mt'), 'MU' => array('currency_code' => 'MUR', 'phone_prefix' => '230', 'default_locale' => 'en_MU'), 'MV' => array('currency_code' => 'MVR', 'phone_prefix' => '960', 'default_locale' => 'en'), 'MW' => array('currency_code' => 'MWK', 'phone_prefix' => '265', 'default_locale' => 'en'), 'MX' => array('currency_code' => 'MXN', 'phone_prefix' => '52', 'default_locale' => 'es_MX'), 'MY' => array('currency_code' => 'MYR', 'phone_prefix' => '60', 'default_locale' => 'ms_MY'), 'MZ' => array('currency_code' => 'MZN', 'phone_prefix' => '258', 'default_locale' => 'pt_MZ'), 'NA' => array('currency_code' => 'NAD', 'phone_prefix' => '264', 'default_locale' => 'en_NA'), 'NE' => array('currency_code' => 'XOF', 'phone_prefix' => '227', 'default_locale' => 'fr_NE'), 'NG' => array('currency_code' => 'NGN', 'phone_prefix' => '234', 'default_locale' => 'en_NG'), 'NI' => array('currency_code' => 'NIO', 'phone_prefix' => '505', 'default_locale' => 'es_NI'), 'NL' => array('currency_code' => 'EUR', 'phone_prefix' => '31', 'default_locale' => 'nl_NL'), 'NO' => array('currency_code' => 'NOK', 'phone_prefix' => '47', 'default_locale' => 'no'), 'NP' => array('currency_code' => 'NPR', 'phone_prefix' => '977', 'default_locale' => 'ne'), 'NR' => array('currency_code' => 'AUD', 'phone_prefix' => '674', 'default_locale' => 'en'), 'NZ' => array('currency_code' => 'NZD', 'phone_prefix' => '64', 'default_locale' => 'en_NZ'), 'OM' => array('currency_code' => 'OMR', 'phone_prefix' => '968', 'default_locale' => 'ar_OM'), 'PA' => array('currency_code' => 'PAB', 'phone_prefix' => '507', 'default_locale' => 'es_PA'), 'PE' => array('currency_code' => 'PEN', 'phone_prefix' => '51', 'default_locale' => 'es_PE'), 'PG' => array('currency_code' => 'PGK', 'phone_prefix' => '675', 'default_locale' => 'en_PG'), 'PH' => array('currency_code' => 'PHP', 'phone_prefix' => '63', 'default_locale' => 'tl'), 'PK' => array('currency_code' => 'PKR', 'phone_prefix' => '92', 'default_locale' => 'ur_PK'), 'PL' => array('currency_code' => 'PLN', 'phone_prefix' => '48', 'default_locale' => 'pl'), 'PS' => array('currency_code' => 'ILS', 'phone_prefix' => '970', 'default_locale' => 'ar_PS'), 'PT' => array('currency_code' => 'EUR', 'phone_prefix' => '351', 'default_locale' => 'pt_PT'), 'PW' => array('currency_code' => 'USD', 'phone_prefix' => '680', 'default_locale' => 'en'), 'PY' => array('currency_code' => 'PYG', 'phone_prefix' => '595', 'default_locale' => 'es_PY'), 'QA' => array('currency_code' => 'QAR', 'phone_prefix' => '974', 'default_locale' => 'ar_QA'), 'RO' => array('currency_code' => 'RON', 'phone_prefix' => '40', 'default_locale' => 'ro'), 'RS' => array('currency_code' => 'RSD', 'phone_prefix' => '381', 'default_locale' => 'sr'), 'RU' => array('currency_code' => 'RUB', 'phone_prefix' => '7', 'default_locale' => 'ru'), 'RW' => array('currency_code' => 'RWF', 'phone_prefix' => '250', 'default_locale' => 'rw'), 'SA' => array('currency_code' => 'SAR', 'phone_prefix' => '966', 'default_locale' => 'ar_SA'), 'SB' => array('currency_code' => 'SBD', 'phone_prefix' => '677', 'default_locale' => 'en_SB'), 'SC' => array('currency_code' => 'SCR', 'phone_prefix' => '248', 'default_locale' => 'en_SC'), 'SD' => array('currency_code' => 'SDG', 'phone_prefix' => '249', 'default_locale' => 'ar_SD'), 'SE' => array('currency_code' => 'SEK', 'phone_prefix' => '46', 'default_locale' => 'sv_SE'), 'SG' => array('currency_code' => 'SGD', 'phone_prefix' => '65', 'default_locale' => 'en'), 'SH' => array('currency_code' => 'SHP', 'phone_prefix' => '290', 'default_locale' => 'en'), 'SI' => array('currency_code' => 'EUR', 'phone_prefix' => '386', 'default_locale' => 'sl'), 'SK' => array('currency_code' => 'EUR', 'phone_prefix' => '421', 'default_locale' => 'sk'), 'SL' => array('currency_code' => 'SLL', 'phone_prefix' => '232', 'default_locale' => 'en_SL'), 'SM' => array('currency_code' => 'EUR', 'phone_prefix' => '378', 'default_locale' => 'it_SM'), 'SN' => array('currency_code' => 'XOF', 'phone_prefix' => '221', 'default_locale' => 'fr_SN'), 'SO' => array('currency_code' => 'SOS', 'phone_prefix' => '252', 'default_locale' => 'so_SO'), 'SR' => array('currency_code' => 'SRD', 'phone_prefix' => '597', 'default_locale' => 'nl_SR'), 'ST' => array('currency_code' => 'STD', 'phone_prefix' => '239', 'default_locale' => 'pt_ST'), 'SV' => array('currency_code' => 'USD', 'phone_prefix' => '503', 'default_locale' => 'es_SV'), 'SY' => array('currency_code' => 'SYP', 'phone_prefix' => '963', 'default_locale' => 'ar_SY'), 'SZ' => array('currency_code' => 'SZL', 'phone_prefix' => '268', 'default_locale' => 'en_SZ'), 'TD' => array('currency_code' => 'XAF', 'phone_prefix' => '235', 'default_locale' => 'fr_TD'), 'TG' => array('currency_code' => 'XOF', 'phone_prefix' => '228', 'default_locale' => 'fr_TG'), 'TH' => array('currency_code' => 'THB', 'phone_prefix' => '66', 'default_locale' => 'th'), 'TJ' => array('currency_code' => 'TJS', 'phone_prefix' => '992', 'default_locale' => 'fr'), 'TL' => array('currency_code' => 'USD', 'phone_prefix' => '670', 'default_locale' => 'pt'), 'TM' => array('currency_code' => 'TMT', 'phone_prefix' => '993', 'default_locale' => 'ru'), 'TN' => array('currency_code' => 'TND', 'phone_prefix' => '216', 'default_locale' => 'ar_TN'), 'TO' => array('currency_code' => 'TOP', 'phone_prefix' => '676', 'default_locale' => 'to'), 'TR' => array('currency_code' => 'TRY', 'phone_prefix' => '90', 'default_locale' => 'tr_TR'), 'TT' => array('currency_code' => 'TTD', 'phone_prefix' => '+1-868', 'default_locale' => 'en_TT'), 'TV' => array('currency_code' => 'AUD', 'phone_prefix' => '688', 'default_locale' => 'en'), 'TW' => array('currency_code' => 'TWD', 'phone_prefix' => '886', 'default_locale' => 'zh_TW'), 'TZ' => array('currency_code' => 'TZS', 'phone_prefix' => '255', 'default_locale' => 'sw_TZ'), 'UA' => array('currency_code' => 'UAH', 'phone_prefix' => '380', 'default_locale' => 'uk'), 'UG' => array('currency_code' => 'UGX', 'phone_prefix' => '256', 'default_locale' => 'en_UG'), 'UM' => array('currency_code' => 'USD', 'phone_prefix' => '1', 'default_locale' => 'en_UM'), 'US' => array('currency_code' => 'USD', 'phone_prefix' => '1', 'default_locale' => 'en_US'), 'UY' => array('currency_code' => 'UYU', 'phone_prefix' => '598', 'default_locale' => 'es_UY'), 'UZ' => array('currency_code' => 'UZS', 'phone_prefix' => '998', 'default_locale' => 'uz'), 'VC' => array('currency_code' => 'XCD', 'phone_prefix' => '+1-784', 'default_locale' => 'en_VC'), 'VE' => array('currency_code' => 'VEF', 'phone_prefix' => '58', 'default_locale' => 'es_VE'), 'VN' => array('currency_code' => 'VND', 'phone_prefix' => '84', 'default_locale' => 'vi'), 'VU' => array('currency_code' => 'VUV', 'phone_prefix' => '678', 'default_locale' => 'fr'), 'WS' => array('currency_code' => 'WST', 'phone_prefix' => '685', 'default_locale' => 'en'), 'YE' => array('currency_code' => 'YER', 'phone_prefix' => '967', 'default_locale' => 'ar_YE'), 'ZA' => array('currency_code' => 'ZAR', 'phone_prefix' => '27', 'default_locale' => 'zu'), 'ZM' => array('currency_code' => 'ZMK', 'phone_prefix' => '260', 'default_locale' => 'en_ZM'), 'ZW' => array('currency_code' => 'ZWL', 'phone_prefix' => '263', 'default_locale' => 'en_ZW')));
        $instance->addCurrencyData(array('AED' => array('symbol' => 'د.إ.‏'), 'AFN' => array('symbol' => '؋'), 'ALL' => array('symbol' => 'Lek'), 'AMD' => array('symbol' => 'դր.'), 'AOA' => array('symbol' => 'Kz'), 'ARS' => array('symbol' => '$'), 'AUD' => array('symbol' => 'AU$'), 'AZN' => array('symbol' => 'man.'), 'BAM' => array('symbol' => 'KM'), 'BBD' => array('symbol' => '$'), 'BDT' => array('symbol' => '৳'), 'BGN' => array('symbol' => 'лв.'), 'BHD' => array('symbol' => 'د.ب.‏'), 'BIF' => array('symbol' => 'FBu'), 'BND' => array('symbol' => '$'), 'BOB' => array('symbol' => 'Bs'), 'BRL' => array('symbol' => 'R$'), 'BSD' => array('symbol' => 'BSD'), 'BTN' => array('symbol' => 'BTN'), 'BWP' => array('symbol' => 'P'), 'BYR' => array('symbol' => 'BYR'), 'BZD' => array('symbol' => '$'), 'CAD' => array('symbol' => '$'), 'CDF' => array('symbol' => 'FrCD'), 'CHF' => array('symbol' => 'CHF'), 'CLP' => array('symbol' => '$'), 'CNY' => array('symbol' => '￥'), 'COP' => array('symbol' => '$'), 'CRC' => array('symbol' => '₡'), 'CUP' => array('symbol' => 'CUP'), 'CVE' => array('symbol' => 'CVE'), 'CZK' => array('symbol' => 'Kč'), 'DJF' => array('symbol' => 'Fdj'), 'DKK' => array('symbol' => 'kr'), 'DOP' => array('symbol' => '$'), 'DZD' => array('symbol' => 'د.ج.‏'), 'EGP' => array('symbol' => 'ج.م.‏'), 'ERN' => array('symbol' => 'Nfk'), 'ETB' => array('symbol' => 'ብር'), 'EUR' => array('symbol' => '€'), 'FJD' => array('symbol' => 'FJD'), 'GBP' => array('symbol' => '£'), 'GEL' => array('symbol' => 'GEL'), 'GHS' => array('symbol' => 'GHS'), 'GMD' => array('symbol' => 'GMD'), 'GNF' => array('symbol' => 'FG'), 'GTQ' => array('symbol' => 'Q'), 'GYD' => array('symbol' => 'GYD'), 'HNL' => array('symbol' => 'L'), 'HRK' => array('symbol' => 'kn'), 'HTG' => array('symbol' => 'HTG'), 'HUF' => array('symbol' => 'Ft'), 'IDR' => array('symbol' => 'Rp'), 'ILS' => array('symbol' => '₪'), 'INR' => array('symbol' => '₹'), 'IQD' => array('symbol' => 'د.ع.‏'), 'IRR' => array('symbol' => '﷼'), 'ISK' => array('symbol' => 'kr'), 'JMD' => array('symbol' => '$'), 'JOD' => array('symbol' => 'د.أ.‏'), 'JPY' => array('symbol' => '￥'), 'KES' => array('symbol' => 'KES'), 'KGS' => array('symbol' => 'KGS'), 'KHR' => array('symbol' => '៛'), 'KMF' => array('symbol' => 'ف.ج.ق.‏'), 'KPW' => array('symbol' => 'KPW'), 'KRW' => array('symbol' => '₩'), 'KWD' => array('symbol' => 'د.ك.‏'), 'KZT' => array('symbol' => 'тңг.'), 'LAK' => array('symbol' => 'LAK'), 'LBP' => array('symbol' => 'ل.ل.‏'), 'LKR' => array('symbol' => 'රු.'), 'LRD' => array('symbol' => 'LRD'), 'LSL' => array('symbol' => 'LSL'), 'LTL' => array('symbol' => 'Lt'), 'LVL' => array('symbol' => 'Ls'), 'LYD' => array('symbol' => 'د.ل.‏'), 'MAD' => array('symbol' => 'د.م.‏'), 'MDL' => array('symbol' => 'MDL'), 'MGA' => array('symbol' => 'MGA'), 'MKD' => array('symbol' => 'MKD'), 'MMK' => array('symbol' => 'K'), 'MNT' => array('symbol' => 'MNT'), 'MOP' => array('symbol' => 'MOP'), 'MRO' => array('symbol' => 'أ.م.‏'), 'MUR' => array('symbol' => 'MUR'), 'MVR' => array('symbol' => 'Rf.'), 'MWK' => array('symbol' => 'MWK'), 'MXN' => array('symbol' => '$'), 'MYR' => array('symbol' => 'RM'), 'MZN' => array('symbol' => 'MTn'), 'NAD' => array('symbol' => '$'), 'NGN' => array('symbol' => 'NGN'), 'NIO' => array('symbol' => 'C$'), 'NOK' => array('symbol' => 'kr'), 'NPR' => array('symbol' => 'नेरू '), 'NZD' => array('symbol' => 'NZ$'), 'OMR' => array('symbol' => 'ر.ع.‏'), 'PAB' => array('symbol' => 'B/.'), 'PEN' => array('symbol' => 'S/.'), 'PGK' => array('symbol' => 'PGK'), 'PHP' => array('symbol' => '₱'), 'PKR' => array('symbol' => 'PKRs'), 'PLN' => array('symbol' => 'zł'), 'PYG' => array('symbol' => '₲'), 'QAR' => array('symbol' => 'ر.ق.‏'), 'RON' => array('symbol' => 'RON'), 'RSD' => array('symbol' => 'дин.'), 'RUB' => array('symbol' => 'руб.'), 'RWF' => array('symbol' => 'RF'), 'SAR' => array('symbol' => 'ر.س.‏'), 'SBD' => array('symbol' => 'SBD'), 'SCR' => array('symbol' => 'SCR'), 'SDG' => array('symbol' => 'SDG'), 'SEK' => array('symbol' => 'kr'), 'SGD' => array('symbol' => 'SGD'), 'SHP' => array('symbol' => 'SHP'), 'SLL' => array('symbol' => 'SLL'), 'SOS' => array('symbol' => 'SOS'), 'SRD' => array('symbol' => 'SRD'), 'STD' => array('symbol' => 'Db'), 'SYP' => array('symbol' => 'ل.س.‏'), 'SZL' => array('symbol' => 'SZL'), 'THB' => array('symbol' => '฿'), 'TJS' => array('symbol' => 'TJS'), 'TMT' => array('symbol' => 'TMT'), 'TND' => array('symbol' => 'د.ت.‏'), 'TOP' => array('symbol' => 'T$'), 'TRY' => array('symbol' => 'TL'), 'TTD' => array('symbol' => '$'), 'TWD' => array('symbol' => 'NT$'), 'TZS' => array('symbol' => 'TSh'), 'UAH' => array('symbol' => '₴'), 'UGX' => array('symbol' => 'UGX'), 'USD' => array('symbol' => '$'), 'UYU' => array('symbol' => '$'), 'UZS' => array('symbol' => 'UZS'), 'VEF' => array('symbol' => 'Bs.F.'), 'VND' => array('symbol' => '₫'), 'VUV' => array('symbol' => 'VUV'), 'WST' => array('symbol' => 'WST'), 'XAF' => array('symbol' => 'FCFA'), 'XCD' => array('symbol' => 'EC$'), 'XOF' => array('symbol' => 'CFA'), 'YER' => array('symbol' => 'ر.ي.‏'), 'ZAR' => array('symbol' => 'R'), 'ZMK' => array('symbol' => 'ZMK'), 'ZWL' => array('symbol' => 'ZWL')));

        return $instance;
    }

    /**
     * Gets the 'oro_locale.twig.address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Twig\AddressExtension A Oro\Bundle\LocaleBundle\Twig\AddressExtension instance.
     */
    protected function getOroLocale_Twig_AddressService()
    {
        return $this->services['oro_locale.twig.address'] = new \Oro\Bundle\LocaleBundle\Twig\AddressExtension($this->get('oro_locale.formatter.address'));
    }

    /**
     * Gets the 'oro_locale.twig.calendar' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Twig\CalendarExtension A Oro\Bundle\LocaleBundle\Twig\CalendarExtension instance.
     */
    protected function getOroLocale_Twig_CalendarService()
    {
        return $this->services['oro_locale.twig.calendar'] = new \Oro\Bundle\LocaleBundle\Twig\CalendarExtension($this->get('oro_locale.settings'));
    }

    /**
     * Gets the 'oro_locale.twig.date_format' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Twig\DateFormatExtension A Oro\Bundle\LocaleBundle\Twig\DateFormatExtension instance.
     */
    protected function getOroLocale_Twig_DateFormatService()
    {
        return $this->services['oro_locale.twig.date_format'] = new \Oro\Bundle\LocaleBundle\Twig\DateFormatExtension($this->get('oro_locale.format_converter.date_time.registry'));
    }

    /**
     * Gets the 'oro_locale.twig.date_time' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Twig\DateTimeExtension A Oro\Bundle\LocaleBundle\Twig\DateTimeExtension instance.
     */
    protected function getOroLocale_Twig_DateTimeService()
    {
        return $this->services['oro_locale.twig.date_time'] = new \Oro\Bundle\LocaleBundle\Twig\DateTimeExtension($this->get('oro_locale.formatter.date_time'));
    }

    /**
     * Gets the 'oro_locale.twig.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Twig\LocaleExtension A Oro\Bundle\LocaleBundle\Twig\LocaleExtension instance.
     */
    protected function getOroLocale_Twig_LocaleService()
    {
        return $this->services['oro_locale.twig.locale'] = new \Oro\Bundle\LocaleBundle\Twig\LocaleExtension($this->get('oro_locale.settings'));
    }

    /**
     * Gets the 'oro_locale.twig.name' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Twig\NameExtension A Oro\Bundle\LocaleBundle\Twig\NameExtension instance.
     */
    protected function getOroLocale_Twig_NameService()
    {
        return $this->services['oro_locale.twig.name'] = new \Oro\Bundle\LocaleBundle\Twig\NameExtension($this->get('oro_entity.twig.extension.entity'));
    }

    /**
     * Gets the 'oro_locale.twig.number' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\LocaleBundle\Twig\NumberExtension A Oro\Bundle\LocaleBundle\Twig\NumberExtension instance.
     */
    protected function getOroLocale_Twig_NumberService()
    {
        return $this->services['oro_locale.twig.number'] = new \Oro\Bundle\LocaleBundle\Twig\NumberExtension($this->get('oro_locale.formatter.number'));
    }

    /**
     * Gets the 'oro_menu.builder_chain' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Provider\BuilderChainProvider A Oro\Bundle\NavigationBundle\Provider\BuilderChainProvider instance.
     */
    protected function getOroMenu_BuilderChainService()
    {
        $this->services['oro_menu.builder_chain'] = $instance = new \Oro\Bundle\NavigationBundle\Provider\BuilderChainProvider($this->get('oro_menu.factory'), $this->get('debug.event_dispatcher'));

        $instance->addBuilder($this->get('oro_user.user_menu'), 'usermenu');
        $instance->addBuilder($this->get('oro_menu.configuration_builder'));
        $instance->addBuilder($this->get('oro_navigation.pinbar_menu.builder'), 'pinbar');
        $instance->addBuilder($this->get('oro_navigation.favorites_menu.builder'), 'favorite');
        $instance->addBuilder($this->get('oro_navigation.history_menu.builder'), 'history');
        $instance->addBuilder($this->get('oro_navigation.mostviewed_menu.builder'), 'mostviewed');

        return $instance;
    }

    /**
     * Gets the 'oro_menu.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroMenu_CacheService()
    {
        $this->services['oro_menu.cache'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_menu.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_menu.configuration_builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Menu\ConfigurationBuilder A Oro\Bundle\NavigationBundle\Menu\ConfigurationBuilder instance.
     */
    protected function getOroMenu_ConfigurationBuilderService()
    {
        $this->services['oro_menu.configuration_builder'] = $instance = new \Oro\Bundle\NavigationBundle\Menu\ConfigurationBuilder($this->get('oro_menu.configuration_resolver'));

        $instance->setConfiguration(array('templates' => array('application_menu' => array('template' => 'OroNavigationBundle:Menu:application_menu.html.twig', 'currentClass' => 'active', 'ancestorClass' => 'active', 'allow_safe_labels' => true, 'rootClass' => 'nav nav-multilevel main-menu'), 'dots_menu' => array('template' => 'OroNavigationBundle:Menu:dots_menu.html.twig'), 'shortcuts' => array('template' => 'OroNavigationBundle:Menu:shortcuts.html.twig'), 'calendar_menu' => array('template' => 'OroCalendarBundle:Calendar:Menu/contextMenu.html.twig', 'rootClass' => 'dropdown-menu context-menu'), 'navbar' => array('template' => 'OroNavigationBundle:Menu:navbar.html.twig'), 'dropdown' => array('template' => 'OroNavigationBundle:Menu:dropdown.html.twig'), 'horizontal_tabs' => array('template' => 'OroNavigationBundle:Menu:horizontal_tabs.html.twig'), 'pinbar' => array('template' => 'OroNavigationBundle:Menu:pinbar.html.twig'), 'favorite' => array('template' => 'OroNavigationBundle:Menu:favorites.html.twig'), 'mostviewed' => array('template' => 'OroNavigationBundle:Menu:mostviewed.html.twig', 'rootClass' => 'extra-list'), 'history' => array('template' => 'OroNavigationBundle:Menu:history.html.twig', 'rootClass' => 'extra-list', 'currentAsLink' => false)), 'tree' => array('application_menu' => array('type' => 'application_menu', 'children' => array('system_tab' => array('children' => array('users_management' => array('children' => array('oro_business_unit_list' => array('merge_strategy' => 'append', 'children' => array()), 'oro_organization_list' => array('merge_strategy' => 'append', 'children' => array()), 'user_list' => array('merge_strategy' => 'append', 'children' => array()), 'user_roles' => array('merge_strategy' => 'append', 'children' => array()), 'user_groups' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'emails' => array('children' => array('oro_email_emailtemplate_list' => array('merge_strategy' => 'append', 'children' => array()), 'oro_notification_emailnotification_list' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'entities_list' => array('children' => array('entity_management' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'integrations_submenu' => array('children' => array('integrations_list' => array('merge_strategy' => 'append', 'children' => array()), 'embedded_forms' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'oro_system_calendar_list' => array('merge_strategy' => 'append', 'children' => array()), 'system_configuration' => array('merge_strategy' => 'append', 'children' => array()), 'oro_cron_job' => array('merge_strategy' => 'append', 'children' => array()), 'audit_list' => array('merge_strategy' => 'append', 'children' => array()), 'oro_platform_system_info' => array('merge_strategy' => 'append', 'children' => array()), 'oro_tag_list' => array('merge_strategy' => 'append', 'children' => array()), 'process_definition_list' => array('merge_strategy' => 'append', 'children' => array()), 'workflow_definition_list' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'main_tab_fichier' => array('children' => array('main_tab_societe' => array('merge_strategy' => 'append', 'children' => array()), 'main_tab_fonction' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'activities_tab' => array('children' => array('calendar_event_list' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'reports_tab' => array('children' => array('manage_reports' => array('merge_strategy' => 'append', 'children' => array()), 'segments_divider' => array('merge_strategy' => 'append', 'children' => array()), 'manage_segments' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'dashboard_tab' => array('children' => array('oro_dashboard_index' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append')), 'extras' => array()), 'dots_menu' => array('type' => 'dots_menu', 'children' => array('history' => array('merge_strategy' => 'append', 'children' => array()), 'favorite' => array('merge_strategy' => 'append', 'children' => array()), 'mostviewed' => array('merge_strategy' => 'append', 'children' => array())), 'extras' => array()), 'shortcuts' => array('type' => 'shortcuts', 'children' => array('shortcut_compose_email' => array('merge_strategy' => 'append', 'children' => array()), 'shortcut_new_user' => array('merge_strategy' => 'append', 'children' => array()), 'shortcut_list_users' => array('merge_strategy' => 'append', 'children' => array()), 'shortcut_new_role' => array('merge_strategy' => 'append', 'children' => array()), 'shortcut_new_group' => array('merge_strategy' => 'append', 'children' => array()), 'oro_cron_job_shortcut' => array('merge_strategy' => 'append', 'children' => array()), 'shortcut_new_tag' => array('merge_strategy' => 'append', 'children' => array())), 'extras' => array()), 'usermenu' => array('children' => array('oro_email_user_emails' => array('merge_strategy' => 'append', 'children' => array()), 'oro_user_profile_view' => array('merge_strategy' => 'append', 'children' => array()), 'oro_calendar_view_default' => array('merge_strategy' => 'append', 'children' => array())), 'extras' => array()), 'calendar_menu' => array('type' => 'calendar_menu', 'children' => array('oro_calendar_remove_action' => array('merge_strategy' => 'append', 'children' => array()), 'oro_calendar_toggle_action' => array('merge_strategy' => 'append', 'children' => array()), 'oro_calendar_menu_divider' => array('merge_strategy' => 'append', 'children' => array()), 'oro_calendar_color_action' => array('merge_strategy' => 'append', 'children' => array())), 'extras' => array())), 'items' => array('oro_business_unit_list' => array('label' => 'oro.organization.businessunit.entity_plural_label', 'route' => 'oro_business_unit_index', 'extras' => array('position' => 40, 'routes' => array(0 => 'oro_business_unit_*'), 'description' => 'oro.business_unit.menu.list.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_organization_list' => array('label' => 'oro.organization.entity_plural_label', 'route' => 'oro_organization_update_current', 'extras' => array('position' => 50, 'routes' => array(0 => 'oro_organization_*'), 'description' => 'oro.organization.menu.list.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'emails' => array('label' => 'oro.email.entity_plural_label', 'uri' => '#', 'extras' => array('position' => 40), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_email_emailtemplate_list' => array('label' => 'oro.email.emailtemplate.entity_plural_label', 'route' => 'oro_email_emailtemplate_index', 'extras' => array('routes' => array(0 => 'oro_email_emailtemplate_*'), 'description' => 'oro.email.menu.emailtemplate_list.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_email_user_emails' => array('label' => 'oro.email.menu.user_emails', 'route' => 'oro_email_user_emails', 'attributes' => array('class' => 'oro-email-user-emails'), 'extras' => array('routes' => array(0 => 'oro_email_thread_view'), 'position' => 15), 'translateParameters' => array(), 'routeParameters' => array()), 'shortcut_compose_email' => array('label' => 'oro.email.menu.shortcut_compose_email.label', 'route' => 'oro_email_email_create', 'extras' => array('description' => 'oro.email.menu.shortcut_compose_email.description', 'isCustomAction' => true, 'dialog' => true, 'dialog_config' => array('dataUrl' => 'oro_email_email_create', 'aCss' => 'no-hash', 'iCss' => '', 'label' => 'oro.email.menu.shortcut_compose_email.label', 'widget' => array('type' => 'dialog', 'multiple' => true, 'refreshWidgetAlias' => 'activity-list-widget', 'reloadGridName' => 'user-email-grid', 'options' => array('alias' => 'email-dialog', 'dialogOptions' => array('title' => 'oro.email.menu.shortcut_compose_email.label', 'allowMaximize' => true, 'allowMinimize' => true, 'dblclick' => 'maximize', 'maximizedHeightDecreaseBy' => 'minimize-bar', 'width' => 1000))))), 'translateParameters' => array(), 'routeParameters' => array()), 'system_tab' => array('label' => 'oro.user.menu.system_tab.label', 'uri' => '#', 'attributes' => array('class' => 'mobile-hide'), 'extras' => array('position' => 100, 'icon' => 'icon-gear'), 'translateParameters' => array(), 'routeParameters' => array()), 'users_management' => array('label' => 'oro.user.menu.users_management.label', 'uri' => '#', 'extras' => array('position' => 20), 'translateParameters' => array(), 'routeParameters' => array()), 'user_list' => array('label' => 'oro.user.entity_plural_label', 'route' => 'oro_user_index', 'extras' => array('position' => 10, 'routes' => array(0 => '/^oro_user_(?!role\\w+|group\\w+|security\\w+|reset\\w+)\\w+$/'), 'description' => 'oro.user.menu.user_list.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'user_create' => array('label' => 'oro.user.menu.user_create.label', 'route' => 'oro_user_create', 'translateParameters' => array(), 'routeParameters' => array(), 'extras' => array()), 'user_roles' => array('label' => 'oro.user.role.entity_plural_label', 'route' => 'oro_user_role_index', 'extras' => array('position' => 20, 'routes' => array(0 => 'oro_user_role_*'), 'description' => 'oro.user.menu.user_roles.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'user_groups' => array('label' => 'oro.user.group.entity_plural_label', 'route' => 'oro_user_group_index', 'extras' => array('position' => 30, 'routes' => array(0 => 'oro_user_group_*'), 'description' => 'oro.user.menu.user_groupes.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'shortcut_new_user' => array('label' => 'oro.user.menu.shortcut_new_user.label', 'route' => 'oro_user_create', 'extras' => array('description' => 'oro.user.menu.shortcut_new_user.description', 'isCustomAction' => true), 'translateParameters' => array(), 'routeParameters' => array()), 'shortcut_list_users' => array('label' => 'oro.user.menu.shortcut_list_users.label', 'route' => 'oro_user_index', 'extras' => array('description' => 'oro.user.menu.shortcut_list_users.description', 'isCustomAction' => true), 'translateParameters' => array(), 'routeParameters' => array()), 'shortcut_new_role' => array('label' => 'oro.user.menu.shortcut_new_role.label', 'route' => 'oro_user_role_create', 'extras' => array('description' => 'oro.user.menu.shortcut_new_role.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'shortcut_new_group' => array('label' => 'oro.user.menu.shortcut_new_group.label', 'route' => 'oro_user_group_create', 'extras' => array('description' => 'oro.user.menu.shortcut_new_group.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_user_profile_view' => array('label' => 'oro.user.menu.oro_user_profile_view.label', 'route' => 'oro_user_profile_view', 'extras' => array('position' => 10), 'translateParameters' => array(), 'routeParameters' => array()), 'entities_list' => array('label' => 'oro.entity_config.menu.entities_list.label', 'uri' => '#', 'extras' => array('position' => 80), 'translateParameters' => array(), 'routeParameters' => array()), 'entity_management' => array('label' => 'oro.entity_config.menu.entity_management.label', 'route' => 'oro_entityconfig_index', 'extras' => array('routes' => array(0 => 'oro_entityconfig*', 1 => 'oro_entityextend*'), 'description' => 'oro.entity_config.menu.entity_management.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'integrations_submenu' => array('label' => 'oro.integration.menu.integrations_submenu.label', 'uri' => '#', 'extras' => array('position' => 50), 'translateParameters' => array(), 'routeParameters' => array()), 'integrations_list' => array('label' => 'oro.integration.menu.integrations_list.label', 'route' => 'oro_integration_index', 'extras' => array('position' => 10, 'routes' => 'oro_integration_*'), 'translateParameters' => array(), 'routeParameters' => array()), 'main_tab_fichier' => array('label' => 'Fichier', 'uri' => '#', 'extras' => array('position' => 300), 'translateParameters' => array(), 'routeParameters' => array()), 'main_tab_societe' => array('label' => 'Société', 'route' => 'main_fichier_societe', 'translateParameters' => array(), 'routeParameters' => array(), 'extras' => array()), 'main_tab_fonction' => array('label' => 'Fonction', 'route' => 'main_fichier_fonction', 'translateParameters' => array(), 'routeParameters' => array(), 'extras' => array()), 'activities_tab' => array('label' => 'oro.activity.menu.activities_tab.label', 'uri' => '#', 'extras' => array('position' => 30, 'icon' => 'icon-puzzle-piece'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_calendar_view_default' => array('label' => 'oro.calendar.menu.view_default', 'route' => 'oro_calendar_view_default', 'extras' => array('position' => 20), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_calendar_remove_action' => array('label' => 'oro.calendar.context.remove', 'uri' => '#', 'extras' => array('position' => 20, 'module' => 'orocalendar/js/calendar/menu/remove-calendar', 'template' => 'OroCalendarBundle:Calendar:Menu/removeCalendar.html.twig'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_calendar_toggle_action' => array('uri' => '#', 'extras' => array('position' => 10, 'module' => 'orocalendar/js/calendar/menu/toggle-calendar', 'template' => 'OroCalendarBundle:Calendar:Menu/toggleCalendar.html.twig'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_calendar_menu_divider' => array('label' => '', 'extras' => array('position' => 95), 'attributes' => array('class' => 'divider'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_calendar_color_action' => array('uri' => '#', 'extras' => array('position' => 100, 'module' => 'orocalendar/js/calendar/menu/change-calendar-color', 'template' => 'OroCalendarBundle:Calendar:Menu/changeCalendarColor.html.twig'), 'translateParameters' => array(), 'routeParameters' => array()), 'calendar_event_list' => array('label' => 'oro.calendar.calendarevent.entity_plural_label', 'route' => 'oro_calendar_event_index', 'extras' => array('position' => 50, 'routes' => array(0 => 'oro_calendar_event_*')), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_system_calendar_list' => array('label' => 'oro.calendar.systemcalendar.entity_plural_label', 'route' => 'oro_system_calendar_index', 'extras' => array('position' => 95, 'routes' => array(0 => 'oro_system_calendar_*')), 'translateParameters' => array(), 'routeParameters' => array()), 'system_configuration' => array('label' => 'oro.config.menu.system_configuration.label', 'extras' => array('position' => 10, 'description' => 'oro.config.menu.system_configuration.description'), 'route' => 'oro_config_configuration_system', 'translateParameters' => array(), 'routeParameters' => array()), 'oro_cron_job' => array('label' => 'oro.cron.menu.cron_job.label', 'route' => 'oro_cron_job_index', 'extras' => array('position' => 60, 'description' => 'Cron job queue', 'routes' => array(0 => 'oro_cron_job_*')), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_cron_job_shortcut' => array('label' => 'oro.cron.menu.cron_job_shortcut.label', 'route' => 'oro_cron_job_index', 'extras' => array('description' => 'oro.cron.menu.cron_job_shortcut.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'audit_list' => array('label' => 'oro.dataaudit.menu.audit_list.label', 'route' => 'oro_dataaudit_index', 'extras' => array('position' => 70, 'routes' => array(0 => 'oro_dataaudit_*'), 'description' => 'oro.dataaudit.menu.audit_list.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'embedded_forms' => array('label' => 'oro.embeddedform.entity_plural_label', 'route' => 'oro_embedded_form_list', 'extras' => array('position' => 20, 'routes' => array(0 => 'oro_embedded_form_*')), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_notification_emailnotification_list' => array('label' => 'oro.notification.emailnotification.entity_plural_label', 'route' => 'oro_notification_emailnotification_index', 'extras' => array('routes' => array(0 => 'oro_notification_emailnotification_*'), 'description' => 'oro.notification.menu.emailnotification_list.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_platform_system_info' => array('label' => 'oro.platform.system_info', 'extras' => array('position' => 120), 'route' => 'oro_platform_system_info', 'translateParameters' => array(), 'routeParameters' => array()), 'manage_reports' => array('label' => 'oro.report.menu.manage_reports.label', 'route' => 'oro_report_index', 'extras' => array('position' => 10, 'routes' => array(0 => 'oro_report_update', 1 => 'oro_report_create')), 'attributes' => array('class' => 'mobile-hide'), 'translateParameters' => array(), 'routeParameters' => array()), 'reports_tab' => array('label' => 'oro.segment.menu.reports_tab.label', 'uri' => '#', 'extras' => array('position' => 50, 'icon' => 'icon-folder-open'), 'translateParameters' => array(), 'routeParameters' => array()), 'segments_divider' => array('label' => '', 'extras' => array('position' => 100), 'attributes' => array('class' => 'divider'), 'translateParameters' => array(), 'routeParameters' => array()), 'manage_segments' => array('label' => 'oro.segment.menu.manage_segments.label', 'route' => 'oro_segment_index', 'extras' => array('position' => 105, 'routes' => array(0 => 'oro_segment_index', 1 => 'oro_segment_update', 2 => 'oro_segment_create', 3 => 'oro_segment_view')), 'attributes' => array('class' => 'mobile-hide'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_tag_list' => array('label' => 'oro.tag.entity_plural_label', 'route' => 'oro_tag_index', 'extras' => array('position' => 90, 'routes' => array(0 => 'oro_tag_*'), 'description' => 'oro.tag.menu.tag_list.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'shortcut_new_tag' => array('label' => 'oro.tag.menu.shortcut_new_tag.label', 'route' => 'oro_tag_create', 'extras' => array('description' => 'oro.tag.menu.shortcut_new_tag.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'process_definition_list' => array('label' => 'oro.workflow.processdefinition.entity_plural_label', 'extras' => array('position' => 105, 'description' => 'oro.workflow.menu.process_definition_list.description', 'routes' => array(0 => '/^oro_process_definition/')), 'route' => 'oro_process_definition_index', 'translateParameters' => array(), 'routeParameters' => array()), 'workflow_definition_list' => array('label' => 'oro.workflow.workflowdefinition.entity_plural_label', 'extras' => array('position' => 100, 'description' => 'oro.workflow.menu.workflow_definition_list.description', 'routes' => array(0 => '/^oro_workflow_definition/')), 'route' => 'oro_workflow_definition_index', 'translateParameters' => array(), 'routeParameters' => array()), 'dashboard_tab' => array('label' => 'oro.dashboard.menu.dashboards_tab.label', 'uri' => '#', 'extras' => array('position' => 0, 'icon' => 'icon-bar-chart'), 'attributes' => array('class' => 'only-icon'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_dashboard_index' => array('label' => 'oro.dashboard.menu.dashboards_list.label', 'route' => 'oro_dashboard_index', 'extras' => array('position' => 10, 'routes' => array(0 => 'oro_dashboard_update', 1 => 'oro_dashboard_create', 2 => 'oro_dashboard_view')), 'translateParameters' => array(), 'routeParameters' => array()), 'pinbar' => array('label' => 'oro.navigation.menu.pinbar.label', 'extras' => array('icon' => 'icon-folder-close', 'maxItems' => 10), 'uri' => '#', 'translateParameters' => array(), 'routeParameters' => array()), 'history' => array('label' => 'oro.navigation.menu.history.label', 'extras' => array('icon' => 'icon-time', 'activeIfFirstIsEmpty' => true), 'uri' => '#', 'translateParameters' => array(), 'routeParameters' => array()), 'favorite' => array('label' => 'oro.navigation.menu.favorite.label', 'extras' => array('icon' => 'icon-star-empty'), 'uri' => '#', 'translateParameters' => array(), 'routeParameters' => array()), 'mostviewed' => array('label' => 'oro.navigation.menu.mostviewed.label', 'extras' => array('icon' => 'icon-flag'), 'uri' => '#', 'translateParameters' => array(), 'routeParameters' => array())), 'oro_navigation_elements' => array('pinButton' => array('routes' => array('oro_calendar_view' => false, 'oro_calendar_view_default' => false, 'oro_report_create' => false, 'oro_report_update' => false, 'oro_segment_create' => false, 'oro_segment_update' => false, 'oro_workflow_definition_update' => false, 'oro_workflow_definition_create' => false, 'oro_workflow_definition_clone' => false, 'oro_default' => false, 'oro_dashboard_view' => false), 'default' => true), 'favoriteButton' => array('routes' => array('oro_calendar_view' => false, 'oro_calendar_view_default' => false, 'oro_default' => false, 'oro_dashboard_view' => false), 'default' => true)), 'settings' => array('resolved' => true, 'maxItems' => array('value' => 20, 'scope' => 'app'), 'title_suffix' => array('value' => '', 'scope' => 'app'), 'title_delimiter' => array('value' => '-', 'scope' => 'app'), 'breadcrumb_menu' => array('value' => 'application_menu', 'scope' => 'app'))));

        return $instance;
    }

    /**
     * Gets the 'oro_menu.configuration_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\Config\Resolver\SystemAwareResolver A Oro\Component\Config\Resolver\SystemAwareResolver instance.
     */
    protected function getOroMenu_ConfigurationResolverService()
    {
        return $this->services['oro_menu.configuration_resolver'] = new \Oro\Component\Config\Resolver\SystemAwareResolver($this);
    }

    /**
     * Gets the 'oro_menu.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\MenuFactory A Knp\Menu\MenuFactory instance.
     */
    protected function getOroMenu_FactoryService()
    {
        $this->services['oro_menu.factory'] = $instance = new \Knp\Menu\MenuFactory();

        $instance->addExtension($this->get('oro_menu_acl_extension'));

        return $instance;
    }

    /**
     * Gets the 'oro_menu.twig.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Twig\MenuExtension A Oro\Bundle\NavigationBundle\Twig\MenuExtension instance.
     */
    protected function getOroMenu_Twig_ExtensionService()
    {
        $this->services['oro_menu.twig.extension'] = $instance = new \Oro\Bundle\NavigationBundle\Twig\MenuExtension($this->get('knp_menu.helper'), $this->get('oro_menu.builder_chain'), $this->get('oro_navigation.breadcrumb_manager'));

        $instance->setMenuConfiguration(array('templates' => array('application_menu' => array('template' => 'OroNavigationBundle:Menu:application_menu.html.twig', 'currentClass' => 'active', 'ancestorClass' => 'active', 'allow_safe_labels' => true, 'rootClass' => 'nav nav-multilevel main-menu'), 'dots_menu' => array('template' => 'OroNavigationBundle:Menu:dots_menu.html.twig'), 'shortcuts' => array('template' => 'OroNavigationBundle:Menu:shortcuts.html.twig'), 'calendar_menu' => array('template' => 'OroCalendarBundle:Calendar:Menu/contextMenu.html.twig', 'rootClass' => 'dropdown-menu context-menu'), 'navbar' => array('template' => 'OroNavigationBundle:Menu:navbar.html.twig'), 'dropdown' => array('template' => 'OroNavigationBundle:Menu:dropdown.html.twig'), 'horizontal_tabs' => array('template' => 'OroNavigationBundle:Menu:horizontal_tabs.html.twig'), 'pinbar' => array('template' => 'OroNavigationBundle:Menu:pinbar.html.twig'), 'favorite' => array('template' => 'OroNavigationBundle:Menu:favorites.html.twig'), 'mostviewed' => array('template' => 'OroNavigationBundle:Menu:mostviewed.html.twig', 'rootClass' => 'extra-list'), 'history' => array('template' => 'OroNavigationBundle:Menu:history.html.twig', 'rootClass' => 'extra-list', 'currentAsLink' => false)), 'tree' => array('application_menu' => array('type' => 'application_menu', 'children' => array('system_tab' => array('children' => array('users_management' => array('children' => array('oro_business_unit_list' => array('merge_strategy' => 'append', 'children' => array()), 'oro_organization_list' => array('merge_strategy' => 'append', 'children' => array()), 'user_list' => array('merge_strategy' => 'append', 'children' => array()), 'user_roles' => array('merge_strategy' => 'append', 'children' => array()), 'user_groups' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'emails' => array('children' => array('oro_email_emailtemplate_list' => array('merge_strategy' => 'append', 'children' => array()), 'oro_notification_emailnotification_list' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'entities_list' => array('children' => array('entity_management' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'integrations_submenu' => array('children' => array('integrations_list' => array('merge_strategy' => 'append', 'children' => array()), 'embedded_forms' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'oro_system_calendar_list' => array('merge_strategy' => 'append', 'children' => array()), 'system_configuration' => array('merge_strategy' => 'append', 'children' => array()), 'oro_cron_job' => array('merge_strategy' => 'append', 'children' => array()), 'audit_list' => array('merge_strategy' => 'append', 'children' => array()), 'oro_platform_system_info' => array('merge_strategy' => 'append', 'children' => array()), 'oro_tag_list' => array('merge_strategy' => 'append', 'children' => array()), 'process_definition_list' => array('merge_strategy' => 'append', 'children' => array()), 'workflow_definition_list' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'main_tab_fichier' => array('children' => array('main_tab_societe' => array('merge_strategy' => 'append', 'children' => array()), 'main_tab_fonction' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'activities_tab' => array('children' => array('calendar_event_list' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'reports_tab' => array('children' => array('manage_reports' => array('merge_strategy' => 'append', 'children' => array()), 'segments_divider' => array('merge_strategy' => 'append', 'children' => array()), 'manage_segments' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append'), 'dashboard_tab' => array('children' => array('oro_dashboard_index' => array('merge_strategy' => 'append', 'children' => array())), 'merge_strategy' => 'append')), 'extras' => array()), 'dots_menu' => array('type' => 'dots_menu', 'children' => array('history' => array('merge_strategy' => 'append', 'children' => array()), 'favorite' => array('merge_strategy' => 'append', 'children' => array()), 'mostviewed' => array('merge_strategy' => 'append', 'children' => array())), 'extras' => array()), 'shortcuts' => array('type' => 'shortcuts', 'children' => array('shortcut_compose_email' => array('merge_strategy' => 'append', 'children' => array()), 'shortcut_new_user' => array('merge_strategy' => 'append', 'children' => array()), 'shortcut_list_users' => array('merge_strategy' => 'append', 'children' => array()), 'shortcut_new_role' => array('merge_strategy' => 'append', 'children' => array()), 'shortcut_new_group' => array('merge_strategy' => 'append', 'children' => array()), 'oro_cron_job_shortcut' => array('merge_strategy' => 'append', 'children' => array()), 'shortcut_new_tag' => array('merge_strategy' => 'append', 'children' => array())), 'extras' => array()), 'usermenu' => array('children' => array('oro_email_user_emails' => array('merge_strategy' => 'append', 'children' => array()), 'oro_user_profile_view' => array('merge_strategy' => 'append', 'children' => array()), 'oro_calendar_view_default' => array('merge_strategy' => 'append', 'children' => array())), 'extras' => array()), 'calendar_menu' => array('type' => 'calendar_menu', 'children' => array('oro_calendar_remove_action' => array('merge_strategy' => 'append', 'children' => array()), 'oro_calendar_toggle_action' => array('merge_strategy' => 'append', 'children' => array()), 'oro_calendar_menu_divider' => array('merge_strategy' => 'append', 'children' => array()), 'oro_calendar_color_action' => array('merge_strategy' => 'append', 'children' => array())), 'extras' => array())), 'items' => array('oro_business_unit_list' => array('label' => 'oro.organization.businessunit.entity_plural_label', 'route' => 'oro_business_unit_index', 'extras' => array('position' => 40, 'routes' => array(0 => 'oro_business_unit_*'), 'description' => 'oro.business_unit.menu.list.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_organization_list' => array('label' => 'oro.organization.entity_plural_label', 'route' => 'oro_organization_update_current', 'extras' => array('position' => 50, 'routes' => array(0 => 'oro_organization_*'), 'description' => 'oro.organization.menu.list.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'emails' => array('label' => 'oro.email.entity_plural_label', 'uri' => '#', 'extras' => array('position' => 40), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_email_emailtemplate_list' => array('label' => 'oro.email.emailtemplate.entity_plural_label', 'route' => 'oro_email_emailtemplate_index', 'extras' => array('routes' => array(0 => 'oro_email_emailtemplate_*'), 'description' => 'oro.email.menu.emailtemplate_list.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_email_user_emails' => array('label' => 'oro.email.menu.user_emails', 'route' => 'oro_email_user_emails', 'attributes' => array('class' => 'oro-email-user-emails'), 'extras' => array('routes' => array(0 => 'oro_email_thread_view'), 'position' => 15), 'translateParameters' => array(), 'routeParameters' => array()), 'shortcut_compose_email' => array('label' => 'oro.email.menu.shortcut_compose_email.label', 'route' => 'oro_email_email_create', 'extras' => array('description' => 'oro.email.menu.shortcut_compose_email.description', 'isCustomAction' => true, 'dialog' => true, 'dialog_config' => array('dataUrl' => 'oro_email_email_create', 'aCss' => 'no-hash', 'iCss' => '', 'label' => 'oro.email.menu.shortcut_compose_email.label', 'widget' => array('type' => 'dialog', 'multiple' => true, 'refreshWidgetAlias' => 'activity-list-widget', 'reloadGridName' => 'user-email-grid', 'options' => array('alias' => 'email-dialog', 'dialogOptions' => array('title' => 'oro.email.menu.shortcut_compose_email.label', 'allowMaximize' => true, 'allowMinimize' => true, 'dblclick' => 'maximize', 'maximizedHeightDecreaseBy' => 'minimize-bar', 'width' => 1000))))), 'translateParameters' => array(), 'routeParameters' => array()), 'system_tab' => array('label' => 'oro.user.menu.system_tab.label', 'uri' => '#', 'attributes' => array('class' => 'mobile-hide'), 'extras' => array('position' => 100, 'icon' => 'icon-gear'), 'translateParameters' => array(), 'routeParameters' => array()), 'users_management' => array('label' => 'oro.user.menu.users_management.label', 'uri' => '#', 'extras' => array('position' => 20), 'translateParameters' => array(), 'routeParameters' => array()), 'user_list' => array('label' => 'oro.user.entity_plural_label', 'route' => 'oro_user_index', 'extras' => array('position' => 10, 'routes' => array(0 => '/^oro_user_(?!role\\w+|group\\w+|security\\w+|reset\\w+)\\w+$/'), 'description' => 'oro.user.menu.user_list.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'user_create' => array('label' => 'oro.user.menu.user_create.label', 'route' => 'oro_user_create', 'translateParameters' => array(), 'routeParameters' => array(), 'extras' => array()), 'user_roles' => array('label' => 'oro.user.role.entity_plural_label', 'route' => 'oro_user_role_index', 'extras' => array('position' => 20, 'routes' => array(0 => 'oro_user_role_*'), 'description' => 'oro.user.menu.user_roles.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'user_groups' => array('label' => 'oro.user.group.entity_plural_label', 'route' => 'oro_user_group_index', 'extras' => array('position' => 30, 'routes' => array(0 => 'oro_user_group_*'), 'description' => 'oro.user.menu.user_groupes.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'shortcut_new_user' => array('label' => 'oro.user.menu.shortcut_new_user.label', 'route' => 'oro_user_create', 'extras' => array('description' => 'oro.user.menu.shortcut_new_user.description', 'isCustomAction' => true), 'translateParameters' => array(), 'routeParameters' => array()), 'shortcut_list_users' => array('label' => 'oro.user.menu.shortcut_list_users.label', 'route' => 'oro_user_index', 'extras' => array('description' => 'oro.user.menu.shortcut_list_users.description', 'isCustomAction' => true), 'translateParameters' => array(), 'routeParameters' => array()), 'shortcut_new_role' => array('label' => 'oro.user.menu.shortcut_new_role.label', 'route' => 'oro_user_role_create', 'extras' => array('description' => 'oro.user.menu.shortcut_new_role.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'shortcut_new_group' => array('label' => 'oro.user.menu.shortcut_new_group.label', 'route' => 'oro_user_group_create', 'extras' => array('description' => 'oro.user.menu.shortcut_new_group.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_user_profile_view' => array('label' => 'oro.user.menu.oro_user_profile_view.label', 'route' => 'oro_user_profile_view', 'extras' => array('position' => 10), 'translateParameters' => array(), 'routeParameters' => array()), 'entities_list' => array('label' => 'oro.entity_config.menu.entities_list.label', 'uri' => '#', 'extras' => array('position' => 80), 'translateParameters' => array(), 'routeParameters' => array()), 'entity_management' => array('label' => 'oro.entity_config.menu.entity_management.label', 'route' => 'oro_entityconfig_index', 'extras' => array('routes' => array(0 => 'oro_entityconfig*', 1 => 'oro_entityextend*'), 'description' => 'oro.entity_config.menu.entity_management.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'integrations_submenu' => array('label' => 'oro.integration.menu.integrations_submenu.label', 'uri' => '#', 'extras' => array('position' => 50), 'translateParameters' => array(), 'routeParameters' => array()), 'integrations_list' => array('label' => 'oro.integration.menu.integrations_list.label', 'route' => 'oro_integration_index', 'extras' => array('position' => 10, 'routes' => 'oro_integration_*'), 'translateParameters' => array(), 'routeParameters' => array()), 'main_tab_fichier' => array('label' => 'Fichier', 'uri' => '#', 'extras' => array('position' => 300), 'translateParameters' => array(), 'routeParameters' => array()), 'main_tab_societe' => array('label' => 'Société', 'route' => 'main_fichier_societe', 'translateParameters' => array(), 'routeParameters' => array(), 'extras' => array()), 'main_tab_fonction' => array('label' => 'Fonction', 'route' => 'main_fichier_fonction', 'translateParameters' => array(), 'routeParameters' => array(), 'extras' => array()), 'activities_tab' => array('label' => 'oro.activity.menu.activities_tab.label', 'uri' => '#', 'extras' => array('position' => 30, 'icon' => 'icon-puzzle-piece'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_calendar_view_default' => array('label' => 'oro.calendar.menu.view_default', 'route' => 'oro_calendar_view_default', 'extras' => array('position' => 20), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_calendar_remove_action' => array('label' => 'oro.calendar.context.remove', 'uri' => '#', 'extras' => array('position' => 20, 'module' => 'orocalendar/js/calendar/menu/remove-calendar', 'template' => 'OroCalendarBundle:Calendar:Menu/removeCalendar.html.twig'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_calendar_toggle_action' => array('uri' => '#', 'extras' => array('position' => 10, 'module' => 'orocalendar/js/calendar/menu/toggle-calendar', 'template' => 'OroCalendarBundle:Calendar:Menu/toggleCalendar.html.twig'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_calendar_menu_divider' => array('label' => '', 'extras' => array('position' => 95), 'attributes' => array('class' => 'divider'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_calendar_color_action' => array('uri' => '#', 'extras' => array('position' => 100, 'module' => 'orocalendar/js/calendar/menu/change-calendar-color', 'template' => 'OroCalendarBundle:Calendar:Menu/changeCalendarColor.html.twig'), 'translateParameters' => array(), 'routeParameters' => array()), 'calendar_event_list' => array('label' => 'oro.calendar.calendarevent.entity_plural_label', 'route' => 'oro_calendar_event_index', 'extras' => array('position' => 50, 'routes' => array(0 => 'oro_calendar_event_*')), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_system_calendar_list' => array('label' => 'oro.calendar.systemcalendar.entity_plural_label', 'route' => 'oro_system_calendar_index', 'extras' => array('position' => 95, 'routes' => array(0 => 'oro_system_calendar_*')), 'translateParameters' => array(), 'routeParameters' => array()), 'system_configuration' => array('label' => 'oro.config.menu.system_configuration.label', 'extras' => array('position' => 10, 'description' => 'oro.config.menu.system_configuration.description'), 'route' => 'oro_config_configuration_system', 'translateParameters' => array(), 'routeParameters' => array()), 'oro_cron_job' => array('label' => 'oro.cron.menu.cron_job.label', 'route' => 'oro_cron_job_index', 'extras' => array('position' => 60, 'description' => 'Cron job queue', 'routes' => array(0 => 'oro_cron_job_*')), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_cron_job_shortcut' => array('label' => 'oro.cron.menu.cron_job_shortcut.label', 'route' => 'oro_cron_job_index', 'extras' => array('description' => 'oro.cron.menu.cron_job_shortcut.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'audit_list' => array('label' => 'oro.dataaudit.menu.audit_list.label', 'route' => 'oro_dataaudit_index', 'extras' => array('position' => 70, 'routes' => array(0 => 'oro_dataaudit_*'), 'description' => 'oro.dataaudit.menu.audit_list.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'embedded_forms' => array('label' => 'oro.embeddedform.entity_plural_label', 'route' => 'oro_embedded_form_list', 'extras' => array('position' => 20, 'routes' => array(0 => 'oro_embedded_form_*')), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_notification_emailnotification_list' => array('label' => 'oro.notification.emailnotification.entity_plural_label', 'route' => 'oro_notification_emailnotification_index', 'extras' => array('routes' => array(0 => 'oro_notification_emailnotification_*'), 'description' => 'oro.notification.menu.emailnotification_list.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_platform_system_info' => array('label' => 'oro.platform.system_info', 'extras' => array('position' => 120), 'route' => 'oro_platform_system_info', 'translateParameters' => array(), 'routeParameters' => array()), 'manage_reports' => array('label' => 'oro.report.menu.manage_reports.label', 'route' => 'oro_report_index', 'extras' => array('position' => 10, 'routes' => array(0 => 'oro_report_update', 1 => 'oro_report_create')), 'attributes' => array('class' => 'mobile-hide'), 'translateParameters' => array(), 'routeParameters' => array()), 'reports_tab' => array('label' => 'oro.segment.menu.reports_tab.label', 'uri' => '#', 'extras' => array('position' => 50, 'icon' => 'icon-folder-open'), 'translateParameters' => array(), 'routeParameters' => array()), 'segments_divider' => array('label' => '', 'extras' => array('position' => 100), 'attributes' => array('class' => 'divider'), 'translateParameters' => array(), 'routeParameters' => array()), 'manage_segments' => array('label' => 'oro.segment.menu.manage_segments.label', 'route' => 'oro_segment_index', 'extras' => array('position' => 105, 'routes' => array(0 => 'oro_segment_index', 1 => 'oro_segment_update', 2 => 'oro_segment_create', 3 => 'oro_segment_view')), 'attributes' => array('class' => 'mobile-hide'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_tag_list' => array('label' => 'oro.tag.entity_plural_label', 'route' => 'oro_tag_index', 'extras' => array('position' => 90, 'routes' => array(0 => 'oro_tag_*'), 'description' => 'oro.tag.menu.tag_list.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'shortcut_new_tag' => array('label' => 'oro.tag.menu.shortcut_new_tag.label', 'route' => 'oro_tag_create', 'extras' => array('description' => 'oro.tag.menu.shortcut_new_tag.description'), 'translateParameters' => array(), 'routeParameters' => array()), 'process_definition_list' => array('label' => 'oro.workflow.processdefinition.entity_plural_label', 'extras' => array('position' => 105, 'description' => 'oro.workflow.menu.process_definition_list.description', 'routes' => array(0 => '/^oro_process_definition/')), 'route' => 'oro_process_definition_index', 'translateParameters' => array(), 'routeParameters' => array()), 'workflow_definition_list' => array('label' => 'oro.workflow.workflowdefinition.entity_plural_label', 'extras' => array('position' => 100, 'description' => 'oro.workflow.menu.workflow_definition_list.description', 'routes' => array(0 => '/^oro_workflow_definition/')), 'route' => 'oro_workflow_definition_index', 'translateParameters' => array(), 'routeParameters' => array()), 'dashboard_tab' => array('label' => 'oro.dashboard.menu.dashboards_tab.label', 'uri' => '#', 'extras' => array('position' => 0, 'icon' => 'icon-bar-chart'), 'attributes' => array('class' => 'only-icon'), 'translateParameters' => array(), 'routeParameters' => array()), 'oro_dashboard_index' => array('label' => 'oro.dashboard.menu.dashboards_list.label', 'route' => 'oro_dashboard_index', 'extras' => array('position' => 10, 'routes' => array(0 => 'oro_dashboard_update', 1 => 'oro_dashboard_create', 2 => 'oro_dashboard_view')), 'translateParameters' => array(), 'routeParameters' => array()), 'pinbar' => array('label' => 'oro.navigation.menu.pinbar.label', 'extras' => array('icon' => 'icon-folder-close', 'maxItems' => 10), 'uri' => '#', 'translateParameters' => array(), 'routeParameters' => array()), 'history' => array('label' => 'oro.navigation.menu.history.label', 'extras' => array('icon' => 'icon-time', 'activeIfFirstIsEmpty' => true), 'uri' => '#', 'translateParameters' => array(), 'routeParameters' => array()), 'favorite' => array('label' => 'oro.navigation.menu.favorite.label', 'extras' => array('icon' => 'icon-star-empty'), 'uri' => '#', 'translateParameters' => array(), 'routeParameters' => array()), 'mostviewed' => array('label' => 'oro.navigation.menu.mostviewed.label', 'extras' => array('icon' => 'icon-flag'), 'uri' => '#', 'translateParameters' => array(), 'routeParameters' => array())), 'oro_navigation_elements' => array('pinButton' => array('routes' => array('oro_calendar_view' => false, 'oro_calendar_view_default' => false, 'oro_report_create' => false, 'oro_report_update' => false, 'oro_segment_create' => false, 'oro_segment_update' => false, 'oro_workflow_definition_update' => false, 'oro_workflow_definition_create' => false, 'oro_workflow_definition_clone' => false, 'oro_default' => false, 'oro_dashboard_view' => false), 'default' => true), 'favoriteButton' => array('routes' => array('oro_calendar_view' => false, 'oro_calendar_view_default' => false, 'oro_default' => false, 'oro_dashboard_view' => false), 'default' => true)), 'settings' => array('resolved' => true, 'maxItems' => array('value' => 20, 'scope' => 'app'), 'title_suffix' => array('value' => '', 'scope' => 'app'), 'title_delimiter' => array('value' => '-', 'scope' => 'app'), 'breadcrumb_menu' => array('value' => 'application_menu', 'scope' => 'app'))));

        return $instance;
    }

    /**
     * Gets the 'oro_menu_acl_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Menu\AclAwareMenuFactoryExtension A Oro\Bundle\NavigationBundle\Menu\AclAwareMenuFactoryExtension instance.
     */
    protected function getOroMenuAclExtensionService()
    {
        $this->services['oro_menu_acl_extension'] = $instance = new \Oro\Bundle\NavigationBundle\Menu\AclAwareMenuFactoryExtension($this->get('router'), $this->get('oro_security.security_facade'));

        $instance->setCache($this->get('oro_menu.cache'));

        return $instance;
    }

    /**
     * Gets the 'oro_migration.data_fixtures.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\MigrationBundle\Migration\Loader\DataFixturesLoader A Oro\Bundle\MigrationBundle\Migration\Loader\DataFixturesLoader instance.
     */
    protected function getOroMigration_DataFixtures_LoaderService()
    {
        return $this->services['oro_migration.data_fixtures.loader'] = new \Oro\Bundle\MigrationBundle\Migration\Loader\DataFixturesLoader($this->get('doctrine.orm.default_entity_manager'), $this);
    }

    /**
     * Gets the 'oro_migration.db_id_name_generator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Tools\ExtendDbIdentifierNameGenerator A Oro\Bundle\EntityExtendBundle\Tools\ExtendDbIdentifierNameGenerator instance.
     */
    protected function getOroMigration_DbIdNameGeneratorService()
    {
        return $this->services['oro_migration.db_id_name_generator'] = new \Oro\Bundle\EntityExtendBundle\Tools\ExtendDbIdentifierNameGenerator();
    }

    /**
     * Gets the 'oro_migration.listener.console_command_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\MigrationBundle\EventListener\ConsoleCommandListener A Oro\Bundle\MigrationBundle\EventListener\ConsoleCommandListener instance.
     */
    protected function getOroMigration_Listener_ConsoleCommandListenerService()
    {
        return $this->services['oro_migration.listener.console_command_listener'] = new \Oro\Bundle\MigrationBundle\EventListener\ConsoleCommandListener();
    }

    /**
     * Gets the 'oro_migration.listener.release_data_fixture' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\MigrationBundle\EventListener\ReleaseDataFixtureListener A Oro\Bundle\MigrationBundle\EventListener\ReleaseDataFixtureListener instance.
     */
    protected function getOroMigration_Listener_ReleaseDataFixtureService()
    {
        return $this->services['oro_migration.listener.release_data_fixture'] = new \Oro\Bundle\MigrationBundle\EventListener\ReleaseDataFixtureListener($this->get('kernel'));
    }

    /**
     * Gets the 'oro_migration.migration.extension.data_strore' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\MigrationBundle\Migration\Extension\DataStorageExtension A Oro\Bundle\MigrationBundle\Migration\Extension\DataStorageExtension instance.
     */
    protected function getOroMigration_Migration_Extension_DataStroreService()
    {
        return $this->services['oro_migration.migration.extension.data_strore'] = new \Oro\Bundle\MigrationBundle\Migration\Extension\DataStorageExtension();
    }

    /**
     * Gets the 'oro_migration.migration.extension.rename' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\MigrationBundle\Migration\Extension\RenameExtension A Oro\Bundle\MigrationBundle\Migration\Extension\RenameExtension instance.
     */
    protected function getOroMigration_Migration_Extension_RenameService()
    {
        return $this->services['oro_migration.migration.extension.rename'] = new \Oro\Bundle\MigrationBundle\Migration\Extension\RenameExtension();
    }

    /**
     * Gets the 'oro_migration.migration.pre_up.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\MigrationBundle\EventListener\PreUpMigrationListener A Oro\Bundle\MigrationBundle\EventListener\PreUpMigrationListener instance.
     */
    protected function getOroMigration_Migration_PreUp_ListenerService()
    {
        return $this->services['oro_migration.migration.pre_up.listener'] = new \Oro\Bundle\MigrationBundle\EventListener\PreUpMigrationListener($this->get('kernel'));
    }

    /**
     * Gets the 'oro_migration.migrations.executor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Migration\ExtendMigrationExecutor A Oro\Bundle\EntityExtendBundle\Migration\ExtendMigrationExecutor instance.
     */
    protected function getOroMigration_Migrations_ExecutorService()
    {
        $this->services['oro_migration.migrations.executor'] = $instance = new \Oro\Bundle\EntityExtendBundle\Migration\ExtendMigrationExecutor($this->get('oro_migration.migrations.query_executor'));

        $instance->setExtensionManager($this->get('oro_migration.migrations.extension_manager'));
        $instance->setNameGenerator($this->get('oro_migration.db_id_name_generator'));
        $instance->setExtendOptionsManager($this->get('oro_entity_extend.migration.options_manager'));

        return $instance;
    }

    /**
     * Gets the 'oro_migration.migrations.extension_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\MigrationBundle\Migration\MigrationExtensionManager A Oro\Bundle\MigrationBundle\Migration\MigrationExtensionManager instance.
     */
    protected function getOroMigration_Migrations_ExtensionManagerService()
    {
        $this->services['oro_migration.migrations.extension_manager'] = $instance = new \Oro\Bundle\MigrationBundle\Migration\MigrationExtensionManager();

        $instance->addExtension('attachment', $this->get('oro_attachment.migration.extension.attachment'));
        $instance->addExtension('change_type', $this->get('oro_entity.migration.extension.change_type'));
        $instance->addExtension('extend', $this->get('oro_entity_extend.migration.extension.extend'));
        $instance->addExtension('rename', $this->get('oro_entity_extend.migration.extension.rename'));
        $instance->addExtension('activity', $this->get('oro_activity.migration.extension.activity'));
        $instance->addExtension('activity_list', $this->get('oro_activity_list.migration.extension.activity_list'));
        $instance->addExtension('audit_field', $this->get('oro_dataaudit.migration.extension.audit_field'));
        $instance->addExtension('data_store', $this->get('oro_migration.migration.extension.data_strore'));
        $instance->addExtension('note', $this->get('oro_note.migration.extension.note'));
        $instance->addExtension('comment', $this->get('oro_comment.migration.extension.comment'));
        $instance->addExtension('tracking_identifier', $this->get('oro_tracking.migration.extension.tracking_identifier'));
        $instance->addExtension('visit_event_association', $this->get('oro_tracking.migration.extension.visit_event_association'));

        return $instance;
    }

    /**
     * Gets the 'oro_migration.migrations.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\MigrationBundle\Migration\Loader\MigrationsLoader A Oro\Bundle\MigrationBundle\Migration\Loader\MigrationsLoader instance.
     */
    protected function getOroMigration_Migrations_LoaderService()
    {
        return $this->services['oro_migration.migrations.loader'] = new \Oro\Bundle\MigrationBundle\Migration\Loader\MigrationsLoader($this->get('kernel'), $this->get('doctrine.dbal.default_connection'), $this, $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_migration.migrations.query_executor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\MigrationBundle\Migration\MigrationQueryExecutor A Oro\Bundle\MigrationBundle\Migration\MigrationQueryExecutor instance.
     */
    protected function getOroMigration_Migrations_QueryExecutorService()
    {
        return $this->services['oro_migration.migrations.query_executor'] = new \Oro\Bundle\MigrationBundle\Migration\MigrationQueryExecutor($this->get('doctrine.dbal.default_connection'));
    }

    /**
     * Gets the 'oro_migration.tools.schema_dumper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\MigrationBundle\Tools\SchemaDumper A Oro\Bundle\MigrationBundle\Tools\SchemaDumper instance.
     */
    public function getOroMigration_Tools_SchemaDumperService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_migration.tools.schema_dumper'] = new OroBundleMigrationBundleToolsSchemaDumper_000000002e47e8d200000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroMigration_Tools_SchemaDumperService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\MigrationBundle\Tools\SchemaDumper($this->get('twig'));
    }

    /**
     * Gets the 'oro_migration.twig.schema_dumper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\MigrationBundle\Twig\SchemaDumperExtension A Oro\Bundle\MigrationBundle\Twig\SchemaDumperExtension instance.
     */
    protected function getOroMigration_Twig_SchemaDumperService()
    {
        return $this->services['oro_migration.twig.schema_dumper'] = new \Oro\Bundle\MigrationBundle\Twig\SchemaDumperExtension($this->get('doctrine'));
    }

    /**
     * Gets the 'oro_navigation.breadcrumb_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Menu\BreadcrumbManager A Oro\Bundle\NavigationBundle\Menu\BreadcrumbManager instance.
     */
    protected function getOroNavigation_BreadcrumbManagerService()
    {
        return $this->services['oro_navigation.breadcrumb_manager'] = new \Oro\Bundle\NavigationBundle\Menu\BreadcrumbManager($this->get('oro_menu.builder_chain'), $this->get('knp_menu.matcher'), $this->get('router'));
    }

    /**
     * Gets the 'oro_navigation.content.datagrid_tag_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Content\DataGridTagListener A Oro\Bundle\NavigationBundle\Content\DataGridTagListener instance.
     */
    protected function getOroNavigation_Content_DatagridTagListenerService()
    {
        return $this->services['oro_navigation.content.datagrid_tag_listener'] = new \Oro\Bundle\NavigationBundle\Content\DataGridTagListener($this->get('oro_navigation.content.tag_generator_chain'));
    }

    /**
     * Gets the 'oro_navigation.content.doctrine_tag_generator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Content\DoctrineTagGenerator A Oro\Bundle\NavigationBundle\Content\DoctrineTagGenerator instance.
     */
    protected function getOroNavigation_Content_DoctrineTagGeneratorService()
    {
        return $this->services['oro_navigation.content.doctrine_tag_generator'] = new \Oro\Bundle\NavigationBundle\Content\DoctrineTagGenerator($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_entity.orm.entity_class_resolver'));
    }

    /**
     * Gets the 'oro_navigation.content.simple_tag_generator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Content\SimpleTagGenerator A Oro\Bundle\NavigationBundle\Content\SimpleTagGenerator instance.
     */
    protected function getOroNavigation_Content_SimpleTagGeneratorService()
    {
        return $this->services['oro_navigation.content.simple_tag_generator'] = new \Oro\Bundle\NavigationBundle\Content\SimpleTagGenerator();
    }

    /**
     * Gets the 'oro_navigation.content.tag_generator_chain' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Content\TagGeneratorChain A Oro\Bundle\NavigationBundle\Content\TagGeneratorChain instance.
     */
    protected function getOroNavigation_Content_TagGeneratorChainService()
    {
        return $this->services['oro_navigation.content.tag_generator_chain'] = new \Oro\Bundle\NavigationBundle\Content\TagGeneratorChain(array(0 => $this->get('oro_navigation.content.doctrine_tag_generator'), 1 => $this->get('oro_navigation.content.simple_tag_generator')));
    }

    /**
     * Gets the 'oro_navigation.content.topic_sender' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Content\TopicSender A Oro\Bundle\NavigationBundle\Content\TopicSender instance.
     */
    protected function getOroNavigation_Content_TopicSenderService()
    {
        return $this->services['oro_navigation.content.topic_sender'] = new \Oro\Bundle\NavigationBundle\Content\TopicSender($this->get('oro_wamp.publisher'), new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_navigation.content.tag_generator_chain', false), new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'security.context', false), $this->get('logger'));
    }

    /**
     * Gets the 'oro_navigation.content_provider.menu.application_menu' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\ContentProvider\MenuContentProvider A Oro\Bundle\NavigationBundle\ContentProvider\MenuContentProvider instance.
     */
    protected function getOroNavigation_ContentProvider_Menu_ApplicationMenuService()
    {
        return $this->services['oro_navigation.content_provider.menu.application_menu'] = new \Oro\Bundle\NavigationBundle\ContentProvider\MenuContentProvider($this->get('oro_menu.twig.extension'), 'application_menu', 'mainMenu');
    }

    /**
     * Gets the 'oro_navigation.content_provider.menu.history_menu' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\ContentProvider\MenuContentProvider A Oro\Bundle\NavigationBundle\ContentProvider\MenuContentProvider instance.
     */
    protected function getOroNavigation_ContentProvider_Menu_HistoryMenuService()
    {
        return $this->services['oro_navigation.content_provider.menu.history_menu'] = new \Oro\Bundle\NavigationBundle\ContentProvider\MenuContentProvider($this->get('oro_menu.twig.extension'), 'history', 'history');
    }

    /**
     * Gets the 'oro_navigation.content_provider.menu.mostviewed_menu' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\ContentProvider\MenuContentProvider A Oro\Bundle\NavigationBundle\ContentProvider\MenuContentProvider instance.
     */
    protected function getOroNavigation_ContentProvider_Menu_MostviewedMenuService()
    {
        return $this->services['oro_navigation.content_provider.menu.mostviewed_menu'] = new \Oro\Bundle\NavigationBundle\ContentProvider\MenuContentProvider($this->get('oro_menu.twig.extension'), 'mostviewed', 'mostviewed');
    }

    /**
     * Gets the 'oro_navigation.content_provider.navigation_elements' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\ContentProvider\NavigationElementsContentProvider A Oro\Bundle\NavigationBundle\ContentProvider\NavigationElementsContentProvider instance.
     */
    protected function getOroNavigation_ContentProvider_NavigationElementsService()
    {
        $this->services['oro_navigation.content_provider.navigation_elements'] = $instance = new \Oro\Bundle\NavigationBundle\ContentProvider\NavigationElementsContentProvider(array('pinButton' => array('routes' => array('oro_calendar_view' => false, 'oro_calendar_view_default' => false, 'oro_report_create' => false, 'oro_report_update' => false, 'oro_segment_create' => false, 'oro_segment_update' => false, 'oro_workflow_definition_update' => false, 'oro_workflow_definition_create' => false, 'oro_workflow_definition_clone' => false, 'oro_default' => false, 'oro_dashboard_view' => false), 'default' => true), 'favoriteButton' => array('routes' => array('oro_calendar_view' => false, 'oro_calendar_view_default' => false, 'oro_default' => false, 'oro_dashboard_view' => false), 'default' => true)));

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_navigation.content_provider.title' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\ContentProvider\TitleContentProvider A Oro\Bundle\NavigationBundle\ContentProvider\TitleContentProvider instance.
     */
    protected function getOroNavigation_ContentProvider_TitleService()
    {
        return $this->services['oro_navigation.content_provider.title'] = new \Oro\Bundle\NavigationBundle\ContentProvider\TitleContentProvider($this->get('oro_navigation.title_service'));
    }

    /**
     * Gets the 'oro_navigation.content_provider.title_serialized' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\ContentProvider\TitleSerializedContentProvider A Oro\Bundle\NavigationBundle\ContentProvider\TitleSerializedContentProvider instance.
     */
    protected function getOroNavigation_ContentProvider_TitleSerializedService()
    {
        return $this->services['oro_navigation.content_provider.title_serialized'] = new \Oro\Bundle\NavigationBundle\ContentProvider\TitleSerializedContentProvider($this->get('oro_navigation.title_service'));
    }

    /**
     * Gets the 'oro_navigation.content_provider.title_short' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\ContentProvider\TitleShortContentProvider A Oro\Bundle\NavigationBundle\ContentProvider\TitleShortContentProvider instance.
     */
    protected function getOroNavigation_ContentProvider_TitleShortService()
    {
        return $this->services['oro_navigation.content_provider.title_short'] = new \Oro\Bundle\NavigationBundle\ContentProvider\TitleShortContentProvider($this->get('oro_navigation.title_service'));
    }

    /**
     * Gets the 'oro_navigation.event.doctrine_tag_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\NavigationBundle\Event\DoctrineTagEventListener A Oro\Bundle\NavigationBundle\Event\DoctrineTagEventListener instance.
     */
    public function getOroNavigation_Event_DoctrineTagListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_navigation.event.doctrine_tag_listener'] = new OroBundleNavigationBundleEventDoctrineTagEventListener_000000002e47eb0200000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroNavigation_Event_DoctrineTagListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\NavigationBundle\Event\DoctrineTagEventListener($this->get('oro_navigation.content.topic_sender'), '2015-10-03T18:37:32+02:00');

        $instance->markSkipped('Oro\\Bundle\\DataAuditBundle\\Entity\\Audit');
        $instance->markSkipped('Oro\\Bundle\\DataAuditBundle\\Entity\\AuditData');
        $instance->markSkipped('Oro\\Bundle\\NavigationBundle\\Entity\\NavigationHistoryItem');
        $instance->markSkipped('Oro\\Bundle\\SearchBundle\\Entity\\Item');
        $instance->markSkipped('Oro\\Bundle\\SearchBundle\\Entity\\IndexText');
        $instance->markSkipped('Oro\\Bundle\\SearchBundle\\Entity\\IndexInteger');
        $instance->markSkipped('Oro\\Bundle\\SearchBundle\\Entity\\IndexDecimal');
        $instance->markSkipped('Oro\\Bundle\\SearchBundle\\Entity\\IndexDatetime');
        $instance->markSkipped('Oro\\Bundle\\NavigationBundle\\Entity\\PageState');

        return $instance;
    }

    /**
     * Gets the 'oro_navigation.event.master_request_route_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Event\AddMasterRequestRouteListener A Oro\Bundle\NavigationBundle\Event\AddMasterRequestRouteListener instance.
     */
    protected function getOroNavigation_Event_MasterRequestRouteListenerService()
    {
        return $this->services['oro_navigation.event.master_request_route_listener'] = new \Oro\Bundle\NavigationBundle\Event\AddMasterRequestRouteListener();
    }

    /**
     * Gets the 'oro_navigation.favorites_menu.builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Menu\NavigationItemBuilder A Oro\Bundle\NavigationBundle\Menu\NavigationItemBuilder instance.
     */
    protected function getOroNavigation_FavoritesMenu_BuilderService()
    {
        return $this->services['oro_navigation.favorites_menu.builder'] = new \Oro\Bundle\NavigationBundle\Menu\NavigationItemBuilder($this->get('security.context'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_navigation.item.factory'));
    }

    /**
     * Gets the 'oro_navigation.form.handler.pagestate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Form\Handler\PageStateHandler A Oro\Bundle\NavigationBundle\Form\Handler\PageStateHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_navigation.form.handler.pagestate' service is requested while the 'request' scope is not active
     */
    protected function getOroNavigation_Form_Handler_PagestateService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_navigation.form.handler.pagestate', 'request');
        }

        return $this->services['oro_navigation.form.handler.pagestate'] = $this->scopedServices['request']['oro_navigation.form.handler.pagestate'] = new \Oro\Bundle\NavigationBundle\Form\Handler\PageStateHandler($this->get('oro_navigation.form.pagestate'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'), $this->get('security.context'));
    }

    /**
     * Gets the 'oro_navigation.form.pagestate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroNavigation_Form_PagestateService()
    {
        return $this->services['oro_navigation.form.pagestate'] = $this->get('form.factory')->createNamed('pagestate', 'pagestate', NULL);
    }

    /**
     * Gets the 'oro_navigation.form.type.pagestate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Form\Type\PageStateType A Oro\Bundle\NavigationBundle\Form\Type\PageStateType instance.
     */
    protected function getOroNavigation_Form_Type_PagestateService()
    {
        return $this->services['oro_navigation.form.type.pagestate'] = new \Oro\Bundle\NavigationBundle\Form\Type\PageStateType();
    }

    /**
     * Gets the 'oro_navigation.history_menu.builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Menu\NavigationHistoryBuilder A Oro\Bundle\NavigationBundle\Menu\NavigationHistoryBuilder instance.
     */
    protected function getOroNavigation_HistoryMenu_BuilderService()
    {
        $this->services['oro_navigation.history_menu.builder'] = $instance = new \Oro\Bundle\NavigationBundle\Menu\NavigationHistoryBuilder($this->get('security.context'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_navigation.item.factory'));

        $instance->setMatcher($this->get('knp_menu.matcher'));
        $instance->setOptions($this->get('oro_config.user'));

        return $instance;
    }

    /**
     * Gets the 'oro_navigation.item.builder.favorite' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Entity\Builder\NavigationItemBuilder A Oro\Bundle\NavigationBundle\Entity\Builder\NavigationItemBuilder instance.
     */
    protected function getOroNavigation_Item_Builder_FavoriteService()
    {
        $this->services['oro_navigation.item.builder.favorite'] = $instance = new \Oro\Bundle\NavigationBundle\Entity\Builder\NavigationItemBuilder($this->get('doctrine.orm.default_entity_manager'), 'favorite');

        $instance->setClassName('Oro\\Bundle\\NavigationBundle\\Entity\\NavigationItem');

        return $instance;
    }

    /**
     * Gets the 'oro_navigation.item.builder.history' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Entity\Builder\HistoryItemBuilder A Oro\Bundle\NavigationBundle\Entity\Builder\HistoryItemBuilder instance.
     */
    protected function getOroNavigation_Item_Builder_HistoryService()
    {
        $this->services['oro_navigation.item.builder.history'] = $instance = new \Oro\Bundle\NavigationBundle\Entity\Builder\HistoryItemBuilder($this->get('doctrine.orm.default_entity_manager'), 'history');

        $instance->setClassName('Oro\\Bundle\\NavigationBundle\\Entity\\NavigationHistoryItem');

        return $instance;
    }

    /**
     * Gets the 'oro_navigation.item.builder.mostviewed' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Entity\Builder\HistoryItemBuilder A Oro\Bundle\NavigationBundle\Entity\Builder\HistoryItemBuilder instance.
     */
    protected function getOroNavigation_Item_Builder_MostviewedService()
    {
        $this->services['oro_navigation.item.builder.mostviewed'] = $instance = new \Oro\Bundle\NavigationBundle\Entity\Builder\HistoryItemBuilder($this->get('doctrine.orm.default_entity_manager'), 'mostviewed');

        $instance->setClassName('Oro\\Bundle\\NavigationBundle\\Entity\\NavigationHistoryItem');

        return $instance;
    }

    /**
     * Gets the 'oro_navigation.item.builder.pinbar' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Entity\Builder\PinbarTabBuilder A Oro\Bundle\NavigationBundle\Entity\Builder\PinbarTabBuilder instance.
     */
    protected function getOroNavigation_Item_Builder_PinbarService()
    {
        $this->services['oro_navigation.item.builder.pinbar'] = $instance = new \Oro\Bundle\NavigationBundle\Entity\Builder\PinbarTabBuilder($this->get('doctrine.orm.default_entity_manager'), 'pinbar');

        $instance->setClassName('Oro\\Bundle\\NavigationBundle\\Entity\\PinbarTab');
        $instance->setNavigationItemClassName('Oro\\Bundle\\NavigationBundle\\Entity\\NavigationItem');

        return $instance;
    }

    /**
     * Gets the 'oro_navigation.item.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Entity\Builder\ItemFactory A Oro\Bundle\NavigationBundle\Entity\Builder\ItemFactory instance.
     */
    protected function getOroNavigation_Item_FactoryService()
    {
        $this->services['oro_navigation.item.factory'] = $instance = new \Oro\Bundle\NavigationBundle\Entity\Builder\ItemFactory();

        $instance->addBuilder($this->get('oro_navigation.item.builder.pinbar'));
        $instance->addBuilder($this->get('oro_navigation.item.builder.favorite'));
        $instance->addBuilder($this->get('oro_navigation.item.builder.history'));
        $instance->addBuilder($this->get('oro_navigation.item.builder.mostviewed'));

        return $instance;
    }

    /**
     * Gets the 'oro_navigation.item.pinbar.post_persist_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\NavigationBundle\Entity\Listener\PinbarPostPersist A Oro\Bundle\NavigationBundle\Entity\Listener\PinbarPostPersist instance.
     */
    public function getOroNavigation_Item_Pinbar_PostPersistListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_navigation.item.pinbar.post_persist_listener'] = new OroBundleNavigationBundleEntityListenerPinbarPostPersist_000000002e47eb2f00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroNavigation_Item_Pinbar_PostPersistListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\NavigationBundle\Entity\Listener\PinbarPostPersist();

        $instance->setClassName('Oro\\Bundle\\NavigationBundle\\Entity\\PinbarTab');

        return $instance;
    }

    /**
     * Gets the 'oro_navigation.mostviewed_menu.builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Menu\NavigationMostviewedBuilder A Oro\Bundle\NavigationBundle\Menu\NavigationMostviewedBuilder instance.
     */
    protected function getOroNavigation_MostviewedMenu_BuilderService()
    {
        $this->services['oro_navigation.mostviewed_menu.builder'] = $instance = new \Oro\Bundle\NavigationBundle\Menu\NavigationMostviewedBuilder($this->get('security.context'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_navigation.item.factory'));

        $instance->setOptions($this->get('oro_config.user'));

        return $instance;
    }

    /**
     * Gets the 'oro_navigation.pinbar_menu.builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Menu\NavigationItemBuilder A Oro\Bundle\NavigationBundle\Menu\NavigationItemBuilder instance.
     */
    protected function getOroNavigation_PinbarMenu_BuilderService()
    {
        return $this->services['oro_navigation.pinbar_menu.builder'] = new \Oro\Bundle\NavigationBundle\Menu\NavigationItemBuilder($this->get('security.context'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_navigation.item.factory'));
    }

    /**
     * Gets the 'oro_navigation.title_annotations_reader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Title\TitleReader\AnnotationsReader A Oro\Bundle\NavigationBundle\Title\TitleReader\AnnotationsReader instance.
     */
    protected function getOroNavigation_TitleAnnotationsReaderService()
    {
        return $this->services['oro_navigation.title_annotations_reader'] = new \Oro\Bundle\NavigationBundle\Title\TitleReader\AnnotationsReader($this->get('kernel'), $this->get('annotation_reader'));
    }

    /**
     * Gets the 'oro_navigation.title_config_reader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Title\TitleReader\ConfigReader A Oro\Bundle\NavigationBundle\Title\TitleReader\ConfigReader instance.
     */
    protected function getOroNavigation_TitleConfigReaderService()
    {
        $this->services['oro_navigation.title_config_reader'] = $instance = new \Oro\Bundle\NavigationBundle\Title\TitleReader\ConfigReader();

        $instance->setConfigData(array('oro_default' => 'Dashboard', 'oro_ui_index' => 'Dashboard', 'oro_ui_1column' => 'Dashboard | One Column', 'oro_ui_grid_without_bar_page' => 'Dashboard | Grid', 'oro_ui_grid_page' => 'Dashboard | Grid', 'oro_ui_1column_menu' => 'Dashboard | Menu', 'oro_ui_1column_toolbar' => 'Dashboard | One Column Toolbar', 'oro_ui_2columns_left' => 'Dashboard | Two Columns Toolbar Left', 'oro_ui_2columns_right' => 'Dashboard | Two Columns Toolbar Right', 'oro_ui_3columns' => 'Dashboard | Three Columns', 'oro_ui_forgot_password' => 'Forgot Password', 'oro_ui_login' => 'Login', 'oro_ui_registration' => 'Registration', 'oro_ui_404' => '404 Not Found', 'oro_ui_503' => '503 Error', 'oro_ui_form_elements' => 'Form Elements', 'oro_ui_messages' => 'Dashboard | Messages', 'oro_ui_buttons' => 'Dashboard | Buttons', 'oro_ui_tables' => 'Dashboard | Tables', 'oro_ui_general_elements' => 'Dashboard | Elements', 'oro_ui_dialog_styled' => 'Dashboard | Dialog', 'oro_ui_record_edit' => 'Dashboard | Edit', 'oro_business_unit_index' => NULL, 'oro_business_unit_update' => '%business_unit.name% - Edit', 'oro_business_unit_create' => 'Create Business Unit', 'oro_business_unit_view' => '%business_unit.name%', 'oro_organization_update_current' => '%organization.name% - Edit', 'oro_email_view' => '%subject% - My Emails - %username%', 'oro_email_emailtemplate_index' => NULL, 'oro_email_emailtemplate_update' => 'Template %name% - Edit', 'oro_email_emailtemplate_create' => 'Create Email Template', 'oro_email_emailtemplate_clone' => 'Clone Email Template', 'oro_email_user_emails' => 'My Emails - %username%', 'oro_email_thread_view' => '%subject% - My Emails', 'oro_email_mailbox_update' => 'Mailbox %label% - Edit', 'oro_email_mailbox_create' => 'Create Mailbox', 'oro_user_index' => NULL, 'oro_user_view' => '%username%', 'oro_user_update' => '%username% - Edit', 'oro_user_create' => 'Create User', 'oro_user_profile_view' => '%username%', 'oro_user_profile_update' => '%username% - Edit', 'oro_user_role_index' => NULL, 'oro_user_role_update' => '%role% - Edit', 'oro_user_role_create' => 'Create Role', 'oro_user_security_login' => 'Login', 'oro_user_status_list' => 'User Status', 'oro_user_status_create' => 'Add Status', 'oro_user_reset_reset' => 'Password Reset', 'oro_user_reset_request' => 'Forgot Password', 'oro_user_reset_check_email' => 'Password Reset - Check Email', 'oro_user_group_index' => NULL, 'oro_user_group_create' => 'Create Group', 'oro_user_group_update' => '%group% - Edit', 'oro_entity_index' => '%entityName% - Entities - System', 'oro_entity_view' => '%recordName% - %entityName% - Entities - System', 'oro_entity_update' => '%entityName% - Entities - System', 'oro_entityconfig_index' => NULL, 'oro_entityconfig_view' => '%entityName%', 'oro_entityconfig_update' => '%entityName%', 'oro_entityconfig_field_update' => '%fieldName% - %entityName%', 'oro_entityextend_entity_create' => 'New Entity', 'oro_entityextend_field_create' => 'New Field - %entityName%', 'oro_entityextend_field_update' => '%fieldName% - New Field - %entityName%', 'oro_entityextend_entity_unique_key' => 'oro.entity_extend.unique_keys', 'oro_integration_index' => NULL, 'oro_integration_update' => '%integration.name%', 'oro_integration_create' => 'Create Integration', 'main_fichier_societe' => 'Fichier => Société', 'main_fichier_fonction' => 'Fichier => Fonction', 'oro_calendar_view_default' => 'My Calendar - %username%', 'oro_calendar_view' => '%calendarname% - Calendars - %username%', 'oro_calendar_event_index' => NULL, 'oro_calendar_event_view' => '%entity.title%', 'oro_calendar_event_create' => 'oro.ui.create_entity', 'oro_calendar_event_update' => '%entity.title% - Edit', 'oro_system_calendar_index' => NULL, 'oro_system_calendar_view' => '%entity.title%', 'oro_system_calendar_create' => 'oro.ui.create_entity', 'oro_system_calendar_update' => '%entity.title% - Edit', 'oro_system_calendar_event_view' => '%entity.title% - %parent.name%', 'oro_system_calendar_event_create' => 'oro.ui.create_entity - %parent.name%', 'oro_system_calendar_event_update' => '%entity.title% - Edit - %parent.name%', 'oro_config_configuration_system' => NULL, 'oro_cron_job_index' => NULL, 'oro_cron_job_view' => 'Job %command% (ID: %id%)', 'oro_dataaudit_index' => NULL, 'oro_embedded_form_list' => NULL, 'oro_embedded_form_view' => '%form.title%', 'oro_embedded_form_create' => 'oro.ui.create_entity', 'oro_embedded_form_update' => '%form.title% - Edit', 'oro_entity_merge_massaction' => 'oro.entity_merge.action.merge', 'oro_entity_merge' => 'oro.entity_merge.action.merge', 'oro_notification_emailnotification_index' => NULL, 'oro_notification_emailnotification_update' => 'Notification Rule %id% - Edit', 'oro_notification_emailnotification_create' => 'Add Notification Rule', 'oro_platform_system_info' => NULL, 'oro_report_index' => NULL, 'oro_report_view' => '%report.name% - %report.group% - Reports', 'oro_report_create' => 'Create Report - Reports', 'oro_report_update' => '%report.name% - Edit - Reports', 'oro_search_results' => '%keyword% - Search Results', 'oro_segment_index' => NULL, 'oro_segment_view' => '%segment.name% - %segment.group%', 'oro_segment_create' => 'Create segment', 'oro_segment_update' => '%segment.name% - Edit', 'oro_tag_index' => NULL, 'oro_tag_update' => '%tag.name% Tag - Edit', 'oro_tag_create' => 'Create Tag', 'oro_tag_search' => 'Records tagged as "%tag.name%"', 'oro_process_definition_index' => NULL, 'oro_process_definition_view' => '%process_definition.label%', 'oro_workflow_definition_clone' => '%workflow_definition.label% - Clone', 'oro_workflow_definition_create' => 'Create Workflow', 'oro_workflow_definition_index' => NULL, 'oro_workflow_definition_update' => '%workflow_definition.label% - Edit', 'oro_workflow_definition_view' => '%workflow_definition.label%', 'oro_workflow_start_transition_form' => '%workflow_title%', 'oro_workflow_transition_form' => '%workflow_title%', 'oro_dashboard_index' => NULL, 'oro_dashboard_quick_launchpad' => 'oro.dashboard.title.quick_launchpad', 'oro_dashboard_update' => '%label% - Edit', 'oro_dashboard_create' => 'oro.ui.create_entity', 'oro_dashboard_view' => '%name%', 'oro_shortcut_actionslist' => 'Shortcut Actions List', 'oro_pinbar_help' => 'How To Use Pinbar', 'oro_tracking_website_index' => 'oro.tracking.trackingwebsite.entity_plural_label', 'oro_tracking_website_view' => '%entity.name%', 'oro_tracking_website_create' => 'oro.ui.create_entity', 'oro_tracking_website_update' => '%entity.name% - oro.ui.edit'));

        return $instance;
    }

    /**
     * Gets the 'oro_navigation.title_service' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Provider\TitleService A Oro\Bundle\NavigationBundle\Provider\TitleService instance.
     */
    protected function getOroNavigation_TitleServiceService()
    {
        $a = $this->get('oro_config.user');

        $b = new \Oro\Bundle\NavigationBundle\Provider\TitleProvider($this->get('oro_entity.doctrine_helper'));
        $b->setTitles(array('oro_default' => 'Dashboard', 'oro_ui_index' => 'Dashboard', 'oro_ui_1column' => 'Dashboard | One Column', 'oro_ui_grid_without_bar_page' => 'Dashboard | Grid', 'oro_ui_grid_page' => 'Dashboard | Grid', 'oro_ui_1column_menu' => 'Dashboard | Menu', 'oro_ui_1column_toolbar' => 'Dashboard | One Column Toolbar', 'oro_ui_2columns_left' => 'Dashboard | Two Columns Toolbar Left', 'oro_ui_2columns_right' => 'Dashboard | Two Columns Toolbar Right', 'oro_ui_3columns' => 'Dashboard | Three Columns', 'oro_ui_forgot_password' => 'Forgot Password', 'oro_ui_login' => 'Login', 'oro_ui_registration' => 'Registration', 'oro_ui_404' => '404 Not Found', 'oro_ui_503' => '503 Error', 'oro_ui_form_elements' => 'Form Elements', 'oro_ui_messages' => 'Dashboard | Messages', 'oro_ui_buttons' => 'Dashboard | Buttons', 'oro_ui_tables' => 'Dashboard | Tables', 'oro_ui_general_elements' => 'Dashboard | Elements', 'oro_ui_dialog_styled' => 'Dashboard | Dialog', 'oro_ui_record_edit' => 'Dashboard | Edit', 'oro_business_unit_index' => NULL, 'oro_business_unit_update' => '%business_unit.name% - Edit', 'oro_business_unit_create' => 'Create Business Unit', 'oro_business_unit_view' => '%business_unit.name%', 'oro_organization_update_current' => '%organization.name% - Edit', 'oro_email_view' => '%subject% - My Emails - %username%', 'oro_email_emailtemplate_index' => NULL, 'oro_email_emailtemplate_update' => 'Template %name% - Edit', 'oro_email_emailtemplate_create' => 'Create Email Template', 'oro_email_emailtemplate_clone' => 'Clone Email Template', 'oro_email_user_emails' => 'My Emails - %username%', 'oro_email_thread_view' => '%subject% - My Emails', 'oro_email_mailbox_update' => 'Mailbox %label% - Edit', 'oro_email_mailbox_create' => 'Create Mailbox', 'oro_user_index' => NULL, 'oro_user_view' => '%username%', 'oro_user_update' => '%username% - Edit', 'oro_user_create' => 'Create User', 'oro_user_profile_view' => '%username%', 'oro_user_profile_update' => '%username% - Edit', 'oro_user_role_index' => NULL, 'oro_user_role_update' => '%role% - Edit', 'oro_user_role_create' => 'Create Role', 'oro_user_security_login' => 'Login', 'oro_user_status_list' => 'User Status', 'oro_user_status_create' => 'Add Status', 'oro_user_reset_reset' => 'Password Reset', 'oro_user_reset_request' => 'Forgot Password', 'oro_user_reset_check_email' => 'Password Reset - Check Email', 'oro_user_group_index' => NULL, 'oro_user_group_create' => 'Create Group', 'oro_user_group_update' => '%group% - Edit', 'oro_entity_index' => '%entityName% - Entities - System', 'oro_entity_view' => '%recordName% - %entityName% - Entities - System', 'oro_entity_update' => '%entityName% - Entities - System', 'oro_entityconfig_index' => NULL, 'oro_entityconfig_view' => '%entityName%', 'oro_entityconfig_update' => '%entityName%', 'oro_entityconfig_field_update' => '%fieldName% - %entityName%', 'oro_entityextend_entity_create' => 'New Entity', 'oro_entityextend_field_create' => 'New Field - %entityName%', 'oro_entityextend_field_update' => '%fieldName% - New Field - %entityName%', 'oro_entityextend_entity_unique_key' => 'oro.entity_extend.unique_keys', 'oro_integration_index' => NULL, 'oro_integration_update' => '%integration.name%', 'oro_integration_create' => 'Create Integration', 'main_fichier_societe' => 'Fichier => Société', 'main_fichier_fonction' => 'Fichier => Fonction', 'oro_calendar_view_default' => 'My Calendar - %username%', 'oro_calendar_view' => '%calendarname% - Calendars - %username%', 'oro_calendar_event_index' => NULL, 'oro_calendar_event_view' => '%entity.title%', 'oro_calendar_event_create' => 'oro.ui.create_entity', 'oro_calendar_event_update' => '%entity.title% - Edit', 'oro_system_calendar_index' => NULL, 'oro_system_calendar_view' => '%entity.title%', 'oro_system_calendar_create' => 'oro.ui.create_entity', 'oro_system_calendar_update' => '%entity.title% - Edit', 'oro_system_calendar_event_view' => '%entity.title% - %parent.name%', 'oro_system_calendar_event_create' => 'oro.ui.create_entity - %parent.name%', 'oro_system_calendar_event_update' => '%entity.title% - Edit - %parent.name%', 'oro_config_configuration_system' => NULL, 'oro_cron_job_index' => NULL, 'oro_cron_job_view' => 'Job %command% (ID: %id%)', 'oro_dataaudit_index' => NULL, 'oro_embedded_form_list' => NULL, 'oro_embedded_form_view' => '%form.title%', 'oro_embedded_form_create' => 'oro.ui.create_entity', 'oro_embedded_form_update' => '%form.title% - Edit', 'oro_entity_merge_massaction' => 'oro.entity_merge.action.merge', 'oro_entity_merge' => 'oro.entity_merge.action.merge', 'oro_notification_emailnotification_index' => NULL, 'oro_notification_emailnotification_update' => 'Notification Rule %id% - Edit', 'oro_notification_emailnotification_create' => 'Add Notification Rule', 'oro_platform_system_info' => NULL, 'oro_report_index' => NULL, 'oro_report_view' => '%report.name% - %report.group% - Reports', 'oro_report_create' => 'Create Report - Reports', 'oro_report_update' => '%report.name% - Edit - Reports', 'oro_search_results' => '%keyword% - Search Results', 'oro_segment_index' => NULL, 'oro_segment_view' => '%segment.name% - %segment.group%', 'oro_segment_create' => 'Create segment', 'oro_segment_update' => '%segment.name% - Edit', 'oro_tag_index' => NULL, 'oro_tag_update' => '%tag.name% Tag - Edit', 'oro_tag_create' => 'Create Tag', 'oro_tag_search' => 'Records tagged as "%tag.name%"', 'oro_process_definition_index' => NULL, 'oro_process_definition_view' => '%process_definition.label%', 'oro_workflow_definition_clone' => '%workflow_definition.label% - Clone', 'oro_workflow_definition_create' => 'Create Workflow', 'oro_workflow_definition_index' => NULL, 'oro_workflow_definition_update' => '%workflow_definition.label% - Edit', 'oro_workflow_definition_view' => '%workflow_definition.label%', 'oro_workflow_start_transition_form' => '%workflow_title%', 'oro_workflow_transition_form' => '%workflow_title%', 'oro_dashboard_index' => NULL, 'oro_dashboard_quick_launchpad' => 'oro.dashboard.title.quick_launchpad', 'oro_dashboard_update' => '%label% - Edit', 'oro_dashboard_create' => 'oro.ui.create_entity', 'oro_dashboard_view' => '%name%', 'oro_shortcut_actionslist' => 'Shortcut Actions List', 'oro_pinbar_help' => 'How To Use Pinbar', 'oro_tracking_website_index' => 'oro.tracking.trackingwebsite.entity_plural_label', 'oro_tracking_website_view' => '%entity.name%', 'oro_tracking_website_create' => 'oro.ui.create_entity', 'oro_tracking_website_update' => '%entity.name% - oro.ui.edit'));

        return $this->services['oro_navigation.title_service'] = new \Oro\Bundle\NavigationBundle\Provider\TitleService($this->get('oro_navigation.title_annotations_reader'), $this->get('oro_navigation.title_config_reader'), new \Oro\Bundle\NavigationBundle\Provider\TitleTranslator($this->get('translator.default'), $a), $this->get('doctrine.orm.default_entity_manager'), $this->get('jms_serializer'), $a, $this->get('oro_navigation.breadcrumb_manager'), $b);
    }

    /**
     * Gets the 'oro_navigation.title_service.twig.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Twig\TitleExtension A Oro\Bundle\NavigationBundle\Twig\TitleExtension instance.
     */
    protected function getOroNavigation_TitleService_Twig_ExtensionService()
    {
        return $this->services['oro_navigation.title_service.twig.extension'] = new \Oro\Bundle\NavigationBundle\Twig\TitleExtension($this->get('oro_navigation.title_service'));
    }

    /**
     * Gets the 'oro_navigation.translation.extractor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Title\TranslationExtractor A Oro\Bundle\NavigationBundle\Title\TranslationExtractor instance.
     */
    protected function getOroNavigation_Translation_ExtractorService()
    {
        return $this->services['oro_navigation.translation.extractor'] = new \Oro\Bundle\NavigationBundle\Title\TranslationExtractor($this->get('oro_navigation.title_service'), $this->get('router'));
    }

    /**
     * Gets the 'oro_navigation.twig.content_tags' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Twig\ContentTagsExtension A Oro\Bundle\NavigationBundle\Twig\ContentTagsExtension instance.
     */
    protected function getOroNavigation_Twig_ContentTagsService()
    {
        return $this->services['oro_navigation.twig.content_tags'] = new \Oro\Bundle\NavigationBundle\Twig\ContentTagsExtension($this->get('oro_navigation.content.tag_generator_chain'));
    }

    /**
     * Gets the 'oro_navigation.twig.hash_nav_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NavigationBundle\Twig\HashNavExtension A Oro\Bundle\NavigationBundle\Twig\HashNavExtension instance.
     */
    protected function getOroNavigation_Twig_HashNavExtensionService()
    {
        return $this->services['oro_navigation.twig.hash_nav_extension'] = new \Oro\Bundle\NavigationBundle\Twig\HashNavExtension();
    }

    /**
     * Gets the 'oro_note.activity_list.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NoteBundle\Provider\NoteActivityListProvider A Oro\Bundle\NoteBundle\Provider\NoteActivityListProvider instance.
     */
    protected function getOroNote_ActivityList_ProviderService()
    {
        return $this->services['oro_note.activity_list.provider'] = new \Oro\Bundle\NoteBundle\Provider\NoteActivityListProvider($this->get('oro_entity.doctrine_helper'), $this->get('oro_security.owner.entity_owner_accessor.link'));
    }

    /**
     * Gets the 'oro_note.entity_config_dumper.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NoteBundle\Tools\NoteEntityConfigDumperExtension A Oro\Bundle\NoteBundle\Tools\NoteEntityConfigDumperExtension instance.
     */
    protected function getOroNote_EntityConfigDumper_ExtensionService()
    {
        return $this->services['oro_note.entity_config_dumper.extension'] = new \Oro\Bundle\NoteBundle\Tools\NoteEntityConfigDumperExtension($this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.association_builder'));
    }

    /**
     * Gets the 'oro_note.entity_generator.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NoteBundle\Tools\NoteEntityGeneratorExtension A Oro\Bundle\NoteBundle\Tools\NoteEntityGeneratorExtension instance.
     */
    protected function getOroNote_EntityGenerator_ExtensionService()
    {
        return $this->services['oro_note.entity_generator.extension'] = new \Oro\Bundle\NoteBundle\Tools\NoteEntityGeneratorExtension();
    }

    /**
     * Gets the 'oro_note.form.handler.note' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NoteBundle\Form\Handler\NoteHandler A Oro\Bundle\NoteBundle\Form\Handler\NoteHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_note.form.handler.note' service is requested while the 'request' scope is not active
     */
    protected function getOroNote_Form_Handler_NoteService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_note.form.handler.note', 'request');
        }

        return $this->services['oro_note.form.handler.note'] = $this->scopedServices['request']['oro_note.form.handler.note'] = new \Oro\Bundle\NoteBundle\Form\Handler\NoteHandler($this->get('oro_note.form.note'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_note.form.handler.note_api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NoteBundle\Form\Handler\NoteApiHandler A Oro\Bundle\NoteBundle\Form\Handler\NoteApiHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_note.form.handler.note_api' service is requested while the 'request' scope is not active
     */
    protected function getOroNote_Form_Handler_NoteApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_note.form.handler.note_api', 'request');
        }

        return $this->services['oro_note.form.handler.note_api'] = $this->scopedServices['request']['oro_note.form.handler.note_api'] = new \Oro\Bundle\NoteBundle\Form\Handler\NoteApiHandler($this->get('oro_note.form.note.api'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_note.form.note' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroNote_Form_NoteService()
    {
        return $this->services['oro_note.form.note'] = $this->get('form.factory')->createNamed('oro_note_form', 'oro_note');
    }

    /**
     * Gets the 'oro_note.form.note.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroNote_Form_Note_ApiService()
    {
        return $this->services['oro_note.form.note.api'] = $this->get('form.factory')->createNamed(NULL, 'oro_note_api');
    }

    /**
     * Gets the 'oro_note.form.type.note' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NoteBundle\Form\Type\NoteType A Oro\Bundle\NoteBundle\Form\Type\NoteType instance.
     */
    protected function getOroNote_Form_Type_NoteService()
    {
        return $this->services['oro_note.form.type.note'] = new \Oro\Bundle\NoteBundle\Form\Type\NoteType();
    }

    /**
     * Gets the 'oro_note.form.type.note_api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NoteBundle\Form\Type\NoteApiType A Oro\Bundle\NoteBundle\Form\Type\NoteApiType instance.
     */
    protected function getOroNote_Form_Type_NoteApiService()
    {
        return $this->services['oro_note.form.type.note_api'] = new \Oro\Bundle\NoteBundle\Form\Type\NoteApiType($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_note.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NoteBundle\Entity\Manager\NoteManager A Oro\Bundle\NoteBundle\Entity\Manager\NoteManager instance.
     */
    protected function getOroNote_ManagerService()
    {
        return $this->services['oro_note.manager'] = new \Oro\Bundle\NoteBundle\Entity\Manager\NoteManager($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_security.security_facade'), $this->get('oro_security.acl_helper'), $this->get('oro_entity.entity_name_resolver'), $this->get('oro_attachment.manager'));
    }

    /**
     * Gets the 'oro_note.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NoteBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\NoteBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroNote_Manager_ApiService()
    {
        $this->services['oro_note.manager.api'] = $instance = new \Oro\Bundle\NoteBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\NoteBundle\\Entity\\Note', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_note.migration.extension.note' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NoteBundle\Migration\Extension\NoteExtension A Oro\Bundle\NoteBundle\Migration\Extension\NoteExtension instance.
     */
    protected function getOroNote_Migration_Extension_NoteService()
    {
        return $this->services['oro_note.migration.extension.note'] = new \Oro\Bundle\NoteBundle\Migration\Extension\NoteExtension();
    }

    /**
     * Gets the 'oro_note.note_lifecycle_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\NoteBundle\EventListener\NoteLifecycleListener A Oro\Bundle\NoteBundle\EventListener\NoteLifecycleListener instance.
     */
    public function getOroNote_NoteLifecycleListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_note.note_lifecycle_listener'] = new OroBundleNoteBundleEventListenerNoteLifecycleListener_000000002e47e8d900000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroNote_NoteLifecycleListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\NoteBundle\EventListener\NoteLifecycleListener($this->get('oro_security.security_facade.link'));
    }

    /**
     * Gets the 'oro_note.placeholder.filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NoteBundle\Placeholder\PlaceholderFilter A Oro\Bundle\NoteBundle\Placeholder\PlaceholderFilter instance.
     */
    protected function getOroNote_Placeholder_FilterService()
    {
        return $this->services['oro_note.placeholder.filter'] = new \Oro\Bundle\NoteBundle\Placeholder\PlaceholderFilter($this->get('oro_entity_config.provider.note'), $this->get('oro_entity_config.provider.entity'), $this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_note.widget_provider.actions' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Provider\ActionButtonWidgetProvider A Oro\Bundle\UIBundle\Provider\ActionButtonWidgetProvider instance.
     */
    protected function getOroNote_WidgetProvider_ActionsService()
    {
        return $this->services['oro_note.widget_provider.actions'] = new \Oro\Bundle\UIBundle\Provider\ActionButtonWidgetProvider($this->get('oro_ui.placeholder.provider'), 'oro_add_note_button', 'oro_add_note_link');
    }

    /**
     * Gets the 'oro_notification.docrine.event.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\NotificationBundle\Provider\DoctrineListener A Oro\Bundle\NotificationBundle\Provider\DoctrineListener instance.
     */
    public function getOroNotification_Docrine_Event_ListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_notification.docrine.event.listener'] = new OroBundleNotificationBundleProviderDoctrineListener_000000002e47e97500000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroNotification_Docrine_Event_ListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\NotificationBundle\Provider\DoctrineListener($this->get('oro_notification.entity_spool'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_notification.email_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NotificationBundle\Event\Handler\EmailNotificationHandler A Oro\Bundle\NotificationBundle\Event\Handler\EmailNotificationHandler instance.
     */
    protected function getOroNotification_EmailHandlerService()
    {
        return $this->services['oro_notification.email_handler'] = new \Oro\Bundle\NotificationBundle\Event\Handler\EmailNotificationHandler($this->get('oro_notification.email_processor'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_entity_config.provider.ownership'));
    }

    /**
     * Gets the 'oro_notification.email_notification.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroNotification_EmailNotification_Manager_ApiService()
    {
        $this->services['oro_notification.email_notification.manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\NotificationBundle\\Entity\\EmailNotification', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_notification.email_notification_entity_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\NotificationBundle\Provider\EmailNotificationEntityProvider A Oro\Bundle\NotificationBundle\Provider\EmailNotificationEntityProvider instance.
     */
    public function getOroNotification_EmailNotificationEntityProviderService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_notification.email_notification_entity_provider'] = new OroBundleNotificationBundleProviderEmailNotificationEntityProvider_000000002e47d27600000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroNotification_EmailNotificationEntityProviderService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\NotificationBundle\Provider\EmailNotificationEntityProvider($this->get('oro_entity_config.provider.entity'), $this->get('oro_entity_config.provider.extend'), $this->get('oro_entity.orm.entity_class_resolver'), $this->get('translator'), $this->get('doctrine.orm.default_entity_manager'));

        $instance->setExclusionProvider($this->get('oro_entity.exclusion_provider'));

        return $instance;
    }

    /**
     * Gets the 'oro_notification.email_processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NotificationBundle\Processor\EmailNotificationProcessor A Oro\Bundle\NotificationBundle\Processor\EmailNotificationProcessor instance.
     */
    protected function getOroNotification_EmailProcessorService()
    {
        $this->services['oro_notification.email_processor'] = $instance = new \Oro\Bundle\NotificationBundle\Processor\EmailNotificationProcessor($this->get('logger'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_notification.entity_spool'), $this->get('oro_email.email_renderer'), $this->get('swiftmailer.mailer.db_spool_mailer'), $this->get('oro_config.user'));

        $instance->setEnv('dev');
        $instance->setMessageLimit(100);

        return $instance;
    }

    /**
     * Gets the 'oro_notification.entity_spool' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NotificationBundle\Doctrine\EntityPool A Oro\Bundle\NotificationBundle\Doctrine\EntityPool instance.
     */
    protected function getOroNotification_EntitySpoolService()
    {
        return $this->services['oro_notification.entity_spool'] = new \Oro\Bundle\NotificationBundle\Doctrine\EntityPool();
    }

    /**
     * Gets the 'oro_notification.event_listener.email_notification_service' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\NotificationBundle\Provider\EmailNotificationGridHelper A Oro\Bundle\NotificationBundle\Provider\EmailNotificationGridHelper instance.
     */
    public function getOroNotification_EventListener_EmailNotificationServiceService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_notification.event_listener.email_notification_service'] = new OroBundleNotificationBundleProviderEmailNotificationGridHelper_000000002e47e94b00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroNotification_EventListener_EmailNotificationServiceService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\NotificationBundle\Provider\EmailNotificationGridHelper($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_notification.form.email_notification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroNotification_Form_EmailNotificationService()
    {
        return $this->services['oro_notification.form.email_notification'] = $this->get('form.factory')->createNamed('emailnotification', 'emailnotification', NULL);
    }

    /**
     * Gets the 'oro_notification.form.email_notification.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroNotification_Form_EmailNotification_ApiService()
    {
        return $this->services['oro_notification.form.email_notification.api'] = $this->get('form.factory')->createNamed('emailnotification_api', 'emailnotification_api', NULL);
    }

    /**
     * Gets the 'oro_notification.form.handler.email_notification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NotificationBundle\Form\Handler\EmailNotificationHandler A Oro\Bundle\NotificationBundle\Form\Handler\EmailNotificationHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_notification.form.handler.email_notification' service is requested while the 'request' scope is not active
     */
    protected function getOroNotification_Form_Handler_EmailNotificationService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_notification.form.handler.email_notification', 'request');
        }

        return $this->services['oro_notification.form.handler.email_notification'] = $this->scopedServices['request']['oro_notification.form.handler.email_notification'] = new \Oro\Bundle\NotificationBundle\Form\Handler\EmailNotificationHandler($this->get('oro_notification.form.email_notification'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_notification.form.handler.email_notification.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NotificationBundle\Form\Handler\EmailNotificationHandler A Oro\Bundle\NotificationBundle\Form\Handler\EmailNotificationHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_notification.form.handler.email_notification.api' service is requested while the 'request' scope is not active
     */
    protected function getOroNotification_Form_Handler_EmailNotification_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_notification.form.handler.email_notification.api', 'request');
        }

        return $this->services['oro_notification.form.handler.email_notification.api'] = $this->scopedServices['request']['oro_notification.form.handler.email_notification.api'] = new \Oro\Bundle\NotificationBundle\Form\Handler\EmailNotificationHandler($this->get('oro_notification.form.email_notification.api'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_notification.form.type.email_notification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NotificationBundle\Form\Type\EmailNotificationType A Oro\Bundle\NotificationBundle\Form\Type\EmailNotificationType instance.
     */
    protected function getOroNotification_Form_Type_EmailNotificationService()
    {
        return $this->services['oro_notification.form.type.email_notification'] = new \Oro\Bundle\NotificationBundle\Form\Type\EmailNotificationType($this->get('oro_email.form.subscriber.emailtemplate'), $this->get('oro_entity_config.provider.ownership'));
    }

    /**
     * Gets the 'oro_notification.form.type.email_notification.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NotificationBundle\Form\Type\EmailNotificationApiType A Oro\Bundle\NotificationBundle\Form\Type\EmailNotificationApiType instance.
     */
    protected function getOroNotification_Form_Type_EmailNotification_ApiService()
    {
        return $this->services['oro_notification.form.type.email_notification.api'] = new \Oro\Bundle\NotificationBundle\Form\Type\EmailNotificationApiType($this->get('oro_email.form.subscriber.emailtemplate'), $this->get('oro_entity_config.provider.ownership'));
    }

    /**
     * Gets the 'oro_notification.form.type.email_notification_entity_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NotificationBundle\Form\Type\EmailNotificationEntityChoiceType A Oro\Bundle\NotificationBundle\Form\Type\EmailNotificationEntityChoiceType instance.
     */
    protected function getOroNotification_Form_Type_EmailNotificationEntityChoiceService()
    {
        return $this->services['oro_notification.form.type.email_notification_entity_choice'] = new \Oro\Bundle\NotificationBundle\Form\Type\EmailNotificationEntityChoiceType($this->get('oro_notification.email_notification_entity_provider'));
    }

    /**
     * Gets the 'oro_notification.form.type.recipient_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NotificationBundle\Form\Type\RecipientListType A Oro\Bundle\NotificationBundle\Form\Type\RecipientListType instance.
     */
    protected function getOroNotification_Form_Type_RecipientListService()
    {
        return $this->services['oro_notification.form.type.recipient_list'] = new \Oro\Bundle\NotificationBundle\Form\Type\RecipientListType($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_notification.mailer.spool_db' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\NotificationBundle\Provider\Mailer\DbSpool A Oro\Bundle\NotificationBundle\Provider\Mailer\DbSpool instance.
     */
    protected function getOroNotification_Mailer_SpoolDbService()
    {
        return $this->services['oro_notification.mailer.spool_db'] = new \Oro\Bundle\NotificationBundle\Provider\Mailer\DbSpool($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_notification.entity_spool'), 'Oro\\Bundle\\NotificationBundle\\Entity\\SpoolItem');
    }

    /**
     * Gets the 'oro_notification.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\NotificationBundle\Provider\NotificationManager A Oro\Bundle\NotificationBundle\Provider\NotificationManager instance.
     */
    public function getOroNotification_ManagerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_notification.manager'] = new OroBundleNotificationBundleProviderNotificationManager_000000002e47e97000000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroNotification_ManagerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\NotificationBundle\Provider\NotificationManager($this->get('doctrine.orm.default_entity_manager'), 'Oro\\Bundle\\NotificationBundle\\Entity\\EmailNotification');

        $instance->addHandler($this->get('oro_notification.email_handler'));

        return $instance;
    }

    /**
     * Gets the 'oro_organization.autocomplete.organization.search_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Autocomplete\SearchHandler A Oro\Bundle\FormBundle\Autocomplete\SearchHandler instance.
     */
    protected function getOroOrganization_Autocomplete_Organization_SearchHandlerService()
    {
        $this->services['oro_organization.autocomplete.organization.search_handler'] = $instance = new \Oro\Bundle\FormBundle\Autocomplete\SearchHandler('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization', array(0 => 'name'));

        $instance->initSearchIndexer($this->get('oro_search.index'), array('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization' => array('alias' => 'organization', 'search_template' => 'OroOrganizationBundle:Search:organizationResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit' => array('alias' => 'business_unit', 'search_template' => 'OroOrganizationBundle:Search:businessUnitResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser' => array('alias' => 'oro_email', 'label' => 'Emails', 'search_template' => 'OroEmailBundle:Email:searchResult.html.twig', 'route' => array('name' => 'oro_email_thread_view', 'parameters' => array('id' => 'email.id')), 'title_fields' => array(0 => 'email.subject'), 'fields' => array(0 => array('name' => 'email', 'relation_type' => 'many-to-one', 'relation_fields' => array(0 => array('name' => 'subject', 'target_type' => 'text', 'target_fields' => array(0 => 'subject'), 'relation_fields' => array())), 'target_fields' => array())), 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\User' => array('alias' => 'oro_user', 'title_fields' => array(0 => 'username'), 'route' => array('name' => 'oro_user_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroUserBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'username', 'target_type' => 'text', 'target_fields' => array(0 => 'username'), 'relation_fields' => array()), 1 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array()), 2 => array('name' => 'phone', 'target_type' => 'text', 'target_fields' => array(0 => 'phone'), 'relation_fields' => array()), 3 => array('name' => 'namePrefix', 'target_type' => 'text', 'target_fields' => array(0 => 'namePrefix'), 'relation_fields' => array()), 4 => array('name' => 'firstName', 'target_type' => 'text', 'target_fields' => array(0 => 'firstName'), 'relation_fields' => array()), 5 => array('name' => 'middleName', 'target_type' => 'text', 'target_fields' => array(0 => 'middleName'), 'relation_fields' => array()), 6 => array('name' => 'lastName', 'target_type' => 'text', 'target_fields' => array(0 => 'lastName'), 'relation_fields' => array()), 7 => array('name' => 'nameSuffix', 'target_type' => 'text', 'target_fields' => array(0 => 'nameSuffix'), 'relation_fields' => array()), 8 => array('name' => 'birthday', 'target_type' => 'datetime', 'target_fields' => array(0 => 'birthday'), 'relation_fields' => array()), 9 => array('name' => 'emails', 'relation_type' => 'one-to-many', 'relation_fields' => array(0 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array())), 'target_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\Role' => array('alias' => 'oro_access_role', 'title_fields' => array(0 => 'label'), 'search_template' => 'OroUserBundle:Role:Search\\result.html.twig', 'route' => array('name' => 'oro_user_role_index', 'parameters' => array()), 'fields' => array(0 => array('name' => 'label', 'target_type' => 'text', 'target_fields' => array(0 => 'label'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent' => array('alias' => 'oro_clendar_event', 'title_fields' => array(0 => 'title'), 'route' => array('name' => 'oro_calendar_view', 'parameters' => array('id' => 'calendar.id')), 'search_template' => 'OroCalendarBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'title', 'target_type' => 'text', 'target_fields' => array(0 => 'title'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array()), 2 => array('name' => 'start', 'target_type' => 'datetime', 'target_fields' => array(0 => 'start'), 'relation_fields' => array()), 3 => array('name' => 'end', 'target_type' => 'datetime', 'target_fields' => array(0 => 'end'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\ReportBundle\\Entity\\Report' => array('alias' => 'oro_report', 'title_fields' => array(0 => 'name'), 'route' => array('name' => 'oro_report_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroReportBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\TagBundle\\Entity\\Tag' => array('alias' => 'oro_tag', 'title_fields' => array(0 => 'name'), 'search_template' => 'OroTagBundle:Search:result.html.twig', 'route' => array('name' => 'oro_tag_search', 'parameters' => array('id' => 'id')), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal')));
        $instance->initDoctrinePropertiesByManagerRegistry($this->get('doctrine'));
        $instance->setAclHelper($this->get('oro_security.acl_helper'));

        return $instance;
    }

    /**
     * Gets the 'oro_organization.autocomplete.organization_search_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\OrganizationBundle\Autocomplete\OrganizationSearchHandler A Oro\Bundle\OrganizationBundle\Autocomplete\OrganizationSearchHandler instance.
     */
    public function getOroOrganization_Autocomplete_OrganizationSearchHandlerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_organization.autocomplete.organization_search_handler'] = new OroBundleOrganizationBundleAutocompleteOrganizationSearchHandler_000000002e47e7fa00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroOrganization_Autocomplete_OrganizationSearchHandlerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\OrganizationBundle\Autocomplete\OrganizationSearchHandler('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization', array(0 => 'id', 1 => 'name'), array(0 => 'name'), $this->get('doctrine'), $this->get('oro_entity_config.link.security_context'));
    }

    /**
     * Gets the 'oro_organization.business_unit.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\OrganizationBundle\Event\BusinessUnitListener A Oro\Bundle\OrganizationBundle\Event\BusinessUnitListener instance.
     */
    public function getOroOrganization_BusinessUnit_ListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_organization.business_unit.listener'] = new OroBundleOrganizationBundleEventBusinessUnitListener_000000002e47e7ea00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroOrganization_BusinessUnit_ListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\OrganizationBundle\Event\BusinessUnitListener();
    }

    /**
     * Gets the 'oro_organization.business_unit.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroOrganization_BusinessUnit_Manager_ApiService()
    {
        $this->services['oro_organization.business_unit.manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_organization.business_unit_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Entity\Manager\BusinessUnitManager A Oro\Bundle\OrganizationBundle\Entity\Manager\BusinessUnitManager instance.
     */
    protected function getOroOrganization_BusinessUnitManagerService()
    {
        return $this->services['oro_organization.business_unit_manager'] = new \Oro\Bundle\OrganizationBundle\Entity\Manager\BusinessUnitManager($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_organization.entity_config_dumper.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Tools\OwnershipEntityConfigDumperExtension A Oro\Bundle\OrganizationBundle\Tools\OwnershipEntityConfigDumperExtension instance.
     */
    protected function getOroOrganization_EntityConfigDumper_ExtensionService()
    {
        return $this->services['oro_organization.entity_config_dumper.extension'] = new \Oro\Bundle\OrganizationBundle\Tools\OwnershipEntityConfigDumperExtension($this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.relation_builder'), $this->get('oro_security.owner.ownership_metadata_provider'));
    }

    /**
     * Gets the 'oro_organization.entity_ownership.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\OrganizationBundle\Event\RecordOwnerDataListener A Oro\Bundle\OrganizationBundle\Event\RecordOwnerDataListener instance.
     */
    public function getOroOrganization_EntityOwnership_ListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_organization.entity_ownership.listener'] = new OroBundleOrganizationBundleEventRecordOwnerDataListener_000000002e47e7ef00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroOrganization_EntityOwnership_ListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\OrganizationBundle\Event\RecordOwnerDataListener($this->get('oro_organization.link.security_context'), $this->get('oro_entity_config.provider.ownership'));
    }

    /**
     * Gets the 'oro_organization.event.business_unit_grid_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Event\BusinessUnitGridListener A Oro\Bundle\OrganizationBundle\Event\BusinessUnitGridListener instance.
     */
    protected function getOroOrganization_Event_BusinessUnitGridListenerService()
    {
        return $this->services['oro_organization.event.business_unit_grid_listener'] = new \Oro\Bundle\OrganizationBundle\Event\BusinessUnitGridListener($this->get('oro_entity_config.link.security_context'), $this->get('oro_security.ownership_tree_provider'), $this->get('security.acl.voter.basic_permissions', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'oro_organization.form.business_unit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroOrganization_Form_BusinessUnitService()
    {
        return $this->services['oro_organization.form.business_unit'] = $this->get('form.factory')->createNamed('oro_business_unit_form', 'oro_business_unit');
    }

    /**
     * Gets the 'oro_organization.form.business_unit.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroOrganization_Form_BusinessUnit_ApiService()
    {
        return $this->services['oro_organization.form.business_unit.api'] = $this->get('form.factory')->createNamed('business_unit', 'business_unit', NULL);
    }

    /**
     * Gets the 'oro_organization.form.extension.organization' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Form\Extension\OrganizationFormExtension A Oro\Bundle\OrganizationBundle\Form\Extension\OrganizationFormExtension instance.
     */
    protected function getOroOrganization_Form_Extension_OrganizationService()
    {
        return $this->services['oro_organization.form.extension.organization'] = new \Oro\Bundle\OrganizationBundle\Form\Extension\OrganizationFormExtension($this->get('doctrine'), $this->get('oro_security.security_facade.link'), $this->get('oro_security.owner.ownership_metadata_provider.link'));
    }

    /**
     * Gets the 'oro_organization.form.extension.owner' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Form\Extension\OwnerFormExtension A Oro\Bundle\OrganizationBundle\Form\Extension\OwnerFormExtension instance.
     */
    protected function getOroOrganization_Form_Extension_OwnerService()
    {
        return $this->services['oro_organization.form.extension.owner'] = new \Oro\Bundle\OrganizationBundle\Form\Extension\OwnerFormExtension($this->get('doctrine'), $this->get('oro_security.owner.ownership_metadata_provider'), $this->get('oro_organization.business_unit_manager'), $this->get('oro_security.security_facade'), $this->get('security.acl.voter.basic_permissions', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('oro_security.ownership_tree_provider'), $this->get('oro_security.owner.entity_owner_accessor'));
    }

    /**
     * Gets the 'oro_organization.form.handler.business_unit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Form\Handler\BusinessUnitHandler A Oro\Bundle\OrganizationBundle\Form\Handler\BusinessUnitHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_organization.form.handler.business_unit' service is requested while the 'request' scope is not active
     */
    protected function getOroOrganization_Form_Handler_BusinessUnitService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_organization.form.handler.business_unit', 'request');
        }

        return $this->services['oro_organization.form.handler.business_unit'] = $this->scopedServices['request']['oro_organization.form.handler.business_unit'] = new \Oro\Bundle\OrganizationBundle\Form\Handler\BusinessUnitHandler($this->get('oro_organization.form.business_unit'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_organization.form.handler.business_unit.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Form\Handler\BusinessUnitHandler A Oro\Bundle\OrganizationBundle\Form\Handler\BusinessUnitHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_organization.form.handler.business_unit.api' service is requested while the 'request' scope is not active
     */
    protected function getOroOrganization_Form_Handler_BusinessUnit_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_organization.form.handler.business_unit.api', 'request');
        }

        return $this->services['oro_organization.form.handler.business_unit.api'] = $this->scopedServices['request']['oro_organization.form.handler.business_unit.api'] = new \Oro\Bundle\OrganizationBundle\Form\Handler\BusinessUnitHandler($this->get('oro_organization.form.business_unit.api'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_organization.form.handler.organization' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Form\Handler\OrganizationHandler A Oro\Bundle\OrganizationBundle\Form\Handler\OrganizationHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_organization.form.handler.organization' service is requested while the 'request' scope is not active
     */
    protected function getOroOrganization_Form_Handler_OrganizationService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_organization.form.handler.organization', 'request');
        }

        return $this->services['oro_organization.form.handler.organization'] = $this->scopedServices['request']['oro_organization.form.handler.organization'] = new \Oro\Bundle\OrganizationBundle\Form\Handler\OrganizationHandler($this->get('oro_organization.form.organization'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_organization.form.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Event\FormListener A Oro\Bundle\OrganizationBundle\Event\FormListener instance.
     */
    protected function getOroOrganization_Form_ListenerService()
    {
        return $this->services['oro_organization.form.listener'] = new \Oro\Bundle\OrganizationBundle\Event\FormListener($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_organization.form.organization' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroOrganization_Form_OrganizationService()
    {
        return $this->services['oro_organization.form.organization'] = $this->get('form.factory')->createNamed('oro_organization_form', 'oro_organization');
    }

    /**
     * Gets the 'oro_organization.form.type.business_unit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Form\Type\BusinessUnitType A Oro\Bundle\OrganizationBundle\Form\Type\BusinessUnitType instance.
     */
    protected function getOroOrganization_Form_Type_BusinessUnitService()
    {
        return $this->services['oro_organization.form.type.business_unit'] = new \Oro\Bundle\OrganizationBundle\Form\Type\BusinessUnitType($this->get('oro_organization.business_unit_manager'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_organization.form.type.business_unit.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Form\Type\BusinessUnitApiType A Oro\Bundle\OrganizationBundle\Form\Type\BusinessUnitApiType instance.
     */
    protected function getOroOrganization_Form_Type_BusinessUnit_ApiService()
    {
        return $this->services['oro_organization.form.type.business_unit.api'] = new \Oro\Bundle\OrganizationBundle\Form\Type\BusinessUnitApiType($this->get('oro_organization.business_unit_manager'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_organization.form.type.business_unit_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Form\Type\BusinessUnitSelectType A Oro\Bundle\OrganizationBundle\Form\Type\BusinessUnitSelectType instance.
     */
    protected function getOroOrganization_Form_Type_BusinessUnitSelectService()
    {
        return $this->services['oro_organization.form.type.business_unit_select'] = new \Oro\Bundle\OrganizationBundle\Form\Type\BusinessUnitSelectType($this->get('doctrine'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_organization.form.type.business_unit_tree_select_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Form\Type\BusinessUnitTreeSelectType A Oro\Bundle\OrganizationBundle\Form\Type\BusinessUnitTreeSelectType instance.
     */
    protected function getOroOrganization_Form_Type_BusinessUnitTreeSelectTypeService()
    {
        return $this->services['oro_organization.form.type.business_unit_tree_select_type'] = new \Oro\Bundle\OrganizationBundle\Form\Type\BusinessUnitTreeSelectType();
    }

    /**
     * Gets the 'oro_organization.form.type.business_unit_tree_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Form\Type\BusinessUnitTreeType A Oro\Bundle\OrganizationBundle\Form\Type\BusinessUnitTreeType instance.
     */
    protected function getOroOrganization_Form_Type_BusinessUnitTreeTypeService()
    {
        return $this->services['oro_organization.form.type.business_unit_tree_type'] = new \Oro\Bundle\OrganizationBundle\Form\Type\BusinessUnitTreeType($this->get('oro_organization.business_unit_manager'));
    }

    /**
     * Gets the 'oro_organization.form.type.organization' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Form\Type\OrganizationType A Oro\Bundle\OrganizationBundle\Form\Type\OrganizationType instance.
     */
    protected function getOroOrganization_Form_Type_OrganizationService()
    {
        return $this->services['oro_organization.form.type.organization'] = new \Oro\Bundle\OrganizationBundle\Form\Type\OrganizationType($this->get('security.context'));
    }

    /**
     * Gets the 'oro_organization.form.type.organization_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Form\Type\OrganizationSelectType A Oro\Bundle\OrganizationBundle\Form\Type\OrganizationSelectType instance.
     */
    protected function getOroOrganization_Form_Type_OrganizationSelectService()
    {
        return $this->services['oro_organization.form.type.organization_select'] = new \Oro\Bundle\OrganizationBundle\Form\Type\OrganizationSelectType();
    }

    /**
     * Gets the 'oro_organization.form.type.organizations_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Form\Type\OrganizationsSelectType A Oro\Bundle\OrganizationBundle\Form\Type\OrganizationsSelectType instance.
     */
    protected function getOroOrganization_Form_Type_OrganizationsSelectService()
    {
        return $this->services['oro_organization.form.type.organizations_select'] = new \Oro\Bundle\OrganizationBundle\Form\Type\OrganizationsSelectType($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_organization.business_unit_manager'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_organization.form.type.ownership_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Form\Type\OwnershipType A Oro\Bundle\OrganizationBundle\Form\Type\OwnershipType instance.
     */
    protected function getOroOrganization_Form_Type_OwnershipTypeService()
    {
        return $this->services['oro_organization.form.type.ownership_type'] = new \Oro\Bundle\OrganizationBundle\Form\Type\OwnershipType();
    }

    /**
     * Gets the 'oro_organization.import_strategy.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\OrganizationBundle\Event\ImportStrategyListener A Oro\Bundle\OrganizationBundle\Event\ImportStrategyListener instance.
     */
    public function getOroOrganization_ImportStrategy_ListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_organization.import_strategy.listener'] = new OroBundleOrganizationBundleEventImportStrategyListener_000000002e47e7e800000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroOrganization_ImportStrategy_ListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\OrganizationBundle\Event\ImportStrategyListener($this->get('doctrine'), $this->get('oro_security.security_facade.link'), $this->get('oro_security.owner.ownership_metadata_provider.link'));
    }

    /**
     * Gets the 'oro_organization.importexport.template_fixture.business_unit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\ImportExport\TemplateFixture\BusinessUnitFixture A Oro\Bundle\OrganizationBundle\ImportExport\TemplateFixture\BusinessUnitFixture instance.
     */
    protected function getOroOrganization_Importexport_TemplateFixture_BusinessUnitService()
    {
        return $this->services['oro_organization.importexport.template_fixture.business_unit'] = new \Oro\Bundle\OrganizationBundle\ImportExport\TemplateFixture\BusinessUnitFixture();
    }

    /**
     * Gets the 'oro_organization.importexport.template_fixture.organization' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\ImportExport\TemplateFixture\OrganizationFixture A Oro\Bundle\OrganizationBundle\ImportExport\TemplateFixture\OrganizationFixture instance.
     */
    protected function getOroOrganization_Importexport_TemplateFixture_OrganizationService()
    {
        return $this->services['oro_organization.importexport.template_fixture.organization'] = new \Oro\Bundle\OrganizationBundle\ImportExport\TemplateFixture\OrganizationFixture($this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_organization.listener.config_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Event\ConfigSubscriber A Oro\Bundle\OrganizationBundle\Event\ConfigSubscriber instance.
     */
    protected function getOroOrganization_Listener_ConfigSubscriberService()
    {
        return $this->services['oro_organization.listener.config_subscriber'] = new \Oro\Bundle\OrganizationBundle\Event\ConfigSubscriber();
    }

    /**
     * Gets the 'oro_organization.organization.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroOrganization_Organization_Manager_ApiService()
    {
        $this->services['oro_organization.organization.manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_organization.organization_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Entity\Manager\OrganizationManager A Oro\Bundle\OrganizationBundle\Entity\Manager\OrganizationManager instance.
     */
    protected function getOroOrganization_OrganizationManagerService()
    {
        return $this->services['oro_organization.organization_manager'] = new \Oro\Bundle\OrganizationBundle\Entity\Manager\OrganizationManager($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_organization.orm.validator.organization_unique' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Validator\Constraints\OrganizationUniqueEntityValidator A Oro\Bundle\OrganizationBundle\Validator\Constraints\OrganizationUniqueEntityValidator instance.
     */
    protected function getOroOrganization_Orm_Validator_OrganizationUniqueService()
    {
        return $this->services['oro_organization.orm.validator.organization_unique'] = new \Oro\Bundle\OrganizationBundle\Validator\Constraints\OrganizationUniqueEntityValidator($this->get('doctrine'), $this->get('oro_security.owner.ownership_metadata_provider'), $this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_organization.owner_deletion_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\OrganizationBundle\Ownership\OwnerDeletionManager A Oro\Bundle\OrganizationBundle\Ownership\OwnerDeletionManager instance.
     */
    public function getOroOrganization_OwnerDeletionManagerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_organization.owner_deletion_manager'] = new OroBundleOrganizationBundleOwnershipOwnerDeletionManager_000000002e47e79b00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroOrganization_OwnerDeletionManagerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\OrganizationBundle\Ownership\OwnerDeletionManager(new \Oro\Bundle\OrganizationBundle\Ownership\OwnerAssignmentChecker(), $this->get('oro_entity_config.provider.ownership'), $this->get('oro_security.owner.ownership_metadata_provider'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_security.acl.object_id_accessor'));

        $instance->registerAssignmentChecker('Oro\\Bundle\\CalendarBundle\\Entity\\Calendar', $this->get('oro_calendar.owner_assignment_checker.calendar'));
        $instance->registerAssignmentChecker('Oro\\Bundle\\TagBundle\\Entity\\Tag', $this->get('oro_tag.owner_assignment_checker.tag'));

        return $instance;
    }

    /**
     * Gets the 'oro_organization.provider.business_units_grid' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Provider\BusinessUnitGridService A Oro\Bundle\OrganizationBundle\Provider\BusinessUnitGridService instance.
     */
    protected function getOroOrganization_Provider_BusinessUnitsGridService()
    {
        return $this->services['oro_organization.provider.business_units_grid'] = new \Oro\Bundle\OrganizationBundle\Provider\BusinessUnitGridService($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_organization.provider.phone.business_unit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Provider\BusinessUnitPhoneProvider A Oro\Bundle\OrganizationBundle\Provider\BusinessUnitPhoneProvider instance.
     */
    protected function getOroOrganization_Provider_Phone_BusinessUnitService()
    {
        return $this->services['oro_organization.provider.phone.business_unit'] = new \Oro\Bundle\OrganizationBundle\Provider\BusinessUnitPhoneProvider();
    }

    /**
     * Gets the 'oro_organization.twig.business_units' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Twig\BusinessUnitExtension A Oro\Bundle\OrganizationBundle\Twig\BusinessUnitExtension instance.
     */
    protected function getOroOrganization_Twig_BusinessUnitsService()
    {
        return $this->services['oro_organization.twig.business_units'] = new \Oro\Bundle\OrganizationBundle\Twig\BusinessUnitExtension($this->get('oro_organization.business_unit_manager'));
    }

    /**
     * Gets the 'oro_organization.twig.get_owner' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\OrganizationBundle\Twig\OwnerTypeExtension A Oro\Bundle\OrganizationBundle\Twig\OwnerTypeExtension instance.
     */
    protected function getOroOrganization_Twig_GetOwnerService()
    {
        return $this->services['oro_organization.twig.get_owner'] = new \Oro\Bundle\OrganizationBundle\Twig\OwnerTypeExtension($this->get('oro_entity_config.provider.ownership'), $this->get('oro_security.owner.entity_owner_accessor'));
    }

    /**
     * Gets the 'oro_platform.composer.local_repo_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\PlatformBundle\Composer\LocalRepositoryFactory A Oro\Bundle\PlatformBundle\Composer\LocalRepositoryFactory instance.
     */
    protected function getOroPlatform_Composer_LocalRepoFactoryService()
    {
        return $this->services['oro_platform.composer.local_repo_factory'] = new \Oro\Bundle\PlatformBundle\Composer\LocalRepositoryFactory($this->get('filesystem'), 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/composer/installed.json');
    }

    /**
     * Gets the 'oro_platform.composer.version_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\PlatformBundle\Composer\VersionHelper A Oro\Bundle\PlatformBundle\Composer\VersionHelper instance.
     */
    protected function getOroPlatform_Composer_VersionHelperService()
    {
        $this->services['oro_platform.composer.version_helper'] = $instance = new \Oro\Bundle\PlatformBundle\Composer\VersionHelper($this->get('oro_platform.composer.local_repo_factory'));

        $instance->setCache($this->get('oro_platform.version.cache'));

        return $instance;
    }

    /**
     * Gets the 'oro_platform.event_listener.driver_lock' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\PlatformBundle\EventListener\Console\DriverLockCommandListener A Oro\Bundle\PlatformBundle\EventListener\Console\DriverLockCommandListener instance.
     */
    protected function getOroPlatform_EventListener_DriverLockService()
    {
        return $this->services['oro_platform.event_listener.driver_lock'] = new \Oro\Bundle\PlatformBundle\EventListener\Console\DriverLockCommandListener($this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_platform.event_listener.optional_listeners' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\PlatformBundle\EventListener\Console\OptionalListenersListener A Oro\Bundle\PlatformBundle\EventListener\Console\OptionalListenersListener instance.
     */
    protected function getOroPlatform_EventListener_OptionalListenersService()
    {
        return $this->services['oro_platform.event_listener.optional_listeners'] = new \Oro\Bundle\PlatformBundle\EventListener\Console\OptionalListenersListener($this->get('oro_platform.optional_listeners.manager'));
    }

    /**
     * Gets the 'oro_platform.maintenance' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\PlatformBundle\Maintenance\Mode A Oro\Bundle\PlatformBundle\Maintenance\Mode instance.
     */
    protected function getOroPlatform_MaintenanceService()
    {
        return $this->services['oro_platform.maintenance'] = new \Oro\Bundle\PlatformBundle\Maintenance\Mode($this->get('lexik_maintenance.driver.factory'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_platform.optional_listeners.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\PlatformBundle\Manager\OptionalListenerManager A Oro\Bundle\PlatformBundle\Manager\OptionalListenerManager instance.
     */
    protected function getOroPlatform_OptionalListeners_ManagerService()
    {
        return $this->services['oro_platform.optional_listeners.manager'] = new \Oro\Bundle\PlatformBundle\Manager\OptionalListenerManager(array(0 => 'oro_dataaudit.listener.entity_listener', 1 => 'oro_notification.docrine.event.listener', 2 => 'oro_search.index_listener', 3 => 'oro_workflow.listener.process_collector'), $this);
    }

    /**
     * Gets the 'oro_platform.twig.platform_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\PlatformBundle\Twig\PlatformExtension A Oro\Bundle\PlatformBundle\Twig\PlatformExtension instance.
     */
    protected function getOroPlatform_Twig_PlatformExtensionService()
    {
        return $this->services['oro_platform.twig.platform_extension'] = new \Oro\Bundle\PlatformBundle\Twig\PlatformExtension($this->get('oro_platform.composer.version_helper'));
    }

    /**
     * Gets the 'oro_platform.version.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroPlatform_Version_CacheService()
    {
        $this->services['oro_platform.version.cache'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_platform.version.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_query_designer.config.resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\QueryDesignerBundle\QueryDesigner\ConfigurationResolver A Oro\Bundle\QueryDesignerBundle\QueryDesigner\ConfigurationResolver instance.
     */
    protected function getOroQueryDesigner_Config_ResolverService()
    {
        return $this->services['oro_query_designer.config.resolver'] = new \Oro\Bundle\QueryDesignerBundle\QueryDesigner\ConfigurationResolver($this->get('oro_entity.orm.entity_class_resolver'), $this);
    }

    /**
     * Gets the 'oro_query_designer.entity_field_list_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\EntityWithFieldsProvider A Oro\Bundle\EntityBundle\Provider\EntityWithFieldsProvider instance.
     */
    protected function getOroQueryDesigner_EntityFieldListProviderService()
    {
        return $this->services['oro_query_designer.entity_field_list_provider'] = new \Oro\Bundle\EntityBundle\Provider\EntityWithFieldsProvider($this->get('oro_query_designer.entity_field_provider'), $this->get('oro_query_designer.entity_provider'));
    }

    /**
     * Gets the 'oro_query_designer.entity_field_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\EntityFieldProvider A Oro\Bundle\EntityBundle\Provider\EntityFieldProvider instance.
     */
    protected function getOroQueryDesigner_EntityFieldProviderService()
    {
        $this->services['oro_query_designer.entity_field_provider'] = $instance = new \Oro\Bundle\EntityBundle\Provider\EntityFieldProvider($this->get('oro_entity_config.provider.entity'), $this->get('oro_entity_config.provider.extend'), $this->get('oro_entity.orm.entity_class_resolver'), $this->get('oro_entity_extend.extend.field_type_helper'), $this->get('doctrine'), $this->get('translator'), array());

        $instance->setEntityProvider($this->get('oro_entity.entity_provider'));
        $instance->setVirtualFieldProvider($this->get('oro_entity.virtual_field_provider'));
        $instance->setVirtualRelationProvider($this->get('oro_entity.virtual_relation_provider.chain'));
        $instance->setExclusionProvider($this->get('oro_entity.exclusion_provider'));
        $instance->setEntityProvider($this->get('oro_query_designer.entity_provider'));
        $instance->setVirtualFieldProvider($this->get('oro_entity.virtual_field_provider.chain'));
        $instance->setExclusionProvider($this->get('oro_query_designer.exclusion_provider'));

        return $instance;
    }

    /**
     * Gets the 'oro_query_designer.entity_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\EntityProvider A Oro\Bundle\EntityBundle\Provider\EntityProvider instance.
     */
    protected function getOroQueryDesigner_EntityProviderService()
    {
        $this->services['oro_query_designer.entity_provider'] = $instance = new \Oro\Bundle\EntityBundle\Provider\EntityProvider($this->get('oro_entity_config.provider.entity'), $this->get('oro_entity_config.provider.extend'), $this->get('oro_entity.orm.entity_class_resolver'), $this->get('translator'));

        $instance->setExclusionProvider($this->get('oro_entity.exclusion_provider'));
        $instance->setExclusionProvider($this->get('oro_query_designer.exclusion_provider'));

        return $instance;
    }

    /**
     * Gets the 'oro_query_designer.exclusion_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\ChainExclusionProvider A Oro\Bundle\EntityBundle\Provider\ChainExclusionProvider instance.
     */
    protected function getOroQueryDesigner_ExclusionProviderService()
    {
        $this->services['oro_query_designer.exclusion_provider'] = $instance = new \Oro\Bundle\EntityBundle\Provider\ChainExclusionProvider();

        $instance->addProvider($this->get('oro_entity.exclusion_provider'));
        $instance->addProvider($this->get('oro_entity.exclusion_provider.dictionary'));

        return $instance;
    }

    /**
     * Gets the 'oro_query_designer.form.type.field_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\QueryDesignerBundle\Form\Type\FieldChoiceType A Oro\Bundle\QueryDesignerBundle\Form\Type\FieldChoiceType instance.
     */
    protected function getOroQueryDesigner_Form_Type_FieldChoiceService()
    {
        return $this->services['oro_query_designer.form.type.field_choice'] = new \Oro\Bundle\QueryDesignerBundle\Form\Type\FieldChoiceType();
    }

    /**
     * Gets the 'oro_query_designer.form.type.function_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\QueryDesignerBundle\Form\Type\FunctionChoiceType A Oro\Bundle\QueryDesignerBundle\Form\Type\FunctionChoiceType instance.
     */
    protected function getOroQueryDesigner_Form_Type_FunctionChoiceService()
    {
        return $this->services['oro_query_designer.form.type.function_choice'] = new \Oro\Bundle\QueryDesignerBundle\Form\Type\FunctionChoiceType();
    }

    /**
     * Gets the 'oro_query_designer.form.type.query_designer_column' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\QueryDesignerBundle\Form\Type\ColumnType A Oro\Bundle\QueryDesignerBundle\Form\Type\ColumnType instance.
     */
    protected function getOroQueryDesigner_Form_Type_QueryDesignerColumnService()
    {
        return $this->services['oro_query_designer.form.type.query_designer_column'] = new \Oro\Bundle\QueryDesignerBundle\Form\Type\ColumnType();
    }

    /**
     * Gets the 'oro_query_designer.form.type.query_designer_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\QueryDesignerBundle\Form\Type\FilterType A Oro\Bundle\QueryDesignerBundle\Form\Type\FilterType instance.
     */
    protected function getOroQueryDesigner_Form_Type_QueryDesignerFilterService()
    {
        return $this->services['oro_query_designer.form.type.query_designer_filter'] = new \Oro\Bundle\QueryDesignerBundle\Form\Type\FilterType();
    }

    /**
     * Gets the 'oro_query_designer.form.type.query_designer_grouping' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\QueryDesignerBundle\Form\Type\GroupingType A Oro\Bundle\QueryDesignerBundle\Form\Type\GroupingType instance.
     */
    protected function getOroQueryDesigner_Form_Type_QueryDesignerGroupingService()
    {
        return $this->services['oro_query_designer.form.type.query_designer_grouping'] = new \Oro\Bundle\QueryDesignerBundle\Form\Type\GroupingType();
    }

    /**
     * Gets the 'oro_query_designer.form.type.sorting_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\QueryDesignerBundle\Form\Type\SortingChoiceType A Oro\Bundle\QueryDesignerBundle\Form\Type\SortingChoiceType instance.
     */
    protected function getOroQueryDesigner_Form_Type_SortingChoiceService()
    {
        return $this->services['oro_query_designer.form.type.sorting_choice'] = new \Oro\Bundle\QueryDesignerBundle\Form\Type\SortingChoiceType();
    }

    /**
     * Gets the 'oro_query_designer.grid.datagrid_configuration_builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\QueryDesignerBundle\Grid\DatagridConfigurationBuilder A Oro\Bundle\QueryDesignerBundle\Grid\DatagridConfigurationBuilder instance.
     */
    protected function getOroQueryDesigner_Grid_DatagridConfigurationBuilderService()
    {
        $this->services['oro_query_designer.grid.datagrid_configuration_builder'] = $instance = new \Oro\Bundle\QueryDesignerBundle\Grid\DatagridConfigurationBuilder($this->get('oro_query_designer.query_designer.manager'), $this->get('oro_entity.virtual_field_provider.chain'), $this->get('doctrine'), $this->get('oro_datagrid.datagrid.guesser'));

        $instance->setVirtualRelationProvider($this->get('oro_entity.virtual_relation_provider.chain'));

        return $instance;
    }

    /**
     * Gets the 'oro_query_designer.grid.extension.orm_datasource' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\QueryDesignerBundle\Grid\Extension\OrmDatasourceExtension A Oro\Bundle\QueryDesignerBundle\Grid\Extension\OrmDatasourceExtension instance.
     */
    protected function getOroQueryDesigner_Grid_Extension_OrmDatasourceService()
    {
        return $this->services['oro_query_designer.grid.extension.orm_datasource'] = new \Oro\Bundle\QueryDesignerBundle\Grid\Extension\OrmDatasourceExtension($this->get('oro_query_designer.query_designer.restriction_builder'));
    }

    /**
     * Gets the 'oro_query_designer.group_by_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\QueryDesignerBundle\Model\GroupByHelper A Oro\Bundle\QueryDesignerBundle\Model\GroupByHelper instance.
     */
    protected function getOroQueryDesigner_GroupByHelperService()
    {
        return $this->services['oro_query_designer.group_by_helper'] = new \Oro\Bundle\QueryDesignerBundle\Model\GroupByHelper();
    }

    /**
     * Gets the 'oro_query_designer.query_designer.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\QueryDesignerBundle\QueryDesigner\Manager A Oro\Bundle\QueryDesignerBundle\QueryDesigner\Manager instance.
     */
    protected function getOroQueryDesigner_QueryDesigner_ManagerService()
    {
        $this->services['oro_query_designer.query_designer.manager'] = $instance = new \Oro\Bundle\QueryDesignerBundle\QueryDesigner\Manager(array('filters' => array('activityList' => array('type' => 'activityList', 'query_type' => array(0 => 'all'), 'applicable' => array(), 'template_theme' => 'embedded'), 'audit' => array('type' => 'audit', 'query_type' => array(0 => 'all'), 'applicable' => array(), 'template_theme' => 'embedded'), 'string' => array('applicable' => array(0 => array('type' => 'string'), 1 => array('type' => 'text'), 2 => array('type' => 'ref-one')), 'type' => 'string', 'query_type' => array(0 => 'all'), 'template_theme' => 'embedded'), 'number' => array('applicable' => array(0 => array('type' => 'integer'), 1 => array('type' => 'smallint'), 2 => array('type' => 'bigint'), 3 => array('type' => 'decimal'), 4 => array('type' => 'float'), 5 => array('type' => 'money')), 'type' => 'number', 'query_type' => array(0 => 'all'), 'template_theme' => 'embedded'), 'date' => array('applicable' => array(0 => array('type' => 'date')), 'type' => 'date', 'query_type' => array(0 => 'all'), 'template_theme' => 'embedded'), 'datetime' => array('applicable' => array(0 => array('type' => 'datetime')), 'type' => 'datetime', 'query_type' => array(0 => 'all'), 'template_theme' => 'embedded'), 'boolean' => array('applicable' => array(0 => array('type' => 'boolean')), 'type' => 'boolean', 'query_type' => array(0 => 'all'), 'template_theme' => 'embedded'), 'percent' => array('applicable' => array(0 => array('type' => 'percent')), 'type' => 'percent', 'query_type' => array(0 => 'all'), 'template_theme' => 'embedded'), 'enum' => array('applicable' => array(0 => array('type' => 'enum')), 'type' => 'enum', 'options' => array('null_value' => ':empty:', 'populate_default' => true, 'default_value' => 'Any', 'class' => ''), 'init_module' => 'oroquerydesigner/js/enum-filter-initialized', 'query_type' => array(0 => 'all'), 'template_theme' => 'embedded'), 'multiEnum' => array('applicable' => array(0 => array('type' => 'multiEnum')), 'type' => 'multi_enum', 'options' => array('null_value' => ':empty:', 'populate_default' => true, 'default_value' => 'Any', 'class' => ''), 'init_module' => 'oroquerydesigner/js/enum-filter-initialized', 'query_type' => array(0 => 'all'), 'template_theme' => 'embedded'), 'manyToMany' => array('type' => 'many-to-many', 'applicable' => array(0 => array('type' => 'manyToMany')), 'query_type' => array(0 => 'all'), 'template_theme' => 'embedded'), 'dictionary' => array('applicable' => array(0 => array('type' => 'dictionary')), 'type' => 'dictionary', 'options' => array('null_value' => ':empty:', 'populate_default' => true, 'default_value' => 'Any', 'class' => ''), 'init_module' => 'oroquerydesigner/js/dictionary-filter-initialized', 'query_type' => array(0 => 'all'), 'template_theme' => 'embedded'), 'segment' => array('applicable' => array(0 => array('type' => 'entity')), 'type' => 'segment', 'query_type' => array(0 => 'segment', 1 => 'report'), 'template_theme' => 'embedded')), 'grouping' => array('exclude' => array(0 => array('type' => 'text'), 1 => array('type' => 'array'), 2 => array('type' => 'json_array'), 3 => array('type' => 'simple_array'), 4 => array('type' => 'object'), 5 => array('type' => 'multiEnum'))), 'aggregates' => array('identifier' => array('applicable' => array(0 => array('identifier' => true)), 'functions' => array(0 => array('name' => 'Count', 'expr' => 'COUNT($column)', 'return_type' => 'integer', 'name_label' => 'oro.query_designer.aggregates.identifier.Count.name', 'hint_label' => 'oro.query_designer.aggregates.identifier.Count.hint')), 'query_type' => array(0 => 'report')), 'string' => array('applicable' => array(0 => array('type' => 'string')), 'functions' => array(0 => array('name' => 'Count', 'expr' => 'COUNT($column)', 'return_type' => 'integer', 'name_label' => 'oro.query_designer.aggregates.string.Count.name', 'hint_label' => 'oro.query_designer.aggregates.string.Count.hint')), 'query_type' => array(0 => 'report')), 'number' => array('applicable' => array(0 => array('type' => 'integer'), 1 => array('type' => 'smallint'), 2 => array('type' => 'bigint'), 3 => array('type' => 'decimal'), 4 => array('type' => 'float'), 5 => array('type' => 'money'), 6 => array('type' => 'percent')), 'functions' => array(0 => array('name' => 'Count', 'expr' => 'COUNT($column)', 'return_type' => 'integer', 'name_label' => 'oro.query_designer.aggregates.number.Count.name', 'hint_label' => 'oro.query_designer.aggregates.number.Count.hint'), 1 => array('name' => 'Sum', 'expr' => 'SUM($column)', 'name_label' => 'oro.query_designer.aggregates.number.Sum.name', 'hint_label' => 'oro.query_designer.aggregates.number.Sum.hint'), 2 => array('name' => 'Avg', 'expr' => 'AVG($column)', 'name_label' => 'oro.query_designer.aggregates.number.Avg.name', 'hint_label' => 'oro.query_designer.aggregates.number.Avg.hint'), 3 => array('name' => 'Min', 'expr' => 'MIN($column)', 'name_label' => 'oro.query_designer.aggregates.number.Min.name', 'hint_label' => 'oro.query_designer.aggregates.number.Min.hint'), 4 => array('name' => 'Max', 'expr' => 'MAX($column)', 'name_label' => 'oro.query_designer.aggregates.number.Max.name', 'hint_label' => 'oro.query_designer.aggregates.number.Max.hint')), 'query_type' => array(0 => 'report'))), 'converters' => array()), $this->get('oro_query_designer.config.resolver'), $this->get('oro_entity.entity_hierarchy_provider'), $this->get('translator'));

        $instance->addFilter('multiselect-originfolder', $this->get('oro_email_filter.filter_origin_folder'));
        $instance->addFilter('multiselect-messagetype', $this->get('oro_email_filter.filter_massage_type'));
        $instance->addFilter('enum', $this->get('oro_entity_extend.enum_filter'));
        $instance->addFilter('multi_enum', $this->get('oro_entity_extend.multi_enum_filter'));
        $instance->addFilter('dictionary', $this->get('oro_entity_extend.dictionary_filter'));
        $instance->addFilter('activityList', $this->get('oro_activity_list.filter.activity_list'));
        $instance->addFilter('command_with_args', $this->get('oro_cron.command_with_args_string_filter'));
        $instance->addFilter('audit', $this->get('oro_dataaudit.filter.audit'));
        $instance->addFilter('string', $this->get('oro_filter.string_filter'));
        $instance->addFilter('selectrow', $this->get('oro_filter.select_row_filter'));
        $instance->addFilter('number', $this->get('oro_filter.number_filter'));
        $instance->addFilter('percent', $this->get('oro_filter.percent_filter'));
        $instance->addFilter('currency', $this->get('oro_filter.currency_filter'));
        $instance->addFilter('choice', $this->get('oro_filter.choice_filter'));
        $instance->addFilter('single_choice', $this->get('oro_filter.single_choice_filter'));
        $instance->addFilter('entity', $this->get('oro_filter.entity_filter'));
        $instance->addFilter('boolean', $this->get('oro_filter.boolean_filter'));
        $instance->addFilter('date', $this->get('oro_filter.date_range_filter'));
        $instance->addFilter('datetime', $this->get('oro_filter.datetime_range_filter'));
        $instance->addFilter('many-to-many', $this->get('oro_filter.many_to_many_filter'));
        $instance->addFilter('dictionary', $this->get('oro_filter.dictionary_filter'));
        $instance->addFilter('segment', $this->get('oro_segment.filter.segment'));
        $instance->addFilter('tag', $this->get('oro_tag.filter.tags'));

        return $instance;
    }

    /**
     * Gets the 'oro_query_designer.query_designer.restriction_builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\QueryDesignerBundle\QueryDesigner\RestrictionBuilder A Oro\Bundle\QueryDesignerBundle\QueryDesigner\RestrictionBuilder instance.
     */
    protected function getOroQueryDesigner_QueryDesigner_RestrictionBuilderService()
    {
        return $this->services['oro_query_designer.query_designer.restriction_builder'] = new \Oro\Bundle\QueryDesignerBundle\QueryDesigner\RestrictionBuilder($this->get('oro_query_designer.query_designer.manager'));
    }

    /**
     * Gets the 'oro_query_designer.validator.grouping_validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\QueryDesignerBundle\Validator\GroupingValidator A Oro\Bundle\QueryDesignerBundle\Validator\GroupingValidator instance.
     */
    protected function getOroQueryDesigner_Validator_GroupingValidatorService()
    {
        return $this->services['oro_query_designer.validator.grouping_validator'] = new \Oro\Bundle\QueryDesignerBundle\Validator\GroupingValidator($this->get('translator'));
    }

    /**
     * Gets the 'oro_query_designer.validator.query_validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\QueryDesignerBundle\Validator\QueryValidator A Oro\Bundle\QueryDesignerBundle\Validator\QueryValidator instance.
     */
    protected function getOroQueryDesigner_Validator_QueryValidatorService()
    {
        return $this->services['oro_query_designer.validator.query_validator'] = new \Oro\Bundle\QueryDesignerBundle\Validator\QueryValidator($this->get('oro_datagrid.configuration.provider.chain'), $this->get('oro_datagrid.datagrid.builder'), $this->get('translator'), true);
    }

    /**
     * Gets the 'oro_reminder.entity.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReminderBundle\Entity\Manager\ReminderManager A Oro\Bundle\ReminderBundle\Entity\Manager\ReminderManager instance.
     */
    protected function getOroReminder_Entity_ManagerService()
    {
        return $this->services['oro_reminder.entity.manager'] = new \Oro\Bundle\ReminderBundle\Entity\Manager\ReminderManager($this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_reminder.event_listener.reminder_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\ReminderBundle\EventListener\ReminderListener A Oro\Bundle\ReminderBundle\EventListener\ReminderListener instance.
     */
    public function getOroReminder_EventListener_ReminderListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_reminder.event_listener.reminder_listener'] = new OroBundleReminderBundleEventListenerReminderListener_000000002e47eb8400000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroReminder_EventListener_ReminderListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\ReminderBundle\EventListener\ReminderListener($this->get('oro_reminder.entity.manager'));
    }

    /**
     * Gets the 'oro_reminder.form.extension.reminder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReminderBundle\Form\Extension\ReminderExtension A Oro\Bundle\ReminderBundle\Form\Extension\ReminderExtension instance.
     */
    protected function getOroReminder_Form_Extension_ReminderService()
    {
        return $this->services['oro_reminder.form.extension.reminder'] = new \Oro\Bundle\ReminderBundle\Form\Extension\ReminderExtension($this->get('oro_reminder.entity.manager'));
    }

    /**
     * Gets the 'oro_reminder.form.type.method' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReminderBundle\Form\Type\MethodType A Oro\Bundle\ReminderBundle\Form\Type\MethodType instance.
     */
    protected function getOroReminder_Form_Type_MethodService()
    {
        return $this->services['oro_reminder.form.type.method'] = new \Oro\Bundle\ReminderBundle\Form\Type\MethodType($this->get('oro_reminder.send_processor_registry'));
    }

    /**
     * Gets the 'oro_reminder.form.type.reminder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReminderBundle\Form\Type\ReminderType A Oro\Bundle\ReminderBundle\Form\Type\ReminderType instance.
     */
    protected function getOroReminder_Form_Type_ReminderService()
    {
        return $this->services['oro_reminder.form.type.reminder'] = new \Oro\Bundle\ReminderBundle\Form\Type\ReminderType();
    }

    /**
     * Gets the 'oro_reminder.form.type.reminder_collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReminderBundle\Form\Type\ReminderCollectionType A Oro\Bundle\ReminderBundle\Form\Type\ReminderCollectionType instance.
     */
    protected function getOroReminder_Form_Type_ReminderCollectionService()
    {
        return $this->services['oro_reminder.form.type.reminder_collection'] = new \Oro\Bundle\ReminderBundle\Form\Type\ReminderCollectionType();
    }

    /**
     * Gets the 'oro_reminder.form.type.reminder_interval' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReminderBundle\Form\Type\ReminderIntervalType A Oro\Bundle\ReminderBundle\Form\Type\ReminderIntervalType instance.
     */
    protected function getOroReminder_Form_Type_ReminderIntervalService()
    {
        return $this->services['oro_reminder.form.type.reminder_interval'] = new \Oro\Bundle\ReminderBundle\Form\Type\ReminderIntervalType();
    }

    /**
     * Gets the 'oro_reminder.form.type.reminder_interval.unit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReminderBundle\Form\Type\ReminderInterval\UnitType A Oro\Bundle\ReminderBundle\Form\Type\ReminderInterval\UnitType instance.
     */
    protected function getOroReminder_Form_Type_ReminderInterval_UnitService()
    {
        return $this->services['oro_reminder.form.type.reminder_interval.unit'] = new \Oro\Bundle\ReminderBundle\Form\Type\ReminderInterval\UnitType();
    }

    /**
     * Gets the 'oro_reminder.model.email_notification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReminderBundle\Model\Email\EmailNotification A Oro\Bundle\ReminderBundle\Model\Email\EmailNotification instance.
     */
    protected function getOroReminder_Model_EmailNotificationService()
    {
        return $this->services['oro_reminder.model.email_notification'] = new \Oro\Bundle\ReminderBundle\Model\Email\EmailNotification($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_entity_config.provider.reminder'), $this->get('oro_entity.entity_name_resolver'));
    }

    /**
     * Gets the 'oro_reminder.send_processor.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReminderBundle\Model\Email\EmailSendProcessor A Oro\Bundle\ReminderBundle\Model\Email\EmailSendProcessor instance.
     */
    protected function getOroReminder_SendProcessor_EmailService()
    {
        return $this->services['oro_reminder.send_processor.email'] = new \Oro\Bundle\ReminderBundle\Model\Email\EmailSendProcessor($this->get('oro_notification.email_processor'), $this->get('oro_reminder.model.email_notification'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_reminder.send_processor.web_socket' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReminderBundle\Model\WebSocket\WebSocketSendProcessor A Oro\Bundle\ReminderBundle\Model\WebSocket\WebSocketSendProcessor instance.
     */
    protected function getOroReminder_SendProcessor_WebSocketService()
    {
        return $this->services['oro_reminder.send_processor.web_socket'] = new \Oro\Bundle\ReminderBundle\Model\WebSocket\WebSocketSendProcessor($this->get('oro_wamp.publisher'), $this->get('oro_reminder.web_socket.message_params_provider'));
    }

    /**
     * Gets the 'oro_reminder.send_processor_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReminderBundle\Model\SendProcessorRegistry A Oro\Bundle\ReminderBundle\Model\SendProcessorRegistry instance.
     */
    protected function getOroReminder_SendProcessorRegistryService()
    {
        return $this->services['oro_reminder.send_processor_registry'] = new \Oro\Bundle\ReminderBundle\Model\SendProcessorRegistry(array(0 => $this->get('oro_reminder.send_processor.email'), 1 => $this->get('oro_reminder.send_processor.web_socket')));
    }

    /**
     * Gets the 'oro_reminder.sender' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\ReminderBundle\Model\ReminderSender A Oro\Bundle\ReminderBundle\Model\ReminderSender instance.
     */
    public function getOroReminder_SenderService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_reminder.sender'] = new OroBundleReminderBundleModelReminderSender_000000002e47eb9700000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroReminder_SenderService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\ReminderBundle\Model\ReminderSender($this->get('oro_reminder.send_processor_registry'));
    }

    /**
     * Gets the 'oro_reminder.twig.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReminderBundle\Twig\ReminderExtension A Oro\Bundle\ReminderBundle\Twig\ReminderExtension instance.
     */
    protected function getOroReminder_Twig_ExtensionService()
    {
        return $this->services['oro_reminder.twig.extension'] = new \Oro\Bundle\ReminderBundle\Twig\ReminderExtension($this->get('doctrine.orm.default_entity_manager'), $this->get('security.context'), $this->get('oro_reminder.web_socket.message_params_provider'));
    }

    /**
     * Gets the 'oro_reminder.url_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReminderBundle\Model\UrlProvider A Oro\Bundle\ReminderBundle\Model\UrlProvider instance.
     */
    protected function getOroReminder_UrlProviderService()
    {
        return $this->services['oro_reminder.url_provider'] = new \Oro\Bundle\ReminderBundle\Model\UrlProvider($this->get('oro_entity_config.config_manager'), $this->get('router'));
    }

    /**
     * Gets the 'oro_reminder.web_socket.message_params_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReminderBundle\Model\WebSocket\MessageParamsProvider A Oro\Bundle\ReminderBundle\Model\WebSocket\MessageParamsProvider instance.
     */
    protected function getOroReminder_WebSocket_MessageParamsProviderService()
    {
        return $this->services['oro_reminder.web_socket.message_params_provider'] = new \Oro\Bundle\ReminderBundle\Model\WebSocket\MessageParamsProvider($this->get('translator'), $this->get('oro_locale.formatter.date_time'), $this->get('oro_reminder.url_provider'), $this->get('oro_entity_config.provider.reminder'));
    }

    /**
     * Gets the 'oro_report.datagrid.configuration.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReportBundle\Grid\ReportDatagridConfigurationProvider A Oro\Bundle\ReportBundle\Grid\ReportDatagridConfigurationProvider instance.
     */
    protected function getOroReport_Datagrid_Configuration_ProviderService()
    {
        return $this->services['oro_report.datagrid.configuration.provider'] = new \Oro\Bundle\ReportBundle\Grid\ReportDatagridConfigurationProvider($this->get('oro_report.grid.datagrid_configuration_builder'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_report.form.handler.report' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReportBundle\Form\Handler\ReportHandler A Oro\Bundle\ReportBundle\Form\Handler\ReportHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_report.form.handler.report' service is requested while the 'request' scope is not active
     */
    protected function getOroReport_Form_Handler_ReportService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_report.form.handler.report', 'request');
        }

        return $this->services['oro_report.form.handler.report'] = $this->scopedServices['request']['oro_report.form.handler.report'] = new \Oro\Bundle\ReportBundle\Form\Handler\ReportHandler($this->get('oro_report.form.report'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_report.form.report' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroReport_Form_ReportService()
    {
        return $this->services['oro_report.form.report'] = $this->get('form.factory')->createNamed('oro_report_form', 'oro_report');
    }

    /**
     * Gets the 'oro_report.form.type.chart' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReportBundle\Form\Type\ReportChartType A Oro\Bundle\ReportBundle\Form\Type\ReportChartType instance.
     */
    protected function getOroReport_Form_Type_ChartService()
    {
        return $this->services['oro_report.form.type.chart'] = new \Oro\Bundle\ReportBundle\Form\Type\ReportChartType();
    }

    /**
     * Gets the 'oro_report.form.type.chart.schema' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReportBundle\Form\Type\ReportChartSchemaType A Oro\Bundle\ReportBundle\Form\Type\ReportChartSchemaType instance.
     */
    protected function getOroReport_Form_Type_Chart_SchemaService()
    {
        return $this->services['oro_report.form.type.chart.schema'] = new \Oro\Bundle\ReportBundle\Form\Type\ReportChartSchemaType($this->get('oro_query_designer.query_designer.manager'));
    }

    /**
     * Gets the 'oro_report.form.type.chart.schema.collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReportBundle\Form\Type\ReportChartSchemaCollectionType A Oro\Bundle\ReportBundle\Form\Type\ReportChartSchemaCollectionType instance.
     */
    protected function getOroReport_Form_Type_Chart_Schema_CollectionService()
    {
        return $this->services['oro_report.form.type.chart.schema.collection'] = new \Oro\Bundle\ReportBundle\Form\Type\ReportChartSchemaCollectionType($this->get('oro_chart.config_provider'));
    }

    /**
     * Gets the 'oro_report.form.type.entity_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReportBundle\Form\Type\ReportEntityChoiceType A Oro\Bundle\ReportBundle\Form\Type\ReportEntityChoiceType instance.
     */
    protected function getOroReport_Form_Type_EntityChoiceService()
    {
        return $this->services['oro_report.form.type.entity_choice'] = new \Oro\Bundle\ReportBundle\Form\Type\ReportEntityChoiceType($this->get('oro_entity.entity_provider'));
    }

    /**
     * Gets the 'oro_report.form.type.report' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReportBundle\Form\Type\ReportType A Oro\Bundle\ReportBundle\Form\Type\ReportType instance.
     */
    protected function getOroReport_Form_Type_ReportService()
    {
        return $this->services['oro_report.form.type.report'] = new \Oro\Bundle\ReportBundle\Form\Type\ReportType();
    }

    /**
     * Gets the 'oro_report.grid.base_configuration_builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReportBundle\Grid\BaseReportConfigurationBuilder A Oro\Bundle\ReportBundle\Grid\BaseReportConfigurationBuilder instance.
     */
    protected function getOroReport_Grid_BaseConfigurationBuilderService()
    {
        $this->services['oro_report.grid.base_configuration_builder'] = $instance = new \Oro\Bundle\ReportBundle\Grid\BaseReportConfigurationBuilder($this->get('oro_query_designer.query_designer.manager'), $this->get('oro_entity.virtual_field_provider.chain'), $this->get('doctrine'), $this->get('oro_datagrid.datagrid.guesser'));

        $instance->setVirtualRelationProvider($this->get('oro_entity.virtual_relation_provider.chain'));
        $instance->setConfigManager($this->get('oro_entity_config.config_manager'));

        return $instance;
    }

    /**
     * Gets the 'oro_report.grid.datagrid_configuration_builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReportBundle\Grid\ReportDatagridConfigurationBuilder A Oro\Bundle\ReportBundle\Grid\ReportDatagridConfigurationBuilder instance.
     */
    protected function getOroReport_Grid_DatagridConfigurationBuilderService()
    {
        $this->services['oro_report.grid.datagrid_configuration_builder'] = $instance = new \Oro\Bundle\ReportBundle\Grid\ReportDatagridConfigurationBuilder($this->get('oro_query_designer.query_designer.manager'), $this->get('oro_entity.virtual_field_provider.chain'), $this->get('doctrine'), $this->get('oro_datagrid.datagrid.guesser'));

        $instance->setVirtualRelationProvider($this->get('oro_entity.virtual_relation_provider.chain'));
        $instance->setConfigManager($this->get('oro_entity_config.config_manager'));

        return $instance;
    }

    /**
     * Gets the 'oro_report.listener.navigation_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReportBundle\EventListener\NavigationListener A Oro\Bundle\ReportBundle\EventListener\NavigationListener instance.
     */
    protected function getOroReport_Listener_NavigationListenerService()
    {
        return $this->services['oro_report.listener.navigation_listener'] = new \Oro\Bundle\ReportBundle\EventListener\NavigationListener($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_entity_config.provider.entity'), $this->get('oro_security.security_facade'), $this->get('oro_security.acl_helper'));
    }

    /**
     * Gets the 'oro_report.report.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroReport_Report_Manager_ApiService()
    {
        $this->services['oro_report.report.manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\ReportBundle\\Entity\\Report', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_report.report_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ReportBundle\Entity\Manager\ReportManager A Oro\Bundle\ReportBundle\Entity\Manager\ReportManager instance.
     */
    protected function getOroReport_ReportManagerService()
    {
        return $this->services['oro_report.report_manager'] = new \Oro\Bundle\ReportBundle\Entity\Manager\ReportManager($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_requirejs.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroRequirejs_CacheService()
    {
        $this->services['oro_requirejs.cache'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_requirejs.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_requirejs.twig.requirejs_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\RequireJSBundle\Twig\OroRequireJSExtension A Oro\Bundle\RequireJSBundle\Twig\OroRequireJSExtension instance.
     */
    protected function getOroRequirejs_Twig_RequirejsExtensionService()
    {
        return $this->services['oro_requirejs.twig.requirejs_extension'] = new \Oro\Bundle\RequireJSBundle\Twig\OroRequireJSExtension($this);
    }

    /**
     * Gets the 'oro_requirejs_config_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\RequireJSBundle\Provider\Config A Oro\Bundle\RequireJSBundle\Provider\Config instance.
     */
    public function getOroRequirejsConfigProviderService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_requirejs_config_provider'] = new OroBundleRequireJSBundleProviderConfig_000000002e47ea3500000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroRequirejsConfigProviderService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\RequireJSBundle\Provider\Config($this, $this->get('templating'), 'OroRequireJSBundle::require_config.js.twig');

        $instance->setCache($this->get('oro_requirejs.cache'));

        return $instance;
    }

    /**
     * Gets the 'oro_search.datasource.search' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\Extension\SearchDatasource A Oro\Bundle\SearchBundle\Extension\SearchDatasource instance.
     */
    protected function getOroSearch_Datasource_SearchService()
    {
        return $this->services['oro_search.datasource.search'] = new \Oro\Bundle\SearchBundle\Extension\SearchDatasource($this->get('oro_search.index'));
    }

    /**
     * Gets the 'oro_search.event_listener.demo_data_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\EventListener\DemoDataMigrationListener A Oro\Bundle\SearchBundle\EventListener\DemoDataMigrationListener instance.
     */
    protected function getOroSearch_EventListener_DemoDataListenerService()
    {
        return $this->services['oro_search.event_listener.demo_data_listener'] = new \Oro\Bundle\SearchBundle\EventListener\DemoDataMigrationListener($this->get('oro_search.search.engine'), $this->get('oro_search.index_listener'));
    }

    /**
     * Gets the 'oro_search.event_listener.orm.fulltext_index_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\SearchBundle\EventListener\ORM\FulltextIndexListener A Oro\Bundle\SearchBundle\EventListener\ORM\FulltextIndexListener instance.
     */
    public function getOroSearch_EventListener_Orm_FulltextIndexListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_search.event_listener.orm.fulltext_index_listener'] = new OroBundleSearchBundleEventListenerORMFulltextIndexListener_000000002e47e82e00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroSearch_EventListener_Orm_FulltextIndexListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\SearchBundle\EventListener\ORM\FulltextIndexListener('pdo_mysql');
    }

    /**
     * Gets the 'oro_search.event_listener.search_results_grid_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\EventListener\SearchResultsGridListener A Oro\Bundle\SearchBundle\EventListener\SearchResultsGridListener instance.
     */
    protected function getOroSearch_EventListener_SearchResultsGridListenerService()
    {
        return $this->services['oro_search.event_listener.search_results_grid_listener'] = new \Oro\Bundle\SearchBundle\EventListener\SearchResultsGridListener();
    }

    /**
     * Gets the 'oro_search.event_listener.update_schema_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\EventListener\UpdateSchemaDoctrineListener A Oro\Bundle\SearchBundle\EventListener\UpdateSchemaDoctrineListener instance.
     */
    protected function getOroSearch_EventListener_UpdateSchemaListenerService()
    {
        return $this->services['oro_search.event_listener.update_schema_listener'] = new \Oro\Bundle\SearchBundle\EventListener\UpdateSchemaDoctrineListener($this->get('oro_search.fulltext_index_manager'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_search.extension.formatter.property.search_result_property' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\Extension\SearchResultProperty A Oro\Bundle\SearchBundle\Extension\SearchResultProperty instance.
     */
    protected function getOroSearch_Extension_Formatter_Property_SearchResultPropertyService()
    {
        $this->services['oro_search.extension.formatter.property.search_result_property'] = $instance = new \Oro\Bundle\SearchBundle\Extension\SearchResultProperty($this->get('twig'), array('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization' => array('alias' => 'organization', 'search_template' => 'OroOrganizationBundle:Search:organizationResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit' => array('alias' => 'business_unit', 'search_template' => 'OroOrganizationBundle:Search:businessUnitResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser' => array('alias' => 'oro_email', 'label' => 'Emails', 'search_template' => 'OroEmailBundle:Email:searchResult.html.twig', 'route' => array('name' => 'oro_email_thread_view', 'parameters' => array('id' => 'email.id')), 'title_fields' => array(0 => 'email.subject'), 'fields' => array(0 => array('name' => 'email', 'relation_type' => 'many-to-one', 'relation_fields' => array(0 => array('name' => 'subject', 'target_type' => 'text', 'target_fields' => array(0 => 'subject'), 'relation_fields' => array())), 'target_fields' => array())), 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\User' => array('alias' => 'oro_user', 'title_fields' => array(0 => 'username'), 'route' => array('name' => 'oro_user_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroUserBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'username', 'target_type' => 'text', 'target_fields' => array(0 => 'username'), 'relation_fields' => array()), 1 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array()), 2 => array('name' => 'phone', 'target_type' => 'text', 'target_fields' => array(0 => 'phone'), 'relation_fields' => array()), 3 => array('name' => 'namePrefix', 'target_type' => 'text', 'target_fields' => array(0 => 'namePrefix'), 'relation_fields' => array()), 4 => array('name' => 'firstName', 'target_type' => 'text', 'target_fields' => array(0 => 'firstName'), 'relation_fields' => array()), 5 => array('name' => 'middleName', 'target_type' => 'text', 'target_fields' => array(0 => 'middleName'), 'relation_fields' => array()), 6 => array('name' => 'lastName', 'target_type' => 'text', 'target_fields' => array(0 => 'lastName'), 'relation_fields' => array()), 7 => array('name' => 'nameSuffix', 'target_type' => 'text', 'target_fields' => array(0 => 'nameSuffix'), 'relation_fields' => array()), 8 => array('name' => 'birthday', 'target_type' => 'datetime', 'target_fields' => array(0 => 'birthday'), 'relation_fields' => array()), 9 => array('name' => 'emails', 'relation_type' => 'one-to-many', 'relation_fields' => array(0 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array())), 'target_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\Role' => array('alias' => 'oro_access_role', 'title_fields' => array(0 => 'label'), 'search_template' => 'OroUserBundle:Role:Search\\result.html.twig', 'route' => array('name' => 'oro_user_role_index', 'parameters' => array()), 'fields' => array(0 => array('name' => 'label', 'target_type' => 'text', 'target_fields' => array(0 => 'label'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent' => array('alias' => 'oro_clendar_event', 'title_fields' => array(0 => 'title'), 'route' => array('name' => 'oro_calendar_view', 'parameters' => array('id' => 'calendar.id')), 'search_template' => 'OroCalendarBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'title', 'target_type' => 'text', 'target_fields' => array(0 => 'title'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array()), 2 => array('name' => 'start', 'target_type' => 'datetime', 'target_fields' => array(0 => 'start'), 'relation_fields' => array()), 3 => array('name' => 'end', 'target_type' => 'datetime', 'target_fields' => array(0 => 'end'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\ReportBundle\\Entity\\Report' => array('alias' => 'oro_report', 'title_fields' => array(0 => 'name'), 'route' => array('name' => 'oro_report_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroReportBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\TagBundle\\Entity\\Tag' => array('alias' => 'oro_tag', 'title_fields' => array(0 => 'name'), 'search_template' => 'OroTagBundle:Search:result.html.twig', 'route' => array('name' => 'oro_tag_search', 'parameters' => array('id' => 'id')), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal')));

        $instance->setMappingProvider($this->get('oro_search.provider.search_mapping'));

        return $instance;
    }

    /**
     * Gets the 'oro_search.extension.pager.orm.pager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\Extension\Pager\IndexerPager A Oro\Bundle\SearchBundle\Extension\Pager\IndexerPager instance.
     */
    protected function getOroSearch_Extension_Pager_Orm_PagerService()
    {
        return $this->services['oro_search.extension.pager.orm.pager'] = new \Oro\Bundle\SearchBundle\Extension\Pager\IndexerPager();
    }

    /**
     * Gets the 'oro_search.extension.search_pager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\Extension\Pager\SearchPagerExtension A Oro\Bundle\SearchBundle\Extension\Pager\SearchPagerExtension instance.
     */
    protected function getOroSearch_Extension_SearchPagerService()
    {
        return $this->services['oro_search.extension.search_pager'] = new \Oro\Bundle\SearchBundle\Extension\Pager\SearchPagerExtension($this->get('oro_search.extension.pager.orm.pager'));
    }

    /**
     * Gets the 'oro_search.extension.search_results' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\Extension\SearchResultsExtension A Oro\Bundle\SearchBundle\Extension\SearchResultsExtension instance.
     */
    protected function getOroSearch_Extension_SearchResultsService()
    {
        return $this->services['oro_search.extension.search_results'] = new \Oro\Bundle\SearchBundle\Extension\SearchResultsExtension($this->get('oro_search.formatter.result_formatter'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_search.mapper'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_search.formatter.result_formatter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\Formatter\ResultFormatter A Oro\Bundle\SearchBundle\Formatter\ResultFormatter instance.
     */
    protected function getOroSearch_Formatter_ResultFormatterService()
    {
        return $this->services['oro_search.formatter.result_formatter'] = new \Oro\Bundle\SearchBundle\Formatter\ResultFormatter($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_search.fulltext_index_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\Engine\FulltextIndexManager A Oro\Bundle\SearchBundle\Engine\FulltextIndexManager instance.
     */
    protected function getOroSearch_FulltextIndexManagerService()
    {
        return $this->services['oro_search.fulltext_index_manager'] = new \Oro\Bundle\SearchBundle\Engine\FulltextIndexManager($this->get('doctrine.dbal.default_connection'), array('pdo_mysql' => 'Oro\\Bundle\\SearchBundle\\Engine\\Orm\\PdoMysql', 'pdo_pgsql' => 'Oro\\Bundle\\SearchBundle\\Engine\\Orm\\PdoPgsql'));
    }

    /**
     * Gets the 'oro_search.index' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\Engine\Indexer A Oro\Bundle\SearchBundle\Engine\Indexer instance.
     */
    protected function getOroSearch_IndexService()
    {
        return $this->services['oro_search.index'] = new \Oro\Bundle\SearchBundle\Engine\Indexer($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_search.search.engine'), $this->get('oro_search.mapper'), $this->get('oro_search.security_provider'), $this->get('oro_entity_config.config_manager'), $this->get('oro_entity.entity_provider'), $this->get('translator'), $this->get('oro_security.search.acl_helper'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_search.index_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\SearchBundle\EventListener\IndexListener A Oro\Bundle\SearchBundle\EventListener\IndexListener instance.
     */
    public function getOroSearch_IndexListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_search.index_listener'] = new OroBundleSearchBundleEventListenerIndexListener_000000002e47e81200000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroSearch_IndexListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\SearchBundle\EventListener\IndexListener($this->get('oro_entity.doctrine_helper'), $this->get('oro_search.search.engine'));

        $instance->setRealTimeUpdate(true);
        $instance->setEntitiesConfig(array('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization' => array('alias' => 'organization', 'search_template' => 'OroOrganizationBundle:Search:organizationResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit' => array('alias' => 'business_unit', 'search_template' => 'OroOrganizationBundle:Search:businessUnitResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser' => array('alias' => 'oro_email', 'label' => 'Emails', 'search_template' => 'OroEmailBundle:Email:searchResult.html.twig', 'route' => array('name' => 'oro_email_thread_view', 'parameters' => array('id' => 'email.id')), 'title_fields' => array(0 => 'email.subject'), 'fields' => array(0 => array('name' => 'email', 'relation_type' => 'many-to-one', 'relation_fields' => array(0 => array('name' => 'subject', 'target_type' => 'text', 'target_fields' => array(0 => 'subject'), 'relation_fields' => array())), 'target_fields' => array())), 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\User' => array('alias' => 'oro_user', 'title_fields' => array(0 => 'username'), 'route' => array('name' => 'oro_user_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroUserBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'username', 'target_type' => 'text', 'target_fields' => array(0 => 'username'), 'relation_fields' => array()), 1 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array()), 2 => array('name' => 'phone', 'target_type' => 'text', 'target_fields' => array(0 => 'phone'), 'relation_fields' => array()), 3 => array('name' => 'namePrefix', 'target_type' => 'text', 'target_fields' => array(0 => 'namePrefix'), 'relation_fields' => array()), 4 => array('name' => 'firstName', 'target_type' => 'text', 'target_fields' => array(0 => 'firstName'), 'relation_fields' => array()), 5 => array('name' => 'middleName', 'target_type' => 'text', 'target_fields' => array(0 => 'middleName'), 'relation_fields' => array()), 6 => array('name' => 'lastName', 'target_type' => 'text', 'target_fields' => array(0 => 'lastName'), 'relation_fields' => array()), 7 => array('name' => 'nameSuffix', 'target_type' => 'text', 'target_fields' => array(0 => 'nameSuffix'), 'relation_fields' => array()), 8 => array('name' => 'birthday', 'target_type' => 'datetime', 'target_fields' => array(0 => 'birthday'), 'relation_fields' => array()), 9 => array('name' => 'emails', 'relation_type' => 'one-to-many', 'relation_fields' => array(0 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array())), 'target_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\Role' => array('alias' => 'oro_access_role', 'title_fields' => array(0 => 'label'), 'search_template' => 'OroUserBundle:Role:Search\\result.html.twig', 'route' => array('name' => 'oro_user_role_index', 'parameters' => array()), 'fields' => array(0 => array('name' => 'label', 'target_type' => 'text', 'target_fields' => array(0 => 'label'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent' => array('alias' => 'oro_clendar_event', 'title_fields' => array(0 => 'title'), 'route' => array('name' => 'oro_calendar_view', 'parameters' => array('id' => 'calendar.id')), 'search_template' => 'OroCalendarBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'title', 'target_type' => 'text', 'target_fields' => array(0 => 'title'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array()), 2 => array('name' => 'start', 'target_type' => 'datetime', 'target_fields' => array(0 => 'start'), 'relation_fields' => array()), 3 => array('name' => 'end', 'target_type' => 'datetime', 'target_fields' => array(0 => 'end'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\ReportBundle\\Entity\\Report' => array('alias' => 'oro_report', 'title_fields' => array(0 => 'name'), 'route' => array('name' => 'oro_report_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroReportBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\TagBundle\\Entity\\Tag' => array('alias' => 'oro_tag', 'title_fields' => array(0 => 'name'), 'search_template' => 'OroTagBundle:Search:result.html.twig', 'route' => array('name' => 'oro_tag_search', 'parameters' => array('id' => 'id')), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal')));
        $instance->setMappingProvider($this->get('oro_search.provider.search_mapping'));

        return $instance;
    }

    /**
     * Gets the 'oro_search.mapper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\Engine\ObjectMapper A Oro\Bundle\SearchBundle\Engine\ObjectMapper instance.
     */
    protected function getOroSearch_MapperService()
    {
        $this->services['oro_search.mapper'] = $instance = new \Oro\Bundle\SearchBundle\Engine\ObjectMapper($this->get('debug.event_dispatcher'), array('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization' => array('alias' => 'organization', 'search_template' => 'OroOrganizationBundle:Search:organizationResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit' => array('alias' => 'business_unit', 'search_template' => 'OroOrganizationBundle:Search:businessUnitResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser' => array('alias' => 'oro_email', 'label' => 'Emails', 'search_template' => 'OroEmailBundle:Email:searchResult.html.twig', 'route' => array('name' => 'oro_email_thread_view', 'parameters' => array('id' => 'email.id')), 'title_fields' => array(0 => 'email.subject'), 'fields' => array(0 => array('name' => 'email', 'relation_type' => 'many-to-one', 'relation_fields' => array(0 => array('name' => 'subject', 'target_type' => 'text', 'target_fields' => array(0 => 'subject'), 'relation_fields' => array())), 'target_fields' => array())), 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\User' => array('alias' => 'oro_user', 'title_fields' => array(0 => 'username'), 'route' => array('name' => 'oro_user_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroUserBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'username', 'target_type' => 'text', 'target_fields' => array(0 => 'username'), 'relation_fields' => array()), 1 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array()), 2 => array('name' => 'phone', 'target_type' => 'text', 'target_fields' => array(0 => 'phone'), 'relation_fields' => array()), 3 => array('name' => 'namePrefix', 'target_type' => 'text', 'target_fields' => array(0 => 'namePrefix'), 'relation_fields' => array()), 4 => array('name' => 'firstName', 'target_type' => 'text', 'target_fields' => array(0 => 'firstName'), 'relation_fields' => array()), 5 => array('name' => 'middleName', 'target_type' => 'text', 'target_fields' => array(0 => 'middleName'), 'relation_fields' => array()), 6 => array('name' => 'lastName', 'target_type' => 'text', 'target_fields' => array(0 => 'lastName'), 'relation_fields' => array()), 7 => array('name' => 'nameSuffix', 'target_type' => 'text', 'target_fields' => array(0 => 'nameSuffix'), 'relation_fields' => array()), 8 => array('name' => 'birthday', 'target_type' => 'datetime', 'target_fields' => array(0 => 'birthday'), 'relation_fields' => array()), 9 => array('name' => 'emails', 'relation_type' => 'one-to-many', 'relation_fields' => array(0 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array())), 'target_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\Role' => array('alias' => 'oro_access_role', 'title_fields' => array(0 => 'label'), 'search_template' => 'OroUserBundle:Role:Search\\result.html.twig', 'route' => array('name' => 'oro_user_role_index', 'parameters' => array()), 'fields' => array(0 => array('name' => 'label', 'target_type' => 'text', 'target_fields' => array(0 => 'label'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent' => array('alias' => 'oro_clendar_event', 'title_fields' => array(0 => 'title'), 'route' => array('name' => 'oro_calendar_view', 'parameters' => array('id' => 'calendar.id')), 'search_template' => 'OroCalendarBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'title', 'target_type' => 'text', 'target_fields' => array(0 => 'title'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array()), 2 => array('name' => 'start', 'target_type' => 'datetime', 'target_fields' => array(0 => 'start'), 'relation_fields' => array()), 3 => array('name' => 'end', 'target_type' => 'datetime', 'target_fields' => array(0 => 'end'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\ReportBundle\\Entity\\Report' => array('alias' => 'oro_report', 'title_fields' => array(0 => 'name'), 'route' => array('name' => 'oro_report_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroReportBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\TagBundle\\Entity\\Tag' => array('alias' => 'oro_tag', 'title_fields' => array(0 => 'name'), 'search_template' => 'OroTagBundle:Search:result.html.twig', 'route' => array('name' => 'oro_tag_search', 'parameters' => array('id' => 'id')), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal')));

        $instance->setMappingProvider($this->get('oro_search.provider.search_mapping'));

        return $instance;
    }

    /**
     * Gets the 'oro_search.prepare_result_item.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\EventListener\PrepareResultItemListener A Oro\Bundle\SearchBundle\EventListener\PrepareResultItemListener instance.
     */
    protected function getOroSearch_PrepareResultItem_ListenerService()
    {
        return $this->services['oro_search.prepare_result_item.listener'] = new \Oro\Bundle\SearchBundle\EventListener\PrepareResultItemListener($this->get('router'), $this->get('oro_search.mapper'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_search.provider.result_statistics_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\SearchBundle\Provider\ResultStatisticsProvider A Oro\Bundle\SearchBundle\Provider\ResultStatisticsProvider instance.
     */
    public function getOroSearch_Provider_ResultStatisticsProviderService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_search.provider.result_statistics_provider'] = new OroBundleSearchBundleProviderResultStatisticsProvider_000000002e47e80a00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroSearch_Provider_ResultStatisticsProviderService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\SearchBundle\Provider\ResultStatisticsProvider($this->get('oro_search.index'), $this->get('oro_entity_config.config_manager'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_search.provider.search_mapping' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\Provider\SearchMappingProvider A Oro\Bundle\SearchBundle\Provider\SearchMappingProvider instance.
     */
    protected function getOroSearch_Provider_SearchMappingService()
    {
        $this->services['oro_search.provider.search_mapping'] = $instance = new \Oro\Bundle\SearchBundle\Provider\SearchMappingProvider($this->get('debug.event_dispatcher'));

        $instance->setMappingConfig(array('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization' => array('alias' => 'organization', 'search_template' => 'OroOrganizationBundle:Search:organizationResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit' => array('alias' => 'business_unit', 'search_template' => 'OroOrganizationBundle:Search:businessUnitResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser' => array('alias' => 'oro_email', 'label' => 'Emails', 'search_template' => 'OroEmailBundle:Email:searchResult.html.twig', 'route' => array('name' => 'oro_email_thread_view', 'parameters' => array('id' => 'email.id')), 'title_fields' => array(0 => 'email.subject'), 'fields' => array(0 => array('name' => 'email', 'relation_type' => 'many-to-one', 'relation_fields' => array(0 => array('name' => 'subject', 'target_type' => 'text', 'target_fields' => array(0 => 'subject'), 'relation_fields' => array())), 'target_fields' => array())), 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\User' => array('alias' => 'oro_user', 'title_fields' => array(0 => 'username'), 'route' => array('name' => 'oro_user_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroUserBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'username', 'target_type' => 'text', 'target_fields' => array(0 => 'username'), 'relation_fields' => array()), 1 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array()), 2 => array('name' => 'phone', 'target_type' => 'text', 'target_fields' => array(0 => 'phone'), 'relation_fields' => array()), 3 => array('name' => 'namePrefix', 'target_type' => 'text', 'target_fields' => array(0 => 'namePrefix'), 'relation_fields' => array()), 4 => array('name' => 'firstName', 'target_type' => 'text', 'target_fields' => array(0 => 'firstName'), 'relation_fields' => array()), 5 => array('name' => 'middleName', 'target_type' => 'text', 'target_fields' => array(0 => 'middleName'), 'relation_fields' => array()), 6 => array('name' => 'lastName', 'target_type' => 'text', 'target_fields' => array(0 => 'lastName'), 'relation_fields' => array()), 7 => array('name' => 'nameSuffix', 'target_type' => 'text', 'target_fields' => array(0 => 'nameSuffix'), 'relation_fields' => array()), 8 => array('name' => 'birthday', 'target_type' => 'datetime', 'target_fields' => array(0 => 'birthday'), 'relation_fields' => array()), 9 => array('name' => 'emails', 'relation_type' => 'one-to-many', 'relation_fields' => array(0 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array())), 'target_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\Role' => array('alias' => 'oro_access_role', 'title_fields' => array(0 => 'label'), 'search_template' => 'OroUserBundle:Role:Search\\result.html.twig', 'route' => array('name' => 'oro_user_role_index', 'parameters' => array()), 'fields' => array(0 => array('name' => 'label', 'target_type' => 'text', 'target_fields' => array(0 => 'label'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent' => array('alias' => 'oro_clendar_event', 'title_fields' => array(0 => 'title'), 'route' => array('name' => 'oro_calendar_view', 'parameters' => array('id' => 'calendar.id')), 'search_template' => 'OroCalendarBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'title', 'target_type' => 'text', 'target_fields' => array(0 => 'title'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array()), 2 => array('name' => 'start', 'target_type' => 'datetime', 'target_fields' => array(0 => 'start'), 'relation_fields' => array()), 3 => array('name' => 'end', 'target_type' => 'datetime', 'target_fields' => array(0 => 'end'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\ReportBundle\\Entity\\Report' => array('alias' => 'oro_report', 'title_fields' => array(0 => 'name'), 'route' => array('name' => 'oro_report_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroReportBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\TagBundle\\Entity\\Tag' => array('alias' => 'oro_tag', 'title_fields' => array(0 => 'name'), 'search_template' => 'OroTagBundle:Search:result.html.twig', 'route' => array('name' => 'oro_tag_search', 'parameters' => array('id' => 'id')), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal')));

        return $instance;
    }

    /**
     * Gets the 'oro_search.search.engine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\Engine\Orm A Oro\Bundle\SearchBundle\Engine\Orm instance.
     */
    protected function getOroSearch_Search_EngineService()
    {
        $this->services['oro_search.search.engine'] = $instance = new \Oro\Bundle\SearchBundle\Engine\Orm($this->get('doctrine'), $this->get('debug.event_dispatcher'), $this->get('oro_entity.doctrine_helper'), $this->get('oro_search.mapper'));

        $instance->setLogQueries(false);
        $instance->setDrivers(array('pdo_mysql' => 'Oro\\Bundle\\SearchBundle\\Engine\\Orm\\PdoMysql', 'pdo_pgsql' => 'Oro\\Bundle\\SearchBundle\\Engine\\Orm\\PdoPgsql'));

        return $instance;
    }

    /**
     * Gets the 'oro_search.twig.search_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SearchBundle\Twig\OroSearchExtension A Oro\Bundle\SearchBundle\Twig\OroSearchExtension instance.
     */
    protected function getOroSearch_Twig_SearchExtensionService()
    {
        return $this->services['oro_search.twig.search_extension'] = new \Oro\Bundle\SearchBundle\Twig\OroSearchExtension();
    }

    /**
     * Gets the 'oro_security.acl.annotation_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Metadata\AclAnnotationProvider A Oro\Bundle\SecurityBundle\Metadata\AclAnnotationProvider instance.
     */
    protected function getOroSecurity_Acl_AnnotationProviderService()
    {
        $this->services['oro_security.acl.annotation_provider'] = $instance = new \Oro\Bundle\SecurityBundle\Metadata\AclAnnotationProvider($this->get('oro_security.acl.annotation_provider.cache'));

        $instance->addLoader(new \Oro\Bundle\SecurityBundle\Annotation\Loader\AclAnnotationLoader($this->get('annotation_reader')));
        $instance->addLoader(new \Oro\Bundle\SecurityBundle\Annotation\Loader\AclConfigLoader());

        return $instance;
    }

    /**
     * Gets the 'oro_security.acl.group_provider.chain' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Acl\Group\ChainAclGroupProvider A Oro\Bundle\SecurityBundle\Acl\Group\ChainAclGroupProvider instance.
     */
    protected function getOroSecurity_Acl_GroupProvider_ChainService()
    {
        return $this->services['oro_security.acl.group_provider.chain'] = new \Oro\Bundle\SecurityBundle\Acl\Group\ChainAclGroupProvider();
    }

    /**
     * Gets the 'oro_security.acl.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Acl\Persistence\AclManager A Oro\Bundle\SecurityBundle\Acl\Persistence\AclManager instance.
     */
    protected function getOroSecurity_Acl_ManagerService()
    {
        return $this->services['oro_security.acl.manager'] = new \Oro\Bundle\SecurityBundle\Acl\Persistence\AclManager($this->get('oro_security.acl.object_identity_factory'), $this->get('oro_security.acl.extension_selector'), $this->get('security.acl.dbal.provider', ContainerInterface::NULL_ON_INVALID_REFERENCE), new \Oro\Bundle\SecurityBundle\Acl\Persistence\AceManipulationHelper());
    }

    /**
     * Gets the 'oro_security.acl.object_identity_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Acl\Domain\ObjectIdentityFactory A Oro\Bundle\SecurityBundle\Acl\Domain\ObjectIdentityFactory instance.
     */
    protected function getOroSecurity_Acl_ObjectIdentityFactoryService()
    {
        return $this->services['oro_security.acl.object_identity_factory'] = new \Oro\Bundle\SecurityBundle\Acl\Domain\ObjectIdentityFactory($this->get('oro_security.acl.extension_selector'));
    }

    /**
     * Gets the 'oro_security.acl.privilege_repository' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Acl\Persistence\AclPrivilegeRepository A Oro\Bundle\SecurityBundle\Acl\Persistence\AclPrivilegeRepository instance.
     */
    protected function getOroSecurity_Acl_PrivilegeRepositoryService()
    {
        return $this->services['oro_security.acl.privilege_repository'] = new \Oro\Bundle\SecurityBundle\Acl\Persistence\AclPrivilegeRepository($this->get('oro_security.acl.manager'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_security.acl.sid_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Acl\Persistence\AclSidManager A Oro\Bundle\SecurityBundle\Acl\Persistence\AclSidManager instance.
     */
    protected function getOroSecurity_Acl_SidManagerService()
    {
        return $this->services['oro_security.acl.sid_manager'] = new \Oro\Bundle\SecurityBundle\Acl\Persistence\AclSidManager($this->get('security.acl.dbal.provider', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'oro_security.acl_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\ORM\Walker\AclHelper A Oro\Bundle\SecurityBundle\ORM\Walker\AclHelper instance.
     */
    protected function getOroSecurity_AclHelperService()
    {
        return $this->services['oro_security.acl_helper'] = new \Oro\Bundle\SecurityBundle\ORM\Walker\AclHelper($this->get('oro_security.orm.ownership_sql_walker_builder'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_security.encoder.mcrypt' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Encoder\Mcrypt A Oro\Bundle\SecurityBundle\Encoder\Mcrypt instance.
     */
    protected function getOroSecurity_Encoder_McryptService()
    {
        return $this->services['oro_security.encoder.mcrypt'] = new \Oro\Bundle\SecurityBundle\Encoder\Mcrypt('7b3d671f1263efb25cc1137f155548f9');
    }

    /**
     * Gets the 'oro_security.entity_security_config_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\EventListener\EntitySecurityMetadataConfigSubscriber A Oro\Bundle\SecurityBundle\EventListener\EntitySecurityMetadataConfigSubscriber instance.
     */
    protected function getOroSecurity_EntitySecurityConfigSubscriberService()
    {
        return $this->services['oro_security.entity_security_config_subscriber'] = new \Oro\Bundle\SecurityBundle\EventListener\EntitySecurityMetadataConfigSubscriber($this->get('oro_security.entity_security_metadata_provider'));
    }

    /**
     * Gets the 'oro_security.form.extension.aclprotected_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Form\Extension\AclProtectedTypeExtension A Oro\Bundle\SecurityBundle\Form\Extension\AclProtectedTypeExtension instance.
     */
    protected function getOroSecurity_Form_Extension_AclprotectedTypeService()
    {
        return $this->services['oro_security.form.extension.aclprotected_type'] = new \Oro\Bundle\SecurityBundle\Form\Extension\AclProtectedTypeExtension($this->get('oro_security.acl_helper'));
    }

    /**
     * Gets the 'oro_security.form.type.object_label_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Form\Type\ObjectLabelType A Oro\Bundle\SecurityBundle\Form\Type\ObjectLabelType instance.
     */
    protected function getOroSecurity_Form_Type_ObjectLabelTypeService()
    {
        return $this->services['oro_security.form.type.object_label_type'] = new \Oro\Bundle\SecurityBundle\Form\Type\ObjectLabelType();
    }

    /**
     * Gets the 'oro_security.form.type.oro_acl_access_level_selector' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Form\Type\AclAccessLevelSelectorType A Oro\Bundle\SecurityBundle\Form\Type\AclAccessLevelSelectorType instance.
     */
    protected function getOroSecurity_Form_Type_OroAclAccessLevelSelectorService()
    {
        return $this->services['oro_security.form.type.oro_acl_access_level_selector'] = new \Oro\Bundle\SecurityBundle\Form\Type\AclAccessLevelSelectorType();
    }

    /**
     * Gets the 'oro_security.form.type.oro_acl_collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Form\Type\PrivilegeCollectionType A Oro\Bundle\SecurityBundle\Form\Type\PrivilegeCollectionType instance.
     */
    protected function getOroSecurity_Form_Type_OroAclCollectionService()
    {
        return $this->services['oro_security.form.type.oro_acl_collection'] = new \Oro\Bundle\SecurityBundle\Form\Type\PrivilegeCollectionType();
    }

    /**
     * Gets the 'oro_security.form.type.oro_acl_privilege' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Form\Type\AclPrivilegeType A Oro\Bundle\SecurityBundle\Form\Type\AclPrivilegeType instance.
     */
    protected function getOroSecurity_Form_Type_OroAclPrivilegeService()
    {
        return $this->services['oro_security.form.type.oro_acl_privilege'] = new \Oro\Bundle\SecurityBundle\Form\Type\AclPrivilegeType();
    }

    /**
     * Gets the 'oro_security.layout_expression.acl_granted' service.
     *
     * @return \Oro\Bundle\SecurityBundle\ConfigExpression\AclGranted A Oro\Bundle\SecurityBundle\ConfigExpression\AclGranted instance.
     */
    protected function getOroSecurity_LayoutExpression_AclGrantedService()
    {
        return new \Oro\Bundle\SecurityBundle\ConfigExpression\AclGranted($this->get('oro_security.security_facade'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_security.listener.api_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\EventListener\ApiEventListener A Oro\Bundle\SecurityBundle\EventListener\ApiEventListener instance.
     */
    protected function getOroSecurity_Listener_ApiListenerService()
    {
        $this->services['oro_security.listener.api_listener'] = $instance = new \Oro\Bundle\SecurityBundle\EventListener\ApiEventListener($this->get('oro_security.security_facade'), $this->get('oro_security.acl_helper'));

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_security.listener.console_context_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\EventListener\ConsoleContextListener A Oro\Bundle\SecurityBundle\EventListener\ConsoleContextListener instance.
     */
    protected function getOroSecurity_Listener_ConsoleContextListenerService()
    {
        $this->services['oro_security.listener.console_context_listener'] = $instance = new \Oro\Bundle\SecurityBundle\EventListener\ConsoleContextListener($this->get('doctrine'), $this->get('security.context'), $this->get('oro_user.manager'));

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'oro_security.listener.context_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Http\Firewall\ContextListener A Oro\Bundle\SecurityBundle\Http\Firewall\ContextListener instance.
     */
    protected function getOroSecurity_Listener_ContextListenerService()
    {
        return $this->services['oro_security.listener.context_listener'] = new \Oro\Bundle\SecurityBundle\Http\Firewall\ContextListener($this->get('security.context'), $this->get('oro_organization.organization_manager'));
    }

    /**
     * Gets the 'oro_security.listener.controller' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\EventListener\ControllerListener A Oro\Bundle\SecurityBundle\EventListener\ControllerListener instance.
     */
    protected function getOroSecurity_Listener_ControllerService()
    {
        return $this->services['oro_security.listener.controller'] = new \Oro\Bundle\SecurityBundle\EventListener\ControllerListener($this->get('oro_security.security_facade'), $this->get('monolog.logger.security'));
    }

    /**
     * Gets the 'oro_security.listener.refresh_context_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\SecurityBundle\EventListener\RefreshContextListener A Oro\Bundle\SecurityBundle\EventListener\RefreshContextListener instance.
     */
    public function getOroSecurity_Listener_RefreshContextListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_security.listener.refresh_context_listener'] = new OroBundleSecurityBundleEventListenerRefreshContextListener_000000002e47e0e300000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroSecurity_Listener_RefreshContextListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\SecurityBundle\EventListener\RefreshContextListener($this->get('security.token_storage'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_security.listener.search_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\EventListener\SearchListener A Oro\Bundle\SecurityBundle\EventListener\SearchListener instance.
     */
    protected function getOroSecurity_Listener_SearchListenerService()
    {
        return $this->services['oro_security.listener.search_listener'] = new \Oro\Bundle\SecurityBundle\EventListener\SearchListener($this->get('oro_security.owner.ownership_metadata_provider'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_security.owner.entity_owner_accessor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Owner\EntityOwnerAccessor A Oro\Bundle\SecurityBundle\Owner\EntityOwnerAccessor instance.
     */
    protected function getOroSecurity_Owner_EntityOwnerAccessorService()
    {
        return $this->services['oro_security.owner.entity_owner_accessor'] = new \Oro\Bundle\SecurityBundle\Owner\EntityOwnerAccessor($this->get('oro_security.owner.metadata_provider.chain'));
    }

    /**
     * Gets the 'oro_security.owner.metadata_provider.chain' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Owner\Metadata\ChainMetadataProvider A Oro\Bundle\SecurityBundle\Owner\Metadata\ChainMetadataProvider instance.
     */
    protected function getOroSecurity_Owner_MetadataProvider_ChainService()
    {
        $a = $this->get('oro_security.owner.ownership_metadata_provider');

        $this->services['oro_security.owner.metadata_provider.chain'] = $instance = new \Oro\Bundle\SecurityBundle\Owner\Metadata\ChainMetadataProvider();

        $instance->setDefaultProvider($a);
        $instance->addProvider('default', $a);

        return $instance;
    }

    /**
     * Gets the 'oro_security.owner.ownership_config_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\EventListener\OwnershipConfigSubscriber A Oro\Bundle\SecurityBundle\EventListener\OwnershipConfigSubscriber instance.
     */
    protected function getOroSecurity_Owner_OwnershipConfigSubscriberService()
    {
        return $this->services['oro_security.owner.ownership_config_subscriber'] = new \Oro\Bundle\SecurityBundle\EventListener\OwnershipConfigSubscriber($this->get('oro_security.owner.metadata_provider.chain'));
    }

    /**
     * Gets the 'oro_security.owner.ownership_decision_maker.chain' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Owner\ChainEntityOwnershipDecisionMaker A Oro\Bundle\SecurityBundle\Owner\ChainEntityOwnershipDecisionMaker instance.
     */
    protected function getOroSecurity_Owner_OwnershipDecisionMaker_ChainService()
    {
        $a = new \Oro\Bundle\SecurityBundle\Owner\EntityOwnershipDecisionMaker($this->get('oro_security.ownership_tree_provider'), $this->get('oro_security.acl.object_id_accessor'), $this->get('oro_security.owner.entity_owner_accessor'), $this->get('oro_security.owner.ownership_metadata_provider'));
        $a->setContainer($this);

        $this->services['oro_security.owner.ownership_decision_maker.chain'] = $instance = new \Oro\Bundle\SecurityBundle\Owner\ChainEntityOwnershipDecisionMaker();

        $instance->addOwnershipDecisionMaker($a);

        return $instance;
    }

    /**
     * Gets the 'oro_security.owner.ownership_metadata_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Owner\Metadata\OwnershipMetadataProvider A Oro\Bundle\SecurityBundle\Owner\Metadata\OwnershipMetadataProvider instance.
     */
    protected function getOroSecurity_Owner_OwnershipMetadataProviderService()
    {
        $this->services['oro_security.owner.ownership_metadata_provider'] = $instance = new \Oro\Bundle\SecurityBundle\Owner\Metadata\OwnershipMetadataProvider(array('organization' => 'OroOrganizationBundle:Organization', 'business_unit' => 'OroOrganizationBundle:BusinessUnit', 'user' => 'OroUserBundle:User'), $this->get('oro_entity_config.provider.ownership'), $this->get('oro_entity.orm.entity_class_resolver'), $this->get('oro_security.owner.ownership_metadata_provider.cache'));

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'oro_security.ownership_tree_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Owner\OwnerTreeProvider A Oro\Bundle\SecurityBundle\Owner\OwnerTreeProvider instance.
     */
    protected function getOroSecurity_OwnershipTreeProviderService()
    {
        $this->services['oro_security.ownership_tree_provider'] = $instance = new \Oro\Bundle\SecurityBundle\Owner\OwnerTreeProvider($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_security.ownership_tree_provider.cache'));

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'oro_security.ownership_tree_provider.chain' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Owner\ChainOwnerTreeProvider A Oro\Bundle\SecurityBundle\Owner\ChainOwnerTreeProvider instance.
     */
    protected function getOroSecurity_OwnershipTreeProvider_ChainService()
    {
        $a = $this->get('oro_security.ownership_tree_provider');

        $this->services['oro_security.ownership_tree_provider.chain'] = $instance = new \Oro\Bundle\SecurityBundle\Owner\ChainOwnerTreeProvider();

        $instance->setDefaultProvider($a);
        $instance->addProvider($a);

        return $instance;
    }

    /**
     * Gets the 'oro_security.ownership_tree_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\SecurityBundle\EventListener\OwnerTreeListener A Oro\Bundle\SecurityBundle\EventListener\OwnerTreeListener instance.
     */
    public function getOroSecurity_OwnershipTreeSubscriberService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_security.ownership_tree_subscriber'] = new OroBundleSecurityBundleEventListenerOwnerTreeListener_000000002e47e09700000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroSecurity_OwnershipTreeSubscriberService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\SecurityBundle\EventListener\OwnerTreeListener(new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_security.ownership_tree_provider', false));

        $instance->setContainer($this);
        $instance->addSupportedClass('Oro\\Bundle\\UserBundle\\Entity\\User');
        $instance->addSupportedClass('Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit');
        $instance->addSupportedClass('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization');

        return $instance;
    }

    /**
     * Gets the 'oro_security.search.acl_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Search\AclHelper A Oro\Bundle\SecurityBundle\Search\AclHelper instance.
     */
    protected function getOroSecurity_Search_AclHelperService()
    {
        return $this->services['oro_security.search.acl_helper'] = new \Oro\Bundle\SecurityBundle\Search\AclHelper($this->get('oro_search.provider.search_mapping'), $this->get('oro_security.security_facade'), $this->get('oro_security.orm.ownership_sql_walker_builder'));
    }

    /**
     * Gets the 'oro_security.security_facade' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\SecurityFacade A Oro\Bundle\SecurityBundle\SecurityFacade instance.
     */
    protected function getOroSecurity_SecurityFacadeService()
    {
        return $this->services['oro_security.security_facade'] = new \Oro\Bundle\SecurityBundle\SecurityFacade($this->get('security.context'), $this->get('oro_security.acl.annotation_provider'), $this->get('oro_security.acl.object_identity_factory'), $this->get('oro_entity.orm.entity_class_resolver'), $this->get('monolog.logger.security'));
    }

    /**
     * Gets the 'oro_security.twig.security_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Twig\OroSecurityExtension A Oro\Bundle\SecurityBundle\Twig\OroSecurityExtension instance.
     */
    protected function getOroSecurity_Twig_SecurityExtensionService()
    {
        return $this->services['oro_security.twig.security_extension'] = new \Oro\Bundle\SecurityBundle\Twig\OroSecurityExtension($this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_security.twig.security_organization_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Twig\OroSecurityOrganizationExtension A Oro\Bundle\SecurityBundle\Twig\OroSecurityOrganizationExtension instance.
     */
    protected function getOroSecurity_Twig_SecurityOrganizationExtensionService()
    {
        return $this->services['oro_security.twig.security_organization_extension'] = new \Oro\Bundle\SecurityBundle\Twig\OroSecurityOrganizationExtension($this->get('security.context'));
    }

    /**
     * Gets the 'oro_security.wsse_nonce_cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Cache\WsseNoncePhpFileCache A Oro\Bundle\SecurityBundle\Cache\WsseNoncePhpFileCache instance.
     */
    protected function getOroSecurity_WsseNonceCacheService()
    {
        $this->services['oro_security.wsse_nonce_cache'] = $instance = new \Oro\Bundle\SecurityBundle\Cache\WsseNoncePhpFileCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/security/nonces');

        $instance->setNonceLifeTime(3600);

        return $instance;
    }

    /**
     * Gets the 'oro_segment.datagrid.configuration.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SegmentBundle\Grid\ConfigurationProvider A Oro\Bundle\SegmentBundle\Grid\ConfigurationProvider instance.
     */
    protected function getOroSegment_Datagrid_Configuration_ProviderService()
    {
        return $this->services['oro_segment.datagrid.configuration.provider'] = new \Oro\Bundle\SegmentBundle\Grid\ConfigurationProvider($this->get('oro_segment.grid.datagrid_configuration_builder'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_segment.entity_name_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SegmentBundle\Provider\EntityNameProvider A Oro\Bundle\SegmentBundle\Provider\EntityNameProvider instance.
     */
    protected function getOroSegment_EntityNameProviderService()
    {
        return $this->services['oro_segment.entity_name_provider'] = new \Oro\Bundle\SegmentBundle\Provider\EntityNameProvider();
    }

    /**
     * Gets the 'oro_segment.event_listener.doctrine_pre_remove' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\SegmentBundle\EventListener\DoctrinePreRemoveListener A Oro\Bundle\SegmentBundle\EventListener\DoctrinePreRemoveListener instance.
     */
    public function getOroSegment_EventListener_DoctrinePreRemoveService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_segment.event_listener.doctrine_pre_remove'] = new OroBundleSegmentBundleEventListenerDoctrinePreRemoveListener_000000002e47ef2f00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroSegment_EventListener_DoctrinePreRemoveService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\SegmentBundle\EventListener\DoctrinePreRemoveListener($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_segment.filter.segment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SegmentBundle\Filter\SegmentFilter A Oro\Bundle\SegmentBundle\Filter\SegmentFilter instance.
     */
    protected function getOroSegment_Filter_SegmentService()
    {
        return $this->services['oro_segment.filter.segment'] = new \Oro\Bundle\SegmentBundle\Filter\SegmentFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'), new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_segment.query.dynamic_segment.query_builder', false), new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_segment.query.static_segment.query_builder', false), $this->get('oro_segment.entity_name_provider'), $this->get('oro_entity_config.provider.entity'), $this->get('oro_entity_config.provider.extend'));
    }

    /**
     * Gets the 'oro_segment.form.handler.segment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SegmentBundle\Form\Handler\SegmentHandler A Oro\Bundle\SegmentBundle\Form\Handler\SegmentHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_segment.form.handler.segment' service is requested while the 'request' scope is not active
     */
    protected function getOroSegment_Form_Handler_SegmentService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_segment.form.handler.segment', 'request');
        }

        return $this->services['oro_segment.form.handler.segment'] = $this->scopedServices['request']['oro_segment.form.handler.segment'] = new \Oro\Bundle\SegmentBundle\Form\Handler\SegmentHandler($this->get('oro_segment.form.segment'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_segment.form.segment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroSegment_Form_SegmentService()
    {
        return $this->services['oro_segment.form.segment'] = $this->get('form.factory')->createNamed('oro_segment_form', 'oro_segment');
    }

    /**
     * Gets the 'oro_segment.form.type.entity_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SegmentBundle\Form\Type\SegmentEntityChoiceType A Oro\Bundle\SegmentBundle\Form\Type\SegmentEntityChoiceType instance.
     */
    protected function getOroSegment_Form_Type_EntityChoiceService()
    {
        return $this->services['oro_segment.form.type.entity_choice'] = new \Oro\Bundle\SegmentBundle\Form\Type\SegmentEntityChoiceType($this->get('oro_entity.entity_provider'));
    }

    /**
     * Gets the 'oro_segment.form.type.segment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SegmentBundle\Form\Type\SegmentType A Oro\Bundle\SegmentBundle\Form\Type\SegmentType instance.
     */
    protected function getOroSegment_Form_Type_SegmentService()
    {
        return $this->services['oro_segment.form.type.segment'] = new \Oro\Bundle\SegmentBundle\Form\Type\SegmentType();
    }

    /**
     * Gets the 'oro_segment.grid.datagrid_configuration_builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SegmentBundle\Grid\SegmentDatagridConfigurationBuilder A Oro\Bundle\SegmentBundle\Grid\SegmentDatagridConfigurationBuilder instance.
     */
    protected function getOroSegment_Grid_DatagridConfigurationBuilderService()
    {
        $this->services['oro_segment.grid.datagrid_configuration_builder'] = $instance = new \Oro\Bundle\SegmentBundle\Grid\SegmentDatagridConfigurationBuilder($this->get('oro_query_designer.query_designer.manager'), $this->get('oro_entity.virtual_field_provider.chain'), $this->get('doctrine'), $this->get('oro_datagrid.datagrid.guesser'));

        $instance->setVirtualRelationProvider($this->get('oro_entity.virtual_relation_provider.chain'));
        $instance->setConfigManager($this->get('oro_entity_config.config_manager'));

        return $instance;
    }

    /**
     * Gets the 'oro_segment.query.dynamic_segment.query_builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SegmentBundle\Query\DynamicSegmentQueryBuilder A Oro\Bundle\SegmentBundle\Query\DynamicSegmentQueryBuilder instance.
     */
    protected function getOroSegment_Query_DynamicSegment_QueryBuilderService()
    {
        $this->services['oro_segment.query.dynamic_segment.query_builder'] = $instance = new \Oro\Bundle\SegmentBundle\Query\DynamicSegmentQueryBuilder($this->get('oro_query_designer.query_designer.restriction_builder'), $this->get('oro_query_designer.query_designer.manager'), $this->get('oro_entity.virtual_field_provider.chain'), $this->get('doctrine'));

        $instance->setVirtualRelationProvider($this->get('oro_entity.virtual_relation_provider.chain'));

        return $instance;
    }

    /**
     * Gets the 'oro_segment.query.static_segment.query_builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SegmentBundle\Query\StaticSegmentQueryBuilder A Oro\Bundle\SegmentBundle\Query\StaticSegmentQueryBuilder instance.
     */
    protected function getOroSegment_Query_StaticSegment_QueryBuilderService()
    {
        return $this->services['oro_segment.query.static_segment.query_builder'] = new \Oro\Bundle\SegmentBundle\Query\StaticSegmentQueryBuilder($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_segment.segment_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SegmentBundle\Entity\Manager\SegmentManager A Oro\Bundle\SegmentBundle\Entity\Manager\SegmentManager instance.
     */
    protected function getOroSegment_SegmentManagerService()
    {
        return $this->services['oro_segment.segment_manager'] = new \Oro\Bundle\SegmentBundle\Entity\Manager\SegmentManager($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_segment.segment_manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroSegment_SegmentManager_ApiService()
    {
        $this->services['oro_segment.segment_manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\SegmentBundle\\Entity\\Segment', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_segment.static_segment_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SegmentBundle\Entity\Manager\StaticSegmentManager A Oro\Bundle\SegmentBundle\Entity\Manager\StaticSegmentManager instance.
     */
    protected function getOroSegment_StaticSegmentManagerService()
    {
        return $this->services['oro_segment.static_segment_manager'] = new \Oro\Bundle\SegmentBundle\Entity\Manager\StaticSegmentManager($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_segment.query.dynamic_segment.query_builder'), $this->get('oro_security.owner.ownership_metadata_provider'));
    }

    /**
     * Gets the 'oro_segment.twig.extension.segment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SegmentBundle\Twig\SegmentExtension A Oro\Bundle\SegmentBundle\Twig\SegmentExtension instance.
     */
    protected function getOroSegment_Twig_Extension_SegmentService()
    {
        return $this->services['oro_segment.twig.extension.segment'] = new \Oro\Bundle\SegmentBundle\Twig\SegmentExtension($this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_sidebar.request.handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SidebarBundle\EventListener\RequestHandler A Oro\Bundle\SidebarBundle\EventListener\RequestHandler instance.
     */
    protected function getOroSidebar_Request_HandlerService()
    {
        return $this->services['oro_sidebar.request.handler'] = new \Oro\Bundle\SidebarBundle\EventListener\RequestHandler($this->get('oro_sidebar.widget_definition.registry'), $this->get('assets.packages'));
    }

    /**
     * Gets the 'oro_sidebar.twig.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SidebarBundle\Twig\SidebarExtension A Oro\Bundle\SidebarBundle\Twig\SidebarExtension instance.
     */
    protected function getOroSidebar_Twig_ExtensionService()
    {
        return $this->services['oro_sidebar.twig.extension'] = new \Oro\Bundle\SidebarBundle\Twig\SidebarExtension($this->get('oro_sidebar.widget_definition.registry'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_sidebar.widget_definition.registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SidebarBundle\Model\WidgetDefinitionRegistry A Oro\Bundle\SidebarBundle\Model\WidgetDefinitionRegistry instance.
     */
    protected function getOroSidebar_WidgetDefinition_RegistryService()
    {
        return $this->services['oro_sidebar.widget_definition.registry'] = new \Oro\Bundle\SidebarBundle\Model\WidgetDefinitionRegistry(array('sticky_note' => array('title' => 'Sticky Note', 'icon' => 'bundles/orosidebar/sidebar_widgets/sticky_note/img/icon.ico', 'module' => 'orosidebar/widget/sticky-note', 'placement' => 'both', 'cssClass' => 'sidebar-widget-sticky-note', 'settings' => array('content' => 'Welcome to OroCRM!
OroCRM is an easy-to-use, open source CRM with built-in marketing tools for your ecommerce business. learn more at www.orocrm.com
'), 'iconClass' => NULL)));
    }

    /**
     * Gets the 'oro_soap.entity_accessor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Serializer\EntityDataAccessor A Oro\Bundle\SoapBundle\Serializer\EntityDataAccessor instance.
     */
    protected function getOroSoap_EntityAccessorService()
    {
        return $this->services['oro_soap.entity_accessor'] = new \Oro\Bundle\SoapBundle\Serializer\EntityDataAccessor();
    }

    /**
     * Gets the 'oro_soap.entity_data_transformer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Serializer\EntityDataTransformer A Oro\Bundle\SoapBundle\Serializer\EntityDataTransformer instance.
     */
    protected function getOroSoap_EntityDataTransformerService()
    {
        return $this->services['oro_soap.entity_data_transformer'] = new \Oro\Bundle\SoapBundle\Serializer\EntityDataTransformer($this);
    }

    /**
     * Gets the 'oro_soap.entity_serializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Serializer\EntitySerializer A Oro\Bundle\SoapBundle\Serializer\EntitySerializer instance.
     */
    protected function getOroSoap_EntitySerializerService()
    {
        return $this->services['oro_soap.entity_serializer'] = new \Oro\Bundle\SoapBundle\Serializer\EntitySerializer($this->get('doctrine'), $this->get('oro_entity_config.config_manager'), $this->get('oro_soap.entity_accessor'), $this->get('oro_soap.entity_data_transformer'), $this->get('oro_entity.query_hint_resolver'));
    }

    /**
     * Gets the 'oro_soap.handler.delete' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Handler\DeleteHandler A Oro\Bundle\SoapBundle\Handler\DeleteHandler instance.
     */
    protected function getOroSoap_Handler_DeleteService()
    {
        $this->services['oro_soap.handler.delete'] = $instance = new \Oro\Bundle\SoapBundle\Handler\DeleteHandler();

        $instance->setOwnerDeletionManager($this->get('oro_organization.owner_deletion_manager'));

        return $instance;
    }

    /**
     * Gets the 'oro_soap.handler.include_delegate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Handler\DelegateIncludeHandler A Oro\Bundle\SoapBundle\Handler\DelegateIncludeHandler instance.
     */
    protected function getOroSoap_Handler_IncludeDelegateService()
    {
        $this->services['oro_soap.handler.include_delegate'] = $instance = new \Oro\Bundle\SoapBundle\Handler\DelegateIncludeHandler($this);

        $instance->registerHandler('totalCount', 'oro_soap.handler.include_total_header');

        return $instance;
    }

    /**
     * Gets the 'oro_soap.handler.include_total_header' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Handler\TotalHeaderHandler A Oro\Bundle\SoapBundle\Handler\TotalHeaderHandler instance.
     */
    protected function getOroSoap_Handler_IncludeTotalHeaderService()
    {
        return $this->services['oro_soap.handler.include_total_header'] = new \Oro\Bundle\SoapBundle\Handler\TotalHeaderHandler($this->get('oro_batch.orm.query_builder.count_query_optimizer'));
    }

    /**
     * Gets the 'oro_soap.locale_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\EventListener\LocaleListener A Oro\Bundle\SoapBundle\EventListener\LocaleListener instance.
     */
    protected function getOroSoap_LocaleListenerService()
    {
        return $this->services['oro_soap.locale_listener'] = new \Oro\Bundle\SoapBundle\EventListener\LocaleListener($this->get('stof_doctrine_extensions.listener.translatable'));
    }

    /**
     * Gets the 'oro_soap.provider.metadata.chain' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Provider\ChainMetadataProvider A Oro\Bundle\SoapBundle\Provider\ChainMetadataProvider instance.
     */
    protected function getOroSoap_Provider_Metadata_ChainService()
    {
        $this->services['oro_soap.provider.metadata.chain'] = $instance = new \Oro\Bundle\SoapBundle\Provider\ChainMetadataProvider();

        $instance->addProvider($this->get('oro_soap.provider.metadata.entity'));

        return $instance;
    }

    /**
     * Gets the 'oro_soap.provider.metadata.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Provider\EntityMetadataProvider A Oro\Bundle\SoapBundle\Provider\EntityMetadataProvider instance.
     */
    protected function getOroSoap_Provider_Metadata_EntityService()
    {
        return $this->services['oro_soap.provider.metadata.entity'] = new \Oro\Bundle\SoapBundle\Provider\EntityMetadataProvider($this->get('oro_entity_config.config_manager'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_sso.event_listener.user_email_change_listener.class' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\SSOBundle\EventListener\UserEmailChangeListener A Oro\Bundle\SSOBundle\EventListener\UserEmailChangeListener instance.
     */
    public function getOroSso_EventListener_UserEmailChangeListener_ClassService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_sso.event_listener.user_email_change_listener.class'] = new OroBundleSSOBundleEventListenerUserEmailChangeListener_000000002e47f2f000000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroSso_EventListener_UserEmailChangeListener_ClassService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\SSOBundle\EventListener\UserEmailChangeListener();
    }

    /**
     * Gets the 'oro_sso.oauth_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SSOBundle\Security\Core\User\OAuthUserProvider A Oro\Bundle\SSOBundle\Security\Core\User\OAuthUserProvider instance.
     */
    protected function getOroSso_OauthProviderService()
    {
        return $this->services['oro_sso.oauth_provider'] = new \Oro\Bundle\SSOBundle\Security\Core\User\OAuthUserProvider($this->get('oro_user.manager'), $this->get('oro_config.global'));
    }

    /**
     * Gets the 'oro_tag.autocomplete.tag.search_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Autocomplete\SearchHandler A Oro\Bundle\FormBundle\Autocomplete\SearchHandler instance.
     */
    protected function getOroTag_Autocomplete_Tag_SearchHandlerService()
    {
        $this->services['oro_tag.autocomplete.tag.search_handler'] = $instance = new \Oro\Bundle\FormBundle\Autocomplete\SearchHandler('Oro\\Bundle\\TagBundle\\Entity\\Tag', array(0 => 'name'));

        $instance->initSearchIndexer($this->get('oro_search.index'), array('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization' => array('alias' => 'organization', 'search_template' => 'OroOrganizationBundle:Search:organizationResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit' => array('alias' => 'business_unit', 'search_template' => 'OroOrganizationBundle:Search:businessUnitResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser' => array('alias' => 'oro_email', 'label' => 'Emails', 'search_template' => 'OroEmailBundle:Email:searchResult.html.twig', 'route' => array('name' => 'oro_email_thread_view', 'parameters' => array('id' => 'email.id')), 'title_fields' => array(0 => 'email.subject'), 'fields' => array(0 => array('name' => 'email', 'relation_type' => 'many-to-one', 'relation_fields' => array(0 => array('name' => 'subject', 'target_type' => 'text', 'target_fields' => array(0 => 'subject'), 'relation_fields' => array())), 'target_fields' => array())), 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\User' => array('alias' => 'oro_user', 'title_fields' => array(0 => 'username'), 'route' => array('name' => 'oro_user_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroUserBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'username', 'target_type' => 'text', 'target_fields' => array(0 => 'username'), 'relation_fields' => array()), 1 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array()), 2 => array('name' => 'phone', 'target_type' => 'text', 'target_fields' => array(0 => 'phone'), 'relation_fields' => array()), 3 => array('name' => 'namePrefix', 'target_type' => 'text', 'target_fields' => array(0 => 'namePrefix'), 'relation_fields' => array()), 4 => array('name' => 'firstName', 'target_type' => 'text', 'target_fields' => array(0 => 'firstName'), 'relation_fields' => array()), 5 => array('name' => 'middleName', 'target_type' => 'text', 'target_fields' => array(0 => 'middleName'), 'relation_fields' => array()), 6 => array('name' => 'lastName', 'target_type' => 'text', 'target_fields' => array(0 => 'lastName'), 'relation_fields' => array()), 7 => array('name' => 'nameSuffix', 'target_type' => 'text', 'target_fields' => array(0 => 'nameSuffix'), 'relation_fields' => array()), 8 => array('name' => 'birthday', 'target_type' => 'datetime', 'target_fields' => array(0 => 'birthday'), 'relation_fields' => array()), 9 => array('name' => 'emails', 'relation_type' => 'one-to-many', 'relation_fields' => array(0 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array())), 'target_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\Role' => array('alias' => 'oro_access_role', 'title_fields' => array(0 => 'label'), 'search_template' => 'OroUserBundle:Role:Search\\result.html.twig', 'route' => array('name' => 'oro_user_role_index', 'parameters' => array()), 'fields' => array(0 => array('name' => 'label', 'target_type' => 'text', 'target_fields' => array(0 => 'label'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent' => array('alias' => 'oro_clendar_event', 'title_fields' => array(0 => 'title'), 'route' => array('name' => 'oro_calendar_view', 'parameters' => array('id' => 'calendar.id')), 'search_template' => 'OroCalendarBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'title', 'target_type' => 'text', 'target_fields' => array(0 => 'title'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array()), 2 => array('name' => 'start', 'target_type' => 'datetime', 'target_fields' => array(0 => 'start'), 'relation_fields' => array()), 3 => array('name' => 'end', 'target_type' => 'datetime', 'target_fields' => array(0 => 'end'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\ReportBundle\\Entity\\Report' => array('alias' => 'oro_report', 'title_fields' => array(0 => 'name'), 'route' => array('name' => 'oro_report_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroReportBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\TagBundle\\Entity\\Tag' => array('alias' => 'oro_tag', 'title_fields' => array(0 => 'name'), 'search_template' => 'OroTagBundle:Search:result.html.twig', 'route' => array('name' => 'oro_tag_search', 'parameters' => array('id' => 'id')), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal')));
        $instance->initDoctrinePropertiesByManagerRegistry($this->get('doctrine'));
        $instance->setAclHelper($this->get('oro_security.acl_helper'));

        return $instance;
    }

    /**
     * Gets the 'oro_tag.docrine.event.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\TagBundle\EventListener\TagListener A Oro\Bundle\TagBundle\EventListener\TagListener instance.
     */
    public function getOroTag_Docrine_Event_ListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_tag.docrine.event.listener'] = new OroBundleTagBundleEventListenerTagListener_000000002e47eeb800000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroTag_Docrine_Event_ListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\TagBundle\EventListener\TagListener();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'oro_tag.event_listener.merge_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\EventListener\MergeListener A Oro\Bundle\TagBundle\EventListener\MergeListener instance.
     */
    protected function getOroTag_EventListener_MergeListenerService()
    {
        return $this->services['oro_tag.event_listener.merge_listener'] = new \Oro\Bundle\TagBundle\EventListener\MergeListener($this->get('oro_tag.tag.manager'));
    }

    /**
     * Gets the 'oro_tag.event_listener.search_results_grid_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\EventListener\TagSearchResultsGridListener A Oro\Bundle\TagBundle\EventListener\TagSearchResultsGridListener instance.
     */
    protected function getOroTag_EventListener_SearchResultsGridListenerService()
    {
        return $this->services['oro_tag.event_listener.search_results_grid_listener'] = new \Oro\Bundle\TagBundle\EventListener\TagSearchResultsGridListener($this->get('oro_tag.security_provider'));
    }

    /**
     * Gets the 'oro_tag.filter.tags' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Filter\TagsFilter A Oro\Bundle\TagBundle\Filter\TagsFilter instance.
     */
    protected function getOroTag_Filter_TagsService()
    {
        return $this->services['oro_tag.filter.tags'] = new \Oro\Bundle\TagBundle\Filter\TagsFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'), $this->get('doctrine'), $this->get('oro_security.acl_helper'));
    }

    /**
     * Gets the 'oro_tag.form.handler.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Form\Handler\TagHandler A Oro\Bundle\TagBundle\Form\Handler\TagHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_tag.form.handler.api' service is requested while the 'request' scope is not active
     */
    protected function getOroTag_Form_Handler_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_tag.form.handler.api', 'request');
        }

        return $this->services['oro_tag.form.handler.api'] = $this->scopedServices['request']['oro_tag.form.handler.api'] = new \Oro\Bundle\TagBundle\Form\Handler\TagHandler($this->get('oro_tag.form.type.tag.api'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_tag.form.handler.tag' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Form\Handler\TagHandler A Oro\Bundle\TagBundle\Form\Handler\TagHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_tag.form.handler.tag' service is requested while the 'request' scope is not active
     */
    protected function getOroTag_Form_Handler_TagService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_tag.form.handler.tag', 'request');
        }

        return $this->services['oro_tag.form.handler.tag'] = $this->scopedServices['request']['oro_tag.form.handler.tag'] = new \Oro\Bundle\TagBundle\Form\Handler\TagHandler($this->get('oro_tag.form.tag'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_tag.form.subscriber.tag_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Form\EventSubscriber\TagSubscriber A Oro\Bundle\TagBundle\Form\EventSubscriber\TagSubscriber instance.
     */
    protected function getOroTag_Form_Subscriber_TagSelectService()
    {
        return $this->services['oro_tag.form.subscriber.tag_select'] = new \Oro\Bundle\TagBundle\Form\EventSubscriber\TagSubscriber($this->get('oro_tag.tag.manager'), $this->get('oro_tag.form.transformer.tag_select'));
    }

    /**
     * Gets the 'oro_tag.form.tag' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroTag_Form_TagService()
    {
        return $this->services['oro_tag.form.tag'] = $this->get('form.factory')->createNamed('oro_tag_tag_form', 'oro_tag_tag');
    }

    /**
     * Gets the 'oro_tag.form.tag.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroTag_Form_Tag_ApiService()
    {
        return $this->services['oro_tag.form.tag.api'] = $this->get('form.factory')->createNamed('oro_tag_tag_form', 'oro_tag_tag', NULL);
    }

    /**
     * Gets the 'oro_tag.form.transformer.tag_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Form\Transformer\TagTransformer A Oro\Bundle\TagBundle\Form\Transformer\TagTransformer instance.
     */
    protected function getOroTag_Form_Transformer_TagSelectService()
    {
        return $this->services['oro_tag.form.transformer.tag_select'] = new \Oro\Bundle\TagBundle\Form\Transformer\TagTransformer($this->get('oro_tag.tag.manager'));
    }

    /**
     * Gets the 'oro_tag.form.type.entity_tags_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Form\Type\EntityTagsFilterType A Oro\Bundle\TagBundle\Form\Type\EntityTagsFilterType instance.
     */
    protected function getOroTag_Form_Type_EntityTagsFilterService()
    {
        return $this->services['oro_tag.form.type.entity_tags_filter'] = new \Oro\Bundle\TagBundle\Form\Type\EntityTagsFilterType();
    }

    /**
     * Gets the 'oro_tag.form.type.entity_tags_selector' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Form\Type\EntityTagsSelectType A Oro\Bundle\TagBundle\Form\Type\EntityTagsSelectType instance.
     */
    protected function getOroTag_Form_Type_EntityTagsSelectorService()
    {
        return $this->services['oro_tag.form.type.entity_tags_selector'] = new \Oro\Bundle\TagBundle\Form\Type\EntityTagsSelectType($this->get('oro_security.acl_helper'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_tag.form.type.tag' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Form\Type\TagType A Oro\Bundle\TagBundle\Form\Type\TagType instance.
     */
    protected function getOroTag_Form_Type_TagService()
    {
        return $this->services['oro_tag.form.type.tag'] = new \Oro\Bundle\TagBundle\Form\Type\TagType();
    }

    /**
     * Gets the 'oro_tag.form.type.tag.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Form\Type\TagApiType A Oro\Bundle\TagBundle\Form\Type\TagApiType instance.
     */
    protected function getOroTag_Form_Type_Tag_ApiService()
    {
        return $this->services['oro_tag.form.type.tag.api'] = new \Oro\Bundle\TagBundle\Form\Type\TagApiType();
    }

    /**
     * Gets the 'oro_tag.form.type.tag_autocomplete' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Form\Type\TagAutocompleteType A Oro\Bundle\TagBundle\Form\Type\TagAutocompleteType instance.
     */
    protected function getOroTag_Form_Type_TagAutocompleteService()
    {
        return $this->services['oro_tag.form.type.tag_autocomplete'] = new \Oro\Bundle\TagBundle\Form\Type\TagAutocompleteType($this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_tag.form.type.tag_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Form\Type\TagSelectType A Oro\Bundle\TagBundle\Form\Type\TagSelectType instance.
     */
    protected function getOroTag_Form_Type_TagSelectService()
    {
        return $this->services['oro_tag.form.type.tag_select'] = new \Oro\Bundle\TagBundle\Form\Type\TagSelectType($this->get('oro_tag.form.subscriber.tag_select'), $this->get('oro_tag.form.transformer.tag_select'));
    }

    /**
     * Gets the 'oro_tag.grid.extension.tag_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\EventListener\TagsGridListener A Oro\Bundle\TagBundle\EventListener\TagsGridListener instance.
     */
    protected function getOroTag_Grid_Extension_TagFilterService()
    {
        return $this->services['oro_tag.grid.extension.tag_filter'] = new \Oro\Bundle\TagBundle\EventListener\TagsGridListener($this->get('oro_entity.orm.entity_class_resolver'));
    }

    /**
     * Gets the 'oro_tag.owner_assignment_checker.tag' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Ownership\TagOwnerAssignmentChecker A Oro\Bundle\TagBundle\Ownership\TagOwnerAssignmentChecker instance.
     */
    protected function getOroTag_OwnerAssignmentChecker_TagService()
    {
        return $this->services['oro_tag.owner_assignment_checker.tag'] = new \Oro\Bundle\TagBundle\Ownership\TagOwnerAssignmentChecker();
    }

    /**
     * Gets the 'oro_tag.provider.search_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Provider\SearchProvider A Oro\Bundle\TagBundle\Provider\SearchProvider instance.
     */
    protected function getOroTag_Provider_SearchProviderService()
    {
        return $this->services['oro_tag.provider.search_provider'] = new \Oro\Bundle\TagBundle\Provider\SearchProvider($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_search.mapper'), $this->get('oro_tag.security_provider'), $this->get('oro_search.index'), $this->get('oro_entity_config.config_manager'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_tag.provider.virtual_relation.tags' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Provider\TagVirtualRelationProvider A Oro\Bundle\TagBundle\Provider\TagVirtualRelationProvider instance.
     */
    protected function getOroTag_Provider_VirtualRelation_TagsService()
    {
        return $this->services['oro_tag.provider.virtual_relation.tags'] = new \Oro\Bundle\TagBundle\Provider\TagVirtualRelationProvider();
    }

    /**
     * Gets the 'oro_tag.security_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Security\SecurityProvider A Oro\Bundle\TagBundle\Security\SecurityProvider instance.
     */
    protected function getOroTag_SecurityProviderService()
    {
        return $this->services['oro_tag.security_provider'] = new \Oro\Bundle\TagBundle\Security\SecurityProvider($this->get('oro_search.security_provider'));
    }

    /**
     * Gets the 'oro_tag.tag.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Entity\TagManager A Oro\Bundle\TagBundle\Entity\TagManager instance.
     */
    protected function getOroTag_Tag_ManagerService()
    {
        return $this->services['oro_tag.tag.manager'] = new \Oro\Bundle\TagBundle\Entity\TagManager($this->get('doctrine.orm.default_entity_manager'), 'Oro\\Bundle\\TagBundle\\Entity\\Tag', 'Oro\\Bundle\\TagBundle\\Entity\\Tagging', $this->get('oro_search.mapper'), $this->get('oro_security.security_facade'), $this->get('router'));
    }

    /**
     * Gets the 'oro_tag.tag.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroTag_Tag_Manager_ApiService()
    {
        $this->services['oro_tag.tag.manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\TagBundle\\Entity\\Tag', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_tag.twig.tag.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TagBundle\Twig\TagExtension A Oro\Bundle\TagBundle\Twig\TagExtension instance.
     */
    protected function getOroTag_Twig_Tag_ExtensionService()
    {
        return $this->services['oro_tag.twig.tag.extension'] = new \Oro\Bundle\TagBundle\Twig\TagExtension($this->get('oro_tag.tag.manager'));
    }

    /**
     * Gets the 'oro_theme.event_listener.load_css' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ThemeBundle\EventListener\LoadCssEventListener A Oro\Bundle\ThemeBundle\EventListener\LoadCssEventListener instance.
     */
    protected function getOroTheme_EventListener_LoadCssService()
    {
        return $this->services['oro_theme.event_listener.load_css'] = new \Oro\Bundle\ThemeBundle\EventListener\LoadCssEventListener($this->get('oro_theme.registry'));
    }

    /**
     * Gets the 'oro_theme.registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ThemeBundle\Model\ThemeRegistry A Oro\Bundle\ThemeBundle\Model\ThemeRegistry instance.
     */
    protected function getOroTheme_RegistryService()
    {
        $this->services['oro_theme.registry'] = $instance = new \Oro\Bundle\ThemeBundle\Model\ThemeRegistry(array('demo' => array('label' => 'Demo Theme', 'icon' => 'bundles/oroui/themes/demo/images/favicon.ico', 'styles' => array(0 => 'bundles/oroui/themes/demo/css/less/main.less', 1 => 'bundles/oroui/themes/demo/css/style.css')), 'oro' => array('label' => 'Oro Theme', 'icon' => 'bundles/oroui/themes/oro/images/favicon.ico', 'styles' => array(0 => 'bundles/oroui/themes/oro/css/style.css'))));

        $instance->setActiveTheme('oro');

        return $instance;
    }

    /**
     * Gets the 'oro_theme.twig.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ThemeBundle\Twig\ThemeExtension A Oro\Bundle\ThemeBundle\Twig\ThemeExtension instance.
     */
    protected function getOroTheme_Twig_ExtensionService()
    {
        return $this->services['oro_theme.twig.extension'] = new \Oro\Bundle\ThemeBundle\Twig\ThemeExtension($this->get('oro_theme.registry'));
    }

    /**
     * Gets the 'oro_tracking.config.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TrackingBundle\EventListener\ConfigListener A Oro\Bundle\TrackingBundle\EventListener\ConfigListener instance.
     */
    protected function getOroTracking_Config_ListenerService()
    {
        return $this->services['oro_tracking.config.listener'] = new \Oro\Bundle\TrackingBundle\EventListener\ConfigListener($this->get('oro_config.global'), $this->get('router'), 'C:\\wamp\\www\\stockvalue~~\\app\\logs');
    }

    /**
     * Gets the 'oro_tracking.entity_config_dumper.visit_event_association.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TrackingBundle\Tools\VisitEventAssociationDumperExtension A Oro\Bundle\TrackingBundle\Tools\VisitEventAssociationDumperExtension instance.
     */
    protected function getOroTracking_EntityConfigDumper_VisitEventAssociation_ExtensionService()
    {
        return $this->services['oro_tracking.entity_config_dumper.visit_event_association.extension'] = new \Oro\Bundle\TrackingBundle\Tools\VisitEventAssociationDumperExtension($this->get('oro_tracking.provider.identifier_provider'), $this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.association_builder'));
    }

    /**
     * Gets the 'oro_tracking.entity_config_dumper.visit_identifier.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TrackingBundle\Tools\IdentifierVisitConfigDumperExtension A Oro\Bundle\TrackingBundle\Tools\IdentifierVisitConfigDumperExtension instance.
     */
    protected function getOroTracking_EntityConfigDumper_VisitIdentifier_ExtensionService()
    {
        return $this->services['oro_tracking.entity_config_dumper.visit_identifier.extension'] = new \Oro\Bundle\TrackingBundle\Tools\IdentifierVisitConfigDumperExtension($this->get('oro_tracking.provider.identifier_provider'), $this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.association_builder'));
    }

    /**
     * Gets the 'oro_tracking.entity_generator.visit_event_association.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TrackingBundle\Tools\VisitEventAssociationGeneratorExtension A Oro\Bundle\TrackingBundle\Tools\VisitEventAssociationGeneratorExtension instance.
     */
    protected function getOroTracking_EntityGenerator_VisitEventAssociation_ExtensionService()
    {
        return $this->services['oro_tracking.entity_generator.visit_event_association.extension'] = new \Oro\Bundle\TrackingBundle\Tools\VisitEventAssociationGeneratorExtension();
    }

    /**
     * Gets the 'oro_tracking.entity_generator.visit_identifie.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TrackingBundle\Tools\IdentifierVisitGeneratorExtension A Oro\Bundle\TrackingBundle\Tools\IdentifierVisitGeneratorExtension instance.
     */
    protected function getOroTracking_EntityGenerator_VisitIdentifie_ExtensionService()
    {
        return $this->services['oro_tracking.entity_generator.visit_identifie.extension'] = new \Oro\Bundle\TrackingBundle\Tools\IdentifierVisitGeneratorExtension();
    }

    /**
     * Gets the 'oro_tracking.form.handler.tracking_website' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TrackingBundle\Form\Handler\TrackingWebsiteHandler A Oro\Bundle\TrackingBundle\Form\Handler\TrackingWebsiteHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_tracking.form.handler.tracking_website' service is requested while the 'request' scope is not active
     */
    protected function getOroTracking_Form_Handler_TrackingWebsiteService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_tracking.form.handler.tracking_website', 'request');
        }

        return $this->services['oro_tracking.form.handler.tracking_website'] = $this->scopedServices['request']['oro_tracking.form.handler.tracking_website'] = new \Oro\Bundle\TrackingBundle\Form\Handler\TrackingWebsiteHandler($this->get('oro_tracking.form.tracking_website'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_tracking.form.tracking_website' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroTracking_Form_TrackingWebsiteService()
    {
        return $this->services['oro_tracking.form.tracking_website'] = $this->get('form.factory')->createNamed('oro_tracking_website', 'oro_tracking_website');
    }

    /**
     * Gets the 'oro_tracking.form.type.tracking_website' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TrackingBundle\Form\Type\TrackingWebsiteType A Oro\Bundle\TrackingBundle\Form\Type\TrackingWebsiteType instance.
     */
    protected function getOroTracking_Form_Type_TrackingWebsiteService()
    {
        return $this->services['oro_tracking.form.type.tracking_website'] = new \Oro\Bundle\TrackingBundle\Form\Type\TrackingWebsiteType('Oro\\Bundle\\TrackingBundle\\Entity\\TrackingWebsite');
    }

    /**
     * Gets the 'oro_tracking.importexport.data_converter.data' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TrackingBundle\ImportExport\DataConverter A Oro\Bundle\TrackingBundle\ImportExport\DataConverter instance.
     */
    protected function getOroTracking_Importexport_DataConverter_DataService()
    {
        return $this->services['oro_tracking.importexport.data_converter.data'] = new \Oro\Bundle\TrackingBundle\ImportExport\DataConverter($this->get('oro_importexport.field.field_helper'), $this->get('oro_importexport.data_converter.relation_calculator'));
    }

    /**
     * Gets the 'oro_tracking.importexport.normalizer.data' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TrackingBundle\ImportExport\DataNormalizer A Oro\Bundle\TrackingBundle\ImportExport\DataNormalizer instance.
     */
    protected function getOroTracking_Importexport_Normalizer_DataService()
    {
        $this->services['oro_tracking.importexport.normalizer.data'] = $instance = new \Oro\Bundle\TrackingBundle\ImportExport\DataNormalizer($this->get('oro_importexport.field.field_helper'));

        $instance->setEntityName('Oro\\Bundle\\TrackingBundle\\Entity\\TrackingData');

        return $instance;
    }

    /**
     * Gets the 'oro_tracking.importexport.processor.import.data' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Processor\ImportProcessor A Oro\Bundle\ImportExportBundle\Processor\ImportProcessor instance.
     */
    protected function getOroTracking_Importexport_Processor_Import_DataService()
    {
        $this->services['oro_tracking.importexport.processor.import.data'] = $instance = new \Oro\Bundle\ImportExportBundle\Processor\ImportProcessor();

        $instance->setSerializer($this->get('oro_importexport.serializer'));
        $instance->setDataConverter($this->get('oro_tracking.importexport.data_converter.data'));
        $instance->setStrategy($this->get('oro_tracking.importexport.strategy.data'));

        return $instance;
    }

    /**
     * Gets the 'oro_tracking.importexport.reader.context' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TrackingBundle\ImportExport\ContextReader A Oro\Bundle\TrackingBundle\ImportExport\ContextReader instance.
     */
    protected function getOroTracking_Importexport_Reader_ContextService()
    {
        return $this->services['oro_tracking.importexport.reader.context'] = new \Oro\Bundle\TrackingBundle\ImportExport\ContextReader($this->get('oro_importexport.context_registry'));
    }

    /**
     * Gets the 'oro_tracking.importexport.reader.log' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TrackingBundle\ImportExport\LogReader A Oro\Bundle\TrackingBundle\ImportExport\LogReader instance.
     */
    protected function getOroTracking_Importexport_Reader_LogService()
    {
        return $this->services['oro_tracking.importexport.reader.log'] = new \Oro\Bundle\TrackingBundle\ImportExport\LogReader($this->get('oro_importexport.context_registry'));
    }

    /**
     * Gets the 'oro_tracking.importexport.strategy.data' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Strategy\Import\ConfigurableAddOrReplaceStrategy A Oro\Bundle\ImportExportBundle\Strategy\Import\ConfigurableAddOrReplaceStrategy instance.
     */
    protected function getOroTracking_Importexport_Strategy_DataService()
    {
        return $this->services['oro_tracking.importexport.strategy.data'] = new \Oro\Bundle\ImportExportBundle\Strategy\Import\ConfigurableAddOrReplaceStrategy($this->get('debug.event_dispatcher'), $this->get('oro_importexport.strategy.import.helper'), $this->get('oro_importexport.field.field_helper'), $this->get('oro_importexport.field.database_helper'));
    }

    /**
     * Gets the 'oro_tracking.migration.extension.tracking_identifier' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TrackingBundle\Migration\Extension\IdentifierEventExtension A Oro\Bundle\TrackingBundle\Migration\Extension\IdentifierEventExtension instance.
     */
    protected function getOroTracking_Migration_Extension_TrackingIdentifierService()
    {
        return $this->services['oro_tracking.migration.extension.tracking_identifier'] = new \Oro\Bundle\TrackingBundle\Migration\Extension\IdentifierEventExtension();
    }

    /**
     * Gets the 'oro_tracking.migration.extension.visit_event_association' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TrackingBundle\Migration\Extension\VisitEventAssociationExtension A Oro\Bundle\TrackingBundle\Migration\Extension\VisitEventAssociationExtension instance.
     */
    protected function getOroTracking_Migration_Extension_VisitEventAssociationService()
    {
        return $this->services['oro_tracking.migration.extension.visit_event_association'] = new \Oro\Bundle\TrackingBundle\Migration\Extension\VisitEventAssociationExtension();
    }

    /**
     * Gets the 'oro_tracking.processor.tracking_processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TrackingBundle\Processor\TrackingProcessor A Oro\Bundle\TrackingBundle\Processor\TrackingProcessor instance.
     */
    protected function getOroTracking_Processor_TrackingProcessorService()
    {
        return $this->services['oro_tracking.processor.tracking_processor'] = new \Oro\Bundle\TrackingBundle\Processor\TrackingProcessor($this->get('doctrine'), $this->get('oro_tracking.provider.identifier_provider'));
    }

    /**
     * Gets the 'oro_tracking.provider.identifier_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TrackingBundle\Provider\TrackingEventIdentificationProvider A Oro\Bundle\TrackingBundle\Provider\TrackingEventIdentificationProvider instance.
     */
    protected function getOroTracking_Provider_IdentifierProviderService()
    {
        return $this->services['oro_tracking.provider.identifier_provider'] = new \Oro\Bundle\TrackingBundle\Provider\TrackingEventIdentificationProvider();
    }

    /**
     * Gets the 'oro_tracking.tracking_website.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroTracking_TrackingWebsite_Manager_ApiService()
    {
        $this->services['oro_tracking.tracking_website.manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\TrackingBundle\\Entity\\TrackingWebsite', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_translation.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroTranslation_CacheService()
    {
        $this->services['oro_translation.cache'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_translation.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_translation.controller' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\TranslationBundle\Controller\Controller A Oro\Bundle\TranslationBundle\Controller\Controller instance.
     */
    public function getOroTranslation_ControllerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_translation.controller'] = new OroBundleTranslationBundleControllerController_000000002e47fa0900000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroTranslation_ControllerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\TranslationBundle\Controller\Controller($this->get('translator.default'), $this->get('templating'), 'OroTranslationBundle:Translation:translation.js.twig', array('domains' => array(0 => 'jsmessages', 1 => 'validators'), 'debug' => true));
    }

    /**
     * Gets the 'oro_translation.database_translation.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\Translation\OrmTranslationLoader A Oro\Bundle\TranslationBundle\Translation\OrmTranslationLoader instance.
     */
    protected function getOroTranslation_DatabaseTranslation_LoaderService()
    {
        return $this->services['oro_translation.database_translation.loader'] = new \Oro\Bundle\TranslationBundle\Translation\OrmTranslationLoader($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_translation.database_translation.metadata.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\Translation\DynamicTranslationMetadataCache A Oro\Bundle\TranslationBundle\Translation\DynamicTranslationMetadataCache instance.
     */
    protected function getOroTranslation_DatabaseTranslation_Metadata_CacheService()
    {
        return $this->services['oro_translation.database_translation.metadata.cache'] = new \Oro\Bundle\TranslationBundle\Translation\DynamicTranslationMetadataCache($this->get('oro_translation.database_translation.metadata.cache_impl'));
    }

    /**
     * Gets the 'oro_translation.database_translation.persister' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\Translation\DatabasePersister A Oro\Bundle\TranslationBundle\Translation\DatabasePersister instance.
     */
    protected function getOroTranslation_DatabaseTranslation_PersisterService()
    {
        return $this->services['oro_translation.database_translation.persister'] = new \Oro\Bundle\TranslationBundle\Translation\DatabasePersister($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_translation.database_translation.metadata.cache'));
    }

    /**
     * Gets the 'oro_translation.empty_array.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\Translation\EmptyArrayLoader A Oro\Bundle\TranslationBundle\Translation\EmptyArrayLoader instance.
     */
    protected function getOroTranslation_EmptyArray_LoaderService()
    {
        return $this->services['oro_translation.empty_array.loader'] = new \Oro\Bundle\TranslationBundle\Translation\EmptyArrayLoader();
    }

    /**
     * Gets the 'oro_translation.event_listener.language_change' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\EventListener\LanguageChangeListener A Oro\Bundle\TranslationBundle\EventListener\LanguageChangeListener instance.
     */
    protected function getOroTranslation_EventListener_LanguageChangeService()
    {
        return $this->services['oro_translation.event_listener.language_change'] = new \Oro\Bundle\TranslationBundle\EventListener\LanguageChangeListener($this->get('oro_translation.database_translation.metadata.cache'));
    }

    /**
     * Gets the 'oro_translation.extractor.php_code_extractor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\Extractor\PhpCodeExtractor A Oro\Bundle\TranslationBundle\Extractor\PhpCodeExtractor instance.
     */
    protected function getOroTranslation_Extractor_PhpCodeExtractorService()
    {
        return $this->services['oro_translation.extractor.php_code_extractor'] = new \Oro\Bundle\TranslationBundle\Extractor\PhpCodeExtractor($this);
    }

    /**
     * Gets the 'oro_translation.form.extension.translatable_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\Form\Extension\TranslatableChoiceTypeExtension A Oro\Bundle\TranslationBundle\Form\Extension\TranslatableChoiceTypeExtension instance.
     */
    protected function getOroTranslation_Form_Extension_TranslatableChoiceService()
    {
        return $this->services['oro_translation.form.extension.translatable_choice'] = new \Oro\Bundle\TranslationBundle\Form\Extension\TranslatableChoiceTypeExtension();
    }

    /**
     * Gets the 'oro_translation.form.type.available_translations' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\Form\Type\AvailableTranslationsConfigurationType A Oro\Bundle\TranslationBundle\Form\Type\AvailableTranslationsConfigurationType instance.
     */
    protected function getOroTranslation_Form_Type_AvailableTranslationsService()
    {
        return $this->services['oro_translation.form.type.available_translations'] = new \Oro\Bundle\TranslationBundle\Form\Type\AvailableTranslationsConfigurationType();
    }

    /**
     * Gets the 'oro_translation.form.type.jqueryselect2_translatable_entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type A Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type instance.
     */
    protected function getOroTranslation_Form_Type_Jqueryselect2TranslatableEntityService()
    {
        return $this->services['oro_translation.form.type.jqueryselect2_translatable_entity'] = new \Genemu\Bundle\FormBundle\Form\JQuery\Type\Select2Type('translatable_entity');
    }

    /**
     * Gets the 'oro_translation.form.type.translatable_entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\Form\Type\TranslatableEntityType A Oro\Bundle\TranslationBundle\Form\Type\TranslatableEntityType instance.
     */
    protected function getOroTranslation_Form_Type_TranslatableEntityService()
    {
        return $this->services['oro_translation.form.type.translatable_entity'] = new \Oro\Bundle\TranslationBundle\Form\Type\TranslatableEntityType($this->get('doctrine'));
    }

    /**
     * Gets the 'oro_translation.guzzle_crowdin_client' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Guzzle\Http\Client A Guzzle\Http\Client instance.
     */
    protected function getOroTranslation_GuzzleCrowdinClientService()
    {
        return $this->services['oro_translation.guzzle_crowdin_client'] = new \Guzzle\Http\Client('http://api.crowdin.net/api');
    }

    /**
     * Gets the 'oro_translation.guzzle_oro_client' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Guzzle\Http\Client A Guzzle\Http\Client instance.
     */
    protected function getOroTranslation_GuzzleOroClientService()
    {
        return $this->services['oro_translation.guzzle_oro_client'] = new \Guzzle\Http\Client('http://translations.orocrm.com/api');
    }

    /**
     * Gets the 'oro_translation.js_dumper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\TranslationBundle\Provider\JsTranslationDumper A Oro\Bundle\TranslationBundle\Provider\JsTranslationDumper instance.
     */
    public function getOroTranslation_JsDumperService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_translation.js_dumper'] = new OroBundleTranslationBundleProviderJsTranslationDumper_000000002e47fa3300000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroTranslation_JsDumperService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\TranslationBundle\Provider\JsTranslationDumper($this->get('oro_translation.controller'), $this->get('router'), array(0 => 'jsmessages', 1 => 'validators'), 'C:\\wamp\\www\\stockvalue~~\\app', 'fr');
    }

    /**
     * Gets the 'oro_translation.oro_translation_adapter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\Provider\OroTranslationAdapter A Oro\Bundle\TranslationBundle\Provider\OroTranslationAdapter instance.
     */
    protected function getOroTranslation_OroTranslationAdapterService()
    {
        $this->services['oro_translation.oro_translation_adapter'] = $instance = new \Oro\Bundle\TranslationBundle\Provider\OroTranslationAdapter($this->get('oro_translation.guzzle_oro_client'));

        $instance->setApiKey('');

        return $instance;
    }

    /**
     * Gets the 'oro_translation.packages_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\Provider\PackagesProvider A Oro\Bundle\TranslationBundle\Provider\PackagesProvider instance.
     */
    protected function getOroTranslation_PackagesProviderService()
    {
        return $this->services['oro_translation.packages_provider'] = new \Oro\Bundle\TranslationBundle\Provider\PackagesProvider(new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_distribution.package_manager', false), array('OroCacheBundle' => 'Oro\\Bundle\\CacheBundle\\OroCacheBundle', 'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle', 'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle', 'OroSyncBundle' => 'Oro\\Bundle\\SyncBundle\\OroSyncBundle', 'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle', 'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle', 'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle', 'AsseticBundle' => 'Symfony\\Bundle\\AsseticBundle\\AsseticBundle', 'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle', 'DoctrineFixturesBundle' => 'Doctrine\\Bundle\\FixturesBundle\\DoctrineFixturesBundle', 'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle', 'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle', 'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle', 'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle', 'FOSJsRoutingBundle' => 'FOS\\JsRoutingBundle\\FOSJsRoutingBundle', 'NelmioApiDocBundle' => 'Nelmio\\ApiDocBundle\\NelmioApiDocBundle', 'BeSimpleSoapBundle' => 'BeSimple\\SoapBundle\\BeSimpleSoapBundle', 'StofDoctrineExtensionsBundle' => 'Stof\\DoctrineExtensionsBundle\\StofDoctrineExtensionsBundle', 'EscapeWSSEAuthenticationBundle' => 'Escape\\WSSEAuthenticationBundle\\EscapeWSSEAuthenticationBundle', 'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle', 'GenemuFormBundle' => 'Genemu\\Bundle\\FormBundle\\GenemuFormBundle', 'A2lixTranslationFormBundle' => 'A2lix\\TranslationFormBundle\\A2lixTranslationFormBundle', 'LexikMaintenanceBundle' => 'Lexik\\Bundle\\MaintenanceBundle\\LexikMaintenanceBundle', 'OroLayoutBundle' => 'Oro\\Bundle\\LayoutBundle\\OroLayoutBundle', 'OroUIBundle' => 'Oro\\Bundle\\UIBundle\\OroUIBundle', 'OroOrganizationBundle' => 'Oro\\Bundle\\OrganizationBundle\\OroOrganizationBundle', 'OroSecurityBundle' => 'Oro\\Bundle\\SecurityBundle\\OroSecurityBundle', 'OroAttachmentBundle' => 'Oro\\Bundle\\AttachmentBundle\\OroAttachmentBundle', 'OroEmailBundle' => 'Oro\\Bundle\\EmailBundle\\OroEmailBundle', 'OroUserBundle' => 'Oro\\Bundle\\UserBundle\\OroUserBundle', 'HWIOAuthBundle' => 'HWI\\Bundle\\OAuthBundle\\HWIOAuthBundle', 'OroSSOBundle' => 'Oro\\Bundle\\SSOBundle\\OroSSOBundle', 'OroEntityBundle' => 'Oro\\Bundle\\EntityBundle\\OroEntityBundle', 'OroEntityConfigBundle' => 'Oro\\Bundle\\EntityConfigBundle\\OroEntityConfigBundle', 'OroEntityExtendBundle' => 'Oro\\Bundle\\EntityExtendBundle\\OroEntityExtendBundle', 'OroIntegrationBundle' => 'Oro\\Bundle\\IntegrationBundle\\OroIntegrationBundle', 'AkeneoBatchBundle' => 'Akeneo\\Bundle\\BatchBundle\\AkeneoBatchBundle', 'JDareClankBundle' => 'JDare\\ClankBundle\\JDareClankBundle', 'JMSJobQueueBundle' => 'JMS\\JobQueueBundle\\JMSJobQueueBundle', 'KnpGaufretteBundle' => 'Knp\\Bundle\\GaufretteBundle\\KnpGaufretteBundle', 'MainStockValueBundle' => 'Main\\StockValueBundle\\MainStockValueBundle', 'OroActivityBundle' => 'Oro\\Bundle\\ActivityBundle\\OroActivityBundle', 'OroActivityListBundle' => 'Oro\\Bundle\\ActivityListBundle\\OroActivityListBundle', 'OroAddressBundle' => 'Oro\\Bundle\\AddressBundle\\OroAddressBundle', 'OroAsseticBundle' => 'Oro\\Bundle\\AsseticBundle\\OroAsseticBundle', 'OroBatchBundle' => 'Oro\\Bundle\\BatchBundle\\OroBatchBundle', 'OroBusinessEntitiesBundle' => 'Oro\\Bundle\\BusinessEntitiesBundle\\OroBusinessEntitiesBundle', 'OroCalendarBundle' => 'Oro\\Bundle\\CalendarBundle\\OroCalendarBundle', 'OroChartBundle' => 'Oro\\Bundle\\ChartBundle\\OroChartBundle', 'OroConfigBundle' => 'Oro\\Bundle\\ConfigBundle\\OroConfigBundle', 'OroCronBundle' => 'Oro\\Bundle\\CronBundle\\OroCronBundle', 'OroDataAuditBundle' => 'Oro\\Bundle\\DataAuditBundle\\OroDataAuditBundle', 'OroDataGridBundle' => 'Oro\\Bundle\\DataGridBundle\\OroDataGridBundle', 'OroDistributionBundle' => 'Oro\\Bundle\\DistributionBundle\\OroDistributionBundle', 'OroEmbeddedFormBundle' => 'Oro\\Bundle\\EmbeddedFormBundle\\OroEmbeddedFormBundle', 'OroEntityMergeBundle' => 'Oro\\Bundle\\EntityMergeBundle\\OroEntityMergeBundle', 'OroEntityPaginationBundle' => 'Oro\\Bundle\\EntityPaginationBundle\\OroEntityPaginationBundle', 'OroFilterBundle' => 'Oro\\Bundle\\FilterBundle\\OroFilterBundle', 'OroFormBundle' => 'Oro\\Bundle\\FormBundle\\OroFormBundle', 'OroHelpBundle' => 'Oro\\Bundle\\HelpBundle\\OroHelpBundle', 'OroImapBundle' => 'Oro\\Bundle\\ImapBundle\\OroImapBundle', 'OroImportExportBundle' => 'Oro\\Bundle\\ImportExportBundle\\OroImportExportBundle', 'OroInstallerBundle' => 'Oro\\Bundle\\InstallerBundle\\OroInstallerBundle', 'OroLocaleBundle' => 'Oro\\Bundle\\LocaleBundle\\OroLocaleBundle', 'OroMigrationBundle' => 'Oro\\Bundle\\MigrationBundle\\OroMigrationBundle', 'OroNoteBundle' => 'Oro\\Bundle\\NoteBundle\\OroNoteBundle', 'OroNotificationBundle' => 'Oro\\Bundle\\NotificationBundle\\OroNotificationBundle', 'OroPlatformBundle' => 'Oro\\Bundle\\PlatformBundle\\OroPlatformBundle', 'OroQueryDesignerBundle' => 'Oro\\Bundle\\QueryDesignerBundle\\OroQueryDesignerBundle', 'OroReportBundle' => 'Oro\\Bundle\\ReportBundle\\OroReportBundle', 'OroRequireJSBundle' => 'Oro\\Bundle\\RequireJSBundle\\OroRequireJSBundle', 'OroSearchBundle' => 'Oro\\Bundle\\SearchBundle\\OroSearchBundle', 'OroSegmentBundle' => 'Oro\\Bundle\\SegmentBundle\\OroSegmentBundle', 'OroSidebarBundle' => 'Oro\\Bundle\\SidebarBundle\\OroSidebarBundle', 'OroSoapBundle' => 'Oro\\Bundle\\SoapBundle\\OroSoapBundle', 'OroTagBundle' => 'Oro\\Bundle\\TagBundle\\OroTagBundle', 'OroThemeBundle' => 'Oro\\Bundle\\ThemeBundle\\OroThemeBundle', 'OroTranslationBundle' => 'Oro\\Bundle\\TranslationBundle\\OroTranslationBundle', 'OroWindowsBundle' => 'Oro\\Bundle\\WindowsBundle\\OroWindowsBundle', 'OroWorkflowBundle' => 'Oro\\Bundle\\WorkflowBundle\\OroWorkflowBundle', 'SecurityStockValueBundle' => 'Security\\StockValueBundle\\SecurityStockValueBundle', 'SyliusFlowBundle' => 'Sylius\\Bundle\\FlowBundle\\SyliusFlowBundle', 'OroCommentBundle' => 'Oro\\Bundle\\CommentBundle\\OroCommentBundle', 'OroDashboardBundle' => 'Oro\\Bundle\\DashboardBundle\\OroDashboardBundle', 'OroNavigationBundle' => 'Oro\\Bundle\\NavigationBundle\\OroNavigationBundle', 'OroTrackingBundle' => 'Oro\\Bundle\\TrackingBundle\\OroTrackingBundle', 'OroReminderBundle' => 'Oro\\Bundle\\ReminderBundle\\OroReminderBundle', 'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle', 'SensioDistributionBundle' => 'Sensio\\Bundle\\DistributionBundle\\SensioDistributionBundle'), 'C:\\wamp\\www\\stockvalue~~\\app', 'C:\\wamp\\www\\stockvalue~~\\app/cache/composer');
    }

    /**
     * Gets the 'oro_translation.service_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\TranslationBundle\Provider\TranslationServiceProvider A Oro\Bundle\TranslationBundle\Provider\TranslationServiceProvider instance.
     */
    public function getOroTranslation_ServiceProviderService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_translation.service_provider'] = new OroBundleTranslationBundleProviderTranslationServiceProvider_000000002e47fa0c00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroTranslation_ServiceProviderService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\TranslationBundle\Provider\TranslationServiceProvider($this->get('oro_translation.uploader.crowdin_adapter'), $this->get('oro_translation.js_dumper'), $this->get('translation.loader'), $this->get('oro_translation.database_translation.persister'), 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev');
    }

    /**
     * Gets the 'oro_translation.statistic_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\Provider\TranslationStatisticProvider A Oro\Bundle\TranslationBundle\Provider\TranslationStatisticProvider instance.
     */
    protected function getOroTranslation_StatisticProviderService()
    {
        return $this->services['oro_translation.statistic_provider'] = new \Oro\Bundle\TranslationBundle\Provider\TranslationStatisticProvider($this->get('oro_translation.cache'), $this->get('oro_translation.oro_translation_adapter'), $this->get('oro_translation.packages_provider'));
    }

    /**
     * Gets the 'oro_translation.twig.translation.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\Twig\TranslationExtension A Oro\Bundle\TranslationBundle\Twig\TranslationExtension instance.
     */
    protected function getOroTranslation_Twig_Translation_ExtensionService()
    {
        return $this->services['oro_translation.twig.translation.extension'] = new \Oro\Bundle\TranslationBundle\Twig\TranslationExtension(false);
    }

    /**
     * Gets the 'oro_translation.twig.translation_status.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\Twig\TranslationStatusExtension A Oro\Bundle\TranslationBundle\Twig\TranslationStatusExtension instance.
     */
    protected function getOroTranslation_Twig_TranslationStatus_ExtensionService()
    {
        return $this->services['oro_translation.twig.translation_status.extension'] = new \Oro\Bundle\TranslationBundle\Twig\TranslationStatusExtension($this->get('oro_config.global'), $this->get('oro_translation.statistic_provider'));
    }

    /**
     * Gets the 'oro_translation.uploader.crowdin_adapter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\Provider\CrowdinAdapter A Oro\Bundle\TranslationBundle\Provider\CrowdinAdapter instance.
     */
    protected function getOroTranslation_Uploader_CrowdinAdapterService()
    {
        return $this->services['oro_translation.uploader.crowdin_adapter'] = new \Oro\Bundle\TranslationBundle\Provider\CrowdinAdapter($this->get('oro_translation.guzzle_crowdin_client'));
    }

    /**
     * Gets the 'oro_ui.content_provider.current_route' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\ContentProvider\CurrentRouteContentProvider A Oro\Bundle\UIBundle\ContentProvider\CurrentRouteContentProvider instance.
     */
    protected function getOroUi_ContentProvider_CurrentRouteService()
    {
        $this->services['oro_ui.content_provider.current_route'] = $instance = new \Oro\Bundle\UIBundle\ContentProvider\CurrentRouteContentProvider();

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_ui.content_provider.flash_messages' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\ContentProvider\FlashMessagesContentProvider A Oro\Bundle\UIBundle\ContentProvider\FlashMessagesContentProvider instance.
     */
    protected function getOroUi_ContentProvider_FlashMessagesService()
    {
        return $this->services['oro_ui.content_provider.flash_messages'] = new \Oro\Bundle\UIBundle\ContentProvider\FlashMessagesContentProvider($this->get('session'));
    }

    /**
     * Gets the 'oro_ui.content_provider.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\ContentProvider\ContentProviderManager A Oro\Bundle\UIBundle\ContentProvider\ContentProviderManager instance.
     */
    protected function getOroUi_ContentProvider_ManagerService()
    {
        $this->services['oro_ui.content_provider.manager'] = $instance = new \Oro\Bundle\UIBundle\ContentProvider\ContentProviderManager();

        $instance->addContentProvider($this->get('oro_ui.content_provider.current_route'), true);
        $instance->addContentProvider($this->get('oro_ui.content_provider.flash_messages'), true);
        $instance->addContentProvider($this->get('oro_navigation.content_provider.menu.history_menu'), true);
        $instance->addContentProvider($this->get('oro_navigation.content_provider.menu.mostviewed_menu'), true);
        $instance->addContentProvider($this->get('oro_navigation.content_provider.menu.application_menu'), false);
        $instance->addContentProvider($this->get('oro_navigation.content_provider.title'), true);
        $instance->addContentProvider($this->get('oro_navigation.content_provider.title_short'), true);
        $instance->addContentProvider($this->get('oro_navigation.content_provider.title_serialized'), true);
        $instance->addContentProvider($this->get('oro_navigation.content_provider.navigation_elements'), true);

        return $instance;
    }

    /**
     * Gets the 'oro_ui.format_converter.date_time.jquery_ui' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Converter\JqueryUiDateTimeFormatConverter A Oro\Bundle\UIBundle\Converter\JqueryUiDateTimeFormatConverter instance.
     */
    protected function getOroUi_FormatConverter_DateTime_JqueryUiService()
    {
        return $this->services['oro_ui.format_converter.date_time.jquery_ui'] = new \Oro\Bundle\UIBundle\Converter\JqueryUiDateTimeFormatConverter($this->get('oro_locale.formatter.date_time'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_ui.formatter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Formatter\FormatterManager A Oro\Bundle\UIBundle\Formatter\FormatterManager instance.
     */
    protected function getOroUi_FormatterService()
    {
        $this->services['oro_ui.formatter'] = $instance = new \Oro\Bundle\UIBundle\Formatter\FormatterManager();

        $instance->addFormatter('image_encoded', $this->get('oro_attachment.formatter.image_encoded'));
        $instance->addFormatter('image_link', $this->get('oro_attachment.formatter.image_link'));
        $instance->addFormatter('image_src', $this->get('oro_attachment.formatter.image_src'));
        $instance->addFormatter('datetime', $this->get('oro_locale.format.datetime'));

        return $instance;
    }

    /**
     * Gets the 'oro_ui.html_tag_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Tools\HtmlTagHelper A Oro\Bundle\UIBundle\Tools\HtmlTagHelper instance.
     */
    protected function getOroUi_HtmlTagHelperService()
    {
        return $this->services['oro_ui.html_tag_helper'] = new \Oro\Bundle\UIBundle\Tools\HtmlTagHelper($this->get('oro_form.provider.html_tag_provider'), 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev');
    }

    /**
     * Gets the 'oro_ui.label_provider.action_button_group' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Provider\ActionButtonGroupLabelProvider A Oro\Bundle\UIBundle\Provider\ActionButtonGroupLabelProvider instance.
     */
    protected function getOroUi_LabelProvider_ActionButtonGroupService()
    {
        return $this->services['oro_ui.label_provider.action_button_group'] = new \Oro\Bundle\UIBundle\Provider\ActionButtonGroupLabelProvider($this->get('translator'));
    }

    /**
     * Gets the 'oro_ui.placeholder.filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Placeholder\PlaceholderFilter A Oro\Bundle\UIBundle\Placeholder\PlaceholderFilter instance.
     */
    protected function getOroUi_Placeholder_FilterService()
    {
        return $this->services['oro_ui.placeholder.filter'] = new \Oro\Bundle\UIBundle\Placeholder\PlaceholderFilter();
    }

    /**
     * Gets the 'oro_ui.placeholder.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Placeholder\PlaceholderProvider A Oro\Bundle\UIBundle\Placeholder\PlaceholderProvider instance.
     */
    protected function getOroUi_Placeholder_ProviderService()
    {
        return $this->services['oro_ui.placeholder.provider'] = new \Oro\Bundle\UIBundle\Placeholder\PlaceholderProvider(array('placeholders' => array('scripts_after' => array('items' => array(0 => 'oro_reminder_subscribe_script', 1 => 'navigationItem', 2 => 'window_bundle_js', 3 => 'maintenance_js', 4 => 'sync_js', 5 => 'locale_settings')), 'header_logo' => array('items' => array(0 => 'logo')), 'user_menu' => array('items' => array(0 => 'menu_user', 1 => 'user_dots_menu', 2 => 'help')), 'form_buttons' => array('items' => array(0 => 'add_update_delete')), 'head_style' => array('items' => array(0 => 'assets_css')), 'head_script' => array('items' => array()), 'requirejs_config_extend' => array('items' => array(0 => 'ui_requirejs_config', 1 => 'translation_requirejs_config', 2 => 'routing_requirejs_config')), 'right_panel' => array('items' => array(0 => 'sidebar', 1 => 'navbar')), 'left_panel' => array('items' => array(0 => 'navbar', 1 => 'sidebar')), 'view_navButtons_after' => array('items' => array(0 => 'view_buttons')), 'update_navButtons_after' => array('items' => array(0 => 'update_buttons')), 'organization_selector' => array('items' => array(0 => 'organization_selector')), 'organization_name' => array('items' => array(0 => 'organization_name')), 'view_content_data_additional_information' => array('items' => array(0 => 'oro_attachments')), 'dots_menu' => array('items' => array(0 => 'dots_menu_email', 1 => 'dots_menu')), 'scripts_before' => array('items' => array(0 => 'template_audit_condition_type_select', 1 => 'template_datagrid_gridview', 2 => 'template_datagrid_gridview_label', 3 => 'template_datagrid_view_name_modal', 4 => 'orodashboard_widget_items_templates', 5 => 'email_filter_templates', 6 => 'filter_templates', 7 => 'filter_embedded_templates', 8 => 'widget_filter_templates', 9 => 'template_datagrid_toolbar', 10 => 'filter_container', 11 => 'template_datagrid_toolbar_pagination', 12 => 'template_datagrid_toolbar_pagination_input', 13 => 'template_datagrid_toolbar_page_size', 14 => 'template_datagrid_select_all_header_cell', 15 => 'template_datagrid_action_header_cell', 16 => 'dot_menu_js', 17 => 'pinbar_js')), 'oro_user_login_form' => array('items' => array(0 => 'oauth_login')), 'oro_integration_force_sync_button' => array('items' => array(0 => 'force_sync_button')), 'view_content_data_activities' => array('items' => array(0 => 'view_oro_activity_list')), 'update_content_data_activities' => array('items' => array(0 => 'update_oro_activity_list')), 'segment_criteria_list' => array('items' => array(0 => 'activity_condition', 1 => 'data_audit_condition')), 'oro_reminder_reminder_templates' => array('items' => array(0 => 'calendar_event_reminder_template', 1 => 'default_template')), 'change_history_block' => array('items' => array(0 => 'change_history_link')), 'view_before_content_addition' => array('items' => array(0 => 'entity_pagination_view')), 'update_before_content_addition' => array('items' => array(0 => 'entity_pagination_edit')), 'footer_inner' => array('items' => array(0 => 'have_request')), 'navbar' => array('items' => array(0 => 'shortcuts', 1 => 'search')), 'view_navButtons_before' => array('items' => array(0 => 'workflow_buttons')), 'page_title_before' => array('items' => array(0 => 'workflow_steps')), 'view_content_data_comments' => array('items' => array(0 => 'oro_comment_list')), 'application_menu' => array('items' => array(0 => 'application_menu')), 'pin_tabs_list' => array('items' => array(0 => 'pin_tabs_list')), 'after_navigation' => array('items' => array()), 'pin_button' => array('items' => array(0 => 'pin_button')), 'content_before' => array('items' => array(0 => 'oro_reminder_show_script'))), 'items' => array('sync_js' => array('template' => 'OroSyncBundle::sync_js.html.twig', 'applicable' => '@oro_security.security_facade->hasLoggedUser()'), 'maintenance_js' => array('template' => 'OroSyncBundle::maintenance_js.html.twig'), 'logo' => array('template' => 'OroUIBundle:Default:logo.html.twig'), 'help' => array('template' => 'OroUIBundle:Default:help.html.twig'), 'user_dots_menu' => array('template' => 'OroUIBundle:Default:user_dots_menu.html.twig'), 'add_update_delete' => array('template' => 'OroUIBundle:Form:buttons.html.twig'), 'ui_requirejs_config' => array('template' => 'OroUIBundle::requirejs.config.js.twig'), 'navbar' => array('template' => 'OroUIBundle:Default/navbar:sided.html.twig'), 'view_buttons' => array('template' => 'OroUIBundle::buttons.html.twig', 'applicable' => '@oro_ui.widget_provider.view_actions->supports($entity$)', 'data' => '@oro_ui.widget_provider.view_actions->getWidgets($entity$)'), 'update_buttons' => array('template' => 'OroUIBundle::buttons.html.twig', 'applicable' => '@oro_ui.widget_provider.update_actions->supports($entity$)', 'data' => '@oro_ui.widget_provider.update_actions->getWidgets($entity$)'), 'organization_selector' => array('template' => 'OroSecurityBundle:Organization:selector.html.twig', 'applicable' => '@oro_user.placeholder.filter->isUserApplicable()'), 'organization_name' => array('template' => 'OroSecurityBundle:Organization:current_name.html.twig'), 'oro_add_attachment_button' => array('template' => 'OroAttachmentBundle:Attachment:addButton.html.twig', 'applicable' => '@oro_attachment.placeholder.filter->isAttachmentAssociationEnabled($entity$)', 'acl' => array(0 => 'oro_attachment_create', 1 => 'oro_attachment_view')), 'oro_add_attachment_link' => array('template' => 'OroAttachmentBundle:Attachment:addLink.html.twig', 'applicable' => '@oro_attachment.placeholder.filter->isAttachmentAssociationEnabled($entity$)', 'acl' => array(0 => 'oro_attachment_create', 1 => 'oro_attachment_view')), 'oro_attachments' => array('template' => 'OroAttachmentBundle:Attachment:attachments.html.twig', 'applicable' => '@oro_attachment.placeholder.filter->isAttachmentAssociationEnabled($entity$)', 'acl' => 'oro_attachment_view'), 'oro_send_email_button' => array('template' => 'OroEmailBundle:Email:activityButton.html.twig', 'acl' => 'oro_email_email_create'), 'oro_send_email_link' => array('template' => 'OroEmailBundle:Email:activityLink.html.twig', 'acl' => 'oro_email_email_create'), 'dots_menu_email' => array('action' => 'OroEmailBundle:Email:placeholderLast', 'applicable' => '@oro_user.placeholder.filter->isUserApplicable()'), 'email_filter_templates' => array('template' => 'OroEmailBundle:Js:default_templates.js.twig'), 'menu_user' => array('template' => 'OroUserBundle:Menu:menuProfile.html.twig', 'applicable' => '@oro_user.placeholder.filter->isUserApplicable()'), 'oro_user_password_change_button' => array('template' => 'OroUserBundle:User:passwordChangeButton.html.twig', 'applicable' => '@oro_user.placeholder.filter->isPasswordManageEnabled($entity$)', 'acl' => 'password_management'), 'oro_user_password_change_link' => array('template' => 'OroUserBundle:User:passwordChangeLink.html.twig', 'applicable' => '@oro_user.placeholder.filter->isPasswordManageEnabled($entity$)', 'acl' => 'password_management'), 'oro_user_password_reset_button' => array('template' => 'OroUserBundle:User:passwordResetButton.html.twig', 'applicable' => '@oro_user.placeholder.filter->isPasswordManageEnabled($entity$)', 'acl' => 'password_management'), 'oro_user_password_reset_link' => array('template' => 'OroUserBundle:User:passwordResetLink.html.twig', 'applicable' => '@oro_user.placeholder.filter->isPasswordManageEnabled($entity$)', 'acl' => 'password_management'), 'oauth_login' => array('template' => 'OroSSOBundle:Security:oauthLogin.html.twig'), 'force_sync_button' => array('template' => 'OroIntegrationBundle:Integration:forceSyncButton.html.twig', 'applicable' => '@oro_integration.manager.types_registry->supportsForceSync($entity$)'), 'oro_activities' => array('action' => 'OroActivityBundle:Activity:activities'), 'view_oro_activity_list' => array('applicable' => '@oro_activity_list.placeholder.filter->isApplicable($entity$, Oro\\Bundle\\ActivityBundle\\EntityConfig\\ActivityScope::VIEW_PAGE)', 'template' => 'OroActivityListBundle:ActivityList:activities.html.twig'), 'update_oro_activity_list' => array('applicable' => '@oro_activity_list.placeholder.filter->isApplicable($entity$, Oro\\Bundle\\ActivityBundle\\EntityConfig\\ActivityScope::UPDATE_PAGE)', 'template' => 'OroActivityListBundle:ActivityList:activities.html.twig'), 'activity_condition' => array('action' => 'OroActivityListBundle:Segment:activityCondition'), 'assets_css' => array('template' => 'OroAsseticBundle:Assets:oro_css.html.twig'), 'calendar_event_reminder_template' => array('template' => 'OroCalendarBundle:CalendarEvent:reminderTemplate.html.twig'), 'oro_add_calendar_event_button' => array('template' => 'OroCalendarBundle:CalendarEvent:activityButton.html.twig', 'acl' => 'oro_calendar_event_create'), 'oro_assign_calendar_event_button' => array('template' => 'OroCalendarBundle:CalendarEvent:assignCalendarEventButton.html.twig', 'applicable' => '@oro_ui.placeholder.filter->isInstanceOf($entity$, Oro\\Bundle\\UserBundle\\Entity\\User)', 'acl' => 'oro_calendar_event_create'), 'oro_add_calendar_event_link' => array('template' => 'OroCalendarBundle:CalendarEvent:activityLink.html.twig', 'acl' => 'oro_calendar_event_create'), 'oro_assign_calendar_event_link' => array('template' => 'OroCalendarBundle:CalendarEvent:assignCalendarEventLink.html.twig', 'applicable' => '@oro_ui.placeholder.filter->isInstanceOf($entity$, Oro\\Bundle\\UserBundle\\Entity\\User)', 'acl' => 'oro_calendar_event_create'), 'change_history_link' => array('template' => 'OroDataAuditBundle::change_history_link.html.twig', 'applicable' => '@oro_dataaudit.placeholder.filter->isEntityAuditable($entity$, $audit_show_change_history$)', 'acl' => 'oro_dataaudit_history'), 'template_audit_condition_type_select' => array('template' => 'OroDataAuditBundle:js:audit-condition-type-select.html.twig'), 'data_audit_condition' => array('template' => 'OroDataAuditBundle:Segment:data_audit_condition.html.twig'), 'template_datagrid_toolbar' => array('template' => 'OroDataGridBundle:js:toolbar.html.twig'), 'template_datagrid_toolbar_pagination' => array('template' => 'OroDataGridBundle:js:pagination.html.twig'), 'template_datagrid_toolbar_pagination_input' => array('template' => 'OroDataGridBundle:js:pagination-input.html.twig'), 'template_datagrid_toolbar_page_size' => array('template' => 'OroDataGridBundle:js:page-size.html.twig'), 'template_datagrid_select_all_header_cell' => array('template' => 'OroDataGridBundle:js:select-all-header-cell.html.twig'), 'template_datagrid_action_header_cell' => array('template' => 'OroDataGridBundle:js:action-header-cell.html.twig'), 'template_datagrid_gridview' => array('template' => 'OroDataGridBundle:js:grid-view.html.twig'), 'template_datagrid_gridview_label' => array('template' => 'OroDataGridBundle:js:grid-view-label.html.twig'), 'template_datagrid_view_name_modal' => array('template' => 'OroDataGridBundle:js:view-name-modal.html.twig'), 'entity_pagination_view' => array('template' => 'OroEntityPaginationBundle:Placeholder:viewPagination.html.twig'), 'entity_pagination_edit' => array('template' => 'OroEntityPaginationBundle:Placeholder:editPagination.html.twig'), 'filter_templates' => array('template' => 'OroFilterBundle:Js:default_templates.js.twig'), 'filter_embedded_templates' => array('template' => 'OroFilterBundle:Js:embedded_templates.js.twig'), 'filter_container' => array('template' => 'OroFilterBundle:Js:container.js.twig'), 'locale_settings' => array('template' => 'OroLocaleBundle::locale_settings.html.twig'), 'oro_add_note_button' => array('template' => 'OroNoteBundle:Note:addButton.html.twig', 'applicable' => '@oro_note.placeholder.filter->isNoteAssociationEnabled($entity$)', 'acl' => array(0 => 'oro_note_create', 1 => 'oro_note_view')), 'oro_add_note_link' => array('template' => 'OroNoteBundle:Note:addLink.html.twig', 'applicable' => '@oro_note.placeholder.filter->isNoteAssociationEnabled($entity$)', 'acl' => array(0 => 'oro_note_create', 1 => 'oro_note_view')), 'oro_notes' => array('template' => 'OroNoteBundle:Note:notes.html.twig', 'applicable' => '@oro_note.placeholder.filter->isNoteAssociationEnabled($entity$)', 'acl' => 'oro_note_view'), 'have_request' => array('template' => 'OroPlatformBundle::have_request.html.twig'), 'search' => array('action' => 'OroSearchBundle:Search:searchBar', 'applicable' => '@oro_user.placeholder.filter->isUserApplicable()'), 'sidebar' => array('template' => 'OroSidebarBundle::sidebar.html.twig', 'applicable' => '@oro_user.placeholder.filter->isUserApplicable()'), 'translation_requirejs_config' => array('template' => 'OroTranslationBundle::requirejs.config.js.twig'), 'window_bundle_js' => array('template' => 'OroWindowsBundle:Include:javascript.html.twig'), 'workflow_buttons' => array('template' => 'OroWorkflowBundle:Widget:buttons.html.twig'), 'workflow_steps' => array('template' => 'OroWorkflowBundle:Widget:steps.html.twig'), 'oro_comment_list' => array('applicable' => '@oro_comment.placeholder.filter->isApplicable($entity$)', 'template' => 'OroCommentBundle:Comment:comments.html.twig'), 'widget_filter_templates' => array('template' => 'OroDashboardBundle:Js:default_templates.js.twig'), 'orodashboard_widget_items_templates' => array('template' => 'OroDashboardBundle:Js:items.html.twig'), 'dot_menu_js' => array('template' => 'OroNavigationBundle:Js:dot.menu.js.twig'), 'pinbar_js' => array('template' => 'OroNavigationBundle:Js:pinbar.js.twig'), 'routing_requirejs_config' => array('template' => 'OroNavigationBundle:Js:requirejs.config.js.twig'), 'shortcuts' => array('template' => 'OroNavigationBundle:Shortcut:shortcuts.html.twig', 'applicable' => '@oro_user.placeholder.filter->isUserApplicable()'), 'application_menu' => array('template' => 'OroNavigationBundle:ApplicationMenu:applicationMenu.html.twig', 'applicable' => '@oro_user.placeholder.filter->isUserApplicable()'), 'dots_menu' => array('template' => 'OroNavigationBundle:ApplicationMenu:dotsMenu.html.twig', 'applicable' => '@oro_user.placeholder.filter->isUserApplicable()'), 'pin_tabs_list' => array('template' => 'OroNavigationBundle:Menu:pin_tabs_list.html.twig', 'applicable' => '@oro_user.placeholder.filter->isUserApplicable()'), 'pin_button' => array('template' => 'OroNavigationBundle:ApplicationMenu:pinButton.html.twig', 'applicable' => '@oro_user.placeholder.filter->isUserApplicable()'), 'oro_reminder_subscribe_script' => array('template' => 'OroReminderBundle:Reminder:subscribeScript.html.twig'), 'oro_reminder_show_script' => array('template' => 'OroReminderBundle:Reminder:showScript.html.twig'), 'default_template' => array('template' => 'OroReminderBundle:Reminder:reminderDefault.html.twig'))), $this->get('oro_ui.placeholder.resolver'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_ui.placeholder.resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\Config\Resolver\SystemAwareResolver A Oro\Component\Config\Resolver\SystemAwareResolver instance.
     */
    protected function getOroUi_Placeholder_ResolverService()
    {
        return $this->services['oro_ui.placeholder.resolver'] = new \Oro\Component\Config\Resolver\SystemAwareResolver($this);
    }

    /**
     * Gets the 'oro_ui.provider.widget_context' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Provider\WidgetContextProvider A Oro\Bundle\UIBundle\Provider\WidgetContextProvider instance.
     */
    protected function getOroUi_Provider_WidgetContextService()
    {
        $this->services['oro_ui.provider.widget_context'] = $instance = new \Oro\Bundle\UIBundle\Provider\WidgetContextProvider();

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_ui.router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Route\Router A Oro\Bundle\UIBundle\Route\Router instance.
     * 
     * @throws InactiveScopeException when the 'oro_ui.router' service is requested while the 'request' scope is not active
     */
    protected function getOroUi_RouterService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_ui.router', 'request');
        }

        return $this->services['oro_ui.router'] = $this->scopedServices['request']['oro_ui.router'] = new \Oro\Bundle\UIBundle\Route\Router($this->get('request'), $this->get('router'), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_ui.twig.block' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\BlockExtension A Oro\Bundle\UIBundle\Twig\BlockExtension instance.
     */
    protected function getOroUi_Twig_BlockService()
    {
        return $this->services['oro_ui.twig.block'] = new \Oro\Bundle\UIBundle\Twig\BlockExtension();
    }

    /**
     * Gets the 'oro_ui.twig.ceil_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\CeilExtension A Oro\Bundle\UIBundle\Twig\CeilExtension instance.
     */
    protected function getOroUi_Twig_CeilExtensionService()
    {
        return $this->services['oro_ui.twig.ceil_extension'] = new \Oro\Bundle\UIBundle\Twig\CeilExtension();
    }

    /**
     * Gets the 'oro_ui.twig.content_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\ContentExtension A Oro\Bundle\UIBundle\Twig\ContentExtension instance.
     */
    protected function getOroUi_Twig_ContentExtensionService()
    {
        return $this->services['oro_ui.twig.content_extension'] = new \Oro\Bundle\UIBundle\Twig\ContentExtension($this->get('oro_ui.content_provider.manager'));
    }

    /**
     * Gets the 'oro_ui.twig.date_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\DateExtension A Oro\Bundle\UIBundle\Twig\DateExtension instance.
     */
    protected function getOroUi_Twig_DateExtensionService()
    {
        return $this->services['oro_ui.twig.date_extension'] = new \Oro\Bundle\UIBundle\Twig\DateExtension($this->get('translator'));
    }

    /**
     * Gets the 'oro_ui.twig.extension.formatter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\FormatExtension A Oro\Bundle\UIBundle\Twig\FormatExtension instance.
     */
    protected function getOroUi_Twig_Extension_FormatterService()
    {
        return $this->services['oro_ui.twig.extension.formatter'] = new \Oro\Bundle\UIBundle\Twig\FormatExtension($this->get('oro_ui.formatter'));
    }

    /**
     * Gets the 'oro_ui.twig.form_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\FormExtension A Oro\Bundle\UIBundle\Twig\FormExtension instance.
     */
    protected function getOroUi_Twig_FormExtensionService()
    {
        return $this->services['oro_ui.twig.form_extension'] = new \Oro\Bundle\UIBundle\Twig\FormExtension($this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_ui.twig.formatter_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\FormatterExtension A Oro\Bundle\UIBundle\Twig\FormatterExtension instance.
     */
    protected function getOroUi_Twig_FormatterExtensionService()
    {
        return $this->services['oro_ui.twig.formatter_extension'] = new \Oro\Bundle\UIBundle\Twig\FormatterExtension();
    }

    /**
     * Gets the 'oro_ui.twig.html_tag' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\HtmlTagExtension A Oro\Bundle\UIBundle\Twig\HtmlTagExtension instance.
     */
    protected function getOroUi_Twig_HtmlTagService()
    {
        return $this->services['oro_ui.twig.html_tag'] = new \Oro\Bundle\UIBundle\Twig\HtmlTagExtension($this->get('oro_ui.html_tag_helper'));
    }

    /**
     * Gets the 'oro_ui.twig.js_template' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\JsTemplateExtension A Oro\Bundle\UIBundle\Twig\JsTemplateExtension instance.
     */
    protected function getOroUi_Twig_JsTemplateService()
    {
        return $this->services['oro_ui.twig.js_template'] = new \Oro\Bundle\UIBundle\Twig\JsTemplateExtension();
    }

    /**
     * Gets the 'oro_ui.twig.merge_recursive' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\MergeRecursiveExtension A Oro\Bundle\UIBundle\Twig\MergeRecursiveExtension instance.
     */
    protected function getOroUi_Twig_MergeRecursiveService()
    {
        return $this->services['oro_ui.twig.merge_recursive'] = new \Oro\Bundle\UIBundle\Twig\MergeRecursiveExtension();
    }

    /**
     * Gets the 'oro_ui.twig.mobile_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\MobileExtension A Oro\Bundle\UIBundle\Twig\MobileExtension instance.
     */
    protected function getOroUi_Twig_MobileExtensionService()
    {
        return $this->services['oro_ui.twig.mobile_extension'] = new \Oro\Bundle\UIBundle\Twig\MobileExtension($this);
    }

    /**
     * Gets the 'oro_ui.twig.placeholder_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\PlaceholderExtension A Oro\Bundle\UIBundle\Twig\PlaceholderExtension instance.
     */
    protected function getOroUi_Twig_PlaceholderExtensionService()
    {
        $this->services['oro_ui.twig.placeholder_extension'] = $instance = new \Oro\Bundle\UIBundle\Twig\PlaceholderExtension($this->get('twig'), $this->get('oro_ui.placeholder.provider'), $this->get('twig.extension.httpkernel'));

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_ui.twig.regex_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\RegexExtension A Oro\Bundle\UIBundle\Twig\RegexExtension instance.
     */
    protected function getOroUi_Twig_RegexExtensionService()
    {
        return $this->services['oro_ui.twig.regex_extension'] = new \Oro\Bundle\UIBundle\Twig\RegexExtension();
    }

    /**
     * Gets the 'oro_ui.twig.skype_button_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\SkypeButtonExtension A Oro\Bundle\UIBundle\Twig\SkypeButtonExtension instance.
     */
    protected function getOroUi_Twig_SkypeButtonExtensionService()
    {
        return $this->services['oro_ui.twig.skype_button_extension'] = new \Oro\Bundle\UIBundle\Twig\SkypeButtonExtension();
    }

    /**
     * Gets the 'oro_ui.twig.sort_by_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\SortByExtension A Oro\Bundle\UIBundle\Twig\SortByExtension instance.
     */
    protected function getOroUi_Twig_SortByExtensionService()
    {
        return $this->services['oro_ui.twig.sort_by_extension'] = new \Oro\Bundle\UIBundle\Twig\SortByExtension();
    }

    /**
     * Gets the 'oro_ui.twig.tab_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\TabExtension A Oro\Bundle\UIBundle\Twig\TabExtension instance.
     */
    protected function getOroUi_Twig_TabExtensionService()
    {
        return $this->services['oro_ui.twig.tab_extension'] = new \Oro\Bundle\UIBundle\Twig\TabExtension($this->get('oro_menu.twig.extension'), $this->get('router'), $this->get('oro_security.security_facade'), $this->get('translator'));
    }

    /**
     * Gets the 'oro_ui.twig.ui_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\UiExtension A Oro\Bundle\UIBundle\Twig\UiExtension instance.
     */
    protected function getOroUi_Twig_UiExtensionService()
    {
        return $this->services['oro_ui.twig.ui_extension'] = new \Oro\Bundle\UIBundle\Twig\UiExtension($this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_ui.twig.url_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\UrlExtension A Oro\Bundle\UIBundle\Twig\UrlExtension instance.
     */
    protected function getOroUi_Twig_UrlExtensionService()
    {
        $this->services['oro_ui.twig.url_extension'] = $instance = new \Oro\Bundle\UIBundle\Twig\UrlExtension();

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_ui.twig.widget_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Twig\WidgetExtension A Oro\Bundle\UIBundle\Twig\WidgetExtension instance.
     */
    protected function getOroUi_Twig_WidgetExtensionService()
    {
        $this->services['oro_ui.twig.widget_extension'] = $instance = new \Oro\Bundle\UIBundle\Twig\WidgetExtension();

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'oro_ui.view.content_provider.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\EventListener\ContentProviderListener A Oro\Bundle\UIBundle\EventListener\ContentProviderListener instance.
     */
    protected function getOroUi_View_ContentProvider_ListenerService()
    {
        return $this->services['oro_ui.view.content_provider.listener'] = new \Oro\Bundle\UIBundle\EventListener\ContentProviderListener($this->get('oro_ui.content_provider.manager'));
    }

    /**
     * Gets the 'oro_ui.view.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\EventListener\TemplateListener A Oro\Bundle\UIBundle\EventListener\TemplateListener instance.
     */
    protected function getOroUi_View_ListenerService()
    {
        return $this->services['oro_ui.view.listener'] = new \Oro\Bundle\UIBundle\EventListener\TemplateListener($this);
    }

    /**
     * Gets the 'oro_ui.widget_provider.update_actions' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Provider\GroupingChainWidgetProvider A Oro\Bundle\UIBundle\Provider\GroupingChainWidgetProvider instance.
     */
    protected function getOroUi_WidgetProvider_UpdateActionsService()
    {
        $this->services['oro_ui.widget_provider.update_actions'] = $instance = new \Oro\Bundle\UIBundle\Provider\GroupingChainWidgetProvider($this->get('oro_ui.label_provider.action_button_group'), $this->get('debug.event_dispatcher'), 2);

        $instance->addProvider($this->get('oro_note.widget_provider.actions'), 'activity');
        $instance->addProvider($this->get('oro_attachment.widget_provider.actions'), 'activity');
        $instance->addProvider($this->get('oro_activity.widget_provider.actions'), 'activity');
        $instance->addProvider($this->get('oro_calendar.widget_provider.actions.assign_calendar_event'), 'activity');
        $instance->addProvider($this->get('oro_user.password_change.widget_provider.actions'), 'activity');
        $instance->addProvider($this->get('oro_user.password_reset.widget_provider.actions'), 'activity');

        return $instance;
    }

    /**
     * Gets the 'oro_ui.widget_provider.view_actions' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Provider\GroupingChainWidgetProvider A Oro\Bundle\UIBundle\Provider\GroupingChainWidgetProvider instance.
     */
    protected function getOroUi_WidgetProvider_ViewActionsService()
    {
        $this->services['oro_ui.widget_provider.view_actions'] = $instance = new \Oro\Bundle\UIBundle\Provider\GroupingChainWidgetProvider($this->get('oro_ui.label_provider.action_button_group'), $this->get('debug.event_dispatcher'), 1);

        $instance->addProvider($this->get('oro_note.widget_provider.actions'), 'activity');
        $instance->addProvider($this->get('oro_attachment.widget_provider.actions'), 'activity');
        $instance->addProvider($this->get('oro_activity.widget_provider.actions'), 'activity');
        $instance->addProvider($this->get('oro_calendar.widget_provider.actions.assign_calendar_event'), 'activity');
        $instance->addProvider($this->get('oro_user.password_change.widget_provider.actions'), 'activity');
        $instance->addProvider($this->get('oro_user.password_reset.widget_provider.actions'), 'activity');

        return $instance;
    }

    /**
     * Gets the 'oro_user.activity_widget_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Provider\TabMenuWidgetProvider A Oro\Bundle\UIBundle\Provider\TabMenuWidgetProvider instance.
     */
    protected function getOroUser_ActivityWidgetProviderService()
    {
        return $this->services['oro_user.activity_widget_provider'] = new \Oro\Bundle\UIBundle\Provider\TabMenuWidgetProvider($this->get('oro_entity.entity_identifier_accessor'), $this->get('oro_ui.twig.tab_extension'), 'user_activity_tab_panel', 'Oro\\Bundle\\UserBundle\\Entity\\User');
    }

    /**
     * Gets the 'oro_user.autocomplete.role.authenticated_search_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Autocomplete\AuthenticatedRolesHandler A Oro\Bundle\UserBundle\Autocomplete\AuthenticatedRolesHandler instance.
     */
    protected function getOroUser_Autocomplete_Role_AuthenticatedSearchHandlerService()
    {
        $this->services['oro_user.autocomplete.role.authenticated_search_handler'] = $instance = new \Oro\Bundle\UserBundle\Autocomplete\AuthenticatedRolesHandler('Oro\\Bundle\\UserBundle\\Entity\\Role', array(0 => 'label'));

        $instance->initSearchIndexer($this->get('oro_search.index'), array('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization' => array('alias' => 'organization', 'search_template' => 'OroOrganizationBundle:Search:organizationResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit' => array('alias' => 'business_unit', 'search_template' => 'OroOrganizationBundle:Search:businessUnitResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser' => array('alias' => 'oro_email', 'label' => 'Emails', 'search_template' => 'OroEmailBundle:Email:searchResult.html.twig', 'route' => array('name' => 'oro_email_thread_view', 'parameters' => array('id' => 'email.id')), 'title_fields' => array(0 => 'email.subject'), 'fields' => array(0 => array('name' => 'email', 'relation_type' => 'many-to-one', 'relation_fields' => array(0 => array('name' => 'subject', 'target_type' => 'text', 'target_fields' => array(0 => 'subject'), 'relation_fields' => array())), 'target_fields' => array())), 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\User' => array('alias' => 'oro_user', 'title_fields' => array(0 => 'username'), 'route' => array('name' => 'oro_user_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroUserBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'username', 'target_type' => 'text', 'target_fields' => array(0 => 'username'), 'relation_fields' => array()), 1 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array()), 2 => array('name' => 'phone', 'target_type' => 'text', 'target_fields' => array(0 => 'phone'), 'relation_fields' => array()), 3 => array('name' => 'namePrefix', 'target_type' => 'text', 'target_fields' => array(0 => 'namePrefix'), 'relation_fields' => array()), 4 => array('name' => 'firstName', 'target_type' => 'text', 'target_fields' => array(0 => 'firstName'), 'relation_fields' => array()), 5 => array('name' => 'middleName', 'target_type' => 'text', 'target_fields' => array(0 => 'middleName'), 'relation_fields' => array()), 6 => array('name' => 'lastName', 'target_type' => 'text', 'target_fields' => array(0 => 'lastName'), 'relation_fields' => array()), 7 => array('name' => 'nameSuffix', 'target_type' => 'text', 'target_fields' => array(0 => 'nameSuffix'), 'relation_fields' => array()), 8 => array('name' => 'birthday', 'target_type' => 'datetime', 'target_fields' => array(0 => 'birthday'), 'relation_fields' => array()), 9 => array('name' => 'emails', 'relation_type' => 'one-to-many', 'relation_fields' => array(0 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array())), 'target_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\Role' => array('alias' => 'oro_access_role', 'title_fields' => array(0 => 'label'), 'search_template' => 'OroUserBundle:Role:Search\\result.html.twig', 'route' => array('name' => 'oro_user_role_index', 'parameters' => array()), 'fields' => array(0 => array('name' => 'label', 'target_type' => 'text', 'target_fields' => array(0 => 'label'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent' => array('alias' => 'oro_clendar_event', 'title_fields' => array(0 => 'title'), 'route' => array('name' => 'oro_calendar_view', 'parameters' => array('id' => 'calendar.id')), 'search_template' => 'OroCalendarBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'title', 'target_type' => 'text', 'target_fields' => array(0 => 'title'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array()), 2 => array('name' => 'start', 'target_type' => 'datetime', 'target_fields' => array(0 => 'start'), 'relation_fields' => array()), 3 => array('name' => 'end', 'target_type' => 'datetime', 'target_fields' => array(0 => 'end'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\ReportBundle\\Entity\\Report' => array('alias' => 'oro_report', 'title_fields' => array(0 => 'name'), 'route' => array('name' => 'oro_report_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroReportBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\TagBundle\\Entity\\Tag' => array('alias' => 'oro_tag', 'title_fields' => array(0 => 'name'), 'search_template' => 'OroTagBundle:Search:result.html.twig', 'route' => array('name' => 'oro_tag_search', 'parameters' => array('id' => 'id')), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal')));
        $instance->initDoctrinePropertiesByManagerRegistry($this->get('doctrine'));
        $instance->setAclHelper($this->get('oro_security.acl_helper'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.autocomplete.role.search_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\FormBundle\Autocomplete\SearchHandler A Oro\Bundle\FormBundle\Autocomplete\SearchHandler instance.
     */
    protected function getOroUser_Autocomplete_Role_SearchHandlerService()
    {
        $this->services['oro_user.autocomplete.role.search_handler'] = $instance = new \Oro\Bundle\FormBundle\Autocomplete\SearchHandler('Oro\\Bundle\\UserBundle\\Entity\\Role', array(0 => 'label'));

        $instance->initSearchIndexer($this->get('oro_search.index'), array('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization' => array('alias' => 'organization', 'search_template' => 'OroOrganizationBundle:Search:organizationResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit' => array('alias' => 'business_unit', 'search_template' => 'OroOrganizationBundle:Search:businessUnitResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser' => array('alias' => 'oro_email', 'label' => 'Emails', 'search_template' => 'OroEmailBundle:Email:searchResult.html.twig', 'route' => array('name' => 'oro_email_thread_view', 'parameters' => array('id' => 'email.id')), 'title_fields' => array(0 => 'email.subject'), 'fields' => array(0 => array('name' => 'email', 'relation_type' => 'many-to-one', 'relation_fields' => array(0 => array('name' => 'subject', 'target_type' => 'text', 'target_fields' => array(0 => 'subject'), 'relation_fields' => array())), 'target_fields' => array())), 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\User' => array('alias' => 'oro_user', 'title_fields' => array(0 => 'username'), 'route' => array('name' => 'oro_user_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroUserBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'username', 'target_type' => 'text', 'target_fields' => array(0 => 'username'), 'relation_fields' => array()), 1 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array()), 2 => array('name' => 'phone', 'target_type' => 'text', 'target_fields' => array(0 => 'phone'), 'relation_fields' => array()), 3 => array('name' => 'namePrefix', 'target_type' => 'text', 'target_fields' => array(0 => 'namePrefix'), 'relation_fields' => array()), 4 => array('name' => 'firstName', 'target_type' => 'text', 'target_fields' => array(0 => 'firstName'), 'relation_fields' => array()), 5 => array('name' => 'middleName', 'target_type' => 'text', 'target_fields' => array(0 => 'middleName'), 'relation_fields' => array()), 6 => array('name' => 'lastName', 'target_type' => 'text', 'target_fields' => array(0 => 'lastName'), 'relation_fields' => array()), 7 => array('name' => 'nameSuffix', 'target_type' => 'text', 'target_fields' => array(0 => 'nameSuffix'), 'relation_fields' => array()), 8 => array('name' => 'birthday', 'target_type' => 'datetime', 'target_fields' => array(0 => 'birthday'), 'relation_fields' => array()), 9 => array('name' => 'emails', 'relation_type' => 'one-to-many', 'relation_fields' => array(0 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array())), 'target_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\Role' => array('alias' => 'oro_access_role', 'title_fields' => array(0 => 'label'), 'search_template' => 'OroUserBundle:Role:Search\\result.html.twig', 'route' => array('name' => 'oro_user_role_index', 'parameters' => array()), 'fields' => array(0 => array('name' => 'label', 'target_type' => 'text', 'target_fields' => array(0 => 'label'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent' => array('alias' => 'oro_clendar_event', 'title_fields' => array(0 => 'title'), 'route' => array('name' => 'oro_calendar_view', 'parameters' => array('id' => 'calendar.id')), 'search_template' => 'OroCalendarBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'title', 'target_type' => 'text', 'target_fields' => array(0 => 'title'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array()), 2 => array('name' => 'start', 'target_type' => 'datetime', 'target_fields' => array(0 => 'start'), 'relation_fields' => array()), 3 => array('name' => 'end', 'target_type' => 'datetime', 'target_fields' => array(0 => 'end'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\ReportBundle\\Entity\\Report' => array('alias' => 'oro_report', 'title_fields' => array(0 => 'name'), 'route' => array('name' => 'oro_report_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroReportBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\TagBundle\\Entity\\Tag' => array('alias' => 'oro_tag', 'title_fields' => array(0 => 'name'), 'search_template' => 'OroTagBundle:Search:result.html.twig', 'route' => array('name' => 'oro_tag_search', 'parameters' => array('id' => 'id')), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal')));
        $instance->initDoctrinePropertiesByManagerRegistry($this->get('doctrine'));
        $instance->setAclHelper($this->get('oro_security.acl_helper'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.autocomplete.user.organization_search_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Autocomplete\OrganizationUsersHandler A Oro\Bundle\UserBundle\Autocomplete\OrganizationUsersHandler instance.
     */
    protected function getOroUser_Autocomplete_User_OrganizationSearchHandlerService()
    {
        $this->services['oro_user.autocomplete.user.organization_search_handler'] = $instance = new \Oro\Bundle\UserBundle\Autocomplete\OrganizationUsersHandler($this->get('oro_attachment.manager'), 'Oro\\Bundle\\UserBundle\\Entity\\User', array(0 => 'username', 1 => 'namePrefix', 2 => 'firstName', 3 => 'middleName', 4 => 'lastName', 5 => 'nameSuffix', 6 => 'email'));

        $instance->initSearchIndexer($this->get('oro_search.index'), array('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization' => array('alias' => 'organization', 'search_template' => 'OroOrganizationBundle:Search:organizationResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit' => array('alias' => 'business_unit', 'search_template' => 'OroOrganizationBundle:Search:businessUnitResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser' => array('alias' => 'oro_email', 'label' => 'Emails', 'search_template' => 'OroEmailBundle:Email:searchResult.html.twig', 'route' => array('name' => 'oro_email_thread_view', 'parameters' => array('id' => 'email.id')), 'title_fields' => array(0 => 'email.subject'), 'fields' => array(0 => array('name' => 'email', 'relation_type' => 'many-to-one', 'relation_fields' => array(0 => array('name' => 'subject', 'target_type' => 'text', 'target_fields' => array(0 => 'subject'), 'relation_fields' => array())), 'target_fields' => array())), 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\User' => array('alias' => 'oro_user', 'title_fields' => array(0 => 'username'), 'route' => array('name' => 'oro_user_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroUserBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'username', 'target_type' => 'text', 'target_fields' => array(0 => 'username'), 'relation_fields' => array()), 1 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array()), 2 => array('name' => 'phone', 'target_type' => 'text', 'target_fields' => array(0 => 'phone'), 'relation_fields' => array()), 3 => array('name' => 'namePrefix', 'target_type' => 'text', 'target_fields' => array(0 => 'namePrefix'), 'relation_fields' => array()), 4 => array('name' => 'firstName', 'target_type' => 'text', 'target_fields' => array(0 => 'firstName'), 'relation_fields' => array()), 5 => array('name' => 'middleName', 'target_type' => 'text', 'target_fields' => array(0 => 'middleName'), 'relation_fields' => array()), 6 => array('name' => 'lastName', 'target_type' => 'text', 'target_fields' => array(0 => 'lastName'), 'relation_fields' => array()), 7 => array('name' => 'nameSuffix', 'target_type' => 'text', 'target_fields' => array(0 => 'nameSuffix'), 'relation_fields' => array()), 8 => array('name' => 'birthday', 'target_type' => 'datetime', 'target_fields' => array(0 => 'birthday'), 'relation_fields' => array()), 9 => array('name' => 'emails', 'relation_type' => 'one-to-many', 'relation_fields' => array(0 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array())), 'target_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\Role' => array('alias' => 'oro_access_role', 'title_fields' => array(0 => 'label'), 'search_template' => 'OroUserBundle:Role:Search\\result.html.twig', 'route' => array('name' => 'oro_user_role_index', 'parameters' => array()), 'fields' => array(0 => array('name' => 'label', 'target_type' => 'text', 'target_fields' => array(0 => 'label'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent' => array('alias' => 'oro_clendar_event', 'title_fields' => array(0 => 'title'), 'route' => array('name' => 'oro_calendar_view', 'parameters' => array('id' => 'calendar.id')), 'search_template' => 'OroCalendarBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'title', 'target_type' => 'text', 'target_fields' => array(0 => 'title'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array()), 2 => array('name' => 'start', 'target_type' => 'datetime', 'target_fields' => array(0 => 'start'), 'relation_fields' => array()), 3 => array('name' => 'end', 'target_type' => 'datetime', 'target_fields' => array(0 => 'end'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\ReportBundle\\Entity\\Report' => array('alias' => 'oro_report', 'title_fields' => array(0 => 'name'), 'route' => array('name' => 'oro_report_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroReportBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\TagBundle\\Entity\\Tag' => array('alias' => 'oro_tag', 'title_fields' => array(0 => 'name'), 'search_template' => 'OroTagBundle:Search:result.html.twig', 'route' => array('name' => 'oro_tag_search', 'parameters' => array('id' => 'id')), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal')));
        $instance->initDoctrinePropertiesByManagerRegistry($this->get('doctrine'));
        $instance->setAclHelper($this->get('oro_security.acl_helper'));
        $instance->setEntityNameResolver($this->get('oro_entity.entity_name_resolver'));
        $instance->setSecurityFacade($this->get('oro_security.security_facade'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.autocomplete.user.search_acl_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\UserBundle\Autocomplete\UserAclHandler A Oro\Bundle\UserBundle\Autocomplete\UserAclHandler instance.
     */
    public function getOroUser_Autocomplete_User_SearchAclHandlerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_user.autocomplete.user.search_acl_handler'] = new OroBundleUserBundleAutocompleteUserAclHandler_000000002e47d23200000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroUser_Autocomplete_User_SearchAclHandlerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Oro\Bundle\UserBundle\Autocomplete\UserAclHandler($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_attachment.manager'), 'Oro\\Bundle\\UserBundle\\Entity\\User', $this->get('oro_entity_config.link.security_context'), $this->get('oro_security.ownership_tree_provider'), $this->get('security.acl.voter.basic_permissions', ContainerInterface::NULL_ON_INVALID_REFERENCE));

        $instance->setEntityNameResolver($this->get('oro_entity.entity_name_resolver'));
        $instance->setProperties(array(0 => 'id', 1 => 'username', 2 => 'namePrefix', 3 => 'firstName', 4 => 'middleName', 5 => 'lastName', 6 => 'nameSuffix', 7 => 'email'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.autocomplete.user.search_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Autocomplete\UserSearchHandler A Oro\Bundle\UserBundle\Autocomplete\UserSearchHandler instance.
     */
    protected function getOroUser_Autocomplete_User_SearchHandlerService()
    {
        $this->services['oro_user.autocomplete.user.search_handler'] = $instance = new \Oro\Bundle\UserBundle\Autocomplete\UserSearchHandler($this->get('oro_attachment.manager'), 'Oro\\Bundle\\UserBundle\\Entity\\User', array(0 => 'username', 1 => 'namePrefix', 2 => 'firstName', 3 => 'middleName', 4 => 'lastName', 5 => 'nameSuffix', 6 => 'email'));

        $instance->initSearchIndexer($this->get('oro_search.index'), array('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization' => array('alias' => 'organization', 'search_template' => 'OroOrganizationBundle:Search:organizationResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit' => array('alias' => 'business_unit', 'search_template' => 'OroOrganizationBundle:Search:businessUnitResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser' => array('alias' => 'oro_email', 'label' => 'Emails', 'search_template' => 'OroEmailBundle:Email:searchResult.html.twig', 'route' => array('name' => 'oro_email_thread_view', 'parameters' => array('id' => 'email.id')), 'title_fields' => array(0 => 'email.subject'), 'fields' => array(0 => array('name' => 'email', 'relation_type' => 'many-to-one', 'relation_fields' => array(0 => array('name' => 'subject', 'target_type' => 'text', 'target_fields' => array(0 => 'subject'), 'relation_fields' => array())), 'target_fields' => array())), 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\User' => array('alias' => 'oro_user', 'title_fields' => array(0 => 'username'), 'route' => array('name' => 'oro_user_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroUserBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'username', 'target_type' => 'text', 'target_fields' => array(0 => 'username'), 'relation_fields' => array()), 1 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array()), 2 => array('name' => 'phone', 'target_type' => 'text', 'target_fields' => array(0 => 'phone'), 'relation_fields' => array()), 3 => array('name' => 'namePrefix', 'target_type' => 'text', 'target_fields' => array(0 => 'namePrefix'), 'relation_fields' => array()), 4 => array('name' => 'firstName', 'target_type' => 'text', 'target_fields' => array(0 => 'firstName'), 'relation_fields' => array()), 5 => array('name' => 'middleName', 'target_type' => 'text', 'target_fields' => array(0 => 'middleName'), 'relation_fields' => array()), 6 => array('name' => 'lastName', 'target_type' => 'text', 'target_fields' => array(0 => 'lastName'), 'relation_fields' => array()), 7 => array('name' => 'nameSuffix', 'target_type' => 'text', 'target_fields' => array(0 => 'nameSuffix'), 'relation_fields' => array()), 8 => array('name' => 'birthday', 'target_type' => 'datetime', 'target_fields' => array(0 => 'birthday'), 'relation_fields' => array()), 9 => array('name' => 'emails', 'relation_type' => 'one-to-many', 'relation_fields' => array(0 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array())), 'target_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\Role' => array('alias' => 'oro_access_role', 'title_fields' => array(0 => 'label'), 'search_template' => 'OroUserBundle:Role:Search\\result.html.twig', 'route' => array('name' => 'oro_user_role_index', 'parameters' => array()), 'fields' => array(0 => array('name' => 'label', 'target_type' => 'text', 'target_fields' => array(0 => 'label'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent' => array('alias' => 'oro_clendar_event', 'title_fields' => array(0 => 'title'), 'route' => array('name' => 'oro_calendar_view', 'parameters' => array('id' => 'calendar.id')), 'search_template' => 'OroCalendarBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'title', 'target_type' => 'text', 'target_fields' => array(0 => 'title'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array()), 2 => array('name' => 'start', 'target_type' => 'datetime', 'target_fields' => array(0 => 'start'), 'relation_fields' => array()), 3 => array('name' => 'end', 'target_type' => 'datetime', 'target_fields' => array(0 => 'end'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\ReportBundle\\Entity\\Report' => array('alias' => 'oro_report', 'title_fields' => array(0 => 'name'), 'route' => array('name' => 'oro_report_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroReportBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\TagBundle\\Entity\\Tag' => array('alias' => 'oro_tag', 'title_fields' => array(0 => 'name'), 'search_template' => 'OroTagBundle:Search:result.html.twig', 'route' => array('name' => 'oro_tag_search', 'parameters' => array('id' => 'id')), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal')));
        $instance->initDoctrinePropertiesByManagerRegistry($this->get('doctrine'));
        $instance->setAclHelper($this->get('oro_security.acl_helper'));
        $instance->setEntityNameResolver($this->get('oro_entity.entity_name_resolver'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.autocomplete.user.search_without_current_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Autocomplete\UserWithoutCurrentHandler A Oro\Bundle\UserBundle\Autocomplete\UserWithoutCurrentHandler instance.
     */
    protected function getOroUser_Autocomplete_User_SearchWithoutCurrentHandlerService()
    {
        $this->services['oro_user.autocomplete.user.search_without_current_handler'] = $instance = new \Oro\Bundle\UserBundle\Autocomplete\UserWithoutCurrentHandler($this->get('oro_security.security_facade'), $this->get('oro_attachment.manager'), 'Oro\\Bundle\\UserBundle\\Entity\\User', array(0 => 'username', 1 => 'namePrefix', 2 => 'firstName', 3 => 'middleName', 4 => 'lastName', 5 => 'nameSuffix', 6 => 'email'));

        $instance->initSearchIndexer($this->get('oro_search.index'), array('Oro\\Bundle\\OrganizationBundle\\Entity\\Organization' => array('alias' => 'organization', 'search_template' => 'OroOrganizationBundle:Search:organizationResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit' => array('alias' => 'business_unit', 'search_template' => 'OroOrganizationBundle:Search:businessUnitResult.html.twig', 'title_fields' => array(0 => 'name'), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser' => array('alias' => 'oro_email', 'label' => 'Emails', 'search_template' => 'OroEmailBundle:Email:searchResult.html.twig', 'route' => array('name' => 'oro_email_thread_view', 'parameters' => array('id' => 'email.id')), 'title_fields' => array(0 => 'email.subject'), 'fields' => array(0 => array('name' => 'email', 'relation_type' => 'many-to-one', 'relation_fields' => array(0 => array('name' => 'subject', 'target_type' => 'text', 'target_fields' => array(0 => 'subject'), 'relation_fields' => array())), 'target_fields' => array())), 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\User' => array('alias' => 'oro_user', 'title_fields' => array(0 => 'username'), 'route' => array('name' => 'oro_user_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroUserBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'username', 'target_type' => 'text', 'target_fields' => array(0 => 'username'), 'relation_fields' => array()), 1 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array()), 2 => array('name' => 'phone', 'target_type' => 'text', 'target_fields' => array(0 => 'phone'), 'relation_fields' => array()), 3 => array('name' => 'namePrefix', 'target_type' => 'text', 'target_fields' => array(0 => 'namePrefix'), 'relation_fields' => array()), 4 => array('name' => 'firstName', 'target_type' => 'text', 'target_fields' => array(0 => 'firstName'), 'relation_fields' => array()), 5 => array('name' => 'middleName', 'target_type' => 'text', 'target_fields' => array(0 => 'middleName'), 'relation_fields' => array()), 6 => array('name' => 'lastName', 'target_type' => 'text', 'target_fields' => array(0 => 'lastName'), 'relation_fields' => array()), 7 => array('name' => 'nameSuffix', 'target_type' => 'text', 'target_fields' => array(0 => 'nameSuffix'), 'relation_fields' => array()), 8 => array('name' => 'birthday', 'target_type' => 'datetime', 'target_fields' => array(0 => 'birthday'), 'relation_fields' => array()), 9 => array('name' => 'emails', 'relation_type' => 'one-to-many', 'relation_fields' => array(0 => array('name' => 'email', 'target_type' => 'text', 'target_fields' => array(0 => 'email'), 'relation_fields' => array())), 'target_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\UserBundle\\Entity\\Role' => array('alias' => 'oro_access_role', 'title_fields' => array(0 => 'label'), 'search_template' => 'OroUserBundle:Role:Search\\result.html.twig', 'route' => array('name' => 'oro_user_role_index', 'parameters' => array()), 'fields' => array(0 => array('name' => 'label', 'target_type' => 'text', 'target_fields' => array(0 => 'label'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent' => array('alias' => 'oro_clendar_event', 'title_fields' => array(0 => 'title'), 'route' => array('name' => 'oro_calendar_view', 'parameters' => array('id' => 'calendar.id')), 'search_template' => 'OroCalendarBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'title', 'target_type' => 'text', 'target_fields' => array(0 => 'title'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array()), 2 => array('name' => 'start', 'target_type' => 'datetime', 'target_fields' => array(0 => 'start'), 'relation_fields' => array()), 3 => array('name' => 'end', 'target_type' => 'datetime', 'target_fields' => array(0 => 'end'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\ReportBundle\\Entity\\Report' => array('alias' => 'oro_report', 'title_fields' => array(0 => 'name'), 'route' => array('name' => 'oro_report_view', 'parameters' => array('id' => 'id')), 'search_template' => 'OroReportBundle:Search:result.html.twig', 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array()), 1 => array('name' => 'description', 'target_type' => 'text', 'target_fields' => array(0 => 'description'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal'), 'Oro\\Bundle\\TagBundle\\Entity\\Tag' => array('alias' => 'oro_tag', 'title_fields' => array(0 => 'name'), 'search_template' => 'OroTagBundle:Search:result.html.twig', 'route' => array('name' => 'oro_tag_search', 'parameters' => array('id' => 'id')), 'fields' => array(0 => array('name' => 'name', 'target_type' => 'text', 'target_fields' => array(0 => 'name'), 'relation_fields' => array())), 'label' => NULL, 'mode' => 'normal')));
        $instance->initDoctrinePropertiesByManagerRegistry($this->get('doctrine'));
        $instance->setAclHelper($this->get('oro_security.acl_helper'));
        $instance->setEntityNameResolver($this->get('oro_entity.entity_name_resolver'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroUser_CacheService()
    {
        $this->services['oro_user.cache'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_user.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_user.change_password.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\EventListener\ChangePasswordSubscriber A Oro\Bundle\UserBundle\Form\EventListener\ChangePasswordSubscriber instance.
     */
    protected function getOroUser_ChangePassword_SubscriberService()
    {
        return $this->services['oro_user.change_password.subscriber'] = new \Oro\Bundle\UserBundle\Form\EventListener\ChangePasswordSubscriber($this->get('form.factory'), $this->get('security.context'));
    }

    /**
     * Gets the 'oro_user.email.owner.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Entity\Provider\EmailOwnerProvider A Oro\Bundle\UserBundle\Entity\Provider\EmailOwnerProvider instance.
     */
    protected function getOroUser_Email_Owner_ProviderService()
    {
        return $this->services['oro_user.email.owner.provider'] = new \Oro\Bundle\UserBundle\Entity\Provider\EmailOwnerProvider();
    }

    /**
     * Gets the 'oro_user.email_recipients_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Provider\EmailRecipientsProvider A Oro\Bundle\UserBundle\Provider\EmailRecipientsProvider instance.
     */
    protected function getOroUser_EmailRecipientsProviderService()
    {
        return $this->services['oro_user.email_recipients_provider'] = new \Oro\Bundle\UserBundle\Provider\EmailRecipientsProvider($this->get('doctrine'), $this->get('oro_email.provider.email_recipients.helper'));
    }

    /**
     * Gets the 'oro_user.event_listener.owner_user_grid_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\EventListener\OwnerUserGridListener A Oro\Bundle\UserBundle\EventListener\OwnerUserGridListener instance.
     */
    protected function getOroUser_EventListener_OwnerUserGridListenerService()
    {
        return $this->services['oro_user.event_listener.owner_user_grid_listener'] = new \Oro\Bundle\UserBundle\EventListener\OwnerUserGridListener($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_entity_config.link.security_context'), $this->get('oro_security.ownership_tree_provider'), $this->get('security.acl.voter.basic_permissions', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'oro_user.form.group' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroUser_Form_GroupService()
    {
        return $this->services['oro_user.form.group'] = $this->get('form.factory')->createNamed('oro_user_group_form', 'oro_user_group');
    }

    /**
     * Gets the 'oro_user.form.group.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroUser_Form_Group_ApiService()
    {
        return $this->services['oro_user.form.group.api'] = $this->get('form.factory')->createNamed('group', 'group', NULL);
    }

    /**
     * Gets the 'oro_user.form.handler.acl_role' service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Handler\AclRoleHandler A Oro\Bundle\UserBundle\Form\Handler\AclRoleHandler instance.
     */
    protected function getOroUser_Form_Handler_AclRoleService()
    {
        $instance = new \Oro\Bundle\UserBundle\Form\Handler\AclRoleHandler($this->get('form.factory'), array('entity' => array('label' => 'oro.user.privileges.entity.label', 'view_type' => 'grid', 'types' => array(0 => 'entity'), 'field_type' => 'oro_acl_access_level_selector', 'fix_values' => false, 'default_value' => 5, 'show_default' => true), 'action' => array('label' => 'oro.user.privileges.action.label', 'view_type' => 'list', 'types' => array(0 => 'action'), 'field_type' => 'oro_acl_access_level_selector', 'fix_values' => false, 'default_value' => 1, 'show_default' => false)));

        $instance->setAclManager($this->get('oro_security.acl.manager'));
        $instance->setAclPrivilegeRepository($this->get('oro_security.acl.privilege_repository'));
        $instance->setManagerRegistry($this->get('doctrine'));
        $instance->setRequest($this->get('request'));
        $instance->addExtensionFilter('action', '');

        return $instance;
    }

    /**
     * Gets the 'oro_user.form.handler.group' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Handler\GroupHandler A Oro\Bundle\UserBundle\Form\Handler\GroupHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_user.form.handler.group' service is requested while the 'request' scope is not active
     */
    protected function getOroUser_Form_Handler_GroupService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.handler.group', 'request');
        }

        return $this->services['oro_user.form.handler.group'] = $this->scopedServices['request']['oro_user.form.handler.group'] = new \Oro\Bundle\UserBundle\Form\Handler\GroupHandler($this->get('oro_user.form.group'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_user.form.handler.group.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Handler\GroupHandler A Oro\Bundle\UserBundle\Form\Handler\GroupHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_user.form.handler.group.api' service is requested while the 'request' scope is not active
     */
    protected function getOroUser_Form_Handler_Group_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.handler.group.api', 'request');
        }

        return $this->services['oro_user.form.handler.group.api'] = $this->scopedServices['request']['oro_user.form.handler.group.api'] = new \Oro\Bundle\UserBundle\Form\Handler\GroupHandler($this->get('oro_user.form.group.api'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_user.form.handler.reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Handler\ResetHandler A Oro\Bundle\UserBundle\Form\Handler\ResetHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_user.form.handler.reset' service is requested while the 'request' scope is not active
     */
    protected function getOroUser_Form_Handler_ResetService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.handler.reset', 'request');
        }

        return $this->services['oro_user.form.handler.reset'] = $this->scopedServices['request']['oro_user.form.handler.reset'] = new \Oro\Bundle\UserBundle\Form\Handler\ResetHandler($this->get('oro_user.form.reset'), $this->get('request'), $this->get('oro_user.manager'));
    }

    /**
     * Gets the 'oro_user.form.handler.role.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Handler\RoleHandler A Oro\Bundle\UserBundle\Form\Handler\RoleHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_user.form.handler.role.api' service is requested while the 'request' scope is not active
     */
    protected function getOroUser_Form_Handler_Role_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.handler.role.api', 'request');
        }

        return $this->services['oro_user.form.handler.role.api'] = $this->scopedServices['request']['oro_user.form.handler.role.api'] = new \Oro\Bundle\UserBundle\Form\Handler\RoleHandler($this->get('oro_user.form.role.api'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_user.form.handler.set_password' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Handler\SetPasswordHandler A Oro\Bundle\UserBundle\Form\Handler\SetPasswordHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_user.form.handler.set_password' service is requested while the 'request' scope is not active
     */
    protected function getOroUser_Form_Handler_SetPasswordService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.handler.set_password', 'request');
        }

        return $this->services['oro_user.form.handler.set_password'] = $this->scopedServices['request']['oro_user.form.handler.set_password'] = new \Oro\Bundle\UserBundle\Form\Handler\SetPasswordHandler($this->get('logger'), $this->get('request'), $this->get('translator'), $this->get('oro_user.form.type.set_password.form'), $this->get('oro_user.mailer.processor'), $this->get('oro_user.manager'));
    }

    /**
     * Gets the 'oro_user.form.handler.status' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Handler\StatusHandler A Oro\Bundle\UserBundle\Form\Handler\StatusHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_user.form.handler.status' service is requested while the 'request' scope is not active
     */
    protected function getOroUser_Form_Handler_StatusService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.handler.status', 'request');
        }

        return $this->services['oro_user.form.handler.status'] = $this->scopedServices['request']['oro_user.form.handler.status'] = new \Oro\Bundle\UserBundle\Form\Handler\StatusHandler($this->get('oro_user.form.status'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_user.manager'));
    }

    /**
     * Gets the 'oro_user.form.handler.user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Handler\UserHandler A Oro\Bundle\UserBundle\Form\Handler\UserHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_user.form.handler.user' service is requested while the 'request' scope is not active
     */
    protected function getOroUser_Form_Handler_UserService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.handler.user', 'request');
        }

        $this->services['oro_user.form.handler.user'] = $this->scopedServices['request']['oro_user.form.handler.user'] = $instance = new \Oro\Bundle\UserBundle\Form\Handler\UserHandler($this->get('oro_user.form.user'), $this->get('request'), $this->get('oro_user.manager'), $this->get('oro_config.user_config_manager'), $this->get('oro_config.global'), $this->get('templating'), $this->get('oro_email.direct_mailer'), $this->get('session.flash_bag'), $this->get('translator'), $this->get('logger'), $this->get('oro_security.security_facade.link'));

        $instance->setBusinessUnitManager($this->get('oro_organization.business_unit_manager'));
        $instance->setTagManager($this->get('oro_tag.tag.manager'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.form.handler.user.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Handler\UserHandler A Oro\Bundle\UserBundle\Form\Handler\UserHandler instance.
     * 
     * @throws InactiveScopeException when the 'oro_user.form.handler.user.api' service is requested while the 'request' scope is not active
     */
    protected function getOroUser_Form_Handler_User_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.handler.user.api', 'request');
        }

        $this->services['oro_user.form.handler.user.api'] = $this->scopedServices['request']['oro_user.form.handler.user.api'] = $instance = new \Oro\Bundle\UserBundle\Form\Handler\UserHandler($this->get('oro_user.form.user.api'), $this->get('request'), $this->get('oro_user.manager'));

        $instance->setTagManager($this->get('oro_tag.tag.manager'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.form.reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroUser_Form_ResetService()
    {
        return $this->services['oro_user.form.reset'] = $this->get('form.factory')->createNamed('oro_user_reset_form', 'oro_user_reset', NULL, array('validation_groups' => array(0 => 'ResetPassword', 1 => 'Default')));
    }

    /**
     * Gets the 'oro_user.form.role' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroUser_Form_RoleService()
    {
        return $this->services['oro_user.form.role'] = $this->get('form.factory')->createNamed('oro_user_role_form', 'oro_user_role');
    }

    /**
     * Gets the 'oro_user.form.role.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroUser_Form_Role_ApiService()
    {
        return $this->services['oro_user.form.role.api'] = $this->get('form.factory')->createNamed('role', 'role', NULL);
    }

    /**
     * Gets the 'oro_user.form.status' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroUser_Form_StatusService()
    {
        return $this->services['oro_user.form.status'] = $this->get('form.factory')->createNamed('oro_user_status_form', 'oro_user_status', NULL);
    }

    /**
     * Gets the 'oro_user.form.type.change_password' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\ChangePasswordType A Oro\Bundle\UserBundle\Form\Type\ChangePasswordType instance.
     */
    protected function getOroUser_Form_Type_ChangePasswordService()
    {
        return $this->services['oro_user.form.type.change_password'] = new \Oro\Bundle\UserBundle\Form\Type\ChangePasswordType($this->get('oro_user.change_password.subscriber'));
    }

    /**
     * Gets the 'oro_user.form.type.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\EmailType A Oro\Bundle\UserBundle\Form\Type\EmailType instance.
     */
    protected function getOroUser_Form_Type_EmailService()
    {
        return $this->services['oro_user.form.type.email'] = new \Oro\Bundle\UserBundle\Form\Type\EmailType();
    }

    /**
     * Gets the 'oro_user.form.type.gender' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\GenderType A Oro\Bundle\UserBundle\Form\Type\GenderType instance.
     */
    protected function getOroUser_Form_Type_GenderService()
    {
        return $this->services['oro_user.form.type.gender'] = new \Oro\Bundle\UserBundle\Form\Type\GenderType($this->get('oro_user.gender_provider'));
    }

    /**
     * Gets the 'oro_user.form.type.group' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\GroupType A Oro\Bundle\UserBundle\Form\Type\GroupType instance.
     */
    protected function getOroUser_Form_Type_GroupService()
    {
        return $this->services['oro_user.form.type.group'] = new \Oro\Bundle\UserBundle\Form\Type\GroupType();
    }

    /**
     * Gets the 'oro_user.form.type.group.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\GroupApiType A Oro\Bundle\UserBundle\Form\Type\GroupApiType instance.
     */
    protected function getOroUser_Form_Type_Group_ApiService()
    {
        return $this->services['oro_user.form.type.group.api'] = new \Oro\Bundle\UserBundle\Form\Type\GroupApiType();
    }

    /**
     * Gets the 'oro_user.form.type.organization_user_acl_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\OrganizationUserAclSelectType A Oro\Bundle\UserBundle\Form\Type\OrganizationUserAclSelectType instance.
     */
    protected function getOroUser_Form_Type_OrganizationUserAclSelectService()
    {
        return $this->services['oro_user.form.type.organization_user_acl_select'] = new \Oro\Bundle\UserBundle\Form\Type\OrganizationUserAclSelectType();
    }

    /**
     * Gets the 'oro_user.form.type.organization_user_multiselect' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\OrganizationUserAclMultiSelectType A Oro\Bundle\UserBundle\Form\Type\OrganizationUserAclMultiSelectType instance.
     */
    protected function getOroUser_Form_Type_OrganizationUserMultiselectService()
    {
        return $this->services['oro_user.form.type.organization_user_multiselect'] = new \Oro\Bundle\UserBundle\Form\Type\OrganizationUserAclMultiSelectType($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_user.form.type.reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\ResetType A Oro\Bundle\UserBundle\Form\Type\ResetType instance.
     */
    protected function getOroUser_Form_Type_ResetService()
    {
        return $this->services['oro_user.form.type.reset'] = new \Oro\Bundle\UserBundle\Form\Type\ResetType('Oro\\Bundle\\UserBundle\\Entity\\User');
    }

    /**
     * Gets the 'oro_user.form.type.role.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\RoleApiType A Oro\Bundle\UserBundle\Form\Type\RoleApiType instance.
     */
    protected function getOroUser_Form_Type_Role_ApiService()
    {
        return $this->services['oro_user.form.type.role.api'] = new \Oro\Bundle\UserBundle\Form\Type\RoleApiType();
    }

    /**
     * Gets the 'oro_user.form.type.role_multiselect' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\RoleMultiSelectType A Oro\Bundle\UserBundle\Form\Type\RoleMultiSelectType instance.
     */
    protected function getOroUser_Form_Type_RoleMultiselectService()
    {
        return $this->services['oro_user.form.type.role_multiselect'] = new \Oro\Bundle\UserBundle\Form\Type\RoleMultiSelectType($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_user.form.type.set_password.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroUser_Form_Type_SetPassword_FormService()
    {
        return $this->services['oro_user.form.type.set_password.form'] = $this->get('form.factory')->createNamed('oro_set_password_form', 'oro_set_password');
    }

    /**
     * Gets the 'oro_user.form.type.set_password.form.type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\SetPasswordType A Oro\Bundle\UserBundle\Form\Type\SetPasswordType instance.
     */
    protected function getOroUser_Form_Type_SetPassword_Form_TypeService()
    {
        return $this->services['oro_user.form.type.set_password.form.type'] = new \Oro\Bundle\UserBundle\Form\Type\SetPasswordType();
    }

    /**
     * Gets the 'oro_user.form.type.status' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\StatusType A Oro\Bundle\UserBundle\Form\Type\StatusType instance.
     */
    protected function getOroUser_Form_Type_StatusService()
    {
        return $this->services['oro_user.form.type.status'] = new \Oro\Bundle\UserBundle\Form\Type\StatusType();
    }

    /**
     * Gets the 'oro_user.form.type.user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\UserType A Oro\Bundle\UserBundle\Form\Type\UserType instance.
     * 
     * @throws InactiveScopeException when the 'oro_user.form.type.user' service is requested while the 'request' scope is not active
     */
    protected function getOroUser_Form_Type_UserService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.type.user', 'request');
        }

        return $this->services['oro_user.form.type.user'] = $this->scopedServices['request']['oro_user.form.type.user'] = new \Oro\Bundle\UserBundle\Form\Type\UserType($this->get('security.context'), $this->get('oro_security.security_facade'), $this->get('request'), $this->get('oro_config.user_config_manager'));
    }

    /**
     * Gets the 'oro_user.form.type.user.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\UserApiType A Oro\Bundle\UserBundle\Form\Type\UserApiType instance.
     * 
     * @throws InactiveScopeException when the 'oro_user.form.type.user.api' service is requested while the 'request' scope is not active
     */
    protected function getOroUser_Form_Type_User_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.type.user.api', 'request');
        }

        return $this->services['oro_user.form.type.user.api'] = $this->scopedServices['request']['oro_user.form.type.user.api'] = new \Oro\Bundle\UserBundle\Form\Type\UserApiType($this->get('security.context'), $this->get('oro_security.security_facade'), $this->get('request'), $this->get('oro_config.user_config_manager'));
    }

    /**
     * Gets the 'oro_user.form.type.user_acl_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\UserAclSelectType A Oro\Bundle\UserBundle\Form\Type\UserAclSelectType instance.
     */
    protected function getOroUser_Form_Type_UserAclSelectService()
    {
        return $this->services['oro_user.form.type.user_acl_select'] = new \Oro\Bundle\UserBundle\Form\Type\UserAclSelectType();
    }

    /**
     * Gets the 'oro_user.form.type.user_multiselect' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\UserMultiSelectType A Oro\Bundle\UserBundle\Form\Type\UserMultiSelectType instance.
     */
    protected function getOroUser_Form_Type_UserMultiselectService()
    {
        return $this->services['oro_user.form.type.user_multiselect'] = new \Oro\Bundle\UserBundle\Form\Type\UserMultiSelectType($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_user.form.type.user_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Form\Type\UserSelectType A Oro\Bundle\UserBundle\Form\Type\UserSelectType instance.
     */
    protected function getOroUser_Form_Type_UserSelectService()
    {
        return $this->services['oro_user.form.type.user_select'] = new \Oro\Bundle\UserBundle\Form\Type\UserSelectType();
    }

    /**
     * Gets the 'oro_user.form.user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroUser_Form_UserService()
    {
        return $this->services['oro_user.form.user'] = $this->get('form.factory')->createNamed('oro_user_user_form', 'oro_user_user', NULL);
    }

    /**
     * Gets the 'oro_user.form.user.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroUser_Form_User_ApiService()
    {
        return $this->services['oro_user.form.user.api'] = $this->get('form.factory')->createNamed('user', 'user', NULL);
    }

    /**
     * Gets the 'oro_user.gender_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Provider\GenderProvider A Oro\Bundle\UserBundle\Provider\GenderProvider instance.
     */
    protected function getOroUser_GenderProviderService()
    {
        return $this->services['oro_user.gender_provider'] = new \Oro\Bundle\UserBundle\Provider\GenderProvider($this->get('translator'));
    }

    /**
     * Gets the 'oro_user.group_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Entity\Manager\GroupManager A Oro\Bundle\UserBundle\Entity\Manager\GroupManager instance.
     */
    protected function getOroUser_GroupManagerService()
    {
        return $this->services['oro_user.group_manager'] = new \Oro\Bundle\UserBundle\Entity\Manager\GroupManager($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_user.group_manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroUser_GroupManager_ApiService()
    {
        $this->services['oro_user.group_manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\UserBundle\\Entity\\Group', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.handler.delete' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Handler\UserDeleteHandler A Oro\Bundle\UserBundle\Handler\UserDeleteHandler instance.
     */
    protected function getOroUser_Handler_DeleteService()
    {
        $this->services['oro_user.handler.delete'] = $instance = new \Oro\Bundle\UserBundle\Handler\UserDeleteHandler();

        $instance->setOwnerDeletionManager($this->get('oro_organization.owner_deletion_manager'));
        $instance->setSecurityFacade($this->get('oro_security.security_facade'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.importexport.data_converter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Converter\ConfigurableTableDataConverter A Oro\Bundle\ImportExportBundle\Converter\ConfigurableTableDataConverter instance.
     */
    protected function getOroUser_Importexport_DataConverterService()
    {
        return $this->services['oro_user.importexport.data_converter'] = new \Oro\Bundle\ImportExportBundle\Converter\ConfigurableTableDataConverter($this->get('oro_importexport.field.field_helper'), $this->get('oro_importexport.data_converter.relation_calculator'));
    }

    /**
     * Gets the 'oro_user.importexport.processor.export' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Processor\ExportProcessor A Oro\Bundle\ImportExportBundle\Processor\ExportProcessor instance.
     */
    protected function getOroUser_Importexport_Processor_ExportService()
    {
        $this->services['oro_user.importexport.processor.export'] = $instance = new \Oro\Bundle\ImportExportBundle\Processor\ExportProcessor();

        $instance->setSerializer($this->get('oro_importexport.serializer'));
        $instance->setDataConverter($this->get('oro_user.importexport.data_converter'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.importexport.processor.export_template' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Processor\ExportProcessor A Oro\Bundle\ImportExportBundle\Processor\ExportProcessor instance.
     */
    protected function getOroUser_Importexport_Processor_ExportTemplateService()
    {
        $this->services['oro_user.importexport.processor.export_template'] = $instance = new \Oro\Bundle\ImportExportBundle\Processor\ExportProcessor();

        $instance->setSerializer($this->get('oro_importexport.serializer'));
        $instance->setDataConverter($this->get('oro_user.importexport.template_fixture.data_converter'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.importexport.template_fixture.data_converter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\ImportExportBundle\Converter\ConfigurableTableDataConverter A Oro\Bundle\ImportExportBundle\Converter\ConfigurableTableDataConverter instance.
     */
    protected function getOroUser_Importexport_TemplateFixture_DataConverterService()
    {
        return $this->services['oro_user.importexport.template_fixture.data_converter'] = new \Oro\Bundle\ImportExportBundle\Converter\ConfigurableTableDataConverter($this->get('oro_importexport.field.field_helper'), $this->get('oro_importexport.data_converter.template_fixture.relation_calculator'));
    }

    /**
     * Gets the 'oro_user.importexport.template_fixture.user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\ImportExport\TemplateFixture\UserFixture A Oro\Bundle\UserBundle\ImportExport\TemplateFixture\UserFixture instance.
     */
    protected function getOroUser_Importexport_TemplateFixture_UserService()
    {
        return $this->services['oro_user.importexport.template_fixture.user'] = new \Oro\Bundle\UserBundle\ImportExport\TemplateFixture\UserFixture();
    }

    /**
     * Gets the 'oro_user.mailer.processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Mailer\Processor A Oro\Bundle\UserBundle\Mailer\Processor instance.
     */
    protected function getOroUser_Mailer_ProcessorService()
    {
        return $this->services['oro_user.mailer.processor'] = new \Oro\Bundle\UserBundle\Mailer\Processor($this->get('doctrine'), $this->get('oro_config.global'), $this->get('oro_email.email_renderer'), $this->get('oro_email.email_holder_helper'), $this->get('oro_email.direct_mailer'));
    }

    /**
     * Gets the 'oro_user.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Entity\UserManager A Oro\Bundle\UserBundle\Entity\UserManager instance.
     */
    protected function getOroUser_ManagerService()
    {
        return $this->services['oro_user.manager'] = new \Oro\Bundle\UserBundle\Entity\UserManager('Oro\\Bundle\\UserBundle\\Entity\\User', $this->get('doctrine'), $this->get('security.encoder_factory'));
    }

    /**
     * Gets the 'oro_user.manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroUser_Manager_ApiService()
    {
        $this->services['oro_user.manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\UserBundle\\Entity\\User', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.password_change.widget_provider.actions' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Provider\ActionButtonWidgetProvider A Oro\Bundle\UIBundle\Provider\ActionButtonWidgetProvider instance.
     */
    protected function getOroUser_PasswordChange_WidgetProvider_ActionsService()
    {
        return $this->services['oro_user.password_change.widget_provider.actions'] = new \Oro\Bundle\UIBundle\Provider\ActionButtonWidgetProvider($this->get('oro_ui.placeholder.provider'), 'oro_user_password_change_button', 'oro_user_password_change_link');
    }

    /**
     * Gets the 'oro_user.password_reset.widget_provider.actions' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UIBundle\Provider\ActionButtonWidgetProvider A Oro\Bundle\UIBundle\Provider\ActionButtonWidgetProvider instance.
     */
    protected function getOroUser_PasswordReset_WidgetProvider_ActionsService()
    {
        return $this->services['oro_user.password_reset.widget_provider.actions'] = new \Oro\Bundle\UIBundle\Provider\ActionButtonWidgetProvider($this->get('oro_ui.placeholder.provider'), 'oro_user_password_reset_button', 'oro_user_password_reset_link');
    }

    /**
     * Gets the 'oro_user.permission_manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Entity\Manager\UserPermissionApiEntityManager A Oro\Bundle\UserBundle\Entity\Manager\UserPermissionApiEntityManager instance.
     */
    protected function getOroUser_PermissionManager_ApiService()
    {
        $this->services['oro_user.permission_manager.api'] = $instance = new \Oro\Bundle\UserBundle\Entity\Manager\UserPermissionApiEntityManager('Oro\\Bundle\\UserBundle\\Entity\\User', $this->get('doctrine.orm.default_entity_manager'), $this->get('security.context'), $this->get('oro_security.acl.extension_selector'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.placeholder.filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Placeholder\PlaceholderFilter A Oro\Bundle\UserBundle\Placeholder\PlaceholderFilter instance.
     */
    protected function getOroUser_Placeholder_FilterService()
    {
        return $this->services['oro_user.placeholder.filter'] = new \Oro\Bundle\UserBundle\Placeholder\PlaceholderFilter($this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'oro_user.role.handler.delete' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Handler\RoleDeleteHandler A Oro\Bundle\UserBundle\Handler\RoleDeleteHandler instance.
     */
    protected function getOroUser_Role_Handler_DeleteService()
    {
        $this->services['oro_user.role.handler.delete'] = $instance = new \Oro\Bundle\UserBundle\Handler\RoleDeleteHandler($this->get('oro_security.acl.sid_manager'));

        $instance->setOwnerDeletionManager($this->get('oro_organization.owner_deletion_manager'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.role.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\UserBundle\EventListener\RoleListener A Oro\Bundle\UserBundle\EventListener\RoleListener instance.
     */
    public function getOroUser_Role_ListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_user.role.listener'] = new OroBundleUserBundleEventListenerRoleListener_000000002e47e37000000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroUser_Role_ListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\UserBundle\EventListener\RoleListener(new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_security.acl.sid_manager', false));
    }

    /**
     * Gets the 'oro_user.role_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Entity\Manager\RoleManager A Oro\Bundle\UserBundle\Entity\Manager\RoleManager instance.
     */
    protected function getOroUser_RoleManagerService()
    {
        return $this->services['oro_user.role_manager'] = new \Oro\Bundle\UserBundle\Entity\Manager\RoleManager($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_user.role_manager.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager A Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager instance.
     */
    protected function getOroUser_RoleManager_ApiService()
    {
        $this->services['oro_user.role_manager.api'] = $instance = new \Oro\Bundle\SoapBundle\Entity\Manager\ApiEntityManager('Oro\\Bundle\\UserBundle\\Entity\\Role', $this->get('doctrine.orm.default_entity_manager'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));
        $instance->setDoctrineHelper($this->get('oro_entity.doctrine_helper'));
        $instance->setEntityClassNameHelper($this->get('oro_entity.entity_class_name_helper'));
        $instance->setEntitySerializer($this->get('oro_soap.entity_serializer'));

        return $instance;
    }

    /**
     * Gets the 'oro_user.security.login' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\EventListener\LoginSubscriber A Oro\Bundle\UserBundle\EventListener\LoginSubscriber instance.
     */
    protected function getOroUser_Security_LoginService()
    {
        return $this->services['oro_user.security.login'] = new \Oro\Bundle\UserBundle\EventListener\LoginSubscriber($this->get('oro_user.manager'));
    }

    /**
     * Gets the 'oro_user.status_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Entity\Manager\StatusManager A Oro\Bundle\UserBundle\Entity\Manager\StatusManager instance.
     */
    protected function getOroUser_StatusManagerService()
    {
        return $this->services['oro_user.status_manager'] = new \Oro\Bundle\UserBundle\Entity\Manager\StatusManager($this->get('doctrine.orm.default_entity_manager'), $this->get('oro_user.manager'));
    }

    /**
     * Gets the 'oro_user.twig.user_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Twig\OroUserExtension A Oro\Bundle\UserBundle\Twig\OroUserExtension instance.
     */
    protected function getOroUser_Twig_UserExtensionService()
    {
        return $this->services['oro_user.twig.user_extension'] = new \Oro\Bundle\UserBundle\Twig\OroUserExtension($this->get('oro_user.gender_provider'), $this->get('security.context'));
    }

    /**
     * Gets the 'oro_user.user_menu' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Menu\UserMenuBuilder A Oro\Bundle\UserBundle\Menu\UserMenuBuilder instance.
     */
    protected function getOroUser_UserMenuService()
    {
        return $this->services['oro_user.user_menu'] = new \Oro\Bundle\UserBundle\Menu\UserMenuBuilder($this->get('security.context'));
    }

    /**
     * Gets the 'oro_wamp.ping.pdo' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SyncBundle\Wamp\DbPing A Oro\Bundle\SyncBundle\Wamp\DbPing instance.
     */
    protected function getOroWamp_Ping_PdoService()
    {
        return $this->services['oro_wamp.ping.pdo'] = new \Oro\Bundle\SyncBundle\Wamp\DbPing($this->get('doctrine.dbal.session_connection.wrapped', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'oro_wamp.publisher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SyncBundle\Wamp\TopicPublisher A Oro\Bundle\SyncBundle\Wamp\TopicPublisher instance.
     */
    protected function getOroWamp_PublisherService()
    {
        return $this->services['oro_wamp.publisher'] = new \Oro\Bundle\SyncBundle\Wamp\TopicPublisher('*', 8080);
    }

    /**
     * Gets the 'oro_wamp.twig.sync_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SyncBundle\Twig\OroSyncExtension A Oro\Bundle\SyncBundle\Twig\OroSyncExtension instance.
     */
    protected function getOroWamp_Twig_SyncExtensionService()
    {
        return $this->services['oro_wamp.twig.sync_extension'] = new \Oro\Bundle\SyncBundle\Twig\OroSyncExtension($this->get('oro_wamp.publisher'));
    }

    /**
     * Gets the 'oro_windows.twig.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WindowsBundle\Twig\WindowsExtension A Oro\Bundle\WindowsBundle\Twig\WindowsExtension instance.
     */
    protected function getOroWindows_Twig_ExtensionService()
    {
        return $this->services['oro_windows.twig.extension'] = new \Oro\Bundle\WindowsBundle\Twig\WindowsExtension($this->get('security.context'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'oro_workflow.action.assign_active_user' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\AssignActiveUser A Oro\Bundle\WorkflowBundle\Model\Action\AssignActiveUser instance.
     */
    protected function getOroWorkflow_Action_AssignActiveUserService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\AssignActiveUser($this->get('oro_workflow.context_accessor'), $this->get('security.context'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.assign_value' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\AssignValue A Oro\Bundle\WorkflowBundle\Model\Action\AssignValue instance.
     */
    protected function getOroWorkflow_Action_AssignValueService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\AssignValue($this->get('oro_workflow.context_accessor'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.call_method' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\CallMethod A Oro\Bundle\WorkflowBundle\Model\Action\CallMethod instance.
     */
    protected function getOroWorkflow_Action_CallMethodService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\CallMethod($this->get('oro_workflow.context_accessor'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.configurable' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\Configurable A Oro\Bundle\WorkflowBundle\Model\Action\Configurable instance.
     */
    protected function getOroWorkflow_Action_ConfigurableService()
    {
        return new \Oro\Bundle\WorkflowBundle\Model\Action\Configurable($this->get('oro_workflow.action_assembler'));
    }

    /**
     * Gets the 'oro_workflow.action.create_date' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\CreateDate A Oro\Bundle\WorkflowBundle\Model\Action\CreateDate instance.
     */
    protected function getOroWorkflow_Action_CreateDateService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\CreateDate($this->get('oro_workflow.context_accessor'), $this->get('oro_locale.settings'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.create_datetime' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\CreateDateTime A Oro\Bundle\WorkflowBundle\Model\Action\CreateDateTime instance.
     */
    protected function getOroWorkflow_Action_CreateDatetimeService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\CreateDateTime($this->get('oro_workflow.context_accessor'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.create_entity' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\CreateEntity A Oro\Bundle\WorkflowBundle\Model\Action\CreateEntity instance.
     */
    protected function getOroWorkflow_Action_CreateEntityService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\CreateEntity($this->get('oro_workflow.context_accessor'), $this->get('doctrine'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.create_object' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\CreateObject A Oro\Bundle\WorkflowBundle\Model\Action\CreateObject instance.
     */
    protected function getOroWorkflow_Action_CreateObjectService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\CreateObject($this->get('oro_workflow.context_accessor'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.create_related_entity' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\CreateRelatedEntity A Oro\Bundle\WorkflowBundle\Model\Action\CreateRelatedEntity instance.
     */
    protected function getOroWorkflow_Action_CreateRelatedEntityService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\CreateRelatedEntity($this->get('oro_workflow.context_accessor'), $this->get('doctrine'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.flash_message' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\FlashMessage A Oro\Bundle\WorkflowBundle\Model\Action\FlashMessage instance.
     */
    protected function getOroWorkflow_Action_FlashMessageService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\FlashMessage($this->get('oro_workflow.context_accessor'), $this->get('translator'));

        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.format_name' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\FormatName A Oro\Bundle\WorkflowBundle\Model\Action\FormatName instance.
     */
    protected function getOroWorkflow_Action_FormatNameService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\FormatName($this->get('oro_workflow.context_accessor'), $this->get('oro_entity.entity_name_resolver'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.format_string' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\FormatString A Oro\Bundle\WorkflowBundle\Model\Action\FormatString instance.
     */
    protected function getOroWorkflow_Action_FormatStringService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\FormatString($this->get('oro_workflow.context_accessor'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.redirect' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\Redirect A Oro\Bundle\WorkflowBundle\Model\Action\Redirect instance.
     */
    protected function getOroWorkflow_Action_RedirectService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\Redirect($this->get('oro_workflow.context_accessor'), $this->get('router'), 'result.redirectUrl');

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.request_entity' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\RequestEntity A Oro\Bundle\WorkflowBundle\Model\Action\RequestEntity instance.
     */
    protected function getOroWorkflow_Action_RequestEntityService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\RequestEntity($this->get('oro_workflow.context_accessor'), $this->get('doctrine'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.start_workflow' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\StartWorkflow A Oro\Bundle\WorkflowBundle\Model\Action\StartWorkflow instance.
     */
    protected function getOroWorkflow_Action_StartWorkflowService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\StartWorkflow($this->get('oro_workflow.context_accessor'), $this->get('oro_workflow.manager'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.translate' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\TranslateAction A Oro\Bundle\WorkflowBundle\Model\Action\TranslateAction instance.
     */
    protected function getOroWorkflow_Action_TranslateService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\TranslateAction($this->get('oro_workflow.context_accessor'), $this->get('translator'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.traverse' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\Traverse A Oro\Bundle\WorkflowBundle\Model\Action\Traverse instance.
     */
    protected function getOroWorkflow_Action_TraverseService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\Traverse($this->get('oro_workflow.context_accessor'), $this->get('oro_workflow.action.configurable'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.tree' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\TreeExecutor A Oro\Bundle\WorkflowBundle\Model\Action\TreeExecutor instance.
     */
    protected function getOroWorkflow_Action_TreeService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\TreeExecutor($this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action.unset_value' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\UnsetValue A Oro\Bundle\WorkflowBundle\Model\Action\UnsetValue instance.
     */
    protected function getOroWorkflow_Action_UnsetValueService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\UnsetValue($this->get('oro_workflow.action.assign_value'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action_assembler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\ActionAssembler A Oro\Bundle\WorkflowBundle\Model\Action\ActionAssembler instance.
     */
    protected function getOroWorkflow_ActionAssemblerService()
    {
        $this->services['oro_workflow.action_assembler'] = $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\ActionAssembler($this->get('oro_workflow.action_factory'), $this->get('oro_workflow.expression.factory'));

        $instance->addConfigurationPass($this->get('oro_workflow.configuration_pass.replace_property_path'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.action_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\ActionFactory A Oro\Bundle\WorkflowBundle\Model\Action\ActionFactory instance.
     */
    protected function getOroWorkflow_ActionFactoryService()
    {
        return $this->services['oro_workflow.action_factory'] = new \Oro\Bundle\WorkflowBundle\Model\Action\ActionFactory($this, array('send_email' => 'oro_email.workflow.action.send_email', 'send_email_template' => 'oro_email.workflow.action.send_email_template', 'parse_first_name_from_email_address' => 'oro_email.workflow.action.parse_first_name', 'parse_last_name_from_email_address' => 'oro_email.workflow.action.parse_last_name', 'request_mailboxes' => 'oro_email.workflow.action.request_mailboxes', 'find_mailboxes' => 'oro_email.workflow.action.request_mailboxes', 'strip_html_tags' => 'oro_email.workflow.action.strip_html_tags', 'add_email_activity_target' => 'oro_email.workflow.action.add_activity_target', 'save_fields_changes' => 'oro_integration.action.save_fields_changes', 'remove_fields_changes' => 'oro_integration.action.remove_fields_changes', 'populate_integration_owner' => 'oro_integration.workflow.action.populate_integration_owner', 'job_add_dependency' => 'oro_imap.workflow.action.dependency_job', 'execute_job' => 'oro_importexport.action.execute_job', 'tree' => 'oro_workflow.action.tree', 'configurable' => 'oro_workflow.action.configurable', 'assign_value' => 'oro_workflow.action.assign_value', 'unset_value' => 'oro_workflow.action.unset_value', 'create_object' => 'oro_workflow.action.create_object', 'create_date' => 'oro_workflow.action.create_date', 'create_datetime' => 'oro_workflow.action.create_datetime', 'create_entity' => 'oro_workflow.action.create_entity', 'create_related_entity' => 'oro_workflow.action.create_related_entity', 'request_entity' => 'oro_workflow.action.request_entity', 'find_entity' => 'oro_workflow.action.request_entity', 'call_method' => 'oro_workflow.action.call_method', 'start_workflow' => 'oro_workflow.action.start_workflow', 'redirect' => 'oro_workflow.action.redirect', 'format_string' => 'oro_workflow.action.format_string', 'assign_active_user' => 'oro_workflow.action.assign_active_user', 'get_active_user' => 'oro_workflow.action.assign_active_user', 'format_name' => 'oro_workflow.action.format_name', 'traverse' => 'oro_workflow.action.traverse', 'foreach' => 'oro_workflow.action.traverse', 'translate' => 'oro_workflow.action.translate', 'trans' => 'oro_workflow.action.translate', 'flash_message' => 'oro_workflow.action.flash_message', 'remove_entity' => 'oro_workflow.workflow.action.remove_entity', 'assign_constant_value' => 'oro_workflow.workflow.action.assign_constant_value', 'copy_tagging' => 'oro_workflow.workflow.action.copy_tagging.class'));
    }

    /**
     * Gets the 'oro_workflow.attribute_assembler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\AttributeAssembler A Oro\Bundle\WorkflowBundle\Model\AttributeAssembler instance.
     */
    protected function getOroWorkflow_AttributeAssemblerService()
    {
        return $this->services['oro_workflow.attribute_assembler'] = new \Oro\Bundle\WorkflowBundle\Model\AttributeAssembler($this->get('oro_workflow.attribute_guesser'));
    }

    /**
     * Gets the 'oro_workflow.attribute_guesser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\AttributeGuesser A Oro\Bundle\WorkflowBundle\Model\AttributeGuesser instance.
     */
    protected function getOroWorkflow_AttributeGuesserService()
    {
        $this->services['oro_workflow.attribute_guesser'] = $instance = new \Oro\Bundle\WorkflowBundle\Model\AttributeGuesser($this->get('form.registry'), $this->get('doctrine'), $this->get('oro_entity_config.provider.entity'), $this->get('oro_entity_config.provider.form'));

        $instance->addDoctrineTypeMapping('string', 'string');
        $instance->addDoctrineTypeMapping('integer', 'integer');
        $instance->addDoctrineTypeMapping('smallint', 'integer');
        $instance->addDoctrineTypeMapping('bigint', 'integer');
        $instance->addDoctrineTypeMapping('boolean', 'boolean');
        $instance->addDoctrineTypeMapping('decimal', 'float');
        $instance->addDoctrineTypeMapping('date', 'object', array('class' => 'DateTime'));
        $instance->addDoctrineTypeMapping('time', 'object', array('class' => 'DateTime'));
        $instance->addDoctrineTypeMapping('datetime', 'object', array('class' => 'DateTime'));
        $instance->addDoctrineTypeMapping('datetimetz', 'object', array('class' => 'DateTime'));
        $instance->addDoctrineTypeMapping('text', 'string');
        $instance->addDoctrineTypeMapping('array', 'array');
        $instance->addDoctrineTypeMapping('simple_array', 'array');
        $instance->addDoctrineTypeMapping('json_array', 'array');
        $instance->addDoctrineTypeMapping('float', 'float');
        $instance->addDoctrineTypeMapping('guid', 'string');
        $instance->addDoctrineTypeMapping('percent', 'float');
        $instance->addDoctrineTypeMapping('money', 'float');
        $instance->addFormTypeMapping('string', 'text');
        $instance->addFormTypeMapping('int', 'integer', array('precision' => 0));
        $instance->addFormTypeMapping('integer', 'integer', array('precision' => 0));
        $instance->addFormTypeMapping('bool', 'checkbox');
        $instance->addFormTypeMapping('boolean', 'checkbox');
        $instance->addFormTypeMapping('float', 'number');

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.cache.process_trigger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Cache\ProcessTriggerCache A Oro\Bundle\WorkflowBundle\Cache\ProcessTriggerCache instance.
     */
    protected function getOroWorkflow_Cache_ProcessTriggerService()
    {
        $this->services['oro_workflow.cache.process_trigger'] = $instance = new \Oro\Bundle\WorkflowBundle\Cache\ProcessTriggerCache($this->get('doctrine'));

        $instance->setProvider($this->get('oro_workflow.cache.provider.process_trigger'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.cache.provider.process_trigger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroWorkflow_Cache_Provider_ProcessTriggerService()
    {
        $this->services['oro_workflow.cache.provider.process_trigger'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_workflow.process_trigger');

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.condition.configurable' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Condition\Configurable A Oro\Bundle\WorkflowBundle\Model\Condition\Configurable instance.
     */
    protected function getOroWorkflow_Condition_ConfigurableService()
    {
        return new \Oro\Bundle\WorkflowBundle\Model\Condition\Configurable($this->get('oro_workflow.expression.assembler'));
    }

    /**
     * Gets the 'oro_workflow.configuration.builder.process_configuration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Configuration\ProcessConfigurationBuilder A Oro\Bundle\WorkflowBundle\Configuration\ProcessConfigurationBuilder instance.
     */
    protected function getOroWorkflow_Configuration_Builder_ProcessConfigurationService()
    {
        return $this->services['oro_workflow.configuration.builder.process_configuration'] = new \Oro\Bundle\WorkflowBundle\Configuration\ProcessConfigurationBuilder();
    }

    /**
     * Gets the 'oro_workflow.configuration.builder.workflow_definition' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Configuration\WorkflowDefinitionConfigurationBuilder A Oro\Bundle\WorkflowBundle\Configuration\WorkflowDefinitionConfigurationBuilder instance.
     */
    protected function getOroWorkflow_Configuration_Builder_WorkflowDefinitionService()
    {
        return $this->services['oro_workflow.configuration.builder.workflow_definition'] = new \Oro\Bundle\WorkflowBundle\Configuration\WorkflowDefinitionConfigurationBuilder($this->get('oro_workflow.workflow_assembler'), $this->get('oro_workflow.field_generator'));
    }

    /**
     * Gets the 'oro_workflow.configuration.builder.workflow_definition.handle' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Configuration\WorkflowDefinitionHandleBuilder A Oro\Bundle\WorkflowBundle\Configuration\WorkflowDefinitionHandleBuilder instance.
     */
    protected function getOroWorkflow_Configuration_Builder_WorkflowDefinition_HandleService()
    {
        return $this->services['oro_workflow.configuration.builder.workflow_definition.handle'] = new \Oro\Bundle\WorkflowBundle\Configuration\WorkflowDefinitionHandleBuilder($this->get('oro_workflow.configuration.handler.workflow'), $this->get('oro_workflow.configuration.config.workflow_sole'), $this->get('oro_workflow.configuration.builder.workflow_definition'));
    }

    /**
     * Gets the 'oro_workflow.configuration.config.process_definition_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Configuration\ProcessDefinitionListConfiguration A Oro\Bundle\WorkflowBundle\Configuration\ProcessDefinitionListConfiguration instance.
     */
    protected function getOroWorkflow_Configuration_Config_ProcessDefinitionListService()
    {
        return $this->services['oro_workflow.configuration.config.process_definition_list'] = new \Oro\Bundle\WorkflowBundle\Configuration\ProcessDefinitionListConfiguration($this->get('oro_workflow.configuration.config.process_definition_sole'));
    }

    /**
     * Gets the 'oro_workflow.configuration.config.process_definition_sole' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Configuration\ProcessDefinitionConfiguration A Oro\Bundle\WorkflowBundle\Configuration\ProcessDefinitionConfiguration instance.
     */
    protected function getOroWorkflow_Configuration_Config_ProcessDefinitionSoleService()
    {
        return $this->services['oro_workflow.configuration.config.process_definition_sole'] = new \Oro\Bundle\WorkflowBundle\Configuration\ProcessDefinitionConfiguration();
    }

    /**
     * Gets the 'oro_workflow.configuration.config.process_trigger_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Configuration\ProcessTriggerListConfiguration A Oro\Bundle\WorkflowBundle\Configuration\ProcessTriggerListConfiguration instance.
     */
    protected function getOroWorkflow_Configuration_Config_ProcessTriggerListService()
    {
        return $this->services['oro_workflow.configuration.config.process_trigger_list'] = new \Oro\Bundle\WorkflowBundle\Configuration\ProcessTriggerListConfiguration($this->get('oro_workflow.configuration.config.process_trigger_sole'));
    }

    /**
     * Gets the 'oro_workflow.configuration.config.process_trigger_sole' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Configuration\ProcessTriggerConfiguration A Oro\Bundle\WorkflowBundle\Configuration\ProcessTriggerConfiguration instance.
     */
    protected function getOroWorkflow_Configuration_Config_ProcessTriggerSoleService()
    {
        return $this->services['oro_workflow.configuration.config.process_trigger_sole'] = new \Oro\Bundle\WorkflowBundle\Configuration\ProcessTriggerConfiguration();
    }

    /**
     * Gets the 'oro_workflow.configuration.config.workflow_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Configuration\WorkflowListConfiguration A Oro\Bundle\WorkflowBundle\Configuration\WorkflowListConfiguration instance.
     */
    protected function getOroWorkflow_Configuration_Config_WorkflowListService()
    {
        return $this->services['oro_workflow.configuration.config.workflow_list'] = new \Oro\Bundle\WorkflowBundle\Configuration\WorkflowListConfiguration($this->get('oro_workflow.configuration.config.workflow_sole'));
    }

    /**
     * Gets the 'oro_workflow.configuration.config.workflow_sole' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Configuration\WorkflowConfiguration A Oro\Bundle\WorkflowBundle\Configuration\WorkflowConfiguration instance.
     */
    protected function getOroWorkflow_Configuration_Config_WorkflowSoleService()
    {
        return $this->services['oro_workflow.configuration.config.workflow_sole'] = new \Oro\Bundle\WorkflowBundle\Configuration\WorkflowConfiguration();
    }

    /**
     * Gets the 'oro_workflow.configuration.handler.attribute' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Configuration\Handler\AttributeHandler A Oro\Bundle\WorkflowBundle\Configuration\Handler\AttributeHandler instance.
     */
    protected function getOroWorkflow_Configuration_Handler_AttributeService()
    {
        return $this->services['oro_workflow.configuration.handler.attribute'] = new \Oro\Bundle\WorkflowBundle\Configuration\Handler\AttributeHandler();
    }

    /**
     * Gets the 'oro_workflow.configuration.handler.step' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Configuration\Handler\StepHandler A Oro\Bundle\WorkflowBundle\Configuration\Handler\StepHandler instance.
     */
    protected function getOroWorkflow_Configuration_Handler_StepService()
    {
        return $this->services['oro_workflow.configuration.handler.step'] = new \Oro\Bundle\WorkflowBundle\Configuration\Handler\StepHandler();
    }

    /**
     * Gets the 'oro_workflow.configuration.handler.transition' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Configuration\Handler\TransitionHandler A Oro\Bundle\WorkflowBundle\Configuration\Handler\TransitionHandler instance.
     */
    protected function getOroWorkflow_Configuration_Handler_TransitionService()
    {
        return $this->services['oro_workflow.configuration.handler.transition'] = new \Oro\Bundle\WorkflowBundle\Configuration\Handler\TransitionHandler();
    }

    /**
     * Gets the 'oro_workflow.configuration.handler.workflow' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Configuration\Handler\WorkflowHandler A Oro\Bundle\WorkflowBundle\Configuration\Handler\WorkflowHandler instance.
     */
    protected function getOroWorkflow_Configuration_Handler_WorkflowService()
    {
        $this->services['oro_workflow.configuration.handler.workflow'] = $instance = new \Oro\Bundle\WorkflowBundle\Configuration\Handler\WorkflowHandler();

        $instance->addHandler($this->get('oro_workflow.configuration.handler.step'));
        $instance->addHandler($this->get('oro_workflow.configuration.handler.attribute'));
        $instance->addHandler($this->get('oro_workflow.configuration.handler.transition'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.configuration.provider.process_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Configuration\ProcessConfigurationProvider A Oro\Bundle\WorkflowBundle\Configuration\ProcessConfigurationProvider instance.
     */
    protected function getOroWorkflow_Configuration_Provider_ProcessConfigService()
    {
        return $this->services['oro_workflow.configuration.provider.process_config'] = new \Oro\Bundle\WorkflowBundle\Configuration\ProcessConfigurationProvider(array('OroCacheBundle' => 'Oro\\Bundle\\CacheBundle\\OroCacheBundle', 'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle', 'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle', 'OroSyncBundle' => 'Oro\\Bundle\\SyncBundle\\OroSyncBundle', 'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle', 'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle', 'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle', 'AsseticBundle' => 'Symfony\\Bundle\\AsseticBundle\\AsseticBundle', 'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle', 'DoctrineFixturesBundle' => 'Doctrine\\Bundle\\FixturesBundle\\DoctrineFixturesBundle', 'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle', 'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle', 'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle', 'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle', 'FOSJsRoutingBundle' => 'FOS\\JsRoutingBundle\\FOSJsRoutingBundle', 'NelmioApiDocBundle' => 'Nelmio\\ApiDocBundle\\NelmioApiDocBundle', 'BeSimpleSoapBundle' => 'BeSimple\\SoapBundle\\BeSimpleSoapBundle', 'StofDoctrineExtensionsBundle' => 'Stof\\DoctrineExtensionsBundle\\StofDoctrineExtensionsBundle', 'EscapeWSSEAuthenticationBundle' => 'Escape\\WSSEAuthenticationBundle\\EscapeWSSEAuthenticationBundle', 'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle', 'GenemuFormBundle' => 'Genemu\\Bundle\\FormBundle\\GenemuFormBundle', 'A2lixTranslationFormBundle' => 'A2lix\\TranslationFormBundle\\A2lixTranslationFormBundle', 'LexikMaintenanceBundle' => 'Lexik\\Bundle\\MaintenanceBundle\\LexikMaintenanceBundle', 'OroLayoutBundle' => 'Oro\\Bundle\\LayoutBundle\\OroLayoutBundle', 'OroUIBundle' => 'Oro\\Bundle\\UIBundle\\OroUIBundle', 'OroOrganizationBundle' => 'Oro\\Bundle\\OrganizationBundle\\OroOrganizationBundle', 'OroSecurityBundle' => 'Oro\\Bundle\\SecurityBundle\\OroSecurityBundle', 'OroAttachmentBundle' => 'Oro\\Bundle\\AttachmentBundle\\OroAttachmentBundle', 'OroEmailBundle' => 'Oro\\Bundle\\EmailBundle\\OroEmailBundle', 'OroUserBundle' => 'Oro\\Bundle\\UserBundle\\OroUserBundle', 'HWIOAuthBundle' => 'HWI\\Bundle\\OAuthBundle\\HWIOAuthBundle', 'OroSSOBundle' => 'Oro\\Bundle\\SSOBundle\\OroSSOBundle', 'OroEntityBundle' => 'Oro\\Bundle\\EntityBundle\\OroEntityBundle', 'OroEntityConfigBundle' => 'Oro\\Bundle\\EntityConfigBundle\\OroEntityConfigBundle', 'OroEntityExtendBundle' => 'Oro\\Bundle\\EntityExtendBundle\\OroEntityExtendBundle', 'OroIntegrationBundle' => 'Oro\\Bundle\\IntegrationBundle\\OroIntegrationBundle', 'AkeneoBatchBundle' => 'Akeneo\\Bundle\\BatchBundle\\AkeneoBatchBundle', 'JDareClankBundle' => 'JDare\\ClankBundle\\JDareClankBundle', 'JMSJobQueueBundle' => 'JMS\\JobQueueBundle\\JMSJobQueueBundle', 'KnpGaufretteBundle' => 'Knp\\Bundle\\GaufretteBundle\\KnpGaufretteBundle', 'MainStockValueBundle' => 'Main\\StockValueBundle\\MainStockValueBundle', 'OroActivityBundle' => 'Oro\\Bundle\\ActivityBundle\\OroActivityBundle', 'OroActivityListBundle' => 'Oro\\Bundle\\ActivityListBundle\\OroActivityListBundle', 'OroAddressBundle' => 'Oro\\Bundle\\AddressBundle\\OroAddressBundle', 'OroAsseticBundle' => 'Oro\\Bundle\\AsseticBundle\\OroAsseticBundle', 'OroBatchBundle' => 'Oro\\Bundle\\BatchBundle\\OroBatchBundle', 'OroBusinessEntitiesBundle' => 'Oro\\Bundle\\BusinessEntitiesBundle\\OroBusinessEntitiesBundle', 'OroCalendarBundle' => 'Oro\\Bundle\\CalendarBundle\\OroCalendarBundle', 'OroChartBundle' => 'Oro\\Bundle\\ChartBundle\\OroChartBundle', 'OroConfigBundle' => 'Oro\\Bundle\\ConfigBundle\\OroConfigBundle', 'OroCronBundle' => 'Oro\\Bundle\\CronBundle\\OroCronBundle', 'OroDataAuditBundle' => 'Oro\\Bundle\\DataAuditBundle\\OroDataAuditBundle', 'OroDataGridBundle' => 'Oro\\Bundle\\DataGridBundle\\OroDataGridBundle', 'OroDistributionBundle' => 'Oro\\Bundle\\DistributionBundle\\OroDistributionBundle', 'OroEmbeddedFormBundle' => 'Oro\\Bundle\\EmbeddedFormBundle\\OroEmbeddedFormBundle', 'OroEntityMergeBundle' => 'Oro\\Bundle\\EntityMergeBundle\\OroEntityMergeBundle', 'OroEntityPaginationBundle' => 'Oro\\Bundle\\EntityPaginationBundle\\OroEntityPaginationBundle', 'OroFilterBundle' => 'Oro\\Bundle\\FilterBundle\\OroFilterBundle', 'OroFormBundle' => 'Oro\\Bundle\\FormBundle\\OroFormBundle', 'OroHelpBundle' => 'Oro\\Bundle\\HelpBundle\\OroHelpBundle', 'OroImapBundle' => 'Oro\\Bundle\\ImapBundle\\OroImapBundle', 'OroImportExportBundle' => 'Oro\\Bundle\\ImportExportBundle\\OroImportExportBundle', 'OroInstallerBundle' => 'Oro\\Bundle\\InstallerBundle\\OroInstallerBundle', 'OroLocaleBundle' => 'Oro\\Bundle\\LocaleBundle\\OroLocaleBundle', 'OroMigrationBundle' => 'Oro\\Bundle\\MigrationBundle\\OroMigrationBundle', 'OroNoteBundle' => 'Oro\\Bundle\\NoteBundle\\OroNoteBundle', 'OroNotificationBundle' => 'Oro\\Bundle\\NotificationBundle\\OroNotificationBundle', 'OroPlatformBundle' => 'Oro\\Bundle\\PlatformBundle\\OroPlatformBundle', 'OroQueryDesignerBundle' => 'Oro\\Bundle\\QueryDesignerBundle\\OroQueryDesignerBundle', 'OroReportBundle' => 'Oro\\Bundle\\ReportBundle\\OroReportBundle', 'OroRequireJSBundle' => 'Oro\\Bundle\\RequireJSBundle\\OroRequireJSBundle', 'OroSearchBundle' => 'Oro\\Bundle\\SearchBundle\\OroSearchBundle', 'OroSegmentBundle' => 'Oro\\Bundle\\SegmentBundle\\OroSegmentBundle', 'OroSidebarBundle' => 'Oro\\Bundle\\SidebarBundle\\OroSidebarBundle', 'OroSoapBundle' => 'Oro\\Bundle\\SoapBundle\\OroSoapBundle', 'OroTagBundle' => 'Oro\\Bundle\\TagBundle\\OroTagBundle', 'OroThemeBundle' => 'Oro\\Bundle\\ThemeBundle\\OroThemeBundle', 'OroTranslationBundle' => 'Oro\\Bundle\\TranslationBundle\\OroTranslationBundle', 'OroWindowsBundle' => 'Oro\\Bundle\\WindowsBundle\\OroWindowsBundle', 'OroWorkflowBundle' => 'Oro\\Bundle\\WorkflowBundle\\OroWorkflowBundle', 'SecurityStockValueBundle' => 'Security\\StockValueBundle\\SecurityStockValueBundle', 'SyliusFlowBundle' => 'Sylius\\Bundle\\FlowBundle\\SyliusFlowBundle', 'OroCommentBundle' => 'Oro\\Bundle\\CommentBundle\\OroCommentBundle', 'OroDashboardBundle' => 'Oro\\Bundle\\DashboardBundle\\OroDashboardBundle', 'OroNavigationBundle' => 'Oro\\Bundle\\NavigationBundle\\OroNavigationBundle', 'OroTrackingBundle' => 'Oro\\Bundle\\TrackingBundle\\OroTrackingBundle', 'OroReminderBundle' => 'Oro\\Bundle\\ReminderBundle\\OroReminderBundle', 'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle', 'SensioDistributionBundle' => 'Sensio\\Bundle\\DistributionBundle\\SensioDistributionBundle'), $this->get('oro_workflow.configuration.config.process_definition_list'), $this->get('oro_workflow.configuration.config.process_trigger_list'));
    }

    /**
     * Gets the 'oro_workflow.configuration.provider.workflow_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Configuration\WorkflowConfigurationProvider A Oro\Bundle\WorkflowBundle\Configuration\WorkflowConfigurationProvider instance.
     */
    protected function getOroWorkflow_Configuration_Provider_WorkflowConfigService()
    {
        return $this->services['oro_workflow.configuration.provider.workflow_config'] = new \Oro\Bundle\WorkflowBundle\Configuration\WorkflowConfigurationProvider(array('OroCacheBundle' => 'Oro\\Bundle\\CacheBundle\\OroCacheBundle', 'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle', 'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle', 'OroSyncBundle' => 'Oro\\Bundle\\SyncBundle\\OroSyncBundle', 'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle', 'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle', 'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle', 'AsseticBundle' => 'Symfony\\Bundle\\AsseticBundle\\AsseticBundle', 'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle', 'DoctrineFixturesBundle' => 'Doctrine\\Bundle\\FixturesBundle\\DoctrineFixturesBundle', 'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle', 'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle', 'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle', 'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle', 'FOSJsRoutingBundle' => 'FOS\\JsRoutingBundle\\FOSJsRoutingBundle', 'NelmioApiDocBundle' => 'Nelmio\\ApiDocBundle\\NelmioApiDocBundle', 'BeSimpleSoapBundle' => 'BeSimple\\SoapBundle\\BeSimpleSoapBundle', 'StofDoctrineExtensionsBundle' => 'Stof\\DoctrineExtensionsBundle\\StofDoctrineExtensionsBundle', 'EscapeWSSEAuthenticationBundle' => 'Escape\\WSSEAuthenticationBundle\\EscapeWSSEAuthenticationBundle', 'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle', 'GenemuFormBundle' => 'Genemu\\Bundle\\FormBundle\\GenemuFormBundle', 'A2lixTranslationFormBundle' => 'A2lix\\TranslationFormBundle\\A2lixTranslationFormBundle', 'LexikMaintenanceBundle' => 'Lexik\\Bundle\\MaintenanceBundle\\LexikMaintenanceBundle', 'OroLayoutBundle' => 'Oro\\Bundle\\LayoutBundle\\OroLayoutBundle', 'OroUIBundle' => 'Oro\\Bundle\\UIBundle\\OroUIBundle', 'OroOrganizationBundle' => 'Oro\\Bundle\\OrganizationBundle\\OroOrganizationBundle', 'OroSecurityBundle' => 'Oro\\Bundle\\SecurityBundle\\OroSecurityBundle', 'OroAttachmentBundle' => 'Oro\\Bundle\\AttachmentBundle\\OroAttachmentBundle', 'OroEmailBundle' => 'Oro\\Bundle\\EmailBundle\\OroEmailBundle', 'OroUserBundle' => 'Oro\\Bundle\\UserBundle\\OroUserBundle', 'HWIOAuthBundle' => 'HWI\\Bundle\\OAuthBundle\\HWIOAuthBundle', 'OroSSOBundle' => 'Oro\\Bundle\\SSOBundle\\OroSSOBundle', 'OroEntityBundle' => 'Oro\\Bundle\\EntityBundle\\OroEntityBundle', 'OroEntityConfigBundle' => 'Oro\\Bundle\\EntityConfigBundle\\OroEntityConfigBundle', 'OroEntityExtendBundle' => 'Oro\\Bundle\\EntityExtendBundle\\OroEntityExtendBundle', 'OroIntegrationBundle' => 'Oro\\Bundle\\IntegrationBundle\\OroIntegrationBundle', 'AkeneoBatchBundle' => 'Akeneo\\Bundle\\BatchBundle\\AkeneoBatchBundle', 'JDareClankBundle' => 'JDare\\ClankBundle\\JDareClankBundle', 'JMSJobQueueBundle' => 'JMS\\JobQueueBundle\\JMSJobQueueBundle', 'KnpGaufretteBundle' => 'Knp\\Bundle\\GaufretteBundle\\KnpGaufretteBundle', 'MainStockValueBundle' => 'Main\\StockValueBundle\\MainStockValueBundle', 'OroActivityBundle' => 'Oro\\Bundle\\ActivityBundle\\OroActivityBundle', 'OroActivityListBundle' => 'Oro\\Bundle\\ActivityListBundle\\OroActivityListBundle', 'OroAddressBundle' => 'Oro\\Bundle\\AddressBundle\\OroAddressBundle', 'OroAsseticBundle' => 'Oro\\Bundle\\AsseticBundle\\OroAsseticBundle', 'OroBatchBundle' => 'Oro\\Bundle\\BatchBundle\\OroBatchBundle', 'OroBusinessEntitiesBundle' => 'Oro\\Bundle\\BusinessEntitiesBundle\\OroBusinessEntitiesBundle', 'OroCalendarBundle' => 'Oro\\Bundle\\CalendarBundle\\OroCalendarBundle', 'OroChartBundle' => 'Oro\\Bundle\\ChartBundle\\OroChartBundle', 'OroConfigBundle' => 'Oro\\Bundle\\ConfigBundle\\OroConfigBundle', 'OroCronBundle' => 'Oro\\Bundle\\CronBundle\\OroCronBundle', 'OroDataAuditBundle' => 'Oro\\Bundle\\DataAuditBundle\\OroDataAuditBundle', 'OroDataGridBundle' => 'Oro\\Bundle\\DataGridBundle\\OroDataGridBundle', 'OroDistributionBundle' => 'Oro\\Bundle\\DistributionBundle\\OroDistributionBundle', 'OroEmbeddedFormBundle' => 'Oro\\Bundle\\EmbeddedFormBundle\\OroEmbeddedFormBundle', 'OroEntityMergeBundle' => 'Oro\\Bundle\\EntityMergeBundle\\OroEntityMergeBundle', 'OroEntityPaginationBundle' => 'Oro\\Bundle\\EntityPaginationBundle\\OroEntityPaginationBundle', 'OroFilterBundle' => 'Oro\\Bundle\\FilterBundle\\OroFilterBundle', 'OroFormBundle' => 'Oro\\Bundle\\FormBundle\\OroFormBundle', 'OroHelpBundle' => 'Oro\\Bundle\\HelpBundle\\OroHelpBundle', 'OroImapBundle' => 'Oro\\Bundle\\ImapBundle\\OroImapBundle', 'OroImportExportBundle' => 'Oro\\Bundle\\ImportExportBundle\\OroImportExportBundle', 'OroInstallerBundle' => 'Oro\\Bundle\\InstallerBundle\\OroInstallerBundle', 'OroLocaleBundle' => 'Oro\\Bundle\\LocaleBundle\\OroLocaleBundle', 'OroMigrationBundle' => 'Oro\\Bundle\\MigrationBundle\\OroMigrationBundle', 'OroNoteBundle' => 'Oro\\Bundle\\NoteBundle\\OroNoteBundle', 'OroNotificationBundle' => 'Oro\\Bundle\\NotificationBundle\\OroNotificationBundle', 'OroPlatformBundle' => 'Oro\\Bundle\\PlatformBundle\\OroPlatformBundle', 'OroQueryDesignerBundle' => 'Oro\\Bundle\\QueryDesignerBundle\\OroQueryDesignerBundle', 'OroReportBundle' => 'Oro\\Bundle\\ReportBundle\\OroReportBundle', 'OroRequireJSBundle' => 'Oro\\Bundle\\RequireJSBundle\\OroRequireJSBundle', 'OroSearchBundle' => 'Oro\\Bundle\\SearchBundle\\OroSearchBundle', 'OroSegmentBundle' => 'Oro\\Bundle\\SegmentBundle\\OroSegmentBundle', 'OroSidebarBundle' => 'Oro\\Bundle\\SidebarBundle\\OroSidebarBundle', 'OroSoapBundle' => 'Oro\\Bundle\\SoapBundle\\OroSoapBundle', 'OroTagBundle' => 'Oro\\Bundle\\TagBundle\\OroTagBundle', 'OroThemeBundle' => 'Oro\\Bundle\\ThemeBundle\\OroThemeBundle', 'OroTranslationBundle' => 'Oro\\Bundle\\TranslationBundle\\OroTranslationBundle', 'OroWindowsBundle' => 'Oro\\Bundle\\WindowsBundle\\OroWindowsBundle', 'OroWorkflowBundle' => 'Oro\\Bundle\\WorkflowBundle\\OroWorkflowBundle', 'SecurityStockValueBundle' => 'Security\\StockValueBundle\\SecurityStockValueBundle', 'SyliusFlowBundle' => 'Sylius\\Bundle\\FlowBundle\\SyliusFlowBundle', 'OroCommentBundle' => 'Oro\\Bundle\\CommentBundle\\OroCommentBundle', 'OroDashboardBundle' => 'Oro\\Bundle\\DashboardBundle\\OroDashboardBundle', 'OroNavigationBundle' => 'Oro\\Bundle\\NavigationBundle\\OroNavigationBundle', 'OroTrackingBundle' => 'Oro\\Bundle\\TrackingBundle\\OroTrackingBundle', 'OroReminderBundle' => 'Oro\\Bundle\\ReminderBundle\\OroReminderBundle', 'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle', 'SensioDistributionBundle' => 'Sensio\\Bundle\\DistributionBundle\\SensioDistributionBundle'), $this->get('oro_workflow.configuration.config.workflow_list'));
    }

    /**
     * Gets the 'oro_workflow.configuration_pass.replace_property_path' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\ConfigurationPass\ReplacePropertyPath A Oro\Bundle\WorkflowBundle\Model\ConfigurationPass\ReplacePropertyPath instance.
     */
    protected function getOroWorkflow_ConfigurationPass_ReplacePropertyPathService()
    {
        return $this->services['oro_workflow.configuration_pass.replace_property_path'] = new \Oro\Bundle\WorkflowBundle\Model\ConfigurationPass\ReplacePropertyPath('data');
    }

    /**
     * Gets the 'oro_workflow.context_accessor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\ContextAccessor A Oro\Bundle\WorkflowBundle\Model\ContextAccessor instance.
     */
    protected function getOroWorkflow_ContextAccessorService()
    {
        return $this->services['oro_workflow.context_accessor'] = new \Oro\Bundle\WorkflowBundle\Model\ContextAccessor();
    }

    /**
     * Gets the 'oro_workflow.datagrid.action.workflow_activate' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Datagrid\Action\WorkflowActivateAction A Oro\Bundle\WorkflowBundle\Datagrid\Action\WorkflowActivateAction instance.
     */
    protected function getOroWorkflow_Datagrid_Action_WorkflowActivateService()
    {
        return new \Oro\Bundle\WorkflowBundle\Datagrid\Action\WorkflowActivateAction();
    }

    /**
     * Gets the 'oro_workflow.datagrid.action_permission_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Datagrid\ActionPermissionProvider A Oro\Bundle\WorkflowBundle\Datagrid\ActionPermissionProvider instance.
     */
    protected function getOroWorkflow_Datagrid_ActionPermissionProviderService()
    {
        return $this->services['oro_workflow.datagrid.action_permission_provider'] = new \Oro\Bundle\WorkflowBundle\Datagrid\ActionPermissionProvider($this->get('oro_entity_config.provider.workflow'));
    }

    /**
     * Gets the 'oro_workflow.datagrid.listener.workflow_step_column' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Datagrid\WorkflowStepColumnListener A Oro\Bundle\WorkflowBundle\Datagrid\WorkflowStepColumnListener instance.
     */
    protected function getOroWorkflow_Datagrid_Listener_WorkflowStepColumnService()
    {
        $this->services['oro_workflow.datagrid.listener.workflow_step_column'] = $instance = new \Oro\Bundle\WorkflowBundle\Datagrid\WorkflowStepColumnListener($this->get('oro_entity.doctrine_helper'), $this->get('oro_entity_config.provider.workflow'), $this->get('oro_workflow.manager'));

        $instance->addWorkflowStepColumn('workflowStep');
        $instance->addWorkflowStepColumn('workflowStepLabel');
        $instance->addWorkflowStepColumn('step');
        $instance->addWorkflowStepColumn('stepLabel');

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.datagrid.process_definition_entity_name_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Datagrid\GridEntityNameProvider A Oro\Bundle\WorkflowBundle\Datagrid\GridEntityNameProvider instance.
     */
    protected function getOroWorkflow_Datagrid_ProcessDefinitionEntityNameProviderService()
    {
        $this->services['oro_workflow.datagrid.process_definition_entity_name_provider'] = $instance = new \Oro\Bundle\WorkflowBundle\Datagrid\GridEntityNameProvider($this->get('oro_entity_config.provider.entity'), $this->get('doctrine.orm.default_entity_manager'), $this->get('translator'));

        $instance->setEntityName('OroWorkflowBundle:ProcessDefinition');

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.datagrid.workflow_definition_entity_name_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Datagrid\GridEntityNameProvider A Oro\Bundle\WorkflowBundle\Datagrid\GridEntityNameProvider instance.
     */
    protected function getOroWorkflow_Datagrid_WorkflowDefinitionEntityNameProviderService()
    {
        $this->services['oro_workflow.datagrid.workflow_definition_entity_name_provider'] = $instance = new \Oro\Bundle\WorkflowBundle\Datagrid\GridEntityNameProvider($this->get('oro_entity_config.provider.entity'), $this->get('doctrine.orm.default_entity_manager'), $this->get('translator'));

        $instance->setEntityName('OroWorkflowBundle:WorkflowDefinition');

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.entity_connector' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\EntityConnector A Oro\Bundle\WorkflowBundle\Model\EntityConnector instance.
     */
    protected function getOroWorkflow_EntityConnectorService()
    {
        return $this->services['oro_workflow.entity_connector'] = new \Oro\Bundle\WorkflowBundle\Model\EntityConnector();
    }

    /**
     * Gets the 'oro_workflow.entity_field_list_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\EntityWithFieldsProvider A Oro\Bundle\EntityBundle\Provider\EntityWithFieldsProvider instance.
     */
    protected function getOroWorkflow_EntityFieldListProviderService()
    {
        return $this->services['oro_workflow.entity_field_list_provider'] = new \Oro\Bundle\EntityBundle\Provider\EntityWithFieldsProvider($this->get('oro_workflow.entity_field_provider'), $this->get('oro_workflow.entity_provider'));
    }

    /**
     * Gets the 'oro_workflow.entity_field_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Field\FieldProvider A Oro\Bundle\WorkflowBundle\Field\FieldProvider instance.
     */
    protected function getOroWorkflow_EntityFieldProviderService()
    {
        $this->services['oro_workflow.entity_field_provider'] = $instance = new \Oro\Bundle\WorkflowBundle\Field\FieldProvider($this->get('oro_entity_config.provider.entity'), $this->get('oro_entity_config.provider.extend'), $this->get('oro_entity.orm.entity_class_resolver'), $this->get('oro_entity_extend.extend.field_type_helper'), $this->get('doctrine'), $this->get('translator'), array());

        $instance->setEntityProvider($this->get('oro_entity.entity_provider'));
        $instance->setVirtualFieldProvider($this->get('oro_entity.virtual_field_provider'));
        $instance->setVirtualRelationProvider($this->get('oro_entity.virtual_relation_provider.chain'));
        $instance->setExclusionProvider($this->get('oro_entity.exclusion_provider'));
        $instance->setEntityProvider($this->get('oro_workflow.entity_provider'));
        $instance->setExclusionProvider($this->get('oro_workflow.exclusion_provider'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.entity_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\EntityProvider A Oro\Bundle\EntityBundle\Provider\EntityProvider instance.
     */
    protected function getOroWorkflow_EntityProviderService()
    {
        $this->services['oro_workflow.entity_provider'] = $instance = new \Oro\Bundle\EntityBundle\Provider\EntityProvider($this->get('oro_entity_config.provider.entity'), $this->get('oro_entity_config.provider.extend'), $this->get('oro_entity.orm.entity_class_resolver'), $this->get('translator'));

        $instance->setExclusionProvider($this->get('oro_entity.exclusion_provider'));
        $instance->setExclusionProvider($this->get('oro_workflow.exclusion_provider'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.exclusion_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\ChainExclusionProvider A Oro\Bundle\EntityBundle\Provider\ChainExclusionProvider instance.
     */
    protected function getOroWorkflow_ExclusionProviderService()
    {
        $this->services['oro_workflow.exclusion_provider'] = $instance = new \Oro\Bundle\EntityBundle\Provider\ChainExclusionProvider();

        $instance->addProvider($this->get('oro_entity.exclusion_provider'));
        $instance->addProvider($this->get('oro_entity.exclusion_provider.dictionary'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.expression.acl_granted' service.
     *
     * @return \Oro\Bundle\SecurityBundle\ConfigExpression\AclGranted A Oro\Bundle\SecurityBundle\ConfigExpression\AclGranted instance.
     */
    protected function getOroWorkflow_Expression_AclGrantedService()
    {
        return new \Oro\Bundle\SecurityBundle\ConfigExpression\AclGranted($this->get('oro_security.security_facade'), $this->get('doctrine'));
    }

    /**
     * Gets the 'oro_workflow.expression.andx' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\Andx A Oro\Component\ConfigExpression\Condition\Andx instance.
     */
    protected function getOroWorkflow_Expression_AndxService()
    {
        return new \Oro\Component\ConfigExpression\Condition\Andx();
    }

    /**
     * Gets the 'oro_workflow.expression.assembler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\ConfigExpression\ExpressionAssembler A Oro\Component\ConfigExpression\ExpressionAssembler instance.
     */
    protected function getOroWorkflow_Expression_AssemblerService()
    {
        $this->services['oro_workflow.expression.assembler'] = $instance = new \Oro\Component\ConfigExpression\ExpressionAssembler($this->get('oro_workflow.expression.factory'));

        $instance->addConfigurationPass($this->get('oro_workflow.configuration_pass.replace_property_path'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.expression.blank' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\Blank A Oro\Component\ConfigExpression\Condition\Blank instance.
     */
    protected function getOroWorkflow_Expression_BlankService()
    {
        return new \Oro\Component\ConfigExpression\Condition\Blank();
    }

    /**
     * Gets the 'oro_workflow.expression.context_accessor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\ConfigExpression\ContextAccessor A Oro\Component\ConfigExpression\ContextAccessor instance.
     */
    protected function getOroWorkflow_Expression_ContextAccessorService()
    {
        return $this->services['oro_workflow.expression.context_accessor'] = new \Oro\Component\ConfigExpression\ContextAccessor();
    }

    /**
     * Gets the 'oro_workflow.expression.equal_to' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\EqualTo A Oro\Component\ConfigExpression\Condition\EqualTo instance.
     */
    protected function getOroWorkflow_Expression_EqualToService()
    {
        return new \Oro\Component\ConfigExpression\Condition\EqualTo();
    }

    /**
     * Gets the 'oro_workflow.expression.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\ConfigExpression\Extension\DependencyInjection\DependencyInjectionExtension A Oro\Component\ConfigExpression\Extension\DependencyInjection\DependencyInjectionExtension instance.
     */
    protected function getOroWorkflow_Expression_ExtensionService()
    {
        return $this->services['oro_workflow.expression.extension'] = new \Oro\Component\ConfigExpression\Extension\DependencyInjection\DependencyInjectionExtension($this, array('instanceof' => 'oro_email.workflow.condition.instanceof', 'has_count' => 'oro_email.workflow.condition.has_count', 'has_active_integration' => 'oro_integration.workflow.condition.has_active_integration', 'configurable' => 'oro_workflow.condition.configurable', 'and' => 'oro_workflow.expression.andx', 'or' => 'oro_workflow.expression.orx', 'not' => 'oro_workflow.expression.not', 'true' => 'oro_workflow.expression.true', 'false' => 'oro_workflow.expression.false', 'eq' => 'oro_workflow.expression.equal_to', 'equal' => 'oro_workflow.expression.equal_to', 'neq' => 'oro_workflow.expression.not_equal_to', 'not_equal' => 'oro_workflow.expression.not_equal_to', 'empty' => 'oro_workflow.expression.blank', 'blank' => 'oro_workflow.expression.blank', 'not_empty' => 'oro_workflow.expression.not_blank', 'not_blank' => 'oro_workflow.expression.not_blank', 'has_value' => 'oro_workflow.expression.has_value', 'not_has_value' => 'oro_workflow.expression.not_has_value', 'gt' => 'oro_workflow.expression.greater_than', 'greater' => 'oro_workflow.expression.greater_than', 'gte' => 'oro_workflow.expression.greater_than_or_equal', 'ge' => 'oro_workflow.expression.greater_than_or_equal', 'greater_or_equal' => 'oro_workflow.expression.greater_than_or_equal', 'lt' => 'oro_workflow.expression.less_than', 'less' => 'oro_workflow.expression.less_than', 'lte' => 'oro_workflow.expression.less_than_or_equal', 'le' => 'oro_workflow.expression.less_than_or_equal', 'less_or_equal' => 'oro_workflow.expression.less_than_or_equal', 'acl' => 'oro_workflow.expression.acl_granted', 'acl_granted' => 'oro_workflow.expression.acl_granted'));
    }

    /**
     * Gets the 'oro_workflow.expression.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Component\ConfigExpression\ExpressionFactory A Oro\Component\ConfigExpression\ExpressionFactory instance.
     */
    protected function getOroWorkflow_Expression_FactoryService()
    {
        $this->services['oro_workflow.expression.factory'] = $instance = new \Oro\Component\ConfigExpression\ExpressionFactory($this->get('oro_workflow.expression.context_accessor'));

        $instance->addExtension($this->get('oro_workflow.expression.extension'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.expression.false' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\False A Oro\Component\ConfigExpression\Condition\False instance.
     */
    protected function getOroWorkflow_Expression_FalseService()
    {
        return new \Oro\Component\ConfigExpression\Condition\False();
    }

    /**
     * Gets the 'oro_workflow.expression.greater_than' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\GreaterThan A Oro\Component\ConfigExpression\Condition\GreaterThan instance.
     */
    protected function getOroWorkflow_Expression_GreaterThanService()
    {
        return new \Oro\Component\ConfigExpression\Condition\GreaterThan();
    }

    /**
     * Gets the 'oro_workflow.expression.greater_than_or_equal' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\GreaterThanOrEqual A Oro\Component\ConfigExpression\Condition\GreaterThanOrEqual instance.
     */
    protected function getOroWorkflow_Expression_GreaterThanOrEqualService()
    {
        return new \Oro\Component\ConfigExpression\Condition\GreaterThanOrEqual();
    }

    /**
     * Gets the 'oro_workflow.expression.has_value' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\HasValue A Oro\Component\ConfigExpression\Condition\HasValue instance.
     */
    protected function getOroWorkflow_Expression_HasValueService()
    {
        return new \Oro\Component\ConfigExpression\Condition\HasValue();
    }

    /**
     * Gets the 'oro_workflow.expression.less_than' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\LessThan A Oro\Component\ConfigExpression\Condition\LessThan instance.
     */
    protected function getOroWorkflow_Expression_LessThanService()
    {
        return new \Oro\Component\ConfigExpression\Condition\LessThan();
    }

    /**
     * Gets the 'oro_workflow.expression.less_than_or_equal' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\LessThanOrEqual A Oro\Component\ConfigExpression\Condition\LessThanOrEqual instance.
     */
    protected function getOroWorkflow_Expression_LessThanOrEqualService()
    {
        return new \Oro\Component\ConfigExpression\Condition\LessThanOrEqual();
    }

    /**
     * Gets the 'oro_workflow.expression.not' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\Not A Oro\Component\ConfigExpression\Condition\Not instance.
     */
    protected function getOroWorkflow_Expression_NotService()
    {
        return new \Oro\Component\ConfigExpression\Condition\Not();
    }

    /**
     * Gets the 'oro_workflow.expression.not_blank' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\NotBlank A Oro\Component\ConfigExpression\Condition\NotBlank instance.
     */
    protected function getOroWorkflow_Expression_NotBlankService()
    {
        return new \Oro\Component\ConfigExpression\Condition\NotBlank();
    }

    /**
     * Gets the 'oro_workflow.expression.not_equal_to' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\NotEqualTo A Oro\Component\ConfigExpression\Condition\NotEqualTo instance.
     */
    protected function getOroWorkflow_Expression_NotEqualToService()
    {
        return new \Oro\Component\ConfigExpression\Condition\NotEqualTo();
    }

    /**
     * Gets the 'oro_workflow.expression.not_has_value' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\NotHasValue A Oro\Component\ConfigExpression\Condition\NotHasValue instance.
     */
    protected function getOroWorkflow_Expression_NotHasValueService()
    {
        return new \Oro\Component\ConfigExpression\Condition\NotHasValue();
    }

    /**
     * Gets the 'oro_workflow.expression.orx' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\Orx A Oro\Component\ConfigExpression\Condition\Orx instance.
     */
    protected function getOroWorkflow_Expression_OrxService()
    {
        return new \Oro\Component\ConfigExpression\Condition\Orx();
    }

    /**
     * Gets the 'oro_workflow.expression.true' service.
     *
     * @return \Oro\Component\ConfigExpression\Condition\True A Oro\Component\ConfigExpression\Condition\True instance.
     */
    protected function getOroWorkflow_Expression_TrueService()
    {
        return new \Oro\Component\ConfigExpression\Condition\True();
    }

    /**
     * Gets the 'oro_workflow.field_generator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Field\FieldGenerator A Oro\Bundle\WorkflowBundle\Field\FieldGenerator instance.
     */
    protected function getOroWorkflow_FieldGeneratorService()
    {
        return $this->services['oro_workflow.field_generator'] = new \Oro\Bundle\WorkflowBundle\Field\FieldGenerator($this->get('oro_entity_config.config_manager'), $this->get('oro_entity_extend.extend.entity_processor'), $this->get('oro_workflow.entity_connector'));
    }

    /**
     * Gets the 'oro_workflow.form.event_listener.default_values' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Form\EventListener\DefaultValuesListener A Oro\Bundle\WorkflowBundle\Form\EventListener\DefaultValuesListener instance.
     */
    protected function getOroWorkflow_Form_EventListener_DefaultValuesService()
    {
        return $this->services['oro_workflow.form.event_listener.default_values'] = new \Oro\Bundle\WorkflowBundle\Form\EventListener\DefaultValuesListener($this->get('oro_workflow.context_accessor'));
    }

    /**
     * Gets the 'oro_workflow.form.event_listener.init_actions' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Form\EventListener\InitActionsListener A Oro\Bundle\WorkflowBundle\Form\EventListener\InitActionsListener instance.
     */
    protected function getOroWorkflow_Form_EventListener_InitActionsService()
    {
        return $this->services['oro_workflow.form.event_listener.init_actions'] = new \Oro\Bundle\WorkflowBundle\Form\EventListener\InitActionsListener();
    }

    /**
     * Gets the 'oro_workflow.form.event_listener.required_attributes' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Form\EventListener\RequiredAttributesListener A Oro\Bundle\WorkflowBundle\Form\EventListener\RequiredAttributesListener instance.
     */
    protected function getOroWorkflow_Form_EventListener_RequiredAttributesService()
    {
        return $this->services['oro_workflow.form.event_listener.required_attributes'] = new \Oro\Bundle\WorkflowBundle\Form\EventListener\RequiredAttributesListener();
    }

    /**
     * Gets the 'oro_workflow.form.type.applicable_entities' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Form\Type\ApplicableEntitiesType A Oro\Bundle\WorkflowBundle\Form\Type\ApplicableEntitiesType instance.
     */
    protected function getOroWorkflow_Form_Type_ApplicableEntitiesService()
    {
        return $this->services['oro_workflow.form.type.applicable_entities'] = new \Oro\Bundle\WorkflowBundle\Form\Type\ApplicableEntitiesType($this->get('oro_entity_config.config_manager'), $this->get('oro_workflow.entity_connector'));
    }

    /**
     * Gets the 'oro_workflow.form.type.attributes' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Form\Type\WorkflowAttributesType A Oro\Bundle\WorkflowBundle\Form\Type\WorkflowAttributesType instance.
     */
    protected function getOroWorkflow_Form_Type_AttributesService()
    {
        return $this->services['oro_workflow.form.type.attributes'] = new \Oro\Bundle\WorkflowBundle\Form\Type\WorkflowAttributesType($this->get('oro_workflow.registry'), $this->get('oro_workflow.attribute_guesser'), $this->get('oro_workflow.form.event_listener.default_values'), $this->get('oro_workflow.form.event_listener.init_actions'), $this->get('oro_workflow.form.event_listener.required_attributes'), $this->get('oro_workflow.context_accessor'));
    }

    /**
     * Gets the 'oro_workflow.form.type.transition' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Form\Type\WorkflowTransitionType A Oro\Bundle\WorkflowBundle\Form\Type\WorkflowTransitionType instance.
     */
    protected function getOroWorkflow_Form_Type_TransitionService()
    {
        return $this->services['oro_workflow.form.type.transition'] = new \Oro\Bundle\WorkflowBundle\Form\Type\WorkflowTransitionType();
    }

    /**
     * Gets the 'oro_workflow.form.type.workflow_definition' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Form\Type\WorkflowDefinitionType A Oro\Bundle\WorkflowBundle\Form\Type\WorkflowDefinitionType instance.
     */
    protected function getOroWorkflow_Form_Type_WorkflowDefinitionService()
    {
        return $this->services['oro_workflow.form.type.workflow_definition'] = new \Oro\Bundle\WorkflowBundle\Form\Type\WorkflowDefinitionType();
    }

    /**
     * Gets the 'oro_workflow.form.type.workflow_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Form\Type\WorkflowSelectType A Oro\Bundle\WorkflowBundle\Form\Type\WorkflowSelectType instance.
     */
    protected function getOroWorkflow_Form_Type_WorkflowSelectService()
    {
        return $this->services['oro_workflow.form.type.workflow_select'] = new \Oro\Bundle\WorkflowBundle\Form\Type\WorkflowSelectType($this->get('doctrine'));
    }

    /**
     * Gets the 'oro_workflow.form.type.workflow_step_select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Form\Type\WorkflowStepSelectType A Oro\Bundle\WorkflowBundle\Form\Type\WorkflowStepSelectType instance.
     */
    protected function getOroWorkflow_Form_Type_WorkflowStepSelectService()
    {
        return $this->services['oro_workflow.form.type.workflow_step_select'] = new \Oro\Bundle\WorkflowBundle\Form\Type\WorkflowStepSelectType($this->get('oro_workflow.manager'));
    }

    /**
     * Gets the 'oro_workflow.form.workflow_definition' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance.
     */
    protected function getOroWorkflow_Form_WorkflowDefinitionService()
    {
        return $this->services['oro_workflow.form.workflow_definition'] = $this->get('form.factory')->createNamed('oro_workflow_definition_form', 'oro_workflow_definition', NULL);
    }

    /**
     * Gets the 'oro_workflow.form_options_assembler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\FormOptionsAssembler A Oro\Bundle\WorkflowBundle\Model\FormOptionsAssembler instance.
     */
    protected function getOroWorkflow_FormOptionsAssemblerService()
    {
        $this->services['oro_workflow.form_options_assembler'] = $instance = new \Oro\Bundle\WorkflowBundle\Model\FormOptionsAssembler($this->get('oro_workflow.action_factory'));

        $instance->addConfigurationPass($this->get('oro_workflow.configuration_pass.replace_property_path'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.listener.process_collector' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\WorkflowBundle\EventListener\ProcessCollectorListener A Oro\Bundle\WorkflowBundle\EventListener\ProcessCollectorListener instance.
     */
    public function getOroWorkflow_Listener_ProcessCollectorService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_workflow.listener.process_collector'] = new OroBundleWorkflowBundleEventListenerProcessCollectorListener_000000002e47ff9c00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroWorkflow_Listener_ProcessCollectorService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\WorkflowBundle\EventListener\ProcessCollectorListener($this->get('doctrine'), $this->get('oro_entity.doctrine_helper'), $this->get('oro_workflow.process.process_handler'), $this->get('oro_workflow.process.logger'), $this->get('oro_workflow.cache.process_trigger'), $this->get('oro_workflow.process.schedule_policy.exclude_definitions'));
    }

    /**
     * Gets the 'oro_workflow.listener.process_data_serialize' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\WorkflowBundle\EventListener\ProcessDataSerializeListener A Oro\Bundle\WorkflowBundle\EventListener\ProcessDataSerializeListener instance.
     */
    public function getOroWorkflow_Listener_ProcessDataSerializeService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_workflow.listener.process_data_serialize'] = new OroBundleWorkflowBundleEventListenerProcessDataSerializeListener_000000002e47fdb700000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroWorkflow_Listener_ProcessDataSerializeService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\WorkflowBundle\EventListener\ProcessDataSerializeListener($this->get('oro_workflow.serializer.process.serializer'));
    }

    /**
     * Gets the 'oro_workflow.listener.workflow_data_serialize' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\WorkflowBundle\EventListener\WorkflowDataSerializeListener A Oro\Bundle\WorkflowBundle\EventListener\WorkflowDataSerializeListener instance.
     */
    public function getOroWorkflow_Listener_WorkflowDataSerializeService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_workflow.listener.workflow_data_serialize'] = new OroBundleWorkflowBundleEventListenerWorkflowDataSerializeListener_000000002e47fd5000000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroWorkflow_Listener_WorkflowDataSerializeService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\WorkflowBundle\EventListener\WorkflowDataSerializeListener($this->get('oro_workflow.serializer.data.serializer'), $this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_workflow.listener.workflow_item' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\WorkflowBundle\EventListener\WorkflowItemListener A Oro\Bundle\WorkflowBundle\EventListener\WorkflowItemListener instance.
     */
    public function getOroWorkflow_Listener_WorkflowItemService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_workflow.listener.workflow_item'] = new OroBundleWorkflowBundleEventListenerWorkflowItemListener_000000002e47fd4100000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroWorkflow_Listener_WorkflowItemService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\WorkflowBundle\EventListener\WorkflowItemListener($this->get('oro_entity.doctrine_helper'), $this->get('oro_workflow.entity_connector'), $this->get('oro_workflow.manager'));
    }

    /**
     * Gets the 'oro_workflow.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\WorkflowManager A Oro\Bundle\WorkflowBundle\Model\WorkflowManager instance.
     */
    protected function getOroWorkflow_ManagerService()
    {
        return $this->services['oro_workflow.manager'] = new \Oro\Bundle\WorkflowBundle\Model\WorkflowManager($this->get('doctrine'), $this->get('oro_workflow.registry'), $this->get('oro_entity.doctrine_helper'), $this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_workflow.process.logger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\ProcessLogger A Oro\Bundle\WorkflowBundle\Model\ProcessLogger instance.
     */
    protected function getOroWorkflow_Process_LoggerService()
    {
        return $this->services['oro_workflow.process.logger'] = new \Oro\Bundle\WorkflowBundle\Model\ProcessLogger($this->get('oro_entity.doctrine_helper'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'oro_workflow.process.process_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\ProcessFactory A Oro\Bundle\WorkflowBundle\Model\ProcessFactory instance.
     */
    protected function getOroWorkflow_Process_ProcessFactoryService()
    {
        return $this->services['oro_workflow.process.process_factory'] = new \Oro\Bundle\WorkflowBundle\Model\ProcessFactory($this->get('oro_workflow.action_assembler'));
    }

    /**
     * Gets the 'oro_workflow.process.process_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\ProcessHandler A Oro\Bundle\WorkflowBundle\Model\ProcessHandler instance.
     */
    protected function getOroWorkflow_Process_ProcessHandlerService()
    {
        return $this->services['oro_workflow.process.process_handler'] = new \Oro\Bundle\WorkflowBundle\Model\ProcessHandler($this->get('oro_workflow.process.process_factory'), $this->get('oro_workflow.process.logger'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'oro_workflow.process.schedule_policy.exclude_definitions' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\ExcludeDefinitionsProcessSchedulePolicy A Oro\Bundle\WorkflowBundle\Model\ExcludeDefinitionsProcessSchedulePolicy instance.
     */
    protected function getOroWorkflow_Process_SchedulePolicy_ExcludeDefinitionsService()
    {
        return $this->services['oro_workflow.process.schedule_policy.exclude_definitions'] = new \Oro\Bundle\WorkflowBundle\Model\ExcludeDefinitionsProcessSchedulePolicy();
    }

    /**
     * Gets the 'oro_workflow.prototype.attribute_manager' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\AttributeManager A Oro\Bundle\WorkflowBundle\Model\AttributeManager instance.
     */
    protected function getOroWorkflow_Prototype_AttributeManagerService()
    {
        return new \Oro\Bundle\WorkflowBundle\Model\AttributeManager();
    }

    /**
     * Gets the 'oro_workflow.prototype.step_manager' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\StepManager A Oro\Bundle\WorkflowBundle\Model\StepManager instance.
     */
    protected function getOroWorkflow_Prototype_StepManagerService()
    {
        return new \Oro\Bundle\WorkflowBundle\Model\StepManager();
    }

    /**
     * Gets the 'oro_workflow.prototype.transition_manager' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\TransitionManager A Oro\Bundle\WorkflowBundle\Model\TransitionManager instance.
     */
    protected function getOroWorkflow_Prototype_TransitionManagerService()
    {
        return new \Oro\Bundle\WorkflowBundle\Model\TransitionManager();
    }

    /**
     * Gets the 'oro_workflow.prototype.workflow' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Workflow A Oro\Bundle\WorkflowBundle\Model\Workflow instance.
     */
    protected function getOroWorkflow_Prototype_WorkflowService()
    {
        return new \Oro\Bundle\WorkflowBundle\Model\Workflow($this->get('oro_workflow.entity_connector'), $this->get('oro_workflow.security.acl.manager'), new \Oro\Bundle\WorkflowBundle\Model\StepManager(), new \Oro\Bundle\WorkflowBundle\Model\AttributeManager(), new \Oro\Bundle\WorkflowBundle\Model\TransitionManager());
    }

    /**
     * Gets the 'oro_workflow.registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\WorkflowRegistry A Oro\Bundle\WorkflowBundle\Model\WorkflowRegistry instance.
     */
    protected function getOroWorkflow_RegistryService()
    {
        return $this->services['oro_workflow.registry'] = new \Oro\Bundle\WorkflowBundle\Model\WorkflowRegistry($this->get('doctrine'), $this->get('oro_workflow.workflow_assembler'), $this->get('oro_entity_config.provider.workflow'));
    }

    /**
     * Gets the 'oro_workflow.security.acl.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Acl\AclManager A Oro\Bundle\WorkflowBundle\Acl\AclManager instance.
     */
    protected function getOroWorkflow_Security_Acl_ManagerService()
    {
        return $this->services['oro_workflow.security.acl.manager'] = new \Oro\Bundle\WorkflowBundle\Acl\AclManager($this->get('oro_entity.doctrine_helper'), $this->get('oro_workflow.registry'));
    }

    /**
     * Gets the 'oro_workflow.security.acl.voter.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Acl\Voter\WorkflowEntityVoter A Oro\Bundle\WorkflowBundle\Acl\Voter\WorkflowEntityVoter instance.
     */
    protected function getOroWorkflow_Security_Acl_Voter_EntityService()
    {
        return $this->services['oro_workflow.security.acl.voter.entity'] = new \Oro\Bundle\WorkflowBundle\Acl\Voter\WorkflowEntityVoter($this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_workflow.serializer.data.attribute_normalizer.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\EntityAttributeNormalizer A Oro\Bundle\WorkflowBundle\Serializer\Normalizer\EntityAttributeNormalizer instance.
     */
    protected function getOroWorkflow_Serializer_Data_AttributeNormalizer_EntityService()
    {
        return $this->services['oro_workflow.serializer.data.attribute_normalizer.entity'] = new \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\EntityAttributeNormalizer($this->get('doctrine'), $this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_workflow.serializer.data.attribute_normalizer.multiple_entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\MultipleEntityAttributeNormalizer A Oro\Bundle\WorkflowBundle\Serializer\Normalizer\MultipleEntityAttributeNormalizer instance.
     */
    protected function getOroWorkflow_Serializer_Data_AttributeNormalizer_MultipleEntityService()
    {
        return $this->services['oro_workflow.serializer.data.attribute_normalizer.multiple_entity'] = new \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\MultipleEntityAttributeNormalizer($this->get('doctrine'), $this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_workflow.serializer.data.attribute_normalizer.standard' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\StandardAttributeNormalizer A Oro\Bundle\WorkflowBundle\Serializer\Normalizer\StandardAttributeNormalizer instance.
     */
    protected function getOroWorkflow_Serializer_Data_AttributeNormalizer_StandardService()
    {
        return $this->services['oro_workflow.serializer.data.attribute_normalizer.standard'] = new \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\StandardAttributeNormalizer();
    }

    /**
     * Gets the 'oro_workflow.serializer.data.normalizer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\WorkflowDataNormalizer A Oro\Bundle\WorkflowBundle\Serializer\Normalizer\WorkflowDataNormalizer instance.
     */
    protected function getOroWorkflow_Serializer_Data_NormalizerService()
    {
        $this->services['oro_workflow.serializer.data.normalizer'] = $instance = new \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\WorkflowDataNormalizer();

        $instance->addAttributeNormalizer($this->get('oro_workflow.serializer.data.attribute_normalizer.standard'));
        $instance->addAttributeNormalizer($this->get('oro_workflow.serializer.data.attribute_normalizer.entity'));
        $instance->addAttributeNormalizer($this->get('oro_workflow.serializer.data.attribute_normalizer.multiple_entity'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.serializer.data.serializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Serializer\WorkflowDataSerializer A Oro\Bundle\WorkflowBundle\Serializer\WorkflowDataSerializer instance.
     */
    protected function getOroWorkflow_Serializer_Data_SerializerService()
    {
        $this->services['oro_workflow.serializer.data.serializer'] = $instance = new \Oro\Bundle\WorkflowBundle\Serializer\WorkflowDataSerializer(array(0 => $this->get('oro_workflow.serializer.data.normalizer')), array(0 => $this->get('serializer.encoder.json')));

        $instance->setWorkflowRegistry($this->get('oro_workflow.registry'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.serializer.handler.workflow_result' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Serializer\Handler\WorkflowResultHandler A Oro\Bundle\WorkflowBundle\Serializer\Handler\WorkflowResultHandler instance.
     */
    protected function getOroWorkflow_Serializer_Handler_WorkflowResultService()
    {
        return $this->services['oro_workflow.serializer.handler.workflow_result'] = new \Oro\Bundle\WorkflowBundle\Serializer\Handler\WorkflowResultHandler($this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_workflow.serializer.process.normalizer.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\ProcessEntityNormalizer A Oro\Bundle\WorkflowBundle\Serializer\Normalizer\ProcessEntityNormalizer instance.
     */
    protected function getOroWorkflow_Serializer_Process_Normalizer_EntityService()
    {
        return $this->services['oro_workflow.serializer.process.normalizer.entity'] = new \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\ProcessEntityNormalizer($this->get('doctrine'), $this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_workflow.serializer.process.normalizer.object' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\ProcessObjectNormalizer A Oro\Bundle\WorkflowBundle\Serializer\Normalizer\ProcessObjectNormalizer instance.
     */
    protected function getOroWorkflow_Serializer_Process_Normalizer_ObjectService()
    {
        return $this->services['oro_workflow.serializer.process.normalizer.object'] = new \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\ProcessObjectNormalizer();
    }

    /**
     * Gets the 'oro_workflow.serializer.process.normalizer.process_data' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\ProcessDataNormalizer A Oro\Bundle\WorkflowBundle\Serializer\Normalizer\ProcessDataNormalizer instance.
     */
    protected function getOroWorkflow_Serializer_Process_Normalizer_ProcessDataService()
    {
        return $this->services['oro_workflow.serializer.process.normalizer.process_data'] = new \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\ProcessDataNormalizer($this->get('oro_entity.doctrine_helper'));
    }

    /**
     * Gets the 'oro_workflow.serializer.process.normalizer.scalar' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\ProcessScalarNormalizer A Oro\Bundle\WorkflowBundle\Serializer\Normalizer\ProcessScalarNormalizer instance.
     */
    protected function getOroWorkflow_Serializer_Process_Normalizer_ScalarService()
    {
        return $this->services['oro_workflow.serializer.process.normalizer.scalar'] = new \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\ProcessScalarNormalizer();
    }

    /**
     * Gets the 'oro_workflow.serializer.process.normalizer.traversable' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\ProcessTraversableNormalizer A Oro\Bundle\WorkflowBundle\Serializer\Normalizer\ProcessTraversableNormalizer instance.
     */
    protected function getOroWorkflow_Serializer_Process_Normalizer_TraversableService()
    {
        return $this->services['oro_workflow.serializer.process.normalizer.traversable'] = new \Oro\Bundle\WorkflowBundle\Serializer\Normalizer\ProcessTraversableNormalizer();
    }

    /**
     * Gets the 'oro_workflow.serializer.process.serializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Serializer\ProcessDataSerializer A Oro\Bundle\WorkflowBundle\Serializer\ProcessDataSerializer instance.
     */
    protected function getOroWorkflow_Serializer_Process_SerializerService()
    {
        return $this->services['oro_workflow.serializer.process.serializer'] = new \Oro\Bundle\WorkflowBundle\Serializer\ProcessDataSerializer(array(0 => $this->get('oro_workflow.serializer.process.normalizer.process_data'), 1 => $this->get('oro_workflow.serializer.process.normalizer.entity'), 2 => $this->get('oro_workflow.serializer.process.normalizer.object'), 3 => $this->get('oro_workflow.serializer.process.normalizer.traversable'), 4 => $this->get('oro_workflow.serializer.process.normalizer.scalar')), array(0 => $this->get('serializer.encoder.json')));
    }

    /**
     * Gets the 'oro_workflow.step_assembler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\StepAssembler A Oro\Bundle\WorkflowBundle\Model\StepAssembler instance.
     */
    protected function getOroWorkflow_StepAssemblerService()
    {
        return $this->services['oro_workflow.step_assembler'] = new \Oro\Bundle\WorkflowBundle\Model\StepAssembler();
    }

    /**
     * Gets the 'oro_workflow.transition_assembler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\TransitionAssembler A Oro\Bundle\WorkflowBundle\Model\TransitionAssembler instance.
     */
    protected function getOroWorkflow_TransitionAssemblerService()
    {
        return $this->services['oro_workflow.transition_assembler'] = new \Oro\Bundle\WorkflowBundle\Model\TransitionAssembler($this->get('oro_workflow.form_options_assembler'), $this->get('oro_workflow.expression.factory'), $this->get('oro_workflow.action_factory'));
    }

    /**
     * Gets the 'oro_workflow.twig.extension.workflow' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Twig\WorkflowExtension A Oro\Bundle\WorkflowBundle\Twig\WorkflowExtension instance.
     */
    protected function getOroWorkflow_Twig_Extension_WorkflowService()
    {
        return $this->services['oro_workflow.twig.extension.workflow'] = new \Oro\Bundle\WorkflowBundle\Twig\WorkflowExtension($this->get('oro_workflow.manager'));
    }

    /**
     * Gets the 'oro_workflow.validator.transition_is_allowed' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Validator\Constraints\TransitionIsAllowedValidator A Oro\Bundle\WorkflowBundle\Validator\Constraints\TransitionIsAllowedValidator instance.
     */
    protected function getOroWorkflow_Validator_TransitionIsAllowedService()
    {
        return $this->services['oro_workflow.validator.transition_is_allowed'] = new \Oro\Bundle\WorkflowBundle\Validator\Constraints\TransitionIsAllowedValidator($this->get('oro_workflow.registry'));
    }

    /**
     * Gets the 'oro_workflow.workflow.action.assign_constant_value' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\AssignConstantValue A Oro\Bundle\WorkflowBundle\Model\Action\AssignConstantValue instance.
     */
    protected function getOroWorkflow_Workflow_Action_AssignConstantValueService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\AssignConstantValue($this->get('oro_workflow.context_accessor'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.workflow.action.copy_tagging.class' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\CopyTagging A Oro\Bundle\WorkflowBundle\Model\Action\CopyTagging instance.
     */
    protected function getOroWorkflow_Workflow_Action_CopyTagging_ClassService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\CopyTagging($this->get('oro_workflow.context_accessor'), $this->get('oro_tag.tag.manager'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.workflow.action.remove_entity' service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\Action\RemoveEntity A Oro\Bundle\WorkflowBundle\Model\Action\RemoveEntity instance.
     */
    protected function getOroWorkflow_Workflow_Action_RemoveEntityService()
    {
        $instance = new \Oro\Bundle\WorkflowBundle\Model\Action\RemoveEntity($this->get('oro_workflow.context_accessor'), $this->get('doctrine'));

        $instance->setDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'oro_workflow.workflow_assembler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\WorkflowBundle\Model\WorkflowAssembler A Oro\Bundle\WorkflowBundle\Model\WorkflowAssembler instance.
     */
    protected function getOroWorkflow_WorkflowAssemblerService()
    {
        return $this->services['oro_workflow.workflow_assembler'] = new \Oro\Bundle\WorkflowBundle\Model\WorkflowAssembler($this, $this->get('oro_workflow.attribute_assembler'), $this->get('oro_workflow.step_assembler'), $this->get('oro_workflow.transition_assembler'), $this->get('translator'));
    }

    /**
     * Gets the 'profiler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Profiler\Profiler A Symfony\Component\HttpKernel\Profiler\Profiler instance.
     */
    protected function getProfilerService()
    {
        $a = $this->get('monolog.logger.profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $b = $this->get('kernel', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $c = $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $d = $this->get('doctrine');

        $e = new \Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector();
        if ($this->has('kernel')) {
            $e->setKernel($b);
        }

        $f = new \Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector($d);
        $f->addLogger('session', $this->get('doctrine.dbal.logger.profiling.session'));
        $f->addLogger('default', $this->get('doctrine.dbal.logger.profiling.default'));
        $f->addLogger('report_source', $this->get('doctrine.dbal.logger.profiling.report_source'));
        $f->addLogger('report_target', $this->get('doctrine.dbal.logger.profiling.report_target'));

        $this->services['profiler'] = $instance = new \Symfony\Component\HttpKernel\Profiler\Profiler(new \Symfony\Component\HttpKernel\Profiler\FileProfilerStorage('file:C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/profiler', '', '', 86400), $a);

        $instance->add($e);
        $instance->add($this->get('data_collector.request'));
        $instance->add(new \Symfony\Bundle\FrameworkBundle\DataCollector\AjaxDataCollector());
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector());
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\EventDataCollector($this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector($a));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\TimeDataCollector($b, $c));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector());
        $instance->add($this->get('data_collector.router'));
        $instance->add($this->get('data_collector.form'));
        $instance->add($this->get('data_collector.translation'));
        $instance->add(new \Symfony\Bridge\Twig\DataCollector\TwigDataCollector($this->get('twig.profile')));
        $instance->add(new \Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector($this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.role_hierarchy')));
        $instance->add(new \Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector($this));
        $instance->add($f);
        $instance->add(new \Oro\Bundle\EntityBundle\DataCollector\OrmDataCollector(new \Oro\Bundle\EntityBundle\DataCollector\OrmLogger(array(1 => array('name' => 'ObjectHydrator', 'class' => 'Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator', 'loggingClass' => 'OroLoggingHydrator\\LoggingObjectHydrator'), 2 => array('name' => 'ArrayHydrator', 'class' => 'Doctrine\\ORM\\Internal\\Hydration\\ArrayHydrator', 'loggingClass' => 'OroLoggingHydrator\\LoggingArrayHydrator'), 3 => array('name' => 'ScalarHydrator', 'class' => 'Doctrine\\ORM\\Internal\\Hydration\\ScalarHydrator', 'loggingClass' => 'OroLoggingHydrator\\LoggingScalarHydrator'), 4 => array('name' => 'SingleScalarHydrator', 'class' => 'Doctrine\\ORM\\Internal\\Hydration\\SingleScalarHydrator', 'loggingClass' => 'OroLoggingHydrator\\LoggingSingleScalarHydrator'), 5 => array('name' => 'SimpleObjectHydrator', 'class' => 'Doctrine\\ORM\\Internal\\Hydration\\SimpleObjectHydrator', 'loggingClass' => 'OroLoggingHydrator\\LoggingSimpleObjectHydrator'), '__gedmo.translatable.object.hydrator' => array('name' => 'TranslatableObjectHydrator', 'class' => 'Gedmo\\Translatable\\Hydrator\\ORM\\ObjectHydrator', 'loggingClass' => 'OroLoggingHydrator\\LoggingTranslatableObjectHydrator'), '__gedmo.translatable.simple_object.hydrator' => array('name' => 'TranslatableSimpleObjectHydrator', 'class' => 'Gedmo\\Translatable\\Hydrator\\ORM\\SimpleObjectHydrator', 'loggingClass' => 'OroLoggingHydrator\\LoggingTranslatableSimpleObjectHydrator')), $d, $c)));

        return $instance;
    }

    /**
     * Gets the 'profiler_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ProfilerListener A Symfony\Component\HttpKernel\EventListener\ProfilerListener instance.
     */
    protected function getProfilerListenerService()
    {
        return $this->services['profiler_listener'] = new \Symfony\Component\HttpKernel\EventListener\ProfilerListener($this->get('profiler'), NULL, false, false, $this->get('request_stack'));
    }

    /**
     * Gets the 'property_accessor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\PropertyAccess\PropertyAccessor A Symfony\Component\PropertyAccess\PropertyAccessor instance.
     */
    protected function getPropertyAccessorService()
    {
        return $this->services['property_accessor'] = new \Symfony\Component\PropertyAccess\PropertyAccessor(false, false);
    }

    /**
     * Gets the 'request' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @throws RuntimeException always since this service is expected to be injected dynamically
     * @throws InactiveScopeException when the 'request' service is requested while the 'request' scope is not active
     */
    protected function getRequestService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('request', 'request');
        }

        throw new RuntimeException('You have requested a synthetic service ("request"). The DIC does not know how to construct this service.');
    }

    /**
     * Gets the 'request_stack' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestStack A Symfony\Component\HttpFoundation\RequestStack instance.
     */
    protected function getRequestStackService()
    {
        return $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack();
    }

    /**
     * Gets the 'response_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ResponseListener A Symfony\Component\HttpKernel\EventListener\ResponseListener instance.
     */
    protected function getResponseListenerService()
    {
        return $this->services['response_listener'] = new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8');
    }

    /**
     * Gets the 'router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Routing\Router A Symfony\Bundle\FrameworkBundle\Routing\Router instance.
     */
    protected function getRouterService()
    {
        return $this->services['router'] = new \Symfony\Bundle\FrameworkBundle\Routing\Router($this, 'C:\\wamp\\www\\stockvalue~~\\app/config/routing_dev.yml', array('cache_dir' => 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev', 'debug' => true, 'generator_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator', 'generator_base_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator', 'generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper', 'generator_cache_class' => 'appDevUrlGenerator', 'matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper', 'matcher_cache_class' => 'appDevUrlMatcher', 'strict_requirements' => true), $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('monolog.logger.router', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'router_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\RouterListener A Symfony\Component\HttpKernel\EventListener\RouterListener instance.
     */
    protected function getRouterListenerService()
    {
        return $this->services['router_listener'] = new \Symfony\Component\HttpKernel\EventListener\RouterListener($this->get('router'), $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('request_stack'));
    }

    /**
     * Gets the 'routing.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader A Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader instance.
     */
    protected function getRouting_LoaderService()
    {
        return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader($this->get('controller_name_converter'), $this->get('monolog.logger.router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('routing.resolver'));
    }

    /**
     * Gets the 'security.acl.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Acl\Cache\AclCache A Oro\Bundle\SecurityBundle\Acl\Cache\AclCache instance.
     */
    protected function getSecurity_Acl_CacheService()
    {
        return $this->services['security.acl.cache'] = new \Oro\Bundle\SecurityBundle\Acl\Cache\AclCache($this->get('security.acl.cache.doctrine.cache_impl'), $this->get('oro_security.acl.permission_granting_strategy'), 'sf2_acl_');
    }

    /**
     * Gets the 'security.acl.dbal.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Acl\Dbal\MutableAclProvider A Oro\Bundle\SecurityBundle\Acl\Dbal\MutableAclProvider instance.
     */
    protected function getSecurity_Acl_Dbal_ProviderService()
    {
        return $this->services['security.acl.dbal.provider'] = new \Oro\Bundle\SecurityBundle\Acl\Dbal\MutableAclProvider($this->get('doctrine.dbal.default_connection'), $this->get('oro_security.acl.permission_granting_strategy'), array('class_table_name' => 'acl_classes', 'entry_table_name' => 'acl_entries', 'oid_table_name' => 'acl_object_identities', 'oid_ancestors_table_name' => 'acl_object_identity_ancestors', 'sid_table_name' => 'acl_security_identities'), $this->get('security.acl.cache', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'security.acl.dbal.schema' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Acl\Dbal\Schema A Symfony\Component\Security\Acl\Dbal\Schema instance.
     */
    protected function getSecurity_Acl_Dbal_SchemaService()
    {
        return $this->services['security.acl.dbal.schema'] = new \Symfony\Component\Security\Acl\Dbal\Schema(array('class_table_name' => 'acl_classes', 'entry_table_name' => 'acl_entries', 'oid_table_name' => 'acl_object_identities', 'oid_ancestors_table_name' => 'acl_object_identity_ancestors', 'sid_table_name' => 'acl_security_identities'), $this->get('doctrine.dbal.default_connection'));
    }

    /**
     * Gets the 'security.acl.dbal.schema_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Symfony\Bundle\SecurityBundle\EventListener\AclSchemaListener A Symfony\Bundle\SecurityBundle\EventListener\AclSchemaListener instance.
     */
    public function getSecurity_Acl_Dbal_SchemaListenerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['security.acl.dbal.schema_listener'] = new SymfonyBundleSecurityBundleEventListenerAclSchemaListener_000000002e47f97900000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getSecurity_Acl_Dbal_SchemaListenerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Symfony\Bundle\SecurityBundle\EventListener\AclSchemaListener($this->get('security.acl.dbal.schema'));
    }

    /**
     * Gets the 'security.acl.voter.basic_permissions' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Acl\Voter\AclVoter A Oro\Bundle\SecurityBundle\Acl\Voter\AclVoter instance.
     */
    protected function getSecurity_Acl_Voter_BasicPermissionsService()
    {
        $a = $this->get('oro_security.acl.extension_selector');
        $b = $this->get('oro_security.acl.object_identity_factory');

        $c = new \Oro\Bundle\SecurityBundle\Acl\Domain\RootBasedAclProvider($b);
        $c->setBaseAclProvider($this->get('security.acl.dbal.provider'));

        $this->services['security.acl.voter.basic_permissions'] = $instance = new \Oro\Bundle\SecurityBundle\Acl\Voter\AclVoter($c, new \Oro\Bundle\SecurityBundle\Acl\Domain\ObjectIdentityRetrievalStrategy($b), new \Symfony\Component\Security\Acl\Domain\SecurityIdentityRetrievalStrategy($this->get('security.role_hierarchy'), $this->get('security.authentication.trust_resolver')), new \Oro\Bundle\SecurityBundle\Acl\Permission\PermissionMap($a), $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE), true);

        $instance->setAclExtensionSelector($a);
        $instance->setEntityOwnerAccessor($this->get('oro_security.owner.entity_owner_accessor'));
        $instance->setAclGroupProvider($this->get('oro_security.acl.group_provider.chain'));

        return $instance;
    }

    /**
     * Gets the 'security.authentication_utils' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Http\Authentication\AuthenticationUtils A Symfony\Component\Security\Http\Authentication\AuthenticationUtils instance.
     */
    protected function getSecurity_AuthenticationUtilsService()
    {
        return $this->services['security.authentication_utils'] = new \Symfony\Component\Security\Http\Authentication\AuthenticationUtils($this->get('request_stack'));
    }

    /**
     * Gets the 'security.authorization_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\AuthorizationChecker A Symfony\Component\Security\Core\Authorization\AuthorizationChecker instance.
     */
    protected function getSecurity_AuthorizationCheckerService()
    {
        return $this->services['security.authorization_checker'] = new \Symfony\Component\Security\Core\Authorization\AuthorizationChecker($this->get('security.token_storage'), $this->get('security.authentication.manager'), $this->get('security.access.decision_manager'), false);
    }

    /**
     * Gets the 'security.context' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\SecurityContext A Symfony\Component\Security\Core\SecurityContext instance.
     */
    protected function getSecurity_ContextService()
    {
        return $this->services['security.context'] = new \Symfony\Component\Security\Core\SecurityContext($this->get('security.token_storage'), $this->get('security.authorization_checker'));
    }

    /**
     * Gets the 'security.csrf.token_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Csrf\CsrfTokenManager A Symfony\Component\Security\Csrf\CsrfTokenManager instance.
     */
    protected function getSecurity_Csrf_TokenManagerService()
    {
        return $this->services['security.csrf.token_manager'] = new \Symfony\Component\Security\Csrf\CsrfTokenManager(new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator($this->get('security.secure_random')), new \Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage($this->get('session')));
    }

    /**
     * Gets the 'security.encoder_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Encoder\EncoderFactory A Symfony\Component\Security\Core\Encoder\EncoderFactory instance.
     */
    protected function getSecurity_EncoderFactoryService()
    {
        return $this->services['security.encoder_factory'] = new \Symfony\Component\Security\Core\Encoder\EncoderFactory(array('Oro\\Bundle\\UserBundle\\Entity\\User' => array('class' => 'Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder', 'arguments' => array(0 => 'sha512', 1 => true, 2 => 5000)), 'Symfony\\Component\\Security\\Core\\User\\User' => array('class' => 'Symfony\\Component\\Security\\Core\\Encoder\\PlaintextPasswordEncoder', 'arguments' => array(0 => false))));
    }

    /**
     * Gets the 'security.firewall' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Http\Firewall A Symfony\Component\Security\Http\Firewall instance.
     */
    protected function getSecurity_FirewallService()
    {
        return $this->services['security.firewall'] = new \Symfony\Component\Security\Http\Firewall(new \Symfony\Bundle\SecurityBundle\Security\FirewallMap($this, array('security.firewall.map.context.dev' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/(_(profiler|wdt)|css|images|js)/'), 'security.firewall.map.context.install' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/installer'), 'security.firewall.map.context.wsse_secured' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/api/(rest|soap).*'), 'security.firewall.map.context.login' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/user/(login|reset-request|send-email|check-email)$'), 'security.firewall.map.context.reset_password' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/user/reset/*'), 'security.firewall.map.context.embedded_form' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/embedded-form/(submit|success)'), 'security.firewall.map.context.tracking_data' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/tracking/data/create'), 'security.firewall.map.context.main' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/'))), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'security.firewall.map.context.dev' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance.
     */
    protected function getSecurity_Firewall_Map_Context_DevService()
    {
        return $this->services['security.firewall.map.context.dev'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(), NULL);
    }

    /**
     * Gets the 'security.firewall.map.context.embedded_form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance.
     */
    protected function getSecurity_Firewall_Map_Context_EmbeddedFormService()
    {
        $a = $this->get('security.token_storage');
        $b = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);

        return $this->services['security.firewall.map.context.embedded_form'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => new \Symfony\Component\Security\Http\Firewall\ContextListener($a, array(0 => $this->get('security.user.provider.concrete.chain_provider'), 1 => $this->get('oro_user.security.provider'), 2 => $this->get('security.user.provider.concrete.in_memory')), 'embedded_form', $b, $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)), 2 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '5614d22ab95198.10755846', $b, $this->get('security.authentication.manager')), 3 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $this->get('security.authentication.trust_resolver'), $this->get('security.http_utils'), 'embedded_form', NULL, NULL, NULL, $b, false));
    }

    /**
     * Gets the 'security.firewall.map.context.install' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance.
     */
    protected function getSecurity_Firewall_Map_Context_InstallService()
    {
        return $this->services['security.firewall.map.context.install'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(), NULL);
    }

    /**
     * Gets the 'security.firewall.map.context.login' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance.
     */
    protected function getSecurity_Firewall_Map_Context_LoginService()
    {
        $a = $this->get('security.token_storage');
        $b = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);

        return $this->services['security.firewall.map.context.login'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => new \Symfony\Component\Security\Http\Firewall\ContextListener($a, array(0 => $this->get('security.user.provider.concrete.chain_provider'), 1 => $this->get('oro_user.security.provider'), 2 => $this->get('security.user.provider.concrete.in_memory')), 'login', $b, $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)), 2 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '5614d22ab95198.10755846', $b, $this->get('security.authentication.manager')), 3 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $this->get('security.authentication.trust_resolver'), $this->get('security.http_utils'), 'login', NULL, NULL, NULL, $b, false));
    }

    /**
     * Gets the 'security.firewall.map.context.main' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance.
     */
    protected function getSecurity_Firewall_Map_Context_MainService()
    {
        $a = $this->get('security.http_utils');
        $b = $this->get('security.user.provider.concrete.chain_provider');
        $c = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $d = $this->get('security.token_storage');
        $e = $this->get('http_kernel');
        $f = $this->get('security.authentication.manager');
        $g = $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE);

        $h = new \Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices(array(0 => $b, 1 => $b), '7b3d671f1263efb25cc1137f155548f9', 'main', array('name' => 'BAPRM', 'lifetime' => 1209600, 'httponly' => true, 'path' => '/', 'domain' => NULL, 'secure' => false, 'always_remember_me' => false, 'remember_me_parameter' => '_remember_me'), $c);

        $i = new \Symfony\Component\Security\Http\Firewall\LogoutListener($d, $a, new \Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler($a, '/'), array('csrf_parameter' => '_csrf_token', 'intention' => 'logout', 'logout_path' => 'oro_user_security_logout'));
        $i->addHandler(new \Symfony\Component\Security\Http\Logout\SessionLogoutHandler());
        $i->addHandler($h);

        $j = new \Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy('migrate');

        $k = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler($a, array());
        $k->setOptions(array('login_path' => 'oro_user_security_login', 'always_use_default_target_path' => false, 'default_target_path' => '/', 'target_path_parameter' => '_target_path', 'use_referer' => false));
        $k->setProviderKey('main');

        $l = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler($e, $a, array(), $c);
        $l->setOptions(array('login_path' => 'oro_user_security_login', 'failure_path' => NULL, 'failure_forward' => false, 'failure_path_parameter' => '_failure_path'));

        $m = new \Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener($d, $f, $j, $a, 'main', $k, $l, array('check_path' => 'oro_user_security_check', 'use_forward' => false, 'require_previous_session' => true, 'organization_parameter' => '_organization', 'username_parameter' => '_username', 'password_parameter' => '_password', 'csrf_parameter' => '_csrf_token', 'intention' => 'authenticate', 'post_only' => true), $c, $g, $this->get('form.csrf_provider'));
        $m->setRememberMeServices($h);

        $n = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler($a, array());
        $n->setOptions(array('login_path' => 'oro_user_security_login', 'always_use_default_target_path' => false, 'default_target_path' => '/', 'target_path_parameter' => '_target_path', 'use_referer' => false));
        $n->setProviderKey('main');

        $o = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler($e, $a, array(), $c);
        $o->setOptions(array('login_path' => 'oro_user_security_login', 'failure_path' => 'oro_user_security_login', 'failure_forward' => false, 'failure_path_parameter' => '_failure_path'));

        $p = new \HWI\Bundle\OAuthBundle\Security\Http\Firewall\OAuthListener($d, $f, $j, $a, 'main', $n, $o, array('check_path' => 'oro_user_security_check', 'use_forward' => false, 'require_previous_session' => true), $c, $g);
        $p->setResourceOwnerMap($this->get('hwi_oauth.resource_ownermap.main'));
        $p->setCheckPaths(array(0 => '/login/check-google'));
        $p->setRememberMeServices($h);

        return $this->services['security.firewall.map.context.main'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => $this->get('security.context_listener.0'), 2 => $i, 3 => $m, 4 => $p, 5 => new \Symfony\Component\Security\Http\Firewall\RememberMeListener($d, $h, $f, $c, $g, ''), 6 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($d, $this->get('security.authentication.trust_resolver'), $a, 'main', new \HWI\Bundle\OAuthBundle\Security\Http\EntryPoint\OAuthEntryPoint($a, 'oro_user_security_login'), NULL, NULL, $c, false));
    }

    /**
     * Gets the 'security.firewall.map.context.reset_password' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance.
     */
    protected function getSecurity_Firewall_Map_Context_ResetPasswordService()
    {
        $a = $this->get('security.token_storage');
        $b = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);

        return $this->services['security.firewall.map.context.reset_password'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => new \Symfony\Component\Security\Http\Firewall\ContextListener($a, array(0 => $this->get('security.user.provider.concrete.chain_provider'), 1 => $this->get('oro_user.security.provider'), 2 => $this->get('security.user.provider.concrete.in_memory')), 'reset_password', $b, $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)), 2 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '5614d22ab95198.10755846', $b, $this->get('security.authentication.manager')), 3 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $this->get('security.authentication.trust_resolver'), $this->get('security.http_utils'), 'reset_password', NULL, NULL, NULL, $b, false));
    }

    /**
     * Gets the 'security.firewall.map.context.tracking_data' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance.
     */
    protected function getSecurity_Firewall_Map_Context_TrackingDataService()
    {
        $a = $this->get('security.token_storage');
        $b = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);

        return $this->services['security.firewall.map.context.tracking_data'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => new \Symfony\Component\Security\Http\Firewall\ContextListener($a, array(0 => $this->get('security.user.provider.concrete.chain_provider'), 1 => $this->get('oro_user.security.provider'), 2 => $this->get('security.user.provider.concrete.in_memory')), 'tracking_data', $b, $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)), 2 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '5614d22ab95198.10755846', $b, $this->get('security.authentication.manager')), 3 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $this->get('security.authentication.trust_resolver'), $this->get('security.http_utils'), 'tracking_data', NULL, NULL, NULL, $b, false));
    }

    /**
     * Gets the 'security.firewall.map.context.wsse_secured' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance.
     */
    protected function getSecurity_Firewall_Map_Context_WsseSecuredService()
    {
        return $this->services['security.firewall.map.context.wsse_secured'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => $this->get('security.context_listener.0'), 2 => $this->get('escape_wsse_authentication.listener.wsse_secured'), 3 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($this->get('security.token_storage'), $this->get('security.authentication.trust_resolver'), $this->get('security.http_utils'), 'wsse_secured', $this->get('escape_wsse_authentication.entry_point.wsse_secured'), NULL, NULL, $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE), false));
    }

    /**
     * Gets the 'security.password_encoder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Encoder\UserPasswordEncoder A Symfony\Component\Security\Core\Encoder\UserPasswordEncoder instance.
     */
    protected function getSecurity_PasswordEncoderService()
    {
        return $this->services['security.password_encoder'] = new \Symfony\Component\Security\Core\Encoder\UserPasswordEncoder($this->get('security.encoder_factory'));
    }

    /**
     * Gets the 'security.rememberme.response_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Http\RememberMe\ResponseListener A Symfony\Component\Security\Http\RememberMe\ResponseListener instance.
     */
    protected function getSecurity_Rememberme_ResponseListenerService()
    {
        return $this->services['security.rememberme.response_listener'] = new \Symfony\Component\Security\Http\RememberMe\ResponseListener();
    }

    /**
     * Gets the 'security.secure_random' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Util\SecureRandom A Symfony\Component\Security\Core\Util\SecureRandom instance.
     */
    protected function getSecurity_SecureRandomService()
    {
        return $this->services['security.secure_random'] = new \Symfony\Component\Security\Core\Util\SecureRandom('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/secure_random.seed', $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'security.token_storage' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage A Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage instance.
     */
    protected function getSecurity_TokenStorageService()
    {
        return $this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage();
    }

    /**
     * Gets the 'security.user_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\UserBundle\Security\UserChecker A Oro\Bundle\UserBundle\Security\UserChecker instance.
     */
    protected function getSecurity_UserCheckerService()
    {
        return $this->services['security.user_checker'] = new \Oro\Bundle\UserBundle\Security\UserChecker($this->get('security.context.link'), $this->get('session.flash_bag'), $this->get('translator'));
    }

    /**
     * Gets the 'security.validator.user_password' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator A Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator instance.
     */
    protected function getSecurity_Validator_UserPasswordService()
    {
        return $this->services['security.validator.user_password'] = new \Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator($this->get('security.token_storage'), $this->get('security.encoder_factory'));
    }

    /**
     * Gets the 'sensio_distribution.webconfigurator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sensio\Bundle\DistributionBundle\Configurator\Configurator A Sensio\Bundle\DistributionBundle\Configurator\Configurator instance.
     */
    protected function getSensioDistribution_WebconfiguratorService()
    {
        return $this->services['sensio_distribution.webconfigurator'] = new \Sensio\Bundle\DistributionBundle\Configurator\Configurator('C:\\wamp\\www\\stockvalue~~\\app');
    }

    /**
     * Gets the 'sensio_framework_extra.cache.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\CacheListener A Sensio\Bundle\FrameworkExtraBundle\EventListener\CacheListener instance.
     */
    protected function getSensioFrameworkExtra_Cache_ListenerService()
    {
        return $this->services['sensio_framework_extra.cache.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\CacheListener();
    }

    /**
     * Gets the 'sensio_framework_extra.controller.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener A Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener instance.
     */
    protected function getSensioFrameworkExtra_Controller_ListenerService()
    {
        return $this->services['sensio_framework_extra.controller.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener($this->get('annotation_reader'));
    }

    /**
     * Gets the 'sensio_framework_extra.converter.datetime' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter A Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter instance.
     */
    protected function getSensioFrameworkExtra_Converter_DatetimeService()
    {
        return $this->services['sensio_framework_extra.converter.datetime'] = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter();
    }

    /**
     * Gets the 'sensio_framework_extra.converter.doctrine.orm' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\SecurityBundle\Request\ParamConverter\DoctrineParamConverter A Oro\Bundle\SecurityBundle\Request\ParamConverter\DoctrineParamConverter instance.
     */
    protected function getSensioFrameworkExtra_Converter_Doctrine_OrmService()
    {
        return $this->services['sensio_framework_extra.converter.doctrine.orm'] = new \Oro\Bundle\SecurityBundle\Request\ParamConverter\DoctrineParamConverter($this->get('doctrine', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('oro_security.security_facade'));
    }

    /**
     * Gets the 'sensio_framework_extra.converter.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener A Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener instance.
     */
    protected function getSensioFrameworkExtra_Converter_ListenerService()
    {
        return $this->services['sensio_framework_extra.converter.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener($this->get('sensio_framework_extra.converter.manager'));
    }

    /**
     * Gets the 'sensio_framework_extra.converter.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager A Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager instance.
     */
    protected function getSensioFrameworkExtra_Converter_ManagerService()
    {
        $this->services['sensio_framework_extra.converter.manager'] = $instance = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager();

        $instance->add($this->get('sensio_framework_extra.converter.doctrine.orm'), 0, 'doctrine.orm');
        $instance->add($this->get('sensio_framework_extra.converter.datetime'), 0, 'datetime');

        return $instance;
    }

    /**
     * Gets the 'sensio_framework_extra.view.guesser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser A Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser instance.
     */
    protected function getSensioFrameworkExtra_View_GuesserService()
    {
        return $this->services['sensio_framework_extra.view.guesser'] = new \Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser($this->get('kernel'));
    }

    /**
     * Gets the 'sensio_framework_extra.view.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener A Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener instance.
     */
    protected function getSensioFrameworkExtra_View_ListenerService()
    {
        return $this->services['sensio_framework_extra.view.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener($this);
    }

    /**
     * Gets the 'service_container' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @throws RuntimeException always since this service is expected to be injected dynamically
     */
    protected function getServiceContainerService()
    {
        throw new RuntimeException('You have requested a synthetic service ("service_container"). The DIC does not know how to construct this service.');
    }

    /**
     * Gets the 'session' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Session A Symfony\Component\HttpFoundation\Session\Session instance.
     */
    protected function getSessionService()
    {
        $this->services['session'] = $instance = new \Symfony\Component\HttpFoundation\Session\Session($this->get('session.storage.native'), new \Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag(), $this->get('session.flash_bag'));

        $instance->registerBag($this->get('sylius.process_storage.session.bag'));

        return $instance;
    }

    /**
     * Gets the 'session.handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler A Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler instance.
     */
    protected function getSession_HandlerService()
    {
        return $this->services['session.handler'] = new \Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler('C:\\wamp\\www\\stockvalue~~\\app/cache/sessions');
    }

    /**
     * Gets the 'session.handler.pdo' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler A Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler instance.
     */
    protected function getSession_Handler_PdoService()
    {
        return $this->services['session.handler.pdo'] = new \Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler($this->get('doctrine.dbal.session_connection.wrapped'), array('db_table' => 'oro_session', 'db_id_col' => 'id'));
    }

    /**
     * Gets the 'session.save_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\SaveSessionListener A Symfony\Component\HttpKernel\EventListener\SaveSessionListener instance.
     */
    protected function getSession_SaveListenerService()
    {
        return $this->services['session.save_listener'] = new \Symfony\Component\HttpKernel\EventListener\SaveSessionListener();
    }

    /**
     * Gets the 'session.storage.filesystem' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage A Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage instance.
     */
    protected function getSession_Storage_FilesystemService()
    {
        return $this->services['session.storage.filesystem'] = new \Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/sessions', 'MOCKSESSID', $this->get('session.storage.metadata_bag'));
    }

    /**
     * Gets the 'session.storage.native' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage A Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage instance.
     */
    protected function getSession_Storage_NativeService()
    {
        return $this->services['session.storage.native'] = new \Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage(array('name' => 'BAPID', 'cookie_httponly' => true, 'gc_maxlifetime' => 3600, 'gc_probability' => 1), $this->get('session.handler'), $this->get('session.storage.metadata_bag'));
    }

    /**
     * Gets the 'session.storage.php_bridge' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage A Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage instance.
     */
    protected function getSession_Storage_PhpBridgeService()
    {
        return $this->services['session.storage.php_bridge'] = new \Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage($this->get('session.handler'), $this->get('session.storage.metadata_bag'));
    }

    /**
     * Gets the 'session_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\EventListener\SessionListener A Symfony\Bundle\FrameworkBundle\EventListener\SessionListener instance.
     */
    protected function getSessionListenerService()
    {
        return $this->services['session_listener'] = new \Symfony\Bundle\FrameworkBundle\EventListener\SessionListener($this);
    }

    /**
     * Gets the 'stof_doctrine_extensions.event_listener.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Stof\DoctrineExtensionsBundle\EventListener\LocaleListener A Stof\DoctrineExtensionsBundle\EventListener\LocaleListener instance.
     */
    protected function getStofDoctrineExtensions_EventListener_LocaleService()
    {
        return $this->services['stof_doctrine_extensions.event_listener.locale'] = new \Stof\DoctrineExtensionsBundle\EventListener\LocaleListener($this->get('stof_doctrine_extensions.listener.translatable'));
    }

    /**
     * Gets the 'stof_doctrine_extensions.uploadable.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager A Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager instance.
     */
    protected function getStofDoctrineExtensions_Uploadable_ManagerService()
    {
        $a = new \Gedmo\Uploadable\UploadableListener(new \Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter());
        $a->setAnnotationReader($this->get('annotation_reader'));
        $a->setDefaultFileInfoClass('Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo');

        return $this->services['stof_doctrine_extensions.uploadable.manager'] = new \Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager($a, 'Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo');
    }

    /**
     * Gets the 'streamed_response_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener A Symfony\Component\HttpKernel\EventListener\StreamedResponseListener instance.
     */
    protected function getStreamedResponseListenerService()
    {
        return $this->services['streamed_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener();
    }

    /**
     * Gets the 'swiftmailer.email_sender.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener A Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener instance.
     */
    protected function getSwiftmailer_EmailSender_ListenerService()
    {
        return $this->services['swiftmailer.email_sender.listener'] = new \Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener($this, $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'swiftmailer.mailer.db_spool_mailer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Swift_Mailer A Swift_Mailer instance.
     */
    protected function getSwiftmailer_Mailer_DbSpoolMailerService()
    {
        return $this->services['swiftmailer.mailer.db_spool_mailer'] = new \Swift_Mailer(new \Swift_Transport_SpoolTransport(new \Swift_Events_SimpleEventDispatcher(), $this->get('oro_notification.mailer.spool_db')));
    }

    /**
     * Gets the 'swiftmailer.mailer.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Swift_Mailer A Swift_Mailer instance.
     */
    protected function getSwiftmailer_Mailer_DefaultService()
    {
        return $this->services['swiftmailer.mailer.default'] = new \Swift_Mailer($this->get('swiftmailer.mailer.default.transport'));
    }

    /**
     * Gets the 'swiftmailer.mailer.default.plugin.messagelogger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Swift_Plugins_MessageLogger A Swift_Plugins_MessageLogger instance.
     */
    protected function getSwiftmailer_Mailer_Default_Plugin_MessageloggerService()
    {
        return $this->services['swiftmailer.mailer.default.plugin.messagelogger'] = new \Swift_Plugins_MessageLogger();
    }

    /**
     * Gets the 'swiftmailer.mailer.default.spool' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Swift_MemorySpool A Swift_MemorySpool instance.
     */
    protected function getSwiftmailer_Mailer_Default_SpoolService()
    {
        return $this->services['swiftmailer.mailer.default.spool'] = new \Swift_MemorySpool();
    }

    /**
     * Gets the 'swiftmailer.mailer.default.transport' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Swift_Transport_SpoolTransport A Swift_Transport_SpoolTransport instance.
     */
    protected function getSwiftmailer_Mailer_Default_TransportService()
    {
        $this->services['swiftmailer.mailer.default.transport'] = $instance = new \Swift_Transport_SpoolTransport($this->get('swiftmailer.mailer.default.transport.eventdispatcher'), $this->get('swiftmailer.mailer.default.spool'));

        $instance->registerPlugin($this->get('swiftmailer.mailer.default.plugin.messagelogger'));

        return $instance;
    }

    /**
     * Gets the 'swiftmailer.mailer.default.transport.real' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Swift_Transport_EsmtpTransport A Swift_Transport_EsmtpTransport instance.
     */
    protected function getSwiftmailer_Mailer_Default_Transport_RealService()
    {
        $a = new \Swift_Transport_Esmtp_AuthHandler(array(0 => new \Swift_Transport_Esmtp_Auth_CramMd5Authenticator(), 1 => new \Swift_Transport_Esmtp_Auth_LoginAuthenticator(), 2 => new \Swift_Transport_Esmtp_Auth_PlainAuthenticator()));
        $a->setUsername('gotaindien@gmail.com');
        $a->setPassword('Urnalone0413');
        $a->setAuthMode(NULL);

        $this->services['swiftmailer.mailer.default.transport.real'] = $instance = new \Swift_Transport_EsmtpTransport(new \Swift_Transport_StreamBuffer(new \Swift_StreamFilters_StringReplacementFilterFactory()), array(0 => $a), $this->get('swiftmailer.mailer.default.transport.eventdispatcher'));

        $instance->setHost('smtp.gmail.com');
        $instance->setPort(465);
        $instance->setEncryption('ssl');
        $instance->setTimeout(30);
        $instance->setSourceIp(NULL);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.process' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\FlowBundle\Controller\ProcessController A Sylius\Bundle\FlowBundle\Controller\ProcessController instance.
     */
    protected function getSylius_Controller_ProcessService()
    {
        $this->services['sylius.controller.process'] = $instance = new \Sylius\Bundle\FlowBundle\Controller\ProcessController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.process.builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\FlowBundle\Process\Builder\ProcessBuilder A Sylius\Bundle\FlowBundle\Process\Builder\ProcessBuilder instance.
     */
    protected function getSylius_Process_BuilderService()
    {
        return $this->services['sylius.process.builder'] = new \Sylius\Bundle\FlowBundle\Process\Builder\ProcessBuilder($this);
    }

    /**
     * Gets the 'sylius.process.context' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\FlowBundle\Process\Context\ProcessContext A Sylius\Bundle\FlowBundle\Process\Context\ProcessContext instance.
     */
    protected function getSylius_Process_ContextService()
    {
        return $this->services['sylius.process.context'] = new \Sylius\Bundle\FlowBundle\Process\Context\ProcessContext($this->get('sylius.process_storage.session'));
    }

    /**
     * Gets the 'sylius.process.coordinator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\FlowBundle\Process\Coordinator\Coordinator A Sylius\Bundle\FlowBundle\Process\Coordinator\Coordinator instance.
     */
    protected function getSylius_Process_CoordinatorService()
    {
        $this->services['sylius.process.coordinator'] = $instance = new \Sylius\Bundle\FlowBundle\Process\Coordinator\Coordinator($this->get('router'), $this->get('sylius.process.builder'), $this->get('sylius.process.context'));

        $instance->registerScenario('oro_installer', $this->get('oro_installer.scenario'));

        return $instance;
    }

    /**
     * Gets the 'sylius.process_storage.session' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\FlowBundle\Storage\SessionStorage A Sylius\Bundle\FlowBundle\Storage\SessionStorage instance.
     */
    protected function getSylius_ProcessStorage_SessionService()
    {
        return $this->services['sylius.process_storage.session'] = new \Sylius\Bundle\FlowBundle\Storage\SessionStorage($this->get('session'));
    }

    /**
     * Gets the 'sylius.process_storage.session.bag' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\FlowBundle\Storage\SessionFlowsBag A Sylius\Bundle\FlowBundle\Storage\SessionFlowsBag instance.
     */
    protected function getSylius_ProcessStorage_Session_BagService()
    {
        return $this->services['sylius.process_storage.session.bag'] = new \Sylius\Bundle\FlowBundle\Storage\SessionFlowsBag();
    }

    /**
     * Gets the 'templating' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine A Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine instance.
     */
    public function getTemplatingService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['templating'] = new SymfonyBundleFrameworkBundleTemplatingDelegatingEngine_000000002e47fc7e00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getTemplatingService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine($this, array());

        $instance->addEngine(new \Symfony\Bundle\TwigBundle\TwigEngine($this->get('twig'), $this->get('templating.name_parser'), $this->get('templating.locator')));
        $instance->addEngine($this->get('debug.templating.engine.php'));

        return $instance;
    }

    /**
     * Gets the 'templating.filename_parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser A Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser instance.
     */
    protected function getTemplating_FilenameParserService()
    {
        return $this->services['templating.filename_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser();
    }

    /**
     * Gets the 'templating.globals' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables A Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables instance.
     */
    protected function getTemplating_GlobalsService()
    {
        return $this->services['templating.globals'] = new \Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables($this);
    }

    /**
     * Gets the 'templating.helper.actions' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper A Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper instance.
     */
    protected function getTemplating_Helper_ActionsService()
    {
        return $this->services['templating.helper.actions'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper($this->get('fragment.handler'));
    }

    /**
     * Gets the 'templating.helper.assets' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\AssetsHelper A Symfony\Bundle\FrameworkBundle\Templating\Helper\AssetsHelper instance.
     */
    protected function getTemplating_Helper_AssetsService()
    {
        return $this->services['templating.helper.assets'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\AssetsHelper($this->get('assets.packages'), array());
    }

    /**
     * Gets the 'templating.helper.code' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper A Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper instance.
     */
    protected function getTemplating_Helper_CodeService()
    {
        return $this->services['templating.helper.code'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper(NULL, 'C:\\wamp\\www\\stockvalue~~\\app', 'UTF-8');
    }

    /**
     * Gets the 'templating.helper.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\FormHelper A Symfony\Bundle\FrameworkBundle\Templating\Helper\FormHelper instance.
     */
    protected function getTemplating_Helper_FormService()
    {
        return $this->services['templating.helper.form'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\FormHelper(new \Symfony\Component\Form\FormRenderer(new \Symfony\Component\Form\Extension\Templating\TemplatingRendererEngine($this->get('debug.templating.engine.php'), array(0 => 'FrameworkBundle:Form')), $this->get('security.csrf.token_manager', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
    }

    /**
     * Gets the 'templating.helper.logout_url' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper A Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper instance.
     */
    protected function getTemplating_Helper_LogoutUrlService()
    {
        return $this->services['templating.helper.logout_url'] = new \Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper($this->get('security.logout_url_generator'));
    }

    /**
     * Gets the 'templating.helper.request' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper A Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper instance.
     */
    protected function getTemplating_Helper_RequestService()
    {
        return $this->services['templating.helper.request'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper($this->get('request_stack'));
    }

    /**
     * Gets the 'templating.helper.router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper A Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper instance.
     */
    protected function getTemplating_Helper_RouterService()
    {
        return $this->services['templating.helper.router'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper($this->get('router'));
    }

    /**
     * Gets the 'templating.helper.security' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper A Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper instance.
     */
    protected function getTemplating_Helper_SecurityService()
    {
        return $this->services['templating.helper.security'] = new \Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper($this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'templating.helper.session' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper A Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper instance.
     */
    protected function getTemplating_Helper_SessionService()
    {
        return $this->services['templating.helper.session'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper($this->get('request_stack'));
    }

    /**
     * Gets the 'templating.helper.slots' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Templating\Helper\SlotsHelper A Symfony\Component\Templating\Helper\SlotsHelper instance.
     */
    protected function getTemplating_Helper_SlotsService()
    {
        return $this->services['templating.helper.slots'] = new \Symfony\Component\Templating\Helper\SlotsHelper();
    }

    /**
     * Gets the 'templating.helper.stopwatch' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper A Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper instance.
     */
    protected function getTemplating_Helper_StopwatchService()
    {
        return $this->services['templating.helper.stopwatch'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper($this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'templating.helper.translator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper A Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper instance.
     */
    protected function getTemplating_Helper_TranslatorService()
    {
        return $this->services['templating.helper.translator'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper($this->get('translator'));
    }

    /**
     * Gets the 'templating.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader A Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader instance.
     */
    protected function getTemplating_LoaderService()
    {
        return $this->services['templating.loader'] = new \Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader($this->get('templating.locator'));
    }

    /**
     * Gets the 'templating.name_parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser A Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser instance.
     */
    protected function getTemplating_NameParserService()
    {
        return $this->services['templating.name_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser($this->get('kernel'));
    }

    /**
     * Gets the 'translation.dumper.csv' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\CsvFileDumper A Symfony\Component\Translation\Dumper\CsvFileDumper instance.
     */
    protected function getTranslation_Dumper_CsvService()
    {
        return $this->services['translation.dumper.csv'] = new \Symfony\Component\Translation\Dumper\CsvFileDumper();
    }

    /**
     * Gets the 'translation.dumper.ini' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\IniFileDumper A Symfony\Component\Translation\Dumper\IniFileDumper instance.
     */
    protected function getTranslation_Dumper_IniService()
    {
        return $this->services['translation.dumper.ini'] = new \Symfony\Component\Translation\Dumper\IniFileDumper();
    }

    /**
     * Gets the 'translation.dumper.json' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\JsonFileDumper A Symfony\Component\Translation\Dumper\JsonFileDumper instance.
     */
    protected function getTranslation_Dumper_JsonService()
    {
        return $this->services['translation.dumper.json'] = new \Symfony\Component\Translation\Dumper\JsonFileDumper();
    }

    /**
     * Gets the 'translation.dumper.mo' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\MoFileDumper A Symfony\Component\Translation\Dumper\MoFileDumper instance.
     */
    protected function getTranslation_Dumper_MoService()
    {
        return $this->services['translation.dumper.mo'] = new \Symfony\Component\Translation\Dumper\MoFileDumper();
    }

    /**
     * Gets the 'translation.dumper.php' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\PhpFileDumper A Symfony\Component\Translation\Dumper\PhpFileDumper instance.
     */
    protected function getTranslation_Dumper_PhpService()
    {
        return $this->services['translation.dumper.php'] = new \Symfony\Component\Translation\Dumper\PhpFileDumper();
    }

    /**
     * Gets the 'translation.dumper.po' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\PoFileDumper A Symfony\Component\Translation\Dumper\PoFileDumper instance.
     */
    protected function getTranslation_Dumper_PoService()
    {
        return $this->services['translation.dumper.po'] = new \Symfony\Component\Translation\Dumper\PoFileDumper();
    }

    /**
     * Gets the 'translation.dumper.qt' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\QtFileDumper A Symfony\Component\Translation\Dumper\QtFileDumper instance.
     */
    protected function getTranslation_Dumper_QtService()
    {
        return $this->services['translation.dumper.qt'] = new \Symfony\Component\Translation\Dumper\QtFileDumper();
    }

    /**
     * Gets the 'translation.dumper.res' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\IcuResFileDumper A Symfony\Component\Translation\Dumper\IcuResFileDumper instance.
     */
    protected function getTranslation_Dumper_ResService()
    {
        return $this->services['translation.dumper.res'] = new \Symfony\Component\Translation\Dumper\IcuResFileDumper();
    }

    /**
     * Gets the 'translation.dumper.xliff' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\XliffFileDumper A Symfony\Component\Translation\Dumper\XliffFileDumper instance.
     */
    protected function getTranslation_Dumper_XliffService()
    {
        return $this->services['translation.dumper.xliff'] = new \Symfony\Component\Translation\Dumper\XliffFileDumper();
    }

    /**
     * Gets the 'translation.dumper.yml' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\YamlFileDumper A Symfony\Component\Translation\Dumper\YamlFileDumper instance.
     */
    protected function getTranslation_Dumper_YmlService()
    {
        return $this->services['translation.dumper.yml'] = new \Symfony\Component\Translation\Dumper\YamlFileDumper();
    }

    /**
     * Gets the 'translation.extractor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Extractor\ChainExtractor A Symfony\Component\Translation\Extractor\ChainExtractor instance.
     */
    protected function getTranslation_ExtractorService()
    {
        $this->services['translation.extractor'] = $instance = new \Symfony\Component\Translation\Extractor\ChainExtractor();

        $instance->addExtractor('php', $this->get('translation.extractor.php'));
        $instance->addExtractor('twig', $this->get('twig.translation.extractor'));
        $instance->addExtractor('oro_translation_php_extractor', $this->get('oro_translation.extractor.php_code_extractor'));
        $instance->addExtractor('navigation_translation_extractor', $this->get('oro_navigation.translation.extractor'));

        return $instance;
    }

    /**
     * Gets the 'translation.extractor.php' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor A Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor instance.
     */
    protected function getTranslation_Extractor_PhpService()
    {
        return $this->services['translation.extractor.php'] = new \Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor();
    }

    /**
     * Gets the 'translation.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader A Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader instance.
     */
    protected function getTranslation_LoaderService()
    {
        $a = $this->get('translation.loader.xliff');

        $this->services['translation.loader'] = $instance = new \Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader();

        $instance->addLoader('php', $this->get('translation.loader.php'));
        $instance->addLoader('yml', $this->get('translation.loader.yml'));
        $instance->addLoader('xlf', $a);
        $instance->addLoader('xliff', $a);
        $instance->addLoader('po', $this->get('translation.loader.po'));
        $instance->addLoader('mo', $this->get('translation.loader.mo'));
        $instance->addLoader('ts', $this->get('translation.loader.qt'));
        $instance->addLoader('csv', $this->get('translation.loader.csv'));
        $instance->addLoader('res', $this->get('translation.loader.res'));
        $instance->addLoader('dat', $this->get('translation.loader.dat'));
        $instance->addLoader('ini', $this->get('translation.loader.ini'));
        $instance->addLoader('json', $this->get('translation.loader.json'));
        $instance->addLoader('oro_database_translation', $this->get('oro_translation.database_translation.loader'));

        return $instance;
    }

    /**
     * Gets the 'translation.loader.csv' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\CsvFileLoader A Symfony\Component\Translation\Loader\CsvFileLoader instance.
     */
    protected function getTranslation_Loader_CsvService()
    {
        return $this->services['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader();
    }

    /**
     * Gets the 'translation.loader.dat' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\IcuDatFileLoader A Symfony\Component\Translation\Loader\IcuDatFileLoader instance.
     */
    protected function getTranslation_Loader_DatService()
    {
        return $this->services['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader();
    }

    /**
     * Gets the 'translation.loader.ini' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\IniFileLoader A Symfony\Component\Translation\Loader\IniFileLoader instance.
     */
    protected function getTranslation_Loader_IniService()
    {
        return $this->services['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader();
    }

    /**
     * Gets the 'translation.loader.json' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\JsonFileLoader A Symfony\Component\Translation\Loader\JsonFileLoader instance.
     */
    protected function getTranslation_Loader_JsonService()
    {
        return $this->services['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader();
    }

    /**
     * Gets the 'translation.loader.mo' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\MoFileLoader A Symfony\Component\Translation\Loader\MoFileLoader instance.
     */
    protected function getTranslation_Loader_MoService()
    {
        return $this->services['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader();
    }

    /**
     * Gets the 'translation.loader.php' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\PhpFileLoader A Symfony\Component\Translation\Loader\PhpFileLoader instance.
     */
    protected function getTranslation_Loader_PhpService()
    {
        return $this->services['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader();
    }

    /**
     * Gets the 'translation.loader.po' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\PoFileLoader A Symfony\Component\Translation\Loader\PoFileLoader instance.
     */
    protected function getTranslation_Loader_PoService()
    {
        return $this->services['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader();
    }

    /**
     * Gets the 'translation.loader.qt' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\QtFileLoader A Symfony\Component\Translation\Loader\QtFileLoader instance.
     */
    protected function getTranslation_Loader_QtService()
    {
        return $this->services['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader();
    }

    /**
     * Gets the 'translation.loader.res' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\IcuResFileLoader A Symfony\Component\Translation\Loader\IcuResFileLoader instance.
     */
    protected function getTranslation_Loader_ResService()
    {
        return $this->services['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader();
    }

    /**
     * Gets the 'translation.loader.xliff' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\XliffFileLoader A Symfony\Component\Translation\Loader\XliffFileLoader instance.
     */
    protected function getTranslation_Loader_XliffService()
    {
        return $this->services['translation.loader.xliff'] = new \Symfony\Component\Translation\Loader\XliffFileLoader();
    }

    /**
     * Gets the 'translation.loader.yml' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\YamlFileLoader A Symfony\Component\Translation\Loader\YamlFileLoader instance.
     */
    protected function getTranslation_Loader_YmlService()
    {
        return $this->services['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader();
    }

    /**
     * Gets the 'translation.writer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Writer\TranslationWriter A Symfony\Component\Translation\Writer\TranslationWriter instance.
     */
    protected function getTranslation_WriterService()
    {
        $this->services['translation.writer'] = $instance = new \Symfony\Component\Translation\Writer\TranslationWriter();

        $instance->addDumper('php', $this->get('translation.dumper.php'));
        $instance->addDumper('xlf', $this->get('translation.dumper.xliff'));
        $instance->addDumper('po', $this->get('translation.dumper.po'));
        $instance->addDumper('mo', $this->get('translation.dumper.mo'));
        $instance->addDumper('yml', $this->get('translation.dumper.yml'));
        $instance->addDumper('ts', $this->get('translation.dumper.qt'));
        $instance->addDumper('csv', $this->get('translation.dumper.csv'));
        $instance->addDumper('ini', $this->get('translation.dumper.ini'));
        $instance->addDumper('json', $this->get('translation.dumper.json'));
        $instance->addDumper('res', $this->get('translation.dumper.res'));

        return $instance;
    }

    /**
     * Gets the 'translator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\DataCollectorTranslator A Symfony\Component\Translation\DataCollectorTranslator instance.
     */
    protected function getTranslatorService()
    {
        return $this->services['translator'] = new \Symfony\Component\Translation\DataCollectorTranslator(new \Symfony\Component\Translation\LoggingTranslator($this->get('translator.default'), $this->get('monolog.logger.translation')));
    }

    /**
     * Gets the 'translator.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oro\Bundle\TranslationBundle\Translation\Translator A Oro\Bundle\TranslationBundle\Translation\Translator instance.
     */
    protected function getTranslator_DefaultService()
    {
        $this->services['translator.default'] = $instance = new \Oro\Bundle\TranslationBundle\Translation\Translator($this, new \Symfony\Component\Translation\MessageSelector(), array('translation.loader.php' => array(0 => 'php'), 'translation.loader.yml' => array(0 => 'yml'), 'translation.loader.xliff' => array(0 => 'xlf', 1 => 'xliff'), 'translation.loader.po' => array(0 => 'po'), 'translation.loader.mo' => array(0 => 'mo'), 'translation.loader.qt' => array(0 => 'ts'), 'translation.loader.csv' => array(0 => 'csv'), 'translation.loader.res' => array(0 => 'res'), 'translation.loader.dat' => array(0 => 'dat'), 'translation.loader.ini' => array(0 => 'ini'), 'translation.loader.json' => array(0 => 'json'), 'oro_translation.database_translation.loader' => array(0 => 'oro_database_translation')), array('cache_dir' => 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/translations', 'debug' => true, 'resource_files' => array('af' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.af.xlf'), 'ar' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.ar.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.ar.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.ar.xlf'), 'az' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.az.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.az.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.az.xlf'), 'bg' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.bg.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.bg.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.bg.xlf'), 'ca' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.ca.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.ca.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.ca.xlf'), 'cs' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.cs.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.cs.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.cs.xlf'), 'cy' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.cy.xlf'), 'da' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.da.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.da.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.da.xlf'), 'de' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.de.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.de.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.de.xlf', 3 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\genemu\\form-bundle\\Genemu\\Bundle\\FormBundle/Resources/translations\\validators.de.yml', 4 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\hwi\\oauth-bundle\\HWI\\Bundle\\OAuthBundle/Resources/translations\\HWIOAuthBundle.de.yml'), 'el' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.el.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.el.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.el.xlf'), 'en' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.en.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.en.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.en.xlf', 3 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SyncBundle/Resources/translations\\jsmessages.en.yml', 4 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\genemu\\form-bundle\\Genemu\\Bundle\\FormBundle/Resources/translations\\validators.en.yml', 5 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\lexik\\maintenance-bundle\\Lexik\\Bundle\\MaintenanceBundle/Resources/translations\\maintenance.en.yml', 6 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UIBundle/Resources/translations\\jsmessages.en.yml', 7 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UIBundle/Resources/translations\\messages.en.yml', 8 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\OrganizationBundle/Resources/translations\\jsmessages.en.yml', 9 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\OrganizationBundle/Resources/translations\\messages.en.yml', 10 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SecurityBundle/Resources/translations\\messages.en.yml', 11 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AttachmentBundle/Resources/translations\\jsmessages.en.yml', 12 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AttachmentBundle/Resources/translations\\messages.en.yml', 13 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AttachmentBundle/Resources/translations\\tooltips.en.yml', 14 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmailBundle/Resources/translations\\jsmessages.en.yml', 15 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmailBundle/Resources/translations\\messages.en.yml', 16 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmailBundle/Resources/translations\\tooltips.en.yml', 17 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmailBundle/Resources/translations\\validators.en.yml', 18 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UserBundle/Resources/translations\\jsmessages.en.yml', 19 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UserBundle/Resources/translations\\messages.en.yml', 20 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UserBundle/Resources/translations\\security.en.yml', 21 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UserBundle/Resources/translations\\tooltips.en.yml', 22 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UserBundle/Resources/translations\\validators.en.yml', 23 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\hwi\\oauth-bundle\\HWI\\Bundle\\OAuthBundle/Resources/translations\\HWIOAuthBundle.en.yml', 24 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SSOBundle/Resources/translations\\messages.en.yml', 25 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SSOBundle/Resources/translations\\security.en.yml', 26 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SSOBundle/Resources/translations\\tooltips.en.yml', 27 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityBundle/Resources/translations\\jsmessages.en.yml', 28 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityBundle/Resources/translations\\messages.en.yml', 29 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityConfigBundle/Resources/translations\\messages.en.yml', 30 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityExtendBundle/Resources/translations\\jsmessages.en.yml', 31 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityExtendBundle/Resources/translations\\messages.en.yml', 32 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityExtendBundle/Resources/translations\\tooltips.en.yml', 33 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityExtendBundle/Resources/translations\\validators.en.yml', 34 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\IntegrationBundle/Resources/translations\\jsmessages.en.yml', 35 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\IntegrationBundle/Resources/translations\\messages.en.yml', 36 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\IntegrationBundle/Resources/translations\\tooltips.en.yml', 37 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ActivityBundle/Resources/translations\\messages.en.yml', 38 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ActivityListBundle/Resources/translations\\jsmessages.en.yml', 39 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ActivityListBundle/Resources/translations\\messages.en.yml', 40 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AddressBundle/Resources/translations\\entities.en.yml', 41 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AddressBundle/Resources/translations\\jsmessages.en.yml', 42 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AddressBundle/Resources/translations\\messages.en.yml', 43 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AddressBundle/Resources/translations\\validators.en.yml', 44 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CalendarBundle/Resources/translations\\jsmessages.en.yml', 45 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CalendarBundle/Resources/translations\\messages.en.yml', 46 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CalendarBundle/Resources/translations\\validators.en.yml', 47 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ChartBundle/Resources/translations\\jsmessages.en.yml', 48 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ChartBundle/Resources/translations\\messages.en.yml', 49 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ConfigBundle/Resources/translations\\jsmessages.en.yml', 50 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ConfigBundle/Resources/translations\\messages.en.yml', 51 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CronBundle/Resources/translations\\jsmessages.en.yml', 52 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CronBundle/Resources/translations\\messages.en.yml', 53 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataAuditBundle/Resources/translations\\jsmessages.en.yml', 54 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataAuditBundle/Resources/translations\\messages.en.yml', 55 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataGridBundle/Resources/translations\\jsmessages.en.yml', 56 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataGridBundle/Resources/translations\\messages.en.yml', 57 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataGridBundle/Resources/translations\\tooltips.en.yml', 58 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataGridBundle/Resources/translations\\validators.en.yml', 59 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DistributionBundle/Resources/translations\\messages.en.yml', 60 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle/Resources/translations\\jsmessages.en.yml', 61 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle/Resources/translations\\messages.en.yml', 62 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle/Resources/translations\\tooltips.en.yml', 63 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle/Resources/translations\\validators.en.yml', 64 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityMergeBundle/Resources/translations\\jsmessages.en.yml', 65 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityMergeBundle/Resources/translations\\messages.en.yml', 66 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityMergeBundle/Resources/translations\\tooltips.en.yml', 67 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityMergeBundle/Resources/translations\\validators.en.yml', 68 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityPaginationBundle/Resources/translations\\messages.en.yml', 69 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityPaginationBundle/Resources/translations\\tooltips.en.yml', 70 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FilterBundle/Resources/translations\\jsmessages.en.yml', 71 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FilterBundle/Resources/translations\\messages.en.yml', 72 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FormBundle/Resources/translations\\jsmessages.en.yml', 73 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FormBundle/Resources/translations\\messages.en.yml', 74 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FormBundle/Resources/translations\\tooltips.en.yml', 75 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FormBundle/Resources/translations\\validators.en.yml', 76 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\HelpBundle/Resources/translations\\messages.en.yml', 77 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImapBundle/Resources/translations\\jsmessages.en.yml', 78 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImapBundle/Resources/translations\\messages.en.yml', 79 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImapBundle/Resources/translations\\tooltips.en.yml', 80 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImportExportBundle/Resources/translations\\jsmessages.en.yml', 81 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImportExportBundle/Resources/translations\\messages.en.yml', 82 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImportExportBundle/Resources/translations\\tooltips.en.yml', 83 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\InstallerBundle/Resources/translations\\messages.en.yml', 84 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\InstallerBundle/Resources/translations\\validators.en.yml', 85 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\LocaleBundle/Resources/translations\\jsmessages.en.yml', 86 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\LocaleBundle/Resources/translations\\messages.en.yml', 87 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\LocaleBundle/Resources/translations\\tooltips.en.yml', 88 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NoteBundle/Resources/translations\\jsmessages.en.yml', 89 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NoteBundle/Resources/translations\\messages.en.yml', 90 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NotificationBundle/Resources/translations\\messages.en.yml', 91 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NotificationBundle/Resources/translations\\validators.en.yml', 92 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\PlatformBundle/Resources/translations\\jsmessages.en.yml', 93 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\PlatformBundle/Resources/translations\\messages.en.yml', 94 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\QueryDesignerBundle/Resources/translations\\jsmessages.en.yml', 95 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\QueryDesignerBundle/Resources/translations\\messages.en.yml', 96 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\QueryDesignerBundle/Resources/translations\\validators.en.yml', 97 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ReportBundle/Resources/translations\\jsmessages.en.yml', 98 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ReportBundle/Resources/translations\\messages.en.yml', 99 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SearchBundle/Resources/translations\\jsmessages.en.yml', 100 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SearchBundle/Resources/translations\\messages.en.yml', 101 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SegmentBundle/Resources/translations\\jsmessages.en.yml', 102 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SegmentBundle/Resources/translations\\messages.en.yml', 103 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SegmentBundle/Resources/translations\\validators.en.yml', 104 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SidebarBundle/Resources/translations\\jsmessages.en.yml', 105 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SidebarBundle/Resources/translations\\messages.en.yml', 106 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TagBundle/Resources/translations\\jsmessages.en.yml', 107 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TagBundle/Resources/translations\\messages.en.yml', 108 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TranslationBundle/Resources/translations\\jsmessages.en.yml', 109 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TranslationBundle/Resources/translations\\messages.en.yml', 110 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\WorkflowBundle/Resources/translations\\jsmessages.en.yml', 111 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\WorkflowBundle/Resources/translations\\messages.en.yml', 112 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\WorkflowBundle/Resources/translations\\tooltips.en.yml', 113 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\sylius\\flow-bundle\\Sylius\\Bundle\\FlowBundle/Resources/translations\\messages.en.yml', 114 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CommentBundle/Resources/translations\\jsmessages.en.yml', 115 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CommentBundle/Resources/translations\\messages.en.yml', 116 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DashboardBundle/Resources/translations\\jsmessages.en.yml', 117 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DashboardBundle/Resources/translations\\messages.en.yml', 118 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NavigationBundle/Resources/translations\\jsmessages.en.yml', 119 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NavigationBundle/Resources/translations\\messages.en.yml', 120 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TrackingBundle/Resources/translations\\messages.en.yml', 121 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TrackingBundle/Resources/translations\\tooltips.en.yml', 122 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ReminderBundle/Resources/translations\\messages.en.yml', 123 => 'C:\\wamp\\www\\stockvalue~~\\app/Resources/translations\\install.en.yml'), 'es' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.es.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.es.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.es.xlf', 3 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\hwi\\oauth-bundle\\HWI\\Bundle\\OAuthBundle/Resources/translations\\HWIOAuthBundle.es.yml'), 'et' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.et.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.et.xlf'), 'eu' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.eu.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.eu.xlf'), 'fa' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.fa.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.fa.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.fa.xlf'), 'fi' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.fi.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.fi.xlf'), 'fr' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.fr.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.fr.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.fr.xlf', 3 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\genemu\\form-bundle\\Genemu\\Bundle\\FormBundle/Resources/translations\\validators.fr.yml', 4 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\lexik\\maintenance-bundle\\Lexik\\Bundle\\MaintenanceBundle/Resources/translations\\maintenance.fr.yml', 5 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\hwi\\oauth-bundle\\HWI\\Bundle\\OAuthBundle/Resources/translations\\HWIOAuthBundle.fr.yml', 6 => 'C:\\wamp\\www\\stockvalue~~\\src\\Main\\StockValueBundle/Resources/translations\\messages.fr.xlf', 7 => 'C:\\wamp\\www\\stockvalue~~\\src\\Security\\StockValueBundle/Resources/translations\\messages.fr.xlf'), 'gl' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.gl.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.gl.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.gl.xlf'), 'he' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.he.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.he.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.he.xlf'), 'hr' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.hr.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.hr.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.hr.xlf', 3 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\sylius\\flow-bundle\\Sylius\\Bundle\\FlowBundle/Resources/translations\\messages.hr.yml'), 'hu' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.hu.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.hu.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.hu.xlf'), 'hy' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.hy.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.hy.xlf'), 'id' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.id.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.id.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.id.xlf'), 'it' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.it.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.it.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.it.xlf', 3 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\hwi\\oauth-bundle\\HWI\\Bundle\\OAuthBundle/Resources/translations\\HWIOAuthBundle.it.yml'), 'ja' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.ja.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.ja.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.ja.xlf'), 'lb' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.lb.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.lb.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.lb.xlf'), 'lt' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.lt.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.lt.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.lt.xlf'), 'mn' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.mn.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.mn.xlf'), 'nb' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.nb.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.nb.xlf'), 'nl' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.nl.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.nl.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.nl.xlf', 3 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\hwi\\oauth-bundle\\HWI\\Bundle\\OAuthBundle/Resources/translations\\HWIOAuthBundle.nl.yml'), 'no' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.no.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.no.xlf'), 'pl' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.pl.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.pl.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.pl.xlf', 3 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\hwi\\oauth-bundle\\HWI\\Bundle\\OAuthBundle/Resources/translations\\HWIOAuthBundle.pl.yml'), 'pt' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.pt.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.pt.xlf'), 'pt_BR' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.pt_BR.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.pt_BR.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.pt_BR.xlf'), 'ro' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.ro.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.ro.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.ro.xlf'), 'ru' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.ru.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.ru.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.ru.xlf', 3 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\hwi\\oauth-bundle\\HWI\\Bundle\\OAuthBundle/Resources/translations\\HWIOAuthBundle.ru.yml'), 'sk' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.sk.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.sk.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.sk.xlf'), 'sl' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.sl.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.sl.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.sl.xlf'), 'sq' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.sq.xlf'), 'sr_Cyrl' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.sr_Cyrl.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.sr_Cyrl.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.sr_Cyrl.xlf'), 'sr_Latn' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.sr_Latn.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.sr_Latn.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.sr_Latn.xlf'), 'sv' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.sv.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.sv.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.sv.xlf'), 'th' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.th.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.th.xlf'), 'tr' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.tr.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.tr.xlf'), 'uk' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.uk.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.uk.xlf'), 'vi' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.vi.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.vi.xlf'), 'zh_CN' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.zh_CN.xlf', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.zh_CN.xlf', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.zh_CN.xlf'), 'zh_TW' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Validator/Resources/translations\\validators.zh_TW.xlf'), 'lv' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/translations\\validators.lv.xlf'), 'pt_PT' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.pt_PT.xlf'), 'ua' => array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Exception/../Resources/translations\\security.ua.xlf'))), array());

        $instance->setFallbackLocales(array(0 => 'en'));
        $instance->setDatabaseMetadataCache(new \Oro\Bundle\TranslationBundle\Translation\DynamicTranslationMetadataCache($this->get('oro_translation.database_translation.metadata.cache_impl')));

        return $instance;
    }

    /**
     * Gets the 'translator_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\TranslatorListener A Symfony\Component\HttpKernel\EventListener\TranslatorListener instance.
     */
    protected function getTranslatorListenerService()
    {
        return $this->services['translator_listener'] = new \Symfony\Component\HttpKernel\EventListener\TranslatorListener($this->get('translator'), $this->get('request_stack'));
    }

    /**
     * Gets the 'twig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\UIBundle\Twig\Environment A Oro\Bundle\UIBundle\Twig\Environment instance.
     */
    public function getTwigService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['twig'] = new OroBundleUIBundleTwigEnvironment_000000002e47f9af00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getTwigService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $a = $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $b = $this->get('request_stack');

        $c = new \Symfony\Bridge\Twig\Extension\HttpFoundationExtension($b);

        $d = new \Symfony\Bridge\Twig\AppVariable();
        $d->setEnvironment('dev');
        $d->setDebug(true);
        if ($this->has('security.token_storage')) {
            $d->setTokenStorage($this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        if ($this->has('request_stack')) {
            $d->setRequestStack($b);
        }
        $d->setContainer($this);

        $instance = new \Oro\Bundle\UIBundle\Twig\Environment($this->get('twig.loader'), array('debug' => true, 'strict_variables' => true, 'exception_controller' => 'FOS\\RestBundle\\Controller\\ExceptionController::showAction', 'form_themes' => array(0 => 'form_div_layout.html.twig'), 'autoescape' => 'filename', 'cache' => 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/twig', 'charset' => 'UTF-8', 'paths' => array(), 'date' => array('format' => 'F j, Y H:i', 'interval_format' => '%d days', 'timezone' => NULL), 'number_format' => array('decimals' => 0, 'decimal_point' => '.', 'thousands_separator' => ',')));

        $instance->addExtension($this->get('twig.extension.intl'));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\LogoutUrlExtension($this->get('security.logout_url_generator')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\SecurityExtension($this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        $instance->addExtension($this->get('oro_wamp.twig.sync_extension'));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ProfilerExtension($this->get('twig.profile'), $a));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\TranslationExtension($this->get('translator')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\AssetExtension($this->get('assets.packages'), $c));
        $instance->addExtension(new \Symfony\Bundle\TwigBundle\Extension\ActionsExtension($this->get('fragment.handler')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\CodeExtension(NULL, 'C:\\wamp\\www\\stockvalue~~\\app', 'UTF-8'));
        $instance->addExtension($this->get('twig.extension.routing'));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\YamlExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\StopwatchExtension($a, true));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ExpressionExtension());
        $instance->addExtension($this->get('twig.extension.httpkernel'));
        $instance->addExtension($c);
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\FormExtension($this->get('twig.form.renderer')));
        $instance->addExtension(new \Twig_Extension_Debug());
        $instance->addExtension(new \Symfony\Bundle\AsseticBundle\Twig\AsseticExtension($this->get('assetic.asset_factory'), $this->get('templating.name_parser'), false, array(), array(0 => 'OroCacheBundle', 1 => 'FrameworkBundle', 2 => 'SecurityBundle', 3 => 'OroSyncBundle', 4 => 'TwigBundle', 5 => 'MonologBundle', 6 => 'SwiftmailerBundle', 7 => 'AsseticBundle', 8 => 'DoctrineBundle', 9 => 'DoctrineFixturesBundle', 10 => 'SensioFrameworkExtraBundle', 11 => 'JMSSerializerBundle', 12 => 'KnpMenuBundle', 13 => 'FOSRestBundle', 14 => 'FOSJsRoutingBundle', 15 => 'NelmioApiDocBundle', 16 => 'BeSimpleSoapBundle', 17 => 'StofDoctrineExtensionsBundle', 18 => 'EscapeWSSEAuthenticationBundle', 19 => 'LiipImagineBundle', 20 => 'GenemuFormBundle', 21 => 'A2lixTranslationFormBundle', 22 => 'LexikMaintenanceBundle', 23 => 'OroLayoutBundle', 24 => 'OroUIBundle', 25 => 'OroOrganizationBundle', 26 => 'OroSecurityBundle', 27 => 'OroAttachmentBundle', 28 => 'OroEmailBundle', 29 => 'OroUserBundle', 30 => 'HWIOAuthBundle', 31 => 'OroSSOBundle', 32 => 'OroEntityBundle', 33 => 'OroEntityConfigBundle', 34 => 'OroEntityExtendBundle', 35 => 'OroIntegrationBundle', 36 => 'AkeneoBatchBundle', 37 => 'JDareClankBundle', 38 => 'JMSJobQueueBundle', 39 => 'KnpGaufretteBundle', 40 => 'MainStockValueBundle', 41 => 'OroActivityBundle', 42 => 'OroActivityListBundle', 43 => 'OroAddressBundle', 44 => 'OroAsseticBundle', 45 => 'OroBatchBundle', 46 => 'OroBusinessEntitiesBundle', 47 => 'OroCalendarBundle', 48 => 'OroChartBundle', 49 => 'OroConfigBundle', 50 => 'OroCronBundle', 51 => 'OroDataAuditBundle', 52 => 'OroDataGridBundle', 53 => 'OroDistributionBundle', 54 => 'OroEmbeddedFormBundle', 55 => 'OroEntityMergeBundle', 56 => 'OroEntityPaginationBundle', 57 => 'OroFilterBundle', 58 => 'OroFormBundle', 59 => 'OroHelpBundle', 60 => 'OroImapBundle', 61 => 'OroImportExportBundle', 62 => 'OroInstallerBundle', 63 => 'OroLocaleBundle', 64 => 'OroMigrationBundle', 65 => 'OroNoteBundle', 66 => 'OroNotificationBundle', 67 => 'OroPlatformBundle', 68 => 'OroQueryDesignerBundle', 69 => 'OroReportBundle', 70 => 'OroRequireJSBundle', 71 => 'OroSearchBundle', 72 => 'OroSegmentBundle', 73 => 'OroSidebarBundle', 74 => 'OroSoapBundle', 75 => 'OroTagBundle', 76 => 'OroThemeBundle', 77 => 'OroTranslationBundle', 78 => 'OroWindowsBundle', 79 => 'OroWorkflowBundle', 80 => 'SecurityStockValueBundle', 81 => 'SyliusFlowBundle', 82 => 'OroCommentBundle', 83 => 'OroDashboardBundle', 84 => 'OroNavigationBundle', 85 => 'OroTrackingBundle', 86 => 'OroReminderBundle', 87 => 'WebProfilerBundle', 88 => 'SensioDistributionBundle'), new \Symfony\Bundle\AsseticBundle\DefaultValueSupplier($this)));
        $instance->addExtension(new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension());
        $instance->addExtension(new \JMS\Serializer\Twig\SerializerExtension($this->get('jms_serializer')));
        $instance->addExtension(new \Knp\Menu\Twig\MenuExtension($this->get('knp_menu.helper')));
        $instance->addExtension($this->get('nelmio_api_doc.twig.extension.extra_markdown'));
        $instance->addExtension(new \Liip\ImagineBundle\Templating\ImagineExtension($this->get('liip_imagine.cache.manager')));
        $instance->addExtension($this->get('genemu.twig.extension.form'));
        $instance->addExtension(new \Oro\Bundle\LayoutBundle\Twig\LayoutExtension($this->get('oro_layout.twig.renderer'), $this->get('oro_layout.text.helper')));
        $instance->addExtension($this->get('oro_ui.twig.extension.formatter'));
        $instance->addExtension($this->get('oro_ui.twig.sort_by_extension'));
        $instance->addExtension($this->get('oro_ui.twig.ceil_extension'));
        $instance->addExtension($this->get('oro_ui.twig.ui_extension'));
        $instance->addExtension($this->get('oro_ui.twig.mobile_extension'));
        $instance->addExtension($this->get('oro_ui.twig.form_extension'));
        $instance->addExtension($this->get('oro_ui.twig.formatter_extension'));
        $instance->addExtension($this->get('oro_ui.twig.widget_extension'));
        $instance->addExtension($this->get('oro_ui.twig.date_extension'));
        $instance->addExtension($this->get('oro_ui.twig.regex_extension'));
        $instance->addExtension($this->get('oro_ui.twig.skype_button_extension'));
        $instance->addExtension($this->get('oro_ui.twig.tab_extension'));
        $instance->addExtension($this->get('oro_ui.twig.placeholder_extension'));
        $instance->addExtension($this->get('twig.extension.text'));
        $instance->addExtension($this->get('oro_ui.twig.content_extension'));
        $instance->addExtension($this->get('oro_ui.twig.url_extension'));
        $instance->addExtension($this->get('oro_ui.twig.js_template'));
        $instance->addExtension($this->get('oro_ui.twig.merge_recursive'));
        $instance->addExtension($this->get('oro_ui.twig.block'));
        $instance->addExtension($this->get('oro_ui.twig.html_tag'));
        $instance->addExtension($this->get('oro_organization.twig.get_owner'));
        $instance->addExtension($this->get('oro_organization.twig.business_units'));
        $instance->addExtension($this->get('oro_security.twig.security_extension'));
        $instance->addExtension($this->get('oro_security.twig.security_organization_extension'));
        $instance->addExtension($this->get('oro_attachment.twig.file_extension'));
        $instance->addExtension($this->get('oro_email.twig.extension.email'));
        $instance->addExtension($this->get('oro_user.twig.user_extension'));
        $instance->addExtension(new \HWI\Bundle\OAuthBundle\Twig\Extension\OAuthExtension($this->get('hwi_oauth.templating.helper.oauth')));
        $instance->addExtension($this->get('oro_entity.twig.extension.entity'));
        $instance->addExtension($this->get('oro_entity_config.twig.extension.config'));
        $instance->addExtension($this->get('oro_entity_extend.twig.extension.dynamic_fields'));
        $instance->addExtension($this->get('oro_entity_extend.twig.extension.enum'));
        $instance->addExtension($this->get('oro_integration.twig.integration'));
        $instance->addExtension($this->get('jms_job_queue.twig.extension'));
        $instance->addExtension($this->get('oro_assetic.twig.extension'));
        $instance->addExtension($this->get('oro_calendar.twig.dateformat'));
        $instance->addExtension($this->get('oro_config.twig.config_extension'));
        $instance->addExtension($this->get('oro_datagrid.twig.datagrid'));
        $instance->addExtension($this->get('oro_embedded_form.back_link.twig.extension'));
        $instance->addExtension($this->get('oro_entity_merge.twig.extension'));
        $instance->addExtension($this->get('oro_entity_pagination.twig_extension.entity_pagination'));
        $instance->addExtension($this->get('oro_form.twig.form_extension'));
        $instance->addExtension($this->get('oro_form.twig.js_validation_extension'));
        $instance->addExtension($this->get('oro_help.twig.extension'));
        $instance->addExtension($this->get('oro_locale.twig.date_format'));
        $instance->addExtension($this->get('oro_locale.twig.locale'));
        $instance->addExtension($this->get('oro_locale.twig.calendar'));
        $instance->addExtension($this->get('oro_locale.twig.date_time'));
        $instance->addExtension($this->get('oro_locale.twig.address'));
        $instance->addExtension($this->get('oro_locale.twig.number'));
        $instance->addExtension($this->get('oro_migration.twig.schema_dumper'));
        $instance->addExtension($this->get('oro_platform.twig.platform_extension'));
        $instance->addExtension($this->get('oro_requirejs.twig.requirejs_extension'));
        $instance->addExtension($this->get('oro_search.twig.search_extension'));
        $instance->addExtension($this->get('oro_segment.twig.extension.segment'));
        $instance->addExtension($this->get('oro_sidebar.twig.extension'));
        $instance->addExtension($this->get('oro_tag.twig.tag.extension'));
        $instance->addExtension($this->get('oro_theme.twig.extension'));
        $instance->addExtension($this->get('oro_translation.twig.translation.extension'));
        $instance->addExtension($this->get('oro_translation.twig.translation_status.extension'));
        $instance->addExtension($this->get('oro_windows.twig.extension'));
        $instance->addExtension($this->get('oro_workflow.twig.extension.workflow'));
        $instance->addExtension($this->get('oro_menu.twig.extension'));
        $instance->addExtension($this->get('oro_navigation.title_service.twig.extension'));
        $instance->addExtension($this->get('oro_navigation.twig.hash_nav_extension'));
        $instance->addExtension($this->get('oro_navigation.twig.content_tags'));
        $instance->addExtension($this->get('oro_reminder.twig.extension'));
        $instance->addExtension(new \Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension());
        $instance->addExtension($this->get('jdare_clank.twig.clank_extension'));
        $instance->addGlobal('app', $d);
        $instance->addGlobal('assets_version', NULL);
        $instance->addGlobal('ws', array('port' => 8080, 'host' => '*'));
        $instance->addGlobal('bap', array('layout' => '::base.html.twig'));
        $instance->addGlobal('oro_ui_content_provider_manager', $this->get('oro_ui.content_provider.manager'));
        call_user_func(array(new \Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator('F j, Y H:i', '%d days', NULL, 0, '.', ','), 'configure'), $instance);

        return $instance;
    }

    /**
     * Gets the 'twig.controller.exception' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Symfony\Bundle\TwigBundle\Controller\ExceptionController A Symfony\Bundle\TwigBundle\Controller\ExceptionController instance.
     */
    public function getTwig_Controller_ExceptionService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['twig.controller.exception'] = new SymfonyBundleTwigBundleControllerExceptionController_000000002e47f9e500000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getTwig_Controller_ExceptionService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Symfony\Bundle\TwigBundle\Controller\ExceptionController($this->get('twig'), true);
    }

    /**
     * Gets the 'twig.controller.preview_error' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\TwigBundle\Controller\PreviewErrorController A Symfony\Bundle\TwigBundle\Controller\PreviewErrorController instance.
     */
    protected function getTwig_Controller_PreviewErrorService()
    {
        return $this->services['twig.controller.preview_error'] = new \Symfony\Bundle\TwigBundle\Controller\PreviewErrorController($this->get('http_kernel'), 'FOS\\RestBundle\\Controller\\ExceptionController::showAction');
    }

    /**
     * Gets the 'twig.exception_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ExceptionListener A Symfony\Component\HttpKernel\EventListener\ExceptionListener instance.
     */
    protected function getTwig_ExceptionListenerService()
    {
        return $this->services['twig.exception_listener'] = new \Symfony\Component\HttpKernel\EventListener\ExceptionListener('FOS\\RestBundle\\Controller\\ExceptionController::showAction', $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'twig.extension.intl' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Twig_Extensions_Extension_Intl A Twig_Extensions_Extension_Intl instance.
     */
    protected function getTwig_Extension_IntlService()
    {
        return $this->services['twig.extension.intl'] = new \Twig_Extensions_Extension_Intl();
    }

    /**
     * Gets the 'twig.extension.text' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Twig_Extensions_Extension_Text A Twig_Extensions_Extension_Text instance.
     */
    protected function getTwig_Extension_TextService()
    {
        return $this->services['twig.extension.text'] = new \Twig_Extensions_Extension_Text();
    }

    /**
     * Gets the 'twig.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\TwigBundle\Loader\FilesystemLoader A Symfony\Bundle\TwigBundle\Loader\FilesystemLoader instance.
     */
    protected function getTwig_LoaderService()
    {
        $this->services['twig.loader'] = $instance = new \Symfony\Bundle\TwigBundle\Loader\FilesystemLoader($this->get('templating.locator'), $this->get('templating.name_parser'));

        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\FrameworkBundle/Resources/views', 'Framework');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\SecurityBundle/Resources/views', 'Security');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SyncBundle/Resources/views', 'OroSync');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\app/Resources/TwigBundle/views', 'Twig');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\TwigBundle/Resources/views', 'Twig');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\swiftmailer-bundle/Resources/views', 'Swiftmailer');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\doctrine\\doctrine-bundle/Resources/views', 'Doctrine');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\nelmio\\api-doc-bundle\\Nelmio\\ApiDocBundle/Resources/views', 'NelmioApiDoc');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\liip\\imagine-bundle\\Liip\\ImagineBundle/Resources/views', 'LiipImagine');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\genemu\\form-bundle\\Genemu\\Bundle\\FormBundle/Resources/views', 'GenemuForm');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\a2lix\\translation-form-bundle\\A2lix\\TranslationFormBundle/Resources/views', 'A2lixTranslationForm');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\LayoutBundle/Resources/views', 'OroLayout');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UIBundle/Resources/views', 'OroUI');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\OrganizationBundle/Resources/views', 'OroOrganization');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SecurityBundle/Resources/views', 'OroSecurity');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AttachmentBundle/Resources/views', 'OroAttachment');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmailBundle/Resources/views', 'OroEmail');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UserBundle/Resources/views', 'OroUser');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\hwi\\oauth-bundle\\HWI\\Bundle\\OAuthBundle/Resources/views', 'HWIOAuth');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SSOBundle/Resources/views', 'OroSSO');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityBundle/Resources/views', 'OroEntity');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityConfigBundle/Resources/views', 'OroEntityConfig');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityExtendBundle/Resources/views', 'OroEntityExtend');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\IntegrationBundle/Resources/views', 'OroIntegration');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\akeneo\\batch-bundle\\Akeneo\\Bundle\\BatchBundle/Resources/views', 'AkeneoBatch');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\jdare\\clank-bundle\\JDare\\ClankBundle/Resources/views', 'JDareClank');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\jms\\job-queue-bundle\\JMS\\JobQueueBundle/Resources/views', 'JMSJobQueue');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\src\\Main\\StockValueBundle/Resources/views', 'MainStockValue');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ActivityBundle/Resources/views', 'OroActivity');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ActivityListBundle/Resources/views', 'OroActivityList');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AddressBundle/Resources/views', 'OroAddress');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AsseticBundle/Resources/views', 'OroAssetic');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\BatchBundle/Resources/views', 'OroBatch');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CalendarBundle/Resources/views', 'OroCalendar');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ChartBundle/Resources/views', 'OroChart');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ConfigBundle/Resources/views', 'OroConfig');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CronBundle/Resources/views', 'OroCron');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataAuditBundle/Resources/views', 'OroDataAudit');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DataGridBundle/Resources/views', 'OroDataGrid');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DistributionBundle/Resources/views', 'OroDistribution');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle/Resources/views', 'OroEmbeddedForm');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityMergeBundle/Resources/views', 'OroEntityMerge');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityPaginationBundle/Resources/views', 'OroEntityPagination');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FilterBundle/Resources/views', 'OroFilter');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FormBundle/Resources/views', 'OroForm');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImapBundle/Resources/views', 'OroImap');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImportExportBundle/Resources/views', 'OroImportExport');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\InstallerBundle/Resources/views', 'OroInstaller');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\LocaleBundle/Resources/views', 'OroLocale');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\MigrationBundle/Resources/views', 'OroMigration');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NoteBundle/Resources/views', 'OroNote');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NotificationBundle/Resources/views', 'OroNotification');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\PlatformBundle/Resources/views', 'OroPlatform');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\QueryDesignerBundle/Resources/views', 'OroQueryDesigner');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ReportBundle/Resources/views', 'OroReport');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\RequireJSBundle/Resources/views', 'OroRequireJS');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SearchBundle/Resources/views', 'OroSearch');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SegmentBundle/Resources/views', 'OroSegment');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SidebarBundle/Resources/views', 'OroSidebar');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TagBundle/Resources/views', 'OroTag');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TranslationBundle/Resources/views', 'OroTranslation');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\WindowsBundle/Resources/views', 'OroWindows');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\WorkflowBundle/Resources/views', 'OroWorkflow');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\src\\Security\\StockValueBundle/Resources/views', 'SecurityStockValue');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CommentBundle/Resources/views', 'OroComment');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DashboardBundle/Resources/views', 'OroDashboard');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NavigationBundle/Resources/views', 'OroNavigation');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TrackingBundle/Resources/views', 'OroTracking');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ReminderBundle/Resources/views', 'OroReminder');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\WebProfilerBundle/Resources/views', 'WebProfiler');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\sensio\\distribution-bundle\\Sensio\\Bundle\\DistributionBundle/Resources/views', 'SensioDistribution');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\app/Resources/views');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Bridge\\Twig/Resources/views/Form');
        $instance->addPath('C:\\wamp\\www\\stockvalue~~\\vendor\\knplabs\\knp-menu\\src\\Knp\\Menu/Resources/views');

        return $instance;
    }

    /**
     * Gets the 'twig.profile' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Twig_Profiler_Profile A Twig_Profiler_Profile instance.
     */
    protected function getTwig_ProfileService()
    {
        return $this->services['twig.profile'] = new \Twig_Profiler_Profile();
    }

    /**
     * Gets the 'twig.translation.extractor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Twig\Translation\TwigExtractor A Symfony\Bridge\Twig\Translation\TwigExtractor instance.
     */
    protected function getTwig_Translation_ExtractorService()
    {
        return $this->services['twig.translation.extractor'] = new \Symfony\Bridge\Twig\Translation\TwigExtractor($this->get('twig'));
    }

    /**
     * Gets the 'uri_signer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\UriSigner A Symfony\Component\HttpKernel\UriSigner instance.
     */
    protected function getUriSignerService()
    {
        return $this->services['uri_signer'] = new \Symfony\Component\HttpKernel\UriSigner('7b3d671f1263efb25cc1137f155548f9');
    }

    /**
     * Gets the 'validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Validator\Validator\ValidatorInterface A Symfony\Component\Validator\Validator\ValidatorInterface instance.
     */
    protected function getValidatorService()
    {
        return $this->services['validator'] = $this->get('validator.builder')->getValidator();
    }

    /**
     * Gets the 'validator.builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Validator\ValidatorBuilderInterface A Symfony\Component\Validator\ValidatorBuilderInterface instance.
     */
    protected function getValidator_BuilderService()
    {
        $this->services['validator.builder'] = $instance = \Symfony\Component\Validator\Validation::createValidatorBuilder();

        $instance->setConstraintValidatorFactory(new \Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory($this, array('validator.expression' => 'validator.expression', 'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => 'validator.email', 'security.validator.user_password' => 'security.validator.user_password', 'doctrine.orm.validator.unique' => 'doctrine.orm.validator.unique', 'organization_unique' => 'oro_organization.orm.validator.organization_unique', 'oro_email.email_template_syntax_validator' => 'oro_email.validator.email_template_syntax', 'oro_email.email_address_validator' => 'oro_email.validator.email_address_validator', 'oro_email.email_recipients_validator' => 'oro_email.validator.email_recipients', 'oro_entity_extend.validator.not_sql_keyword' => 'oro_entity_extend.validator.not_sql_keyword', 'oro_entity_extend.validator.unique_keys' => 'oro_entity_extend.validator.unique_keys', 'oro_entity_extend.validator.unique_enum_name' => 'oro_entity_extend.validator.unique_enum_name', 'oro_entity_merge_max_entities_validator' => 'oro_entity_merge.validator.max_entities_validator', 'oro_entity_merge_master_entity_validator' => 'oro_entity_merge.validator.master_entity', 'oro_entity_merge_source_entity_validator' => 'oro_entity_merge.validator.source_entity', 'oro_entity_merge_unique_entity_validator' => 'oro_entity_merge.validator.unique_entity', 'oro_form.entity_class_validator' => 'oro_form.validator.entity_class', 'oro_form.related_entity_validator' => 'oro_form.validator.related_entity', 'oro_query_designer.query_validator' => 'oro_query_designer.validator.query_validator', 'oro_query_designer.grouping_validator' => 'oro_query_designer.validator.grouping_validator', 'oro_workflow_transition_is_allowed' => 'oro_workflow.validator.transition_is_allowed')));
        $instance->setTranslator($this->get('translator'));
        $instance->setTranslationDomain('validators');
        $instance->addXmlMappings(array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form/Resources/config/validation.xml'));
        $instance->addYamlMappings(array(0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\OrganizationBundle\\Resources\\config\\validation.yml', 1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmailBundle\\Resources\\config\\validation.yml', 2 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\UserBundle\\Resources\\config\\validation.yml', 3 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityExtendBundle\\Resources\\config\\validation.yml', 4 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\IntegrationBundle\\Resources\\config\\validation.yml', 5 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\AddressBundle\\Resources\\config\\validation.yml', 6 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\CalendarBundle\\Resources\\config\\validation.yml', 7 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle\\Resources\\config\\validation.yml', 8 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EntityMergeBundle\\Resources\\config\\validation.yml', 9 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\FormBundle\\Resources\\config\\validation.yml', 10 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImapBundle\\Resources\\config\\validation.yml', 11 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ImportExportBundle\\Resources\\config\\validation.yml', 12 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NoteBundle\\Resources\\config\\validation.yml', 13 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NotificationBundle\\Resources\\config\\validation.yml', 14 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ReportBundle\\Resources\\config\\validation.yml', 15 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\SegmentBundle\\Resources\\config\\validation.yml', 16 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TagBundle\\Resources\\config\\validation.yml', 17 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\DashboardBundle\\Resources\\config\\validation.yml', 18 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\NavigationBundle\\Resources\\config\\validation.yml', 19 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\TrackingBundle\\Resources\\config\\validation.yml', 20 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\ReminderBundle\\Resources\\config\\validation.yml'));
        $instance->enableAnnotationMapping($this->get('annotation_reader'));
        $instance->addMethodMapping('loadValidatorMetadata');
        $instance->setMetadataCache(new \Symfony\Component\Validator\Mapping\Cache\DoctrineCache($this->get('oro_cache.provider.validation')));
        $instance->addObjectInitializers(array(0 => $this->get('doctrine.orm.validator_initializer')));

        return $instance;
    }

    /**
     * Gets the 'validator.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Validator\Constraints\EmailValidator A Symfony\Component\Validator\Constraints\EmailValidator instance.
     */
    protected function getValidator_EmailService()
    {
        return $this->services['validator.email'] = new \Symfony\Component\Validator\Constraints\EmailValidator(false);
    }

    /**
     * Gets the 'validator.expression' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Validator\Constraints\ExpressionValidator A Symfony\Component\Validator\Constraints\ExpressionValidator instance.
     */
    protected function getValidator_ExpressionService()
    {
        return $this->services['validator.expression'] = new \Symfony\Component\Validator\Constraints\ExpressionValidator($this->get('property_accessor'));
    }

    /**
     * Gets the 'web_profiler.controller.exception' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController A Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController instance.
     */
    protected function getWebProfiler_Controller_ExceptionService()
    {
        return $this->services['web_profiler.controller.exception'] = new \Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController($this->get('profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('twig'), true);
    }

    /**
     * Gets the 'web_profiler.controller.profiler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController A Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController instance.
     */
    protected function getWebProfiler_Controller_ProfilerService()
    {
        return $this->services['web_profiler.controller.profiler'] = new \Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController($this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('twig'), array('data_collector.config' => array(0 => 'config', 1 => '@WebProfiler/Collector/config.html.twig'), 'data_collector.request' => array(0 => 'request', 1 => '@WebProfiler/Collector/request.html.twig'), 'data_collector.ajax' => array(0 => 'ajax', 1 => '@WebProfiler/Collector/ajax.html.twig'), 'data_collector.exception' => array(0 => 'exception', 1 => '@WebProfiler/Collector/exception.html.twig'), 'data_collector.events' => array(0 => 'events', 1 => '@WebProfiler/Collector/events.html.twig'), 'data_collector.logger' => array(0 => 'logger', 1 => '@WebProfiler/Collector/logger.html.twig'), 'data_collector.time' => array(0 => 'time', 1 => '@WebProfiler/Collector/time.html.twig'), 'data_collector.memory' => array(0 => 'memory', 1 => '@WebProfiler/Collector/memory.html.twig'), 'data_collector.router' => array(0 => 'router', 1 => '@WebProfiler/Collector/router.html.twig'), 'data_collector.form' => array(0 => 'form', 1 => '@WebProfiler/Collector/form.html.twig'), 'data_collector.translation' => array(0 => 'translation', 1 => '@WebProfiler/Collector/translation.html.twig'), 'data_collector.twig' => array(0 => 'twig', 1 => '@WebProfiler/Collector/twig.html.twig'), 'data_collector.security' => array(0 => 'security', 1 => '@Security/Collector/security.html.twig'), 'swiftmailer.data_collector' => array(0 => 'swiftmailer', 1 => '@Swiftmailer/Collector/swiftmailer.html.twig'), 'data_collector.doctrine' => array(0 => 'db', 1 => '@Doctrine/Collector/db.html.twig'), 'oro_entity.profiler.orm_data_collector' => array(0 => 'orm', 1 => 'OroEntityBundle:Collector:orm.html.twig')), 'bottom');
    }

    /**
     * Gets the 'web_profiler.controller.router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\Controller\RouterController A Symfony\Bundle\WebProfilerBundle\Controller\RouterController instance.
     */
    protected function getWebProfiler_Controller_RouterService()
    {
        return $this->services['web_profiler.controller.router'] = new \Symfony\Bundle\WebProfilerBundle\Controller\RouterController($this->get('profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('twig'), $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'web_profiler.debug_toolbar' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener A Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener instance.
     */
    protected function getWebProfiler_DebugToolbarService()
    {
        return $this->services['web_profiler.debug_toolbar'] = new \Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener($this->get('twig'), false, 2, 'bottom', $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE), '^/(app(_[\\w]+)?\\.php/)?_wdt');
    }

    /**
     * Updates the 'oro_navigation.content_provider.navigation_elements' service.
     */
    protected function synchronizeOroNavigation_ContentProvider_NavigationElementsService()
    {
        if ($this->initialized('oro_ui.content_provider.manager')) {
            $this->get('oro_ui.content_provider.manager')->addContentProvider($this->get('oro_navigation.content_provider.navigation_elements'), true);
        }
    }

    /**
     * Updates the 'oro_ui.content_provider.current_route' service.
     */
    protected function synchronizeOroUi_ContentProvider_CurrentRouteService()
    {
        if ($this->initialized('oro_ui.content_provider.manager')) {
            $this->get('oro_ui.content_provider.manager')->addContentProvider($this->get('oro_ui.content_provider.current_route'), true);
        }
    }

    /**
     * Updates the 'request' service.
     */
    protected function synchronizeRequestService()
    {
        if ($this->initialized('oro_layout.layout_context_configurator.route')) {
                    if ($this->has('request')) {
    $this->get('oro_layout.layout_context_configurator.route')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_layout.layout_context_configurator.theme')) {
                    if ($this->has('request')) {
    $this->get('oro_layout.layout_context_configurator.theme')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_ui.provider.widget_context')) {
                    if ($this->has('request')) {
    $this->get('oro_ui.provider.widget_context')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_ui.twig.widget_extension')) {
                    if ($this->has('request')) {
    $this->get('oro_ui.twig.widget_extension')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_ui.twig.placeholder_extension')) {
                    if ($this->has('request')) {
    $this->get('oro_ui.twig.placeholder_extension')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_ui.twig.url_extension')) {
                    if ($this->has('request')) {
    $this->get('oro_ui.twig.url_extension')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_ui.content_provider.current_route')) {
                    if ($this->has('request')) {
    $this->get('oro_ui.content_provider.current_route')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_security.listener.api_listener')) {
                    if ($this->has('request')) {
    $this->get('oro_security.listener.api_listener')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_email.email.model.builder')) {
                    if ($this->has('request')) {
    $this->get('oro_email.email.model.builder')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_user.form.handler.acl_role')) {
            $this->get('oro_user.form.handler.acl_role')->setRequest($this->get('request'));
        }
        if ($this->initialized('hwi_oauth.templating.helper.oauth')) {
            $this->get('hwi_oauth.templating.helper.oauth')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        if ($this->initialized('oro_entity.event_listener.entity_relation_grid_listener')) {
                    if ($this->has('request')) {
    $this->get('oro_entity.event_listener.entity_relation_grid_listener')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_dataaudit.event_listener.segment_widget_options_listener')) {
                    if ($this->has('request')) {
    $this->get('oro_dataaudit.event_listener.segment_widget_options_listener')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_datagrid.datagrid.name_strategy')) {
                    if ($this->has('request')) {
    $this->get('oro_datagrid.datagrid.name_strategy')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_datagrid.datagrid.request_parameters_factory')) {
                    if ($this->has('request')) {
    $this->get('oro_datagrid.datagrid.request_parameters_factory')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_distribution.listener.navigation_listener')) {
                    if ($this->has('request')) {
    $this->get('oro_distribution.listener.navigation_listener')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_entity_pagination.storage')) {
                    if ($this->has('request')) {
    $this->get('oro_entity_pagination.storage')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_entity_pagination.twig_extension.entity_pagination')) {
                    if ($this->has('request')) {
    $this->get('oro_entity_pagination.twig_extension.entity_pagination')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_workflow.action.flash_message')) {
                    if ($this->has('request')) {
    $this->get('oro_workflow.action.flash_message')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_dashboard.widget_configs')) {
                    if ($this->has('request')) {
    $this->get('oro_dashboard.widget_configs')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
        if ($this->initialized('oro_navigation.content_provider.navigation_elements')) {
                    if ($this->has('request')) {
    $this->get('oro_navigation.content_provider.navigation_elements')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }

        }
    }

    /**
     * Gets the 'assetic.asset_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Bundle\AsseticBundle\Factory\AssetFactory A Symfony\Bundle\AsseticBundle\Factory\AssetFactory instance.
     */
    protected function getAssetic_AssetFactoryService()
    {
        $this->services['assetic.asset_factory'] = $instance = new \Symfony\Bundle\AsseticBundle\Factory\AssetFactory($this->get('kernel'), $this, $this->getParameterBag(), 'C:\\wamp\\www\\stockvalue~~\\app/../web', false);

        $instance->addWorker(new \Assetic\Factory\Worker\EnsureFilterWorker('/\\.less$/', $this->get('assetic.filter.lessphp')));

        return $instance;
    }

    /**
     * Gets the 'controller_name_converter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser A Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser instance.
     */
    protected function getControllerNameConverterService()
    {
        return $this->services['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser($this->get('kernel'));
    }

    /**
     * Gets the 'doctrine.dbal.logger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Bridge\Doctrine\Logger\DbalLogger A Symfony\Bridge\Doctrine\Logger\DbalLogger instance.
     */
    protected function getDoctrine_Dbal_LoggerService()
    {
        return $this->services['doctrine.dbal.logger'] = new \Symfony\Bridge\Doctrine\Logger\DbalLogger($this->get('monolog.logger.doctrine', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'doctrine.dbal.logger.profiling.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Doctrine\DBAL\Logging\DebugStack A Doctrine\DBAL\Logging\DebugStack instance.
     */
    protected function getDoctrine_Dbal_Logger_Profiling_DefaultService()
    {
        return $this->services['doctrine.dbal.logger.profiling.default'] = new \Doctrine\DBAL\Logging\DebugStack();
    }

    /**
     * Gets the 'doctrine.dbal.logger.profiling.report_source' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Doctrine\DBAL\Logging\DebugStack A Doctrine\DBAL\Logging\DebugStack instance.
     */
    protected function getDoctrine_Dbal_Logger_Profiling_ReportSourceService()
    {
        return $this->services['doctrine.dbal.logger.profiling.report_source'] = new \Doctrine\DBAL\Logging\DebugStack();
    }

    /**
     * Gets the 'doctrine.dbal.logger.profiling.report_target' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Doctrine\DBAL\Logging\DebugStack A Doctrine\DBAL\Logging\DebugStack instance.
     */
    protected function getDoctrine_Dbal_Logger_Profiling_ReportTargetService()
    {
        return $this->services['doctrine.dbal.logger.profiling.report_target'] = new \Doctrine\DBAL\Logging\DebugStack();
    }

    /**
     * Gets the 'doctrine.dbal.logger.profiling.session' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Doctrine\DBAL\Logging\DebugStack A Doctrine\DBAL\Logging\DebugStack instance.
     */
    protected function getDoctrine_Dbal_Logger_Profiling_SessionService()
    {
        return $this->services['doctrine.dbal.logger.profiling.session'] = new \Doctrine\DBAL\Logging\DebugStack();
    }

    /**
     * Gets the 'doctrine.dbal.session_connection.wrapped' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \PDO A PDO instance.
     */
    protected function getDoctrine_Dbal_SessionConnection_WrappedService()
    {
        return $this->services['doctrine.dbal.session_connection.wrapped'] = $this->get('doctrine.dbal.session_connection')->getWrappedConnection();
    }

    /**
     * Gets the 'doctrine.orm.listeners.resolve_target_entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Doctrine\ORM\Tools\ResolveTargetEntityListener A Doctrine\ORM\Tools\ResolveTargetEntityListener instance.
     */
    public function getDoctrine_Orm_Listeners_ResolveTargetEntityService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['doctrine.orm.listeners.resolve_target_entity'] = new DoctrineORMToolsResolveTargetEntityListener_000000002e47fa5e00000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getDoctrine_Orm_Listeners_ResolveTargetEntityService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Doctrine\ORM\Tools\ResolveTargetEntityListener();

        $instance->addResolveTargetEntity('Symfony\\Component\\Security\\Core\\User\\UserInterface', 'Oro\\Bundle\\UserBundle\\Entity\\User', array());
        $instance->addResolveTargetEntity('Oro\\Bundle\\EmailBundle\\Entity\\EmailAddress', 'OroEntityProxy\\OroEmailBundle\\EmailAddressProxy', array());

        return $instance;
    }

    /**
     * Gets the 'fos_rest.request_matcher.0dfc4cce134bee15f08405cb5cea4845b13ff7d8c8f779004218432a2c552bd0cd9f9d27' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\HttpFoundation\RequestMatcher A Symfony\Component\HttpFoundation\RequestMatcher instance.
     */
    protected function getFosRest_RequestMatcher_0dfc4cce134bee15f08405cb5cea4845b13ff7d8c8f779004218432a2c552bd0cd9f9d27Service()
    {
        return $this->services['fos_rest.request_matcher.0dfc4cce134bee15f08405cb5cea4845b13ff7d8c8f779004218432a2c552bd0cd9f9d27'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/', NULL, NULL);
    }

    /**
     * Gets the 'fos_rest.request_matcher.113eaebe4b0f43058a028904ffe5ac13f47c9c6add959b79cc6cfe86c113ae5131da5524' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\HttpFoundation\RequestMatcher A Symfony\Component\HttpFoundation\RequestMatcher instance.
     */
    protected function getFosRest_RequestMatcher_113eaebe4b0f43058a028904ffe5ac13f47c9c6add959b79cc6cfe86c113ae5131da5524Service()
    {
        return $this->services['fos_rest.request_matcher.113eaebe4b0f43058a028904ffe5ac13f47c9c6add959b79cc6cfe86c113ae5131da5524'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/api/soap', NULL, NULL);
    }

    /**
     * Gets the 'fos_rest.request_matcher.23fd25bbfcedbffe3e33ba20fa663bbc40b82f2b723fb0ffbd7027cee94f4dac389a22fa' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\HttpFoundation\RequestMatcher A Symfony\Component\HttpFoundation\RequestMatcher instance.
     */
    protected function getFosRest_RequestMatcher_23fd25bbfcedbffe3e33ba20fa663bbc40b82f2b723fb0ffbd7027cee94f4dac389a22faService()
    {
        return $this->services['fos_rest.request_matcher.23fd25bbfcedbffe3e33ba20fa663bbc40b82f2b723fb0ffbd7027cee94f4dac389a22fa'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/api/rest', NULL, NULL);
    }

    /**
     * Gets the 'fos_rest.request_matcher.50d7031fd332f324b33953b2158cded5b34cf57c3cd709fdaa24d6818252fd77ab4624ee' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\HttpFoundation\RequestMatcher A Symfony\Component\HttpFoundation\RequestMatcher instance.
     */
    protected function getFosRest_RequestMatcher_50d7031fd332f324b33953b2158cded5b34cf57c3cd709fdaa24d6818252fd77ab4624eeService()
    {
        return $this->services['fos_rest.request_matcher.50d7031fd332f324b33953b2158cded5b34cf57c3cd709fdaa24d6818252fd77ab4624ee'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/_profiler|_wdt/', NULL, NULL);
    }

    /**
     * Gets the 'jms_serializer.metadata_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Metadata\MetadataFactory A Metadata\MetadataFactory instance.
     */
    protected function getJmsSerializer_MetadataFactoryService()
    {
        $this->services['jms_serializer.metadata_factory'] = $instance = new \Metadata\MetadataFactory(new \Metadata\Driver\LazyLoadingDriver($this, 'jms_serializer.metadata_driver'), 'Metadata\\ClassHierarchyMetadata', true);

        $instance->setCache(new \Metadata\Cache\FileCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/jms_serializer'));

        return $instance;
    }

    /**
     * Gets the 'jms_serializer.unserialize_object_constructor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \JMS\Serializer\Construction\UnserializeObjectConstructor A JMS\Serializer\Construction\UnserializeObjectConstructor instance.
     */
    protected function getJmsSerializer_UnserializeObjectConstructorService()
    {
        return $this->services['jms_serializer.unserialize_object_constructor'] = new \JMS\Serializer\Construction\UnserializeObjectConstructor();
    }

    /**
     * Gets the 'knp_menu.helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Knp\Menu\Twig\Helper A Knp\Menu\Twig\Helper instance.
     */
    protected function getKnpMenu_HelperService()
    {
        return $this->services['knp_menu.helper'] = new \Knp\Menu\Twig\Helper($this->get('knp_menu.renderer_provider'), $this->get('knp_menu.menu_provider'));
    }

    /**
     * Gets the 'oro_cache.provider.validation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroCache_Provider_ValidationService()
    {
        $this->services['oro_cache.provider.validation'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('validation.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_datagrid.datagrid.manager.link' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink A Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink instance.
     */
    protected function getOroDatagrid_Datagrid_Manager_LinkService()
    {
        return $this->services['oro_datagrid.datagrid.manager.link'] = new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_datagrid.datagrid.manager', false);
    }

    /**
     * Gets the 'oro_distribution.composer.io' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Composer\IO\BufferIO A Composer\IO\BufferIO instance.
     */
    protected function getOroDistribution_Composer_IoService()
    {
        return $this->services['oro_distribution.composer.io'] = new \Composer\IO\BufferIO();
    }

    /**
     * Gets the 'oro_distribution.routing_options_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Component\Routing\Resolver\ChainRouteOptionsResolver A Oro\Component\Routing\Resolver\ChainRouteOptionsResolver instance.
     */
    protected function getOroDistribution_RoutingOptionsResolverService()
    {
        $a = $this->get('oro_entity.entity_alias_resolver');

        $this->services['oro_distribution.routing_options_resolver'] = $instance = new \Oro\Component\Routing\Resolver\ChainRouteOptionsResolver();

        $instance->addResolver(new \Oro\Bundle\EntityBundle\Routing\DictionaryEntityRouteOptionsResolver($this->get('oro_entity.dictionary_value_list_provider'), $a, $this->get('oro_entity.entity_class_name_helper')));
        $instance->addResolver(new \Oro\Bundle\ActivityBundle\Routing\ActivityAssociationRouteOptionsResolver($this->get('oro_entity_config.provider.grouping'), $a));
        $instance->addResolver(new \Oro\Bundle\SoapBundle\Routing\OldOptionsRouteOptionsResolver());

        return $instance;
    }

    /**
     * Gets the 'oro_email.email.owner.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\EmailBundle\Entity\Provider\EmailOwnerProvider A Oro\Bundle\EmailBundle\Entity\Provider\EmailOwnerProvider instance.
     */
    protected function getOroEmail_Email_Owner_ProviderService()
    {
        return $this->services['oro_email.email.owner.provider'] = new \Oro\Bundle\EmailBundle\Entity\Provider\EmailOwnerProvider($this->get('oro_email.email.owner.provider.storage'));
    }

    /**
     * Gets the 'oro_email.email.owner.provider.storage' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\EmailBundle\Entity\Provider\EmailOwnerProviderStorage A Oro\Bundle\EmailBundle\Entity\Provider\EmailOwnerProviderStorage instance.
     */
    protected function getOroEmail_Email_Owner_Provider_StorageService()
    {
        $this->services['oro_email.email.owner.provider.storage'] = $instance = new \Oro\Bundle\EmailBundle\Entity\Provider\EmailOwnerProviderStorage();

        $instance->addProvider($this->get('oro_email.mailbox_email_owner_provider'));
        $instance->addProvider($this->get('oro_user.email.owner.provider'));

        return $instance;
    }

    /**
     * Gets the 'oro_entity.dictionary_value_list_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\EntityBundle\Provider\ChainDictionaryValueListProvider A Oro\Bundle\EntityBundle\Provider\ChainDictionaryValueListProvider instance.
     */
    protected function getOroEntity_DictionaryValueListProviderService()
    {
        $a = $this->get('oro_entity_config.config_manager');
        $b = $this->get('doctrine');

        $this->services['oro_entity.dictionary_value_list_provider'] = $instance = new \Oro\Bundle\EntityBundle\Provider\ChainDictionaryValueListProvider();

        $instance->addProvider(new \Oro\Bundle\EntityBundle\Provider\DictionaryValueListProvider($a, $b), -100);
        $instance->addProvider(new \Oro\Bundle\EntityExtendBundle\Provider\EnumValueListProvider($a, $b), -90);

        return $instance;
    }

    /**
     * Gets the 'oro_entity_config.config_cache_impl' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroEntityConfig_ConfigCacheImplService()
    {
        $this->services['oro_entity_config.config_cache_impl'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_entity_config.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_entity_config.config_type_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\EntityConfigBundle\Form\Util\ConfigTypeHelper A Oro\Bundle\EntityConfigBundle\Form\Util\ConfigTypeHelper instance.
     */
    protected function getOroEntityConfig_ConfigTypeHelperService()
    {
        return $this->services['oro_entity_config.config_type_helper'] = new \Oro\Bundle\EntityConfigBundle\Form\Util\ConfigTypeHelper($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_entity_config.link.entity_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink A Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink instance.
     */
    protected function getOroEntityConfig_Link_EntityManagerService()
    {
        return $this->services['oro_entity_config.link.entity_manager'] = new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'doctrine.orm.entity_manager', false);
    }

    /**
     * Gets the 'oro_entity_config.link.security_context' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink A Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink instance.
     */
    protected function getOroEntityConfig_Link_SecurityContextService()
    {
        return $this->services['oro_entity_config.link.security_context'] = new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'security.context', false);
    }

    /**
     * Gets the 'oro_entity_config.model_cache_impl' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroEntityConfig_ModelCacheImplService()
    {
        $this->services['oro_entity_config.model_cache_impl'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_entity_config.model');

        return $instance;
    }

    /**
     * Gets the 'oro_entity_extend.association_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Oro\Bundle\EntityExtendBundle\Entity\Manager\AssociationManager A Oro\Bundle\EntityExtendBundle\Entity\Manager\AssociationManager instance.
     */
    public function getOroEntityExtend_AssociationManagerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;

            return $this->services['oro_entity_extend.association_manager'] = new OroBundleEntityExtendBundleEntityManagerAssociationManager_000000002e47fe9700000000e28c9ac7(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getOroEntityExtend_AssociationManagerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Oro\Bundle\EntityExtendBundle\Entity\Manager\AssociationManager($this->get('oro_entity_config.config_manager'), $this->get('debug.event_dispatcher'), $this->get('oro_entity.doctrine_helper'), $this->get('oro_entity.entity_name_resolver'));
    }

    /**
     * Gets the 'oro_entity_extend.association_type_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Util\AssociationTypeHelper A Oro\Bundle\EntityExtendBundle\Form\Util\AssociationTypeHelper instance.
     */
    protected function getOroEntityExtend_AssociationTypeHelperService()
    {
        return $this->services['oro_entity_extend.association_type_helper'] = new \Oro\Bundle\EntityExtendBundle\Form\Util\AssociationTypeHelper($this->get('oro_entity_config.config_manager'), $this->get('oro_entity.orm.entity_class_resolver'));
    }

    /**
     * Gets the 'oro_entity_extend.enum_type_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\EntityExtendBundle\Form\Util\EnumTypeHelper A Oro\Bundle\EntityExtendBundle\Form\Util\EnumTypeHelper instance.
     */
    protected function getOroEntityExtend_EnumTypeHelperService()
    {
        return $this->services['oro_entity_extend.enum_type_helper'] = new \Oro\Bundle\EntityExtendBundle\Form\Util\EnumTypeHelper($this->get('oro_entity_config.config_manager'));
    }

    /**
     * Gets the 'oro_layout.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Component\Layout\Loader\LayoutUpdateLoader A Oro\Component\Layout\Loader\LayoutUpdateLoader instance.
     */
    protected function getOroLayout_LoaderService()
    {
        $a = new \Oro\Component\Layout\Loader\Generator\ConfigLayoutUpdateGenerator();
        $a->addExtension(new \Oro\Bundle\LayoutBundle\Layout\Extension\Generator\ConfigExpressionGeneratorExtension($this->get('oro_layout.expression.assembler')));

        $this->services['oro_layout.loader'] = $instance = new \Oro\Component\Layout\Loader\LayoutUpdateLoader();

        $instance->addDriver('yml', new \Oro\Component\Layout\Loader\Driver\YamlDriver($a, true, 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/layouts'));
        $instance->addDriver('php', new \Oro\Component\Layout\Loader\Driver\PhpDriver(new \Oro\Component\Layout\Loader\Generator\PhpLayoutUpdateGenerator(), true, 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/layouts'));

        return $instance;
    }

    /**
     * Gets the 'oro_layout.php.renderer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Form\FormRenderer A Symfony\Component\Form\FormRenderer instance.
     */
    protected function getOroLayout_Php_RendererService()
    {
        return $this->services['oro_layout.php.renderer'] = new \Symfony\Component\Form\FormRenderer(new \Symfony\Component\Form\Extension\Templating\TemplatingRendererEngine($this->get('debug.templating.engine.php'), array(0 => 'OroLayoutBundle:Layout/php')));
    }

    /**
     * Gets the 'oro_layout.theme_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Component\Layout\Extension\Theme\Model\ThemeManager A Oro\Component\Layout\Extension\Theme\Model\ThemeManager instance.
     */
    protected function getOroLayout_ThemeManagerService()
    {
        return $this->services['oro_layout.theme_manager'] = new \Oro\Component\Layout\Extension\Theme\Model\ThemeManager(new \Oro\Component\Layout\Extension\Theme\Model\ThemeFactory(), array('embedded_default' => array('label' => 'Default theme for embedded forms', 'groups' => array(0 => 'embedded_forms'))));
    }

    /**
     * Gets the 'oro_layout.twig.renderer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Bridge\Twig\Form\TwigRenderer A Symfony\Bridge\Twig\Form\TwigRenderer instance.
     */
    protected function getOroLayout_Twig_RendererService()
    {
        return $this->services['oro_layout.twig.renderer'] = new \Symfony\Bridge\Twig\Form\TwigRenderer(new \Symfony\Bridge\Twig\Form\TwigRendererEngine(array(0 => 'OroLayoutBundle:Layout:div_layout.html.twig')));
    }

    /**
     * Gets the 'oro_organization.link.security_context' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink A Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink instance.
     */
    protected function getOroOrganization_Link_SecurityContextService()
    {
        return $this->services['oro_organization.link.security_context'] = new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'security.context', false);
    }

    /**
     * Gets the 'oro_search.security_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\SearchBundle\Security\SecurityProvider A Oro\Bundle\SearchBundle\Security\SecurityProvider instance.
     */
    protected function getOroSearch_SecurityProviderService()
    {
        return $this->services['oro_search.security_provider'] = new \Oro\Bundle\SearchBundle\Security\SecurityProvider($this->get('oro_security.security_facade'), $this->get('oro_security.entity_security_metadata_provider'));
    }

    /**
     * Gets the 'oro_security.acl.annotation_provider.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroSecurity_Acl_AnnotationProvider_CacheService()
    {
        $this->services['oro_security.acl.annotation_provider.cache'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro');

        $instance->setNamespace('oro_acl_annotations.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_security.acl.extension_selector' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\SecurityBundle\Acl\Extension\AclExtensionSelector A Oro\Bundle\SecurityBundle\Acl\Extension\AclExtensionSelector instance.
     */
    protected function getOroSecurity_Acl_ExtensionSelectorService()
    {
        $a = $this->get('oro_security.acl.object_id_accessor');

        $this->services['oro_security.acl.extension_selector'] = $instance = new \Oro\Bundle\SecurityBundle\Acl\Extension\AclExtensionSelector($a);

        $instance->addAclExtension(new \Oro\Bundle\SecurityBundle\Acl\Extension\ActionAclExtension($this->get('oro_security.action_metadata_provider')));
        $instance->addAclExtension(new \Oro\Bundle\SecurityBundle\Acl\Extension\EntityAclExtension($a, $this->get('oro_entity.orm.entity_class_resolver'), $this->get('oro_security.entity_security_metadata_provider'), $this->get('oro_security.owner.metadata_provider.chain'), $this->get('oro_security.owner.ownership_decision_maker.chain')));

        return $instance;
    }

    /**
     * Gets the 'oro_security.acl.object_id_accessor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\SecurityBundle\Acl\Domain\ObjectIdAccessor A Oro\Bundle\SecurityBundle\Acl\Domain\ObjectIdAccessor instance.
     */
    protected function getOroSecurity_Acl_ObjectIdAccessorService()
    {
        return $this->services['oro_security.acl.object_id_accessor'] = new \Oro\Bundle\SecurityBundle\Acl\Domain\ObjectIdAccessor();
    }

    /**
     * Gets the 'oro_security.acl.permission_granting_strategy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\SecurityBundle\Acl\Domain\PermissionGrantingStrategy A Oro\Bundle\SecurityBundle\Acl\Domain\PermissionGrantingStrategy instance.
     */
    protected function getOroSecurity_Acl_PermissionGrantingStrategyService()
    {
        $this->services['oro_security.acl.permission_granting_strategy'] = $instance = new \Oro\Bundle\SecurityBundle\Acl\Domain\PermissionGrantingStrategy();

        $instance->setContext(new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'security.acl.voter.basic_permissions', true));

        return $instance;
    }

    /**
     * Gets the 'oro_security.action_metadata_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\SecurityBundle\Metadata\ActionMetadataProvider A Oro\Bundle\SecurityBundle\Metadata\ActionMetadataProvider instance.
     */
    protected function getOroSecurity_ActionMetadataProviderService()
    {
        return $this->services['oro_security.action_metadata_provider'] = new \Oro\Bundle\SecurityBundle\Metadata\ActionMetadataProvider($this->get('oro_security.acl.annotation_provider'), $this->get('oro_security.action_metadata_provider.cache'));
    }

    /**
     * Gets the 'oro_security.action_metadata_provider.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroSecurity_ActionMetadataProvider_CacheService()
    {
        $this->services['oro_security.action_metadata_provider.cache'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro');

        $instance->setNamespace('oro_acl_actions.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_security.entity_security_metadata_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\SecurityBundle\Metadata\EntitySecurityMetadataProvider A Oro\Bundle\SecurityBundle\Metadata\EntitySecurityMetadataProvider instance.
     */
    protected function getOroSecurity_EntitySecurityMetadataProviderService()
    {
        return $this->services['oro_security.entity_security_metadata_provider'] = new \Oro\Bundle\SecurityBundle\Metadata\EntitySecurityMetadataProvider($this->get('oro_entity_config.provider.security'), $this->get('oro_entity_config.provider.entity'), $this->get('oro_entity_config.provider.extend'), $this->get('oro_security.entity_security_metadata_provider.cache'));
    }

    /**
     * Gets the 'oro_security.entity_security_metadata_provider.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroSecurity_EntitySecurityMetadataProvider_CacheService()
    {
        $this->services['oro_security.entity_security_metadata_provider.cache'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_acl_entities.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_security.orm.ownership_sql_walker_builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\SecurityBundle\ORM\Walker\OwnershipConditionDataBuilder A Oro\Bundle\SecurityBundle\ORM\Walker\OwnershipConditionDataBuilder instance.
     */
    protected function getOroSecurity_Orm_OwnershipSqlWalkerBuilderService()
    {
        return $this->services['oro_security.orm.ownership_sql_walker_builder'] = new \Oro\Bundle\SecurityBundle\ORM\Walker\OwnershipConditionDataBuilder($this->get('oro_entity_config.link.security_context'), $this->get('oro_security.acl.object_id_accessor'), $this->get('oro_security.entity_security_metadata_provider'), $this->get('oro_security.owner.metadata_provider.chain'), $this->get('oro_security.ownership_tree_provider.chain'), $this->get('security.acl.voter.basic_permissions', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'oro_security.owner.entity_owner_accessor.link' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink A Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink instance.
     */
    protected function getOroSecurity_Owner_EntityOwnerAccessor_LinkService()
    {
        return $this->services['oro_security.owner.entity_owner_accessor.link'] = new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_security.owner.entity_owner_accessor', false);
    }

    /**
     * Gets the 'oro_security.owner.ownership_metadata_provider.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroSecurity_Owner_OwnershipMetadataProvider_CacheService()
    {
        $this->services['oro_security.owner.ownership_metadata_provider.cache'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_acl_entity_ownership.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_security.owner.ownership_metadata_provider.link' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink A Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink instance.
     */
    protected function getOroSecurity_Owner_OwnershipMetadataProvider_LinkService()
    {
        return $this->services['oro_security.owner.ownership_metadata_provider.link'] = new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_security.owner.ownership_metadata_provider', false);
    }

    /**
     * Gets the 'oro_security.ownership_tree_provider.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroSecurity_OwnershipTreeProvider_CacheService()
    {
        $this->services['oro_security.ownership_tree_provider.cache'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_acl_owner_tree.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_security.security_facade.link' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink A Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink instance.
     */
    protected function getOroSecurity_SecurityFacade_LinkService()
    {
        return $this->services['oro_security.security_facade.link'] = new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_security.security_facade', false);
    }

    /**
     * Gets the 'oro_translation.database_translation.metadata.cache_impl' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getOroTranslation_DatabaseTranslation_Metadata_CacheImplService()
    {
        $this->services['oro_translation.database_translation.metadata.cache_impl'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_database_translation_metadata.cache');

        return $instance;
    }

    /**
     * Gets the 'oro_user.security.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\UserBundle\Security\UserProvider A Oro\Bundle\UserBundle\Security\UserProvider instance.
     */
    protected function getOroUser_Security_ProviderService()
    {
        return $this->services['oro_user.security.provider'] = new \Oro\Bundle\UserBundle\Security\UserProvider($this->get('oro_user.manager'));
    }

    /**
     * Gets the 'router.request_context' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Routing\RequestContext A Symfony\Component\Routing\RequestContext instance.
     */
    protected function getRouter_RequestContextService()
    {
        return $this->services['router.request_context'] = new \Symfony\Component\Routing\RequestContext('', 'GET', 'localhost', 'http', 80, 443);
    }

    /**
     * Gets the 'routing.resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Config\Loader\LoaderResolver A Symfony\Component\Config\Loader\LoaderResolver instance.
     */
    protected function getRouting_ResolverService()
    {
        $a = $this->get('file_locator');
        $b = $this->get('annotation_reader');

        $c = new \Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader($b);

        $this->services['routing.resolver'] = $instance = new \Symfony\Component\Config\Loader\LoaderResolver();

        $instance->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($a));
        $instance->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($a));
        $instance->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($a));
        $instance->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($a, $c));
        $instance->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($a, $c));
        $instance->addLoader($c);
        $instance->addLoader($this->get('fos_rest.routing.loader.controller'));
        $instance->addLoader($this->get('fos_rest.routing.loader.yaml_collection'));
        $instance->addLoader($this->get('fos_rest.routing.loader.xml_collection'));
        $instance->addLoader($this->get('liip_imagine.routing.loader'));
        $instance->addLoader($this->get('oro_distribution.routing_loader'));
        $instance->addLoader($this->get('oro_distribution.expose_routing_loader'));

        return $instance;
    }

    /**
     * Gets the 'security.access.decision_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Core\Authorization\AccessDecisionManager A Symfony\Component\Security\Core\Authorization\AccessDecisionManager instance.
     */
    protected function getSecurity_Access_DecisionManagerService()
    {
        $a = $this->get('security.authentication.trust_resolver');
        $b = $this->get('security.role_hierarchy');

        return $this->services['security.access.decision_manager'] = new \Symfony\Component\Security\Core\Authorization\AccessDecisionManager(array(0 => $this->get('oro_email.acl.voter.email_voter'), 1 => new \Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter(new \Symfony\Component\Security\Core\Authorization\ExpressionLanguage(), $a, $b), 2 => new \Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter($b), 3 => new \Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter($a), 4 => $this->get('security.acl.voter.basic_permissions'), 5 => $this->get('oro_workflow.security.acl.voter.entity')), 'unanimous', false, true);
    }

    /**
     * Gets the 'security.access_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\Firewall\AccessListener A Symfony\Component\Security\Http\Firewall\AccessListener instance.
     */
    protected function getSecurity_AccessListenerService()
    {
        return $this->services['security.access_listener'] = new \Symfony\Component\Security\Http\Firewall\AccessListener($this->get('security.token_storage'), $this->get('security.access.decision_manager'), $this->get('security.access_map'), $this->get('security.authentication.manager'));
    }

    /**
     * Gets the 'security.access_map' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\AccessMap A Symfony\Component\Security\Http\AccessMap instance.
     */
    protected function getSecurity_AccessMapService()
    {
        $this->services['security.access_map'] = $instance = new \Symfony\Component\Security\Http\AccessMap();

        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin/'), array(0 => 'ROLE_ADMIN'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/api/rest/(latest|v1)/pinbars'), array(0 => 'ROLE_USER'), NULL);

        return $instance;
    }

    /**
     * Gets the 'security.acl.cache.doctrine.cache_impl' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\CacheBundle\Provider\FilesystemCache A Oro\Bundle\CacheBundle\Provider\FilesystemCache instance.
     */
    protected function getSecurity_Acl_Cache_Doctrine_CacheImplService()
    {
        $this->services['security.acl.cache.doctrine.cache_impl'] = $instance = new \Oro\Bundle\CacheBundle\Provider\FilesystemCache('C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_data');

        $instance->setNamespace('oro_acl');

        return $instance;
    }

    /**
     * Gets the 'security.authentication.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager A Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager instance.
     */
    protected function getSecurity_Authentication_ManagerService()
    {
        $a = $this->get('security.user_checker');

        $this->services['security.authentication.manager'] = $instance = new \Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager(array(0 => $this->get('escape_wsse_authentication.provider.wsse_secured'), 1 => new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('5614d22ab95198.10755846'), 2 => new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('5614d22ab95198.10755846'), 3 => new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('5614d22ab95198.10755846'), 4 => new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('5614d22ab95198.10755846'), 5 => new \Oro\Bundle\SecurityBundle\Authentication\Provider\UsernamePasswordOrganizationAuthenticationProvider($this->get('security.user.provider.concrete.chain_provider'), $a, 'main', $this->get('security.encoder_factory'), true), 6 => new \Oro\Bundle\SSOBundle\Security\OAuthProvider($this->get('oro_sso.oauth_provider'), $this->get('hwi_oauth.resource_ownermap.main'), $a), 7 => new \Oro\Bundle\SecurityBundle\Authentication\Provider\OrganizationRememberMeAuthenticationProvider($a, '7b3d671f1263efb25cc1137f155548f9', 'main')), true);

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'security.authentication.trust_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver A Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver instance.
     */
    protected function getSecurity_Authentication_TrustResolverService()
    {
        return $this->services['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver('Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken', 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken');
    }

    /**
     * Gets the 'security.channel_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\Firewall\ChannelListener A Symfony\Component\Security\Http\Firewall\ChannelListener instance.
     */
    protected function getSecurity_ChannelListenerService()
    {
        return $this->services['security.channel_listener'] = new \Symfony\Component\Security\Http\Firewall\ChannelListener($this->get('security.access_map'), new \Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint(80, 443), $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'security.context.link' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink A Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink instance.
     */
    protected function getSecurity_Context_LinkService()
    {
        return $this->services['security.context.link'] = new \Oro\Bundle\EntityConfigBundle\DependencyInjection\Utils\ServiceLink($this, 'security.context', false);
    }

    /**
     * Gets the 'security.context_listener.0' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\Firewall\ContextListener A Symfony\Component\Security\Http\Firewall\ContextListener instance.
     */
    protected function getSecurity_ContextListener_0Service()
    {
        return $this->services['security.context_listener.0'] = new \Symfony\Component\Security\Http\Firewall\ContextListener($this->get('security.token_storage'), array(0 => $this->get('security.user.provider.concrete.chain_provider'), 1 => $this->get('oro_user.security.provider'), 2 => $this->get('security.user.provider.concrete.in_memory')), 'main', $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'security.http_utils' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\HttpUtils A Symfony\Component\Security\Http\HttpUtils instance.
     */
    protected function getSecurity_HttpUtilsService()
    {
        $a = $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE);

        return $this->services['security.http_utils'] = new \Symfony\Component\Security\Http\HttpUtils($a, $a);
    }

    /**
     * Gets the 'security.logout_url_generator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator A Symfony\Component\Security\Http\Logout\LogoutUrlGenerator instance.
     */
    protected function getSecurity_LogoutUrlGeneratorService()
    {
        $this->services['security.logout_url_generator'] = $instance = new \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator($this->get('request_stack', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE));

        $instance->registerListener('main', 'oro_user_security_logout', 'logout', '_csrf_token', NULL);

        return $instance;
    }

    /**
     * Gets the 'security.role_hierarchy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Core\Role\RoleHierarchy A Symfony\Component\Security\Core\Role\RoleHierarchy instance.
     */
    protected function getSecurity_RoleHierarchyService()
    {
        return $this->services['security.role_hierarchy'] = new \Symfony\Component\Security\Core\Role\RoleHierarchy(array());
    }

    /**
     * Gets the 'security.user.provider.concrete.chain_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Core\User\ChainUserProvider A Symfony\Component\Security\Core\User\ChainUserProvider instance.
     */
    protected function getSecurity_User_Provider_Concrete_ChainProviderService()
    {
        return $this->services['security.user.provider.concrete.chain_provider'] = new \Symfony\Component\Security\Core\User\ChainUserProvider(array(0 => $this->get('security.user.provider.concrete.in_memory'), 1 => $this->get('oro_user.security.provider')));
    }

    /**
     * Gets the 'security.user.provider.concrete.in_memory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Core\User\InMemoryUserProvider A Symfony\Component\Security\Core\User\InMemoryUserProvider instance.
     */
    protected function getSecurity_User_Provider_Concrete_InMemoryService()
    {
        return $this->services['security.user.provider.concrete.in_memory'] = new \Symfony\Component\Security\Core\User\InMemoryUserProvider();
    }

    /**
     * Gets the 'serializer.encoder.json' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Serializer\Encoder\JsonEncoder A Symfony\Component\Serializer\Encoder\JsonEncoder instance.
     */
    protected function getSerializer_Encoder_JsonService()
    {
        return $this->services['serializer.encoder.json'] = new \Symfony\Component\Serializer\Encoder\JsonEncoder();
    }

    /**
     * Gets the 'session.flash_bag' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Flash\FlashBag A Symfony\Component\HttpFoundation\Session\Flash\FlashBag instance.
     */
    protected function getSession_FlashBagService()
    {
        return $this->services['session.flash_bag'] = new \Symfony\Component\HttpFoundation\Session\Flash\FlashBag();
    }

    /**
     * Gets the 'session.storage.metadata_bag' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag A Symfony\Component\HttpFoundation\Session\Storage\MetadataBag instance.
     */
    protected function getSession_Storage_MetadataBagService()
    {
        return $this->services['session.storage.metadata_bag'] = new \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag('_sf2_meta', '0');
    }

    /**
     * Gets the 'stof_doctrine_extensions.listener.translatable' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Gedmo\Translatable\TranslatableListener A Gedmo\Translatable\TranslatableListener instance.
     */
    protected function getStofDoctrineExtensions_Listener_TranslatableService()
    {
        $this->services['stof_doctrine_extensions.listener.translatable'] = $instance = new \Gedmo\Translatable\TranslatableListener();

        $instance->setAnnotationReader($this->get('annotation_reader'));
        $instance->setDefaultLocale('en');
        $instance->setTranslatableLocale('en');
        $instance->setTranslationFallback(true);
        $instance->setPersistDefaultLocaleTranslation(false);
        $instance->setSkipOnLoad(false);

        return $instance;
    }

    /**
     * Gets the 'swiftmailer.mailer.default.transport.eventdispatcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Swift_Events_SimpleEventDispatcher A Swift_Events_SimpleEventDispatcher instance.
     */
    protected function getSwiftmailer_Mailer_Default_Transport_EventdispatcherService()
    {
        return $this->services['swiftmailer.mailer.default.transport.eventdispatcher'] = new \Swift_Events_SimpleEventDispatcher();
    }

    /**
     * Gets the 'templating.locator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator A Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator instance.
     */
    protected function getTemplating_LocatorService()
    {
        return $this->services['templating.locator'] = new \Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator($this->get('file_locator'), 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev');
    }

    /**
     * Gets the 'twig.extension.httpkernel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Bridge\Twig\Extension\HttpKernelExtension A Symfony\Bridge\Twig\Extension\HttpKernelExtension instance.
     */
    protected function getTwig_Extension_HttpkernelService()
    {
        return $this->services['twig.extension.httpkernel'] = new \Symfony\Bridge\Twig\Extension\HttpKernelExtension($this->get('fragment.handler'));
    }

    /**
     * Gets the 'twig.extension.routing' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Bridge\Twig\Extension\RoutingExtension A Symfony\Bridge\Twig\Extension\RoutingExtension instance.
     */
    protected function getTwig_Extension_RoutingService()
    {
        return $this->services['twig.extension.routing'] = new \Symfony\Bridge\Twig\Extension\RoutingExtension($this->get('router'));
    }

    /**
     * Gets the 'twig.form.renderer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Bridge\Twig\Form\TwigRenderer A Symfony\Bridge\Twig\Form\TwigRenderer instance.
     */
    protected function getTwig_Form_RendererService()
    {
        return $this->services['twig.form.renderer'] = new \Symfony\Bridge\Twig\Form\TwigRenderer(new \Symfony\Bridge\Twig\Form\TwigRendererEngine(array(0 => 'form_div_layout.html.twig', 1 => 'LiipImagineBundle:Form:form_div_layout.html.twig', 2 => 'OroUIBundle:Form:fields.html.twig', 3 => 'OroOrganizationBundle:Form:fields.html.twig', 4 => 'OroSecurityBundle:Form:fields.html.twig', 5 => 'OroAttachmentBundle:Form:fields.html.twig', 6 => 'OroEmailBundle:Form:fields.html.twig', 7 => 'OroUserBundle:Form:fields.html.twig', 8 => 'OroEntityBundle:Form:fields.html.twig', 9 => 'OroEntityExtendBundle:Form:fields.html.twig', 10 => 'OroAddressBundle:Include:fields.html.twig', 11 => 'OroCalendarBundle:Form:fields.html.twig', 12 => 'OroEntityMergeBundle:Form:fields.html.twig', 13 => 'GenemuFormBundle:Form:div_layout.html.twig', 14 => 'GenemuFormBundle:Form:jquery_layout.html.twig', 15 => 'GenemuFormBundle:Form:stylesheet_layout.html.twig', 16 => 'OroFormBundle:Form:fields.html.twig', 17 => 'OroImapBundle:Form:fields.html.twig', 18 => 'OroQueryDesignerBundle:Form:fields.html.twig', 19 => 'OroTranslationBundle:Form:fields.html.twig', 20 => 'OroDashboardBundle:Form:fields.html.twig', 21 => 'OroReminderBundle:Form:fields.html.twig', 22 => 'OroUIBundle:Form:translatable.html.twig')), $this->get('security.csrf.token_manager', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * {@inheritdoc}
     */
    public function getParameter($name)
    {
        $name = strtolower($name);

        if (!(isset($this->parameters[$name]) || array_key_exists($name, $this->parameters))) {
            throw new InvalidArgumentException(sprintf('The parameter "%s" must be defined.', $name));
        }

        return $this->parameters[$name];
    }

    /**
     * {@inheritdoc}
     */
    public function hasParameter($name)
    {
        $name = strtolower($name);

        return isset($this->parameters[$name]) || array_key_exists($name, $this->parameters);
    }

    /**
     * {@inheritdoc}
     */
    public function setParameter($name, $value)
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }

    /**
     * {@inheritdoc}
     */
    public function getParameterBag()
    {
        if (null === $this->parameterBag) {
            $this->parameterBag = new FrozenParameterBag($this->parameters);
        }

        return $this->parameterBag;
    }

    /**
     * Gets the default parameters.
     *
     * @return array An array of the default parameters
     */
    protected function getDefaultParameters()
    {
        return array(
            'kernel.root_dir' => 'C:\\wamp\\www\\stockvalue~~\\app',
            'kernel.environment' => 'dev',
            'kernel.debug' => true,
            'kernel.name' => 'app',
            'kernel.cache_dir' => 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev',
            'kernel.logs_dir' => 'C:\\wamp\\www\\stockvalue~~\\app\\logs',
            'kernel.bundles' => array(
                'OroCacheBundle' => 'Oro\\Bundle\\CacheBundle\\OroCacheBundle',
                'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle',
                'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle',
                'OroSyncBundle' => 'Oro\\Bundle\\SyncBundle\\OroSyncBundle',
                'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle',
                'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle',
                'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle',
                'AsseticBundle' => 'Symfony\\Bundle\\AsseticBundle\\AsseticBundle',
                'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle',
                'DoctrineFixturesBundle' => 'Doctrine\\Bundle\\FixturesBundle\\DoctrineFixturesBundle',
                'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle',
                'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle',
                'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle',
                'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle',
                'FOSJsRoutingBundle' => 'FOS\\JsRoutingBundle\\FOSJsRoutingBundle',
                'NelmioApiDocBundle' => 'Nelmio\\ApiDocBundle\\NelmioApiDocBundle',
                'BeSimpleSoapBundle' => 'BeSimple\\SoapBundle\\BeSimpleSoapBundle',
                'StofDoctrineExtensionsBundle' => 'Stof\\DoctrineExtensionsBundle\\StofDoctrineExtensionsBundle',
                'EscapeWSSEAuthenticationBundle' => 'Escape\\WSSEAuthenticationBundle\\EscapeWSSEAuthenticationBundle',
                'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle',
                'GenemuFormBundle' => 'Genemu\\Bundle\\FormBundle\\GenemuFormBundle',
                'A2lixTranslationFormBundle' => 'A2lix\\TranslationFormBundle\\A2lixTranslationFormBundle',
                'LexikMaintenanceBundle' => 'Lexik\\Bundle\\MaintenanceBundle\\LexikMaintenanceBundle',
                'OroLayoutBundle' => 'Oro\\Bundle\\LayoutBundle\\OroLayoutBundle',
                'OroUIBundle' => 'Oro\\Bundle\\UIBundle\\OroUIBundle',
                'OroOrganizationBundle' => 'Oro\\Bundle\\OrganizationBundle\\OroOrganizationBundle',
                'OroSecurityBundle' => 'Oro\\Bundle\\SecurityBundle\\OroSecurityBundle',
                'OroAttachmentBundle' => 'Oro\\Bundle\\AttachmentBundle\\OroAttachmentBundle',
                'OroEmailBundle' => 'Oro\\Bundle\\EmailBundle\\OroEmailBundle',
                'OroUserBundle' => 'Oro\\Bundle\\UserBundle\\OroUserBundle',
                'HWIOAuthBundle' => 'HWI\\Bundle\\OAuthBundle\\HWIOAuthBundle',
                'OroSSOBundle' => 'Oro\\Bundle\\SSOBundle\\OroSSOBundle',
                'OroEntityBundle' => 'Oro\\Bundle\\EntityBundle\\OroEntityBundle',
                'OroEntityConfigBundle' => 'Oro\\Bundle\\EntityConfigBundle\\OroEntityConfigBundle',
                'OroEntityExtendBundle' => 'Oro\\Bundle\\EntityExtendBundle\\OroEntityExtendBundle',
                'OroIntegrationBundle' => 'Oro\\Bundle\\IntegrationBundle\\OroIntegrationBundle',
                'AkeneoBatchBundle' => 'Akeneo\\Bundle\\BatchBundle\\AkeneoBatchBundle',
                'JDareClankBundle' => 'JDare\\ClankBundle\\JDareClankBundle',
                'JMSJobQueueBundle' => 'JMS\\JobQueueBundle\\JMSJobQueueBundle',
                'KnpGaufretteBundle' => 'Knp\\Bundle\\GaufretteBundle\\KnpGaufretteBundle',
                'MainStockValueBundle' => 'Main\\StockValueBundle\\MainStockValueBundle',
                'OroActivityBundle' => 'Oro\\Bundle\\ActivityBundle\\OroActivityBundle',
                'OroActivityListBundle' => 'Oro\\Bundle\\ActivityListBundle\\OroActivityListBundle',
                'OroAddressBundle' => 'Oro\\Bundle\\AddressBundle\\OroAddressBundle',
                'OroAsseticBundle' => 'Oro\\Bundle\\AsseticBundle\\OroAsseticBundle',
                'OroBatchBundle' => 'Oro\\Bundle\\BatchBundle\\OroBatchBundle',
                'OroBusinessEntitiesBundle' => 'Oro\\Bundle\\BusinessEntitiesBundle\\OroBusinessEntitiesBundle',
                'OroCalendarBundle' => 'Oro\\Bundle\\CalendarBundle\\OroCalendarBundle',
                'OroChartBundle' => 'Oro\\Bundle\\ChartBundle\\OroChartBundle',
                'OroConfigBundle' => 'Oro\\Bundle\\ConfigBundle\\OroConfigBundle',
                'OroCronBundle' => 'Oro\\Bundle\\CronBundle\\OroCronBundle',
                'OroDataAuditBundle' => 'Oro\\Bundle\\DataAuditBundle\\OroDataAuditBundle',
                'OroDataGridBundle' => 'Oro\\Bundle\\DataGridBundle\\OroDataGridBundle',
                'OroDistributionBundle' => 'Oro\\Bundle\\DistributionBundle\\OroDistributionBundle',
                'OroEmbeddedFormBundle' => 'Oro\\Bundle\\EmbeddedFormBundle\\OroEmbeddedFormBundle',
                'OroEntityMergeBundle' => 'Oro\\Bundle\\EntityMergeBundle\\OroEntityMergeBundle',
                'OroEntityPaginationBundle' => 'Oro\\Bundle\\EntityPaginationBundle\\OroEntityPaginationBundle',
                'OroFilterBundle' => 'Oro\\Bundle\\FilterBundle\\OroFilterBundle',
                'OroFormBundle' => 'Oro\\Bundle\\FormBundle\\OroFormBundle',
                'OroHelpBundle' => 'Oro\\Bundle\\HelpBundle\\OroHelpBundle',
                'OroImapBundle' => 'Oro\\Bundle\\ImapBundle\\OroImapBundle',
                'OroImportExportBundle' => 'Oro\\Bundle\\ImportExportBundle\\OroImportExportBundle',
                'OroInstallerBundle' => 'Oro\\Bundle\\InstallerBundle\\OroInstallerBundle',
                'OroLocaleBundle' => 'Oro\\Bundle\\LocaleBundle\\OroLocaleBundle',
                'OroMigrationBundle' => 'Oro\\Bundle\\MigrationBundle\\OroMigrationBundle',
                'OroNoteBundle' => 'Oro\\Bundle\\NoteBundle\\OroNoteBundle',
                'OroNotificationBundle' => 'Oro\\Bundle\\NotificationBundle\\OroNotificationBundle',
                'OroPlatformBundle' => 'Oro\\Bundle\\PlatformBundle\\OroPlatformBundle',
                'OroQueryDesignerBundle' => 'Oro\\Bundle\\QueryDesignerBundle\\OroQueryDesignerBundle',
                'OroReportBundle' => 'Oro\\Bundle\\ReportBundle\\OroReportBundle',
                'OroRequireJSBundle' => 'Oro\\Bundle\\RequireJSBundle\\OroRequireJSBundle',
                'OroSearchBundle' => 'Oro\\Bundle\\SearchBundle\\OroSearchBundle',
                'OroSegmentBundle' => 'Oro\\Bundle\\SegmentBundle\\OroSegmentBundle',
                'OroSidebarBundle' => 'Oro\\Bundle\\SidebarBundle\\OroSidebarBundle',
                'OroSoapBundle' => 'Oro\\Bundle\\SoapBundle\\OroSoapBundle',
                'OroTagBundle' => 'Oro\\Bundle\\TagBundle\\OroTagBundle',
                'OroThemeBundle' => 'Oro\\Bundle\\ThemeBundle\\OroThemeBundle',
                'OroTranslationBundle' => 'Oro\\Bundle\\TranslationBundle\\OroTranslationBundle',
                'OroWindowsBundle' => 'Oro\\Bundle\\WindowsBundle\\OroWindowsBundle',
                'OroWorkflowBundle' => 'Oro\\Bundle\\WorkflowBundle\\OroWorkflowBundle',
                'SecurityStockValueBundle' => 'Security\\StockValueBundle\\SecurityStockValueBundle',
                'SyliusFlowBundle' => 'Sylius\\Bundle\\FlowBundle\\SyliusFlowBundle',
                'OroCommentBundle' => 'Oro\\Bundle\\CommentBundle\\OroCommentBundle',
                'OroDashboardBundle' => 'Oro\\Bundle\\DashboardBundle\\OroDashboardBundle',
                'OroNavigationBundle' => 'Oro\\Bundle\\NavigationBundle\\OroNavigationBundle',
                'OroTrackingBundle' => 'Oro\\Bundle\\TrackingBundle\\OroTrackingBundle',
                'OroReminderBundle' => 'Oro\\Bundle\\ReminderBundle\\OroReminderBundle',
                'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle',
                'SensioDistributionBundle' => 'Sensio\\Bundle\\DistributionBundle\\SensioDistributionBundle',
            ),
            'kernel.charset' => 'UTF-8',
            'kernel.container_class' => 'appDevDebugProjectContainer',
            'oro_email.entity.cache_dir' => 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev\\oro_entities\\OroEntityProxy\\OroEmailBundle',
            'oro_email.entity.cache_namespace' => 'OroEntityProxy\\OroEmailBundle',
            'oro_email.entity.proxy_name_template' => '%sProxy',
            'database_driver' => 'pdo_mysql',
            'database_host' => '127.0.0.1',
            'database_port' => NULL,
            'database_name' => 'bap_standard',
            'database_user' => 'root',
            'database_password' => NULL,
            'database_drop_full' => false,
            'mailer_transport' => 'smtp',
            'mailer_host' => 'smtp.gmail.com',
            'mailer_port' => NULL,
            'mailer_encryption' => 'ssl',
            'mailer_user' => 'gotaindien@gmail.com',
            'mailer_password' => 'Urnalone0413',
            'websocket_bind_address' => '0.0.0.0',
            'websocket_bind_port' => 8080,
            'websocket_frontend_host' => '*',
            'websocket_frontend_port' => 8080,
            'websocket_backend_host' => '*',
            'websocket_backend_port' => 8080,
            'session_handler' => 'session.handler.native_file',
            'locale' => 'fr',
            'secret' => '7b3d671f1263efb25cc1137f155548f9',
            'installed' => '2015-10-03T18:37:32+02:00',
            'assets_version' => NULL,
            'oro_cache.oro_data_cache_manager.class' => 'Oro\\Bundle\\CacheBundle\\Manager\\OroDataCacheManager',
            'controller_resolver.class' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\ControllerResolver',
            'controller_name_converter.class' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\ControllerNameParser',
            'response_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\ResponseListener',
            'streamed_response_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\StreamedResponseListener',
            'locale_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\LocaleListener',
            'event_dispatcher.class' => 'Symfony\\Component\\EventDispatcher\\ContainerAwareEventDispatcher',
            'http_kernel.class' => 'Symfony\\Component\\HttpKernel\\DependencyInjection\\ContainerAwareHttpKernel',
            'filesystem.class' => 'Symfony\\Component\\Filesystem\\Filesystem',
            'cache_warmer.class' => 'Symfony\\Component\\HttpKernel\\CacheWarmer\\CacheWarmerAggregate',
            'cache_clearer.class' => 'Symfony\\Component\\HttpKernel\\CacheClearer\\ChainCacheClearer',
            'file_locator.class' => 'Symfony\\Component\\HttpKernel\\Config\\FileLocator',
            'uri_signer.class' => 'Symfony\\Component\\HttpKernel\\UriSigner',
            'request_stack.class' => 'Symfony\\Component\\HttpFoundation\\RequestStack',
            'fragment.handler.class' => 'Symfony\\Component\\HttpKernel\\DependencyInjection\\LazyLoadingFragmentHandler',
            'fragment.renderer.inline.class' => 'Symfony\\Component\\HttpKernel\\Fragment\\InlineFragmentRenderer',
            'fragment.renderer.hinclude.class' => 'Symfony\\Component\\HttpKernel\\Fragment\\HIncludeFragmentRenderer',
            'fragment.renderer.hinclude.global_template' => NULL,
            'fragment.renderer.esi.class' => 'Symfony\\Component\\HttpKernel\\Fragment\\EsiFragmentRenderer',
            'fragment.path' => '/_fragment',
            'translator.class' => 'Oro\\Bundle\\TranslationBundle\\Translation\\Translator',
            'translator.identity.class' => 'Symfony\\Component\\Translation\\IdentityTranslator',
            'translator.selector.class' => 'Symfony\\Component\\Translation\\MessageSelector',
            'translation.loader.php.class' => 'Symfony\\Component\\Translation\\Loader\\PhpFileLoader',
            'translation.loader.yml.class' => 'Symfony\\Component\\Translation\\Loader\\YamlFileLoader',
            'translation.loader.xliff.class' => 'Symfony\\Component\\Translation\\Loader\\XliffFileLoader',
            'translation.loader.po.class' => 'Symfony\\Component\\Translation\\Loader\\PoFileLoader',
            'translation.loader.mo.class' => 'Symfony\\Component\\Translation\\Loader\\MoFileLoader',
            'translation.loader.qt.class' => 'Symfony\\Component\\Translation\\Loader\\QtFileLoader',
            'translation.loader.csv.class' => 'Symfony\\Component\\Translation\\Loader\\CsvFileLoader',
            'translation.loader.res.class' => 'Symfony\\Component\\Translation\\Loader\\IcuResFileLoader',
            'translation.loader.dat.class' => 'Symfony\\Component\\Translation\\Loader\\IcuDatFileLoader',
            'translation.loader.ini.class' => 'Symfony\\Component\\Translation\\Loader\\IniFileLoader',
            'translation.loader.json.class' => 'Symfony\\Component\\Translation\\Loader\\JsonFileLoader',
            'translation.dumper.php.class' => 'Symfony\\Component\\Translation\\Dumper\\PhpFileDumper',
            'translation.dumper.xliff.class' => 'Symfony\\Component\\Translation\\Dumper\\XliffFileDumper',
            'translation.dumper.po.class' => 'Symfony\\Component\\Translation\\Dumper\\PoFileDumper',
            'translation.dumper.mo.class' => 'Symfony\\Component\\Translation\\Dumper\\MoFileDumper',
            'translation.dumper.yml.class' => 'Symfony\\Component\\Translation\\Dumper\\YamlFileDumper',
            'translation.dumper.qt.class' => 'Symfony\\Component\\Translation\\Dumper\\QtFileDumper',
            'translation.dumper.csv.class' => 'Symfony\\Component\\Translation\\Dumper\\CsvFileDumper',
            'translation.dumper.ini.class' => 'Symfony\\Component\\Translation\\Dumper\\IniFileDumper',
            'translation.dumper.json.class' => 'Symfony\\Component\\Translation\\Dumper\\JsonFileDumper',
            'translation.dumper.res.class' => 'Symfony\\Component\\Translation\\Dumper\\IcuResFileDumper',
            'translation.extractor.php.class' => 'Symfony\\Bundle\\FrameworkBundle\\Translation\\PhpExtractor',
            'translation.loader.class' => 'Symfony\\Bundle\\FrameworkBundle\\Translation\\TranslationLoader',
            'translation.extractor.class' => 'Symfony\\Component\\Translation\\Extractor\\ChainExtractor',
            'translation.writer.class' => 'Symfony\\Component\\Translation\\Writer\\TranslationWriter',
            'property_accessor.class' => 'Symfony\\Component\\PropertyAccess\\PropertyAccessor',
            'kernel.secret' => '7b3d671f1263efb25cc1137f155548f9',
            'kernel.http_method_override' => true,
            'kernel.trusted_hosts' => array(

            ),
            'kernel.trusted_proxies' => array(

            ),
            'kernel.default_locale' => 'fr',
            'session.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Session',
            'session.flashbag.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Flash\\FlashBag',
            'session.attribute_bag.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag',
            'session.storage.metadata_bag.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\MetadataBag',
            'session.metadata.storage_key' => '_sf2_meta',
            'session.storage.native.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\NativeSessionStorage',
            'session.storage.php_bridge.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\PhpBridgeSessionStorage',
            'session.storage.mock_file.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\MockFileSessionStorage',
            'session.handler.native_file.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\NativeFileSessionHandler',
            'session.handler.write_check.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\WriteCheckSessionHandler',
            'session_listener.class' => 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\SessionListener',
            'session.storage.options' => array(
                'name' => 'BAPID',
                'cookie_httponly' => true,
                'gc_maxlifetime' => 3600,
                'gc_probability' => 1,
            ),
            'session.save_path' => 'C:\\wamp\\www\\stockvalue~~\\app/cache/sessions',
            'session.metadata.update_threshold' => '0',
            'security.secure_random.class' => 'Symfony\\Component\\Security\\Core\\Util\\SecureRandom',
            'form.resolved_type_factory.class' => 'Symfony\\Component\\Form\\ResolvedFormTypeFactory',
            'form.registry.class' => 'Symfony\\Component\\Form\\FormRegistry',
            'form.factory.class' => 'Symfony\\Component\\Form\\FormFactory',
            'form.extension.class' => 'Symfony\\Component\\Form\\Extension\\DependencyInjection\\DependencyInjectionExtension',
            'form.type_guesser.validator.class' => 'Symfony\\Component\\Form\\Extension\\Validator\\ValidatorTypeGuesser',
            'form.type_extension.form.request_handler.class' => 'Symfony\\Component\\Form\\Extension\\HttpFoundation\\HttpFoundationRequestHandler',
            'form.type_extension.csrf.enabled' => true,
            'form.type_extension.csrf.field_name' => '_token',
            'security.csrf.token_generator.class' => 'Symfony\\Component\\Security\\Csrf\\TokenGenerator\\UriSafeTokenGenerator',
            'security.csrf.token_storage.class' => 'Symfony\\Component\\Security\\Csrf\\TokenStorage\\SessionTokenStorage',
            'security.csrf.token_manager.class' => 'Symfony\\Component\\Security\\Csrf\\CsrfTokenManager',
            'templating.engine.delegating.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\DelegatingEngine',
            'templating.name_parser.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\TemplateNameParser',
            'templating.filename_parser.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\TemplateFilenameParser',
            'templating.cache_warmer.template_paths.class' => 'Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\TemplatePathsCacheWarmer',
            'templating.locator.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Loader\\TemplateLocator',
            'templating.loader.filesystem.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Loader\\FilesystemLoader',
            'templating.loader.cache.class' => 'Symfony\\Component\\Templating\\Loader\\CacheLoader',
            'templating.loader.chain.class' => 'Symfony\\Component\\Templating\\Loader\\ChainLoader',
            'templating.finder.class' => 'Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\TemplateFinder',
            'templating.helper.assets.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\AssetsHelper',
            'templating.helper.router.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\RouterHelper',
            'templating.helper.code.file_link_format' => NULL,
            'templating.loader.cache.path' => NULL,
            'templating.engines' => array(
                0 => 'twig',
                1 => 'php',
            ),
            'templating.engine.php.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\PhpEngine',
            'templating.helper.slots.class' => 'Symfony\\Component\\Templating\\Helper\\SlotsHelper',
            'templating.helper.actions.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\ActionsHelper',
            'templating.helper.request.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\RequestHelper',
            'templating.helper.session.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\SessionHelper',
            'templating.helper.code.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\CodeHelper',
            'templating.helper.translator.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\TranslatorHelper',
            'templating.helper.form.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\FormHelper',
            'templating.helper.stopwatch.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\StopwatchHelper',
            'templating.form.engine.class' => 'Symfony\\Component\\Form\\Extension\\Templating\\TemplatingRendererEngine',
            'templating.form.renderer.class' => 'Symfony\\Component\\Form\\FormRenderer',
            'templating.globals.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\GlobalVariables',
            'templating.helper.form.resources' => array(
                0 => 'FrameworkBundle:Form',
            ),
            'debug.templating.engine.php.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\TimedPhpEngine',
            'validator.class' => 'Symfony\\Component\\Validator\\Validator\\ValidatorInterface',
            'validator.builder.class' => 'Symfony\\Component\\Validator\\ValidatorBuilderInterface',
            'validator.builder.factory.class' => 'Symfony\\Component\\Validator\\Validation',
            'validator.mapping.cache.apc.class' => 'Symfony\\Component\\Validator\\Mapping\\Cache\\ApcCache',
            'validator.mapping.cache.prefix' => 'validator_bba1742dc5607efbbe8da08a4fbaccb8fe42d26e41d3528de74092a18cf96d78',
            'validator.validator_factory.class' => 'Symfony\\Bundle\\FrameworkBundle\\Validator\\ConstraintValidatorFactory',
            'validator.expression.class' => 'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator',
            'validator.email.class' => 'Symfony\\Component\\Validator\\Constraints\\EmailValidator',
            'validator.translation_domain' => 'validators',
            'validator.api' => '2.5-bc',
            'fragment.listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\FragmentListener',
            'translator.logging' => true,
            'profiler.class' => 'Symfony\\Component\\HttpKernel\\Profiler\\Profiler',
            'profiler_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\ProfilerListener',
            'data_collector.config.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\ConfigDataCollector',
            'data_collector.request.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\RequestDataCollector',
            'data_collector.exception.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\ExceptionDataCollector',
            'data_collector.events.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\EventDataCollector',
            'data_collector.logger.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\LoggerDataCollector',
            'data_collector.time.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\TimeDataCollector',
            'data_collector.memory.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\MemoryDataCollector',
            'data_collector.router.class' => 'Symfony\\Bundle\\FrameworkBundle\\DataCollector\\RouterDataCollector',
            'form.resolved_type_factory.data_collector_proxy.class' => 'Symfony\\Component\\Form\\Extension\\DataCollector\\Proxy\\ResolvedTypeFactoryDataCollectorProxy',
            'form.type_extension.form.data_collector.class' => 'Symfony\\Component\\Form\\Extension\\DataCollector\\Type\\DataCollectorTypeExtension',
            'data_collector.form.class' => 'Symfony\\Component\\Form\\Extension\\DataCollector\\FormDataCollector',
            'data_collector.form.extractor.class' => 'Symfony\\Component\\Form\\Extension\\DataCollector\\FormDataExtractor',
            'profiler_listener.only_exceptions' => false,
            'profiler_listener.only_master_requests' => false,
            'profiler.storage.dsn' => 'file:C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/profiler',
            'profiler.storage.username' => '',
            'profiler.storage.password' => '',
            'profiler.storage.lifetime' => 86400,
            'router.class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\Router',
            'router.request_context.class' => 'Symfony\\Component\\Routing\\RequestContext',
            'routing.loader.class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\DelegatingLoader',
            'routing.resolver.class' => 'Symfony\\Component\\Config\\Loader\\LoaderResolver',
            'routing.loader.xml.class' => 'Symfony\\Component\\Routing\\Loader\\XmlFileLoader',
            'routing.loader.yml.class' => 'Symfony\\Component\\Routing\\Loader\\YamlFileLoader',
            'routing.loader.php.class' => 'Symfony\\Component\\Routing\\Loader\\PhpFileLoader',
            'router.options.generator_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator',
            'router.options.generator_base_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator',
            'router.options.generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper',
            'router.options.matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher',
            'router.options.matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher',
            'router.options.matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper',
            'router.cache_warmer.class' => 'Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\RouterCacheWarmer',
            'router.options.matcher.cache_class' => 'appDevUrlMatcher',
            'router.options.generator.cache_class' => 'appDevUrlGenerator',
            'router_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\RouterListener',
            'router.request_context.host' => 'localhost',
            'router.request_context.scheme' => 'http',
            'router.request_context.base_url' => '',
            'router.resource' => 'C:\\wamp\\www\\stockvalue~~\\app/config/routing_dev.yml',
            'router.cache_class_prefix' => 'appDev',
            'request_listener.http_port' => 80,
            'request_listener.https_port' => 443,
            'annotations.reader.class' => 'Doctrine\\Common\\Annotations\\AnnotationReader',
            'annotations.cached_reader.class' => 'Doctrine\\Common\\Annotations\\CachedReader',
            'annotations.file_cache_reader.class' => 'Doctrine\\Common\\Annotations\\FileCacheReader',
            'serializer.class' => 'Symfony\\Component\\Serializer\\Serializer',
            'serializer.encoder.xml.class' => 'Symfony\\Component\\Serializer\\Encoder\\XmlEncoder',
            'serializer.encoder.json.class' => 'Symfony\\Component\\Serializer\\Encoder\\JsonEncoder',
            'serializer.mapping.cache.prefix' => '',
            'debug.debug_handlers_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\DebugHandlersListener',
            'debug.stopwatch.class' => 'Symfony\\Component\\Stopwatch\\Stopwatch',
            'debug.error_handler.throw_at' => -1,
            'debug.event_dispatcher.class' => 'Symfony\\Component\\HttpKernel\\Debug\\TraceableEventDispatcher',
            'debug.container.dump' => 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/appDevDebugProjectContainer.xml',
            'debug.controller_resolver.class' => 'Symfony\\Component\\HttpKernel\\Controller\\TraceableControllerResolver',
            'security.context.class' => 'Symfony\\Component\\Security\\Core\\SecurityContext',
            'security.user_checker.class' => 'Symfony\\Component\\Security\\Core\\User\\UserChecker',
            'security.encoder_factory.generic.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory',
            'security.encoder.digest.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder',
            'security.encoder.plain.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\PlaintextPasswordEncoder',
            'security.encoder.pbkdf2.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\Pbkdf2PasswordEncoder',
            'security.encoder.bcrypt.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\BCryptPasswordEncoder',
            'security.user.provider.in_memory.class' => 'Symfony\\Component\\Security\\Core\\User\\InMemoryUserProvider',
            'security.user.provider.in_memory.user.class' => 'Symfony\\Component\\Security\\Core\\User\\User',
            'security.user.provider.chain.class' => 'Symfony\\Component\\Security\\Core\\User\\ChainUserProvider',
            'security.authentication.trust_resolver.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationTrustResolver',
            'security.authentication.trust_resolver.anonymous_class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken',
            'security.authentication.trust_resolver.rememberme_class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken',
            'security.authentication.manager.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationProviderManager',
            'security.authentication.session_strategy.class' => 'Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategy',
            'security.access.decision_manager.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\AccessDecisionManager',
            'security.access.simple_role_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\RoleVoter',
            'security.access.authenticated_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\AuthenticatedVoter',
            'security.access.role_hierarchy_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\RoleHierarchyVoter',
            'security.access.expression_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\ExpressionVoter',
            'security.firewall.class' => 'Symfony\\Component\\Security\\Http\\Firewall',
            'security.firewall.map.class' => 'Symfony\\Bundle\\SecurityBundle\\Security\\FirewallMap',
            'security.firewall.context.class' => 'Symfony\\Bundle\\SecurityBundle\\Security\\FirewallContext',
            'security.matcher.class' => 'Symfony\\Component\\HttpFoundation\\RequestMatcher',
            'security.expression_matcher.class' => 'Symfony\\Component\\HttpFoundation\\ExpressionRequestMatcher',
            'security.role_hierarchy.class' => 'Symfony\\Component\\Security\\Core\\Role\\RoleHierarchy',
            'security.http_utils.class' => 'Symfony\\Component\\Security\\Http\\HttpUtils',
            'security.validator.user_password.class' => 'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator',
            'security.expression_language.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\ExpressionLanguage',
            'security.authentication.retry_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\RetryAuthenticationEntryPoint',
            'security.channel_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\ChannelListener',
            'security.authentication.form_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\FormAuthenticationEntryPoint',
            'security.authentication.listener.form.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\UsernamePasswordFormAuthenticationListener',
            'security.authentication.listener.simple_form.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\SimpleFormAuthenticationListener',
            'security.authentication.listener.simple_preauth.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\SimplePreAuthenticationListener',
            'security.authentication.listener.basic.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\BasicAuthenticationListener',
            'security.authentication.basic_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\BasicAuthenticationEntryPoint',
            'security.authentication.listener.digest.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\DigestAuthenticationListener',
            'security.authentication.digest_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\DigestAuthenticationEntryPoint',
            'security.authentication.listener.x509.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\X509AuthenticationListener',
            'security.authentication.listener.anonymous.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\AnonymousAuthenticationListener',
            'security.authentication.switchuser_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\SwitchUserListener',
            'security.logout_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\LogoutListener',
            'security.logout.handler.session.class' => 'Symfony\\Component\\Security\\Http\\Logout\\SessionLogoutHandler',
            'security.logout.handler.cookie_clearing.class' => 'Symfony\\Component\\Security\\Http\\Logout\\CookieClearingLogoutHandler',
            'security.logout.success_handler.class' => 'Symfony\\Component\\Security\\Http\\Logout\\DefaultLogoutSuccessHandler',
            'security.access_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\AccessListener',
            'security.access_map.class' => 'Symfony\\Component\\Security\\Http\\AccessMap',
            'security.exception_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\ExceptionListener',
            'security.context_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\ContextListener',
            'security.authentication.provider.dao.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\DaoAuthenticationProvider',
            'security.authentication.provider.simple.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\SimpleAuthenticationProvider',
            'security.authentication.provider.pre_authenticated.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\PreAuthenticatedAuthenticationProvider',
            'security.authentication.provider.anonymous.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\AnonymousAuthenticationProvider',
            'security.authentication.success_handler.class' => 'Symfony\\Component\\Security\\Http\\Authentication\\DefaultAuthenticationSuccessHandler',
            'security.authentication.failure_handler.class' => 'Symfony\\Component\\Security\\Http\\Authentication\\DefaultAuthenticationFailureHandler',
            'security.authentication.simple_success_failure_handler.class' => 'Symfony\\Component\\Security\\Http\\Authentication\\SimpleAuthenticationHandler',
            'security.authentication.provider.rememberme.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\RememberMeAuthenticationProvider',
            'security.authentication.listener.rememberme.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\RememberMeListener',
            'security.rememberme.token.provider.in_memory.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\RememberMe\\InMemoryTokenProvider',
            'security.authentication.rememberme.services.persistent.class' => 'Symfony\\Component\\Security\\Http\\RememberMe\\PersistentTokenBasedRememberMeServices',
            'security.authentication.rememberme.services.simplehash.class' => 'Symfony\\Component\\Security\\Http\\RememberMe\\TokenBasedRememberMeServices',
            'security.rememberme.response_listener.class' => 'Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener',
            'templating.helper.logout_url.class' => 'Symfony\\Bundle\\SecurityBundle\\Templating\\Helper\\LogoutUrlHelper',
            'templating.helper.security.class' => 'Symfony\\Bundle\\SecurityBundle\\Templating\\Helper\\SecurityHelper',
            'twig.extension.logout_url.class' => 'Symfony\\Bridge\\Twig\\Extension\\LogoutUrlExtension',
            'twig.extension.security.class' => 'Symfony\\Bridge\\Twig\\Extension\\SecurityExtension',
            'data_collector.security.class' => 'Symfony\\Bundle\\SecurityBundle\\DataCollector\\SecurityDataCollector',
            'security.access.denied_url' => NULL,
            'security.authentication.manager.erase_credentials' => true,
            'security.authentication.session_strategy.strategy' => 'migrate',
            'security.access.always_authenticate_before_granting' => false,
            'security.authentication.hide_user_not_found' => true,
            'hwi_oauth.resource_ownermap.configured.main' => array(
                'google' => '/login/check-google',
            ),
            'security.role_hierarchy.roles' => array(

            ),
            'security.acl.permission_granting_strategy.class' => 'Symfony\\Component\\Security\\Acl\\Domain\\PermissionGrantingStrategy',
            'security.acl.voter.class' => 'Symfony\\Component\\Security\\Acl\\Voter\\AclVoter',
            'security.acl.permission.map.class' => 'Symfony\\Component\\Security\\Acl\\Permission\\BasicPermissionMap',
            'security.acl.object_identity_retrieval_strategy.class' => 'Symfony\\Component\\Security\\Acl\\Domain\\ObjectIdentityRetrievalStrategy',
            'security.acl.security_identity_retrieval_strategy.class' => 'Symfony\\Component\\Security\\Acl\\Domain\\SecurityIdentityRetrievalStrategy',
            'security.acl.collection_cache.class' => 'Symfony\\Component\\Security\\Acl\\Domain\\AclCollectionCache',
            'security.acl.cache.doctrine.class' => 'Symfony\\Component\\Security\\Acl\\Domain\\DoctrineAclCache',
            'security.acl.dbal.provider.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Dbal\\MutableAclProvider',
            'security.acl.dbal.schema.class' => 'Symfony\\Component\\Security\\Acl\\Dbal\\Schema',
            'security.acl.dbal.schema_listener.class' => 'Symfony\\Bundle\\SecurityBundle\\EventListener\\AclSchemaListener',
            'security.acl.dbal.class_table_name' => 'acl_classes',
            'security.acl.dbal.entry_table_name' => 'acl_entries',
            'security.acl.dbal.oid_table_name' => 'acl_object_identities',
            'security.acl.dbal.oid_ancestors_table_name' => 'acl_object_identity_ancestors',
            'security.acl.dbal.sid_table_name' => 'acl_security_identities',
            'oro_wamp.ping.interval' => 60000,
            'oro_wamp.publisher.class' => 'Oro\\Bundle\\SyncBundle\\Wamp\\TopicPublisher',
            'oro_wamp.twig.class' => 'Oro\\Bundle\\SyncBundle\\Twig\\OroSyncExtension',
            'oro_wamp.listener.maintenance.class' => 'Oro\\Bundle\\SyncBundle\\EventListener\\MaintenanceListener',
            'twig.class' => 'Oro\\Bundle\\UIBundle\\Twig\\Environment',
            'twig.loader.filesystem.class' => 'Symfony\\Bundle\\TwigBundle\\Loader\\FilesystemLoader',
            'twig.loader.chain.class' => 'Twig_Loader_Chain',
            'templating.engine.twig.class' => 'Symfony\\Bundle\\TwigBundle\\TwigEngine',
            'twig.cache_warmer.class' => 'Oro\\Bundle\\UIBundle\\Cache\\TemplateCacheCacheWarmer',
            'twig.extension.trans.class' => 'Symfony\\Bridge\\Twig\\Extension\\TranslationExtension',
            'twig.extension.actions.class' => 'Symfony\\Bundle\\TwigBundle\\Extension\\ActionsExtension',
            'twig.extension.code.class' => 'Symfony\\Bridge\\Twig\\Extension\\CodeExtension',
            'twig.extension.routing.class' => 'Symfony\\Bridge\\Twig\\Extension\\RoutingExtension',
            'twig.extension.yaml.class' => 'Symfony\\Bridge\\Twig\\Extension\\YamlExtension',
            'twig.extension.form.class' => 'Symfony\\Bridge\\Twig\\Extension\\FormExtension',
            'twig.extension.httpkernel.class' => 'Symfony\\Bridge\\Twig\\Extension\\HttpKernelExtension',
            'twig.extension.debug.stopwatch.class' => 'Symfony\\Bridge\\Twig\\Extension\\StopwatchExtension',
            'twig.extension.expression.class' => 'Symfony\\Bridge\\Twig\\Extension\\ExpressionExtension',
            'twig.form.engine.class' => 'Symfony\\Bridge\\Twig\\Form\\TwigRendererEngine',
            'twig.form.renderer.class' => 'Symfony\\Bridge\\Twig\\Form\\TwigRenderer',
            'twig.translation.extractor.class' => 'Symfony\\Bridge\\Twig\\Translation\\TwigExtractor',
            'twig.exception_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\ExceptionListener',
            'twig.controller.exception.class' => 'Symfony\\Bundle\\TwigBundle\\Controller\\ExceptionController',
            'twig.controller.preview_error.class' => 'Symfony\\Bundle\\TwigBundle\\Controller\\PreviewErrorController',
            'twig.exception_listener.controller' => 'FOS\\RestBundle\\Controller\\ExceptionController::showAction',
            'twig.form.resources' => array(
                0 => 'form_div_layout.html.twig',
                1 => 'LiipImagineBundle:Form:form_div_layout.html.twig',
                2 => 'OroUIBundle:Form:fields.html.twig',
                3 => 'OroOrganizationBundle:Form:fields.html.twig',
                4 => 'OroSecurityBundle:Form:fields.html.twig',
                5 => 'OroAttachmentBundle:Form:fields.html.twig',
                6 => 'OroEmailBundle:Form:fields.html.twig',
                7 => 'OroUserBundle:Form:fields.html.twig',
                8 => 'OroEntityBundle:Form:fields.html.twig',
                9 => 'OroEntityExtendBundle:Form:fields.html.twig',
                10 => 'OroAddressBundle:Include:fields.html.twig',
                11 => 'OroCalendarBundle:Form:fields.html.twig',
                12 => 'OroEntityMergeBundle:Form:fields.html.twig',
                13 => 'GenemuFormBundle:Form:div_layout.html.twig',
                14 => 'GenemuFormBundle:Form:jquery_layout.html.twig',
                15 => 'GenemuFormBundle:Form:stylesheet_layout.html.twig',
                16 => 'OroFormBundle:Form:fields.html.twig',
                17 => 'OroImapBundle:Form:fields.html.twig',
                18 => 'OroQueryDesignerBundle:Form:fields.html.twig',
                19 => 'OroTranslationBundle:Form:fields.html.twig',
                20 => 'OroDashboardBundle:Form:fields.html.twig',
                21 => 'OroReminderBundle:Form:fields.html.twig',
                22 => 'OroUIBundle:Form:translatable.html.twig',
            ),
            'monolog.logger.class' => 'Symfony\\Bridge\\Monolog\\Logger',
            'monolog.gelf.publisher.class' => 'Gelf\\MessagePublisher',
            'monolog.gelfphp.publisher.class' => 'Gelf\\Publisher',
            'monolog.handler.stream.class' => 'Monolog\\Handler\\StreamHandler',
            'monolog.handler.console.class' => 'Symfony\\Bridge\\Monolog\\Handler\\ConsoleHandler',
            'monolog.handler.group.class' => 'Monolog\\Handler\\GroupHandler',
            'monolog.handler.buffer.class' => 'Monolog\\Handler\\BufferHandler',
            'monolog.handler.rotating_file.class' => 'Monolog\\Handler\\RotatingFileHandler',
            'monolog.handler.syslog.class' => 'Monolog\\Handler\\SyslogHandler',
            'monolog.handler.syslogudp.class' => 'Monolog\\Handler\\SyslogUdpHandler',
            'monolog.handler.null.class' => 'Monolog\\Handler\\NullHandler',
            'monolog.handler.test.class' => 'Monolog\\Handler\\TestHandler',
            'monolog.handler.gelf.class' => 'Monolog\\Handler\\GelfHandler',
            'monolog.handler.rollbar.class' => 'Monolog\\Handler\\RollbarHandler',
            'monolog.handler.flowdock.class' => 'Monolog\\Handler\\FlowdockHandler',
            'monolog.handler.browser_console.class' => 'Monolog\\Handler\\BrowserConsoleHandler',
            'monolog.handler.firephp.class' => 'Symfony\\Bridge\\Monolog\\Handler\\FirePHPHandler',
            'monolog.handler.chromephp.class' => 'Symfony\\Bridge\\Monolog\\Handler\\ChromePhpHandler',
            'monolog.handler.debug.class' => 'Symfony\\Bridge\\Monolog\\Handler\\DebugHandler',
            'monolog.handler.swift_mailer.class' => 'Symfony\\Bridge\\Monolog\\Handler\\SwiftMailerHandler',
            'monolog.handler.native_mailer.class' => 'Monolog\\Handler\\NativeMailerHandler',
            'monolog.handler.socket.class' => 'Monolog\\Handler\\SocketHandler',
            'monolog.handler.pushover.class' => 'Monolog\\Handler\\PushoverHandler',
            'monolog.handler.raven.class' => 'Monolog\\Handler\\RavenHandler',
            'monolog.handler.newrelic.class' => 'Monolog\\Handler\\NewRelicHandler',
            'monolog.handler.hipchat.class' => 'Monolog\\Handler\\HipChatHandler',
            'monolog.handler.slack.class' => 'Monolog\\Handler\\SlackHandler',
            'monolog.handler.cube.class' => 'Monolog\\Handler\\CubeHandler',
            'monolog.handler.amqp.class' => 'Monolog\\Handler\\AmqpHandler',
            'monolog.handler.error_log.class' => 'Monolog\\Handler\\ErrorLogHandler',
            'monolog.handler.loggly.class' => 'Monolog\\Handler\\LogglyHandler',
            'monolog.handler.logentries.class' => 'Monolog\\Handler\\LogEntriesHandler',
            'monolog.handler.whatfailuregroup.class' => 'Monolog\\Handler\\WhatFailureGroupHandler',
            'monolog.activation_strategy.not_found.class' => 'Symfony\\Bundle\\MonologBundle\\NotFoundActivationStrategy',
            'monolog.handler.fingers_crossed.class' => 'Monolog\\Handler\\FingersCrossedHandler',
            'monolog.handler.fingers_crossed.error_level_activation_strategy.class' => 'Monolog\\Handler\\FingersCrossed\\ErrorLevelActivationStrategy',
            'monolog.handler.filter.class' => 'Monolog\\Handler\\FilterHandler',
            'monolog.handler.mongo.class' => 'Monolog\\Handler\\MongoDBHandler',
            'monolog.mongo.client.class' => 'MongoClient',
            'monolog.handler.elasticsearch.class' => 'Monolog\\Handler\\ElasticSearchHandler',
            'monolog.elastica.client.class' => 'Elastica\\Client',
            'monolog.swift_mailer.handlers' => array(

            ),
            'monolog.handlers_to_channels' => array(
                'monolog.handler.chromephp' => NULL,
                'monolog.handler.firephp' => NULL,
                'monolog.handler.main' => NULL,
            ),
            'swiftmailer.class' => 'Swift_Mailer',
            'swiftmailer.transport.sendmail.class' => 'Swift_Transport_SendmailTransport',
            'swiftmailer.transport.mail.class' => 'Swift_Transport_MailTransport',
            'swiftmailer.transport.failover.class' => 'Swift_Transport_FailoverTransport',
            'swiftmailer.plugin.redirecting.class' => 'Swift_Plugins_RedirectingPlugin',
            'swiftmailer.plugin.impersonate.class' => 'Swift_Plugins_ImpersonatePlugin',
            'swiftmailer.plugin.messagelogger.class' => 'Swift_Plugins_MessageLogger',
            'swiftmailer.plugin.antiflood.class' => 'Swift_Plugins_AntiFloodPlugin',
            'swiftmailer.transport.smtp.class' => 'Swift_Transport_EsmtpTransport',
            'swiftmailer.plugin.blackhole.class' => 'Swift_Plugins_BlackholePlugin',
            'swiftmailer.spool.file.class' => 'Swift_FileSpool',
            'swiftmailer.spool.memory.class' => 'Swift_MemorySpool',
            'swiftmailer.email_sender.listener.class' => 'Symfony\\Bundle\\SwiftmailerBundle\\EventListener\\EmailSenderListener',
            'swiftmailer.data_collector.class' => 'Symfony\\Bundle\\SwiftmailerBundle\\DataCollector\\MessageDataCollector',
            'swiftmailer.mailer.default.transport.name' => 'smtp',
            'swiftmailer.mailer.default.delivery.enabled' => true,
            'swiftmailer.mailer.default.transport.smtp.encryption' => 'ssl',
            'swiftmailer.mailer.default.transport.smtp.port' => 465,
            'swiftmailer.mailer.default.transport.smtp.host' => 'smtp.gmail.com',
            'swiftmailer.mailer.default.transport.smtp.username' => 'gotaindien@gmail.com',
            'swiftmailer.mailer.default.transport.smtp.password' => 'Urnalone0413',
            'swiftmailer.mailer.default.transport.smtp.auth_mode' => NULL,
            'swiftmailer.mailer.default.transport.smtp.timeout' => 30,
            'swiftmailer.mailer.default.transport.smtp.source_ip' => NULL,
            'swiftmailer.spool.default.memory.path' => 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/swiftmailer/spool/default',
            'swiftmailer.mailer.default.spool.enabled' => true,
            'swiftmailer.mailer.default.plugin.impersonate' => NULL,
            'swiftmailer.mailer.default.single_address' => NULL,
            'swiftmailer.spool.enabled' => true,
            'swiftmailer.delivery.enabled' => true,
            'swiftmailer.single_address' => NULL,
            'swiftmailer.mailers' => array(
                'default' => 'swiftmailer.mailer.default',
            ),
            'swiftmailer.default_mailer' => 'default',
            'assetic.asset_factory.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\AssetFactory',
            'assetic.asset_manager.class' => 'Assetic\\Factory\\LazyAssetManager',
            'assetic.asset_manager_cache_warmer.class' => 'Symfony\\Bundle\\AsseticBundle\\CacheWarmer\\AssetManagerCacheWarmer',
            'assetic.cached_formula_loader.class' => 'Assetic\\Factory\\Loader\\CachedFormulaLoader',
            'assetic.config_cache.class' => 'Assetic\\Cache\\ConfigCache',
            'assetic.config_loader.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Loader\\ConfigurationLoader',
            'assetic.config_resource.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Resource\\ConfigurationResource',
            'assetic.coalescing_directory_resource.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Resource\\CoalescingDirectoryResource',
            'assetic.directory_resource.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Resource\\DirectoryResource',
            'assetic.filter_manager.class' => 'Symfony\\Bundle\\AsseticBundle\\FilterManager',
            'assetic.worker.ensure_filter.class' => 'Assetic\\Factory\\Worker\\EnsureFilterWorker',
            'assetic.value_supplier.class' => 'Symfony\\Bundle\\AsseticBundle\\DefaultValueSupplier',
            'assetic.node.paths' => array(

            ),
            'assetic.cache_dir' => 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/assetic',
            'assetic.bundles' => array(
                0 => 'OroCacheBundle',
                1 => 'FrameworkBundle',
                2 => 'SecurityBundle',
                3 => 'OroSyncBundle',
                4 => 'TwigBundle',
                5 => 'MonologBundle',
                6 => 'SwiftmailerBundle',
                7 => 'AsseticBundle',
                8 => 'DoctrineBundle',
                9 => 'DoctrineFixturesBundle',
                10 => 'SensioFrameworkExtraBundle',
                11 => 'JMSSerializerBundle',
                12 => 'KnpMenuBundle',
                13 => 'FOSRestBundle',
                14 => 'FOSJsRoutingBundle',
                15 => 'NelmioApiDocBundle',
                16 => 'BeSimpleSoapBundle',
                17 => 'StofDoctrineExtensionsBundle',
                18 => 'EscapeWSSEAuthenticationBundle',
                19 => 'LiipImagineBundle',
                20 => 'GenemuFormBundle',
                21 => 'A2lixTranslationFormBundle',
                22 => 'LexikMaintenanceBundle',
                23 => 'OroLayoutBundle',
                24 => 'OroUIBundle',
                25 => 'OroOrganizationBundle',
                26 => 'OroSecurityBundle',
                27 => 'OroAttachmentBundle',
                28 => 'OroEmailBundle',
                29 => 'OroUserBundle',
                30 => 'HWIOAuthBundle',
                31 => 'OroSSOBundle',
                32 => 'OroEntityBundle',
                33 => 'OroEntityConfigBundle',
                34 => 'OroEntityExtendBundle',
                35 => 'OroIntegrationBundle',
                36 => 'AkeneoBatchBundle',
                37 => 'JDareClankBundle',
                38 => 'JMSJobQueueBundle',
                39 => 'KnpGaufretteBundle',
                40 => 'MainStockValueBundle',
                41 => 'OroActivityBundle',
                42 => 'OroActivityListBundle',
                43 => 'OroAddressBundle',
                44 => 'OroAsseticBundle',
                45 => 'OroBatchBundle',
                46 => 'OroBusinessEntitiesBundle',
                47 => 'OroCalendarBundle',
                48 => 'OroChartBundle',
                49 => 'OroConfigBundle',
                50 => 'OroCronBundle',
                51 => 'OroDataAuditBundle',
                52 => 'OroDataGridBundle',
                53 => 'OroDistributionBundle',
                54 => 'OroEmbeddedFormBundle',
                55 => 'OroEntityMergeBundle',
                56 => 'OroEntityPaginationBundle',
                57 => 'OroFilterBundle',
                58 => 'OroFormBundle',
                59 => 'OroHelpBundle',
                60 => 'OroImapBundle',
                61 => 'OroImportExportBundle',
                62 => 'OroInstallerBundle',
                63 => 'OroLocaleBundle',
                64 => 'OroMigrationBundle',
                65 => 'OroNoteBundle',
                66 => 'OroNotificationBundle',
                67 => 'OroPlatformBundle',
                68 => 'OroQueryDesignerBundle',
                69 => 'OroReportBundle',
                70 => 'OroRequireJSBundle',
                71 => 'OroSearchBundle',
                72 => 'OroSegmentBundle',
                73 => 'OroSidebarBundle',
                74 => 'OroSoapBundle',
                75 => 'OroTagBundle',
                76 => 'OroThemeBundle',
                77 => 'OroTranslationBundle',
                78 => 'OroWindowsBundle',
                79 => 'OroWorkflowBundle',
                80 => 'SecurityStockValueBundle',
                81 => 'SyliusFlowBundle',
                82 => 'OroCommentBundle',
                83 => 'OroDashboardBundle',
                84 => 'OroNavigationBundle',
                85 => 'OroTrackingBundle',
                86 => 'OroReminderBundle',
                87 => 'WebProfilerBundle',
                88 => 'SensioDistributionBundle',
            ),
            'assetic.twig_extension.class' => 'Symfony\\Bundle\\AsseticBundle\\Twig\\AsseticExtension',
            'assetic.twig_formula_loader.class' => 'Assetic\\Extension\\Twig\\TwigFormulaLoader',
            'assetic.helper.dynamic.class' => 'Symfony\\Bundle\\AsseticBundle\\Templating\\DynamicAsseticHelper',
            'assetic.helper.static.class' => 'Symfony\\Bundle\\AsseticBundle\\Templating\\StaticAsseticHelper',
            'assetic.php_formula_loader.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Loader\\AsseticHelperFormulaLoader',
            'assetic.debug' => false,
            'assetic.use_controller' => false,
            'assetic.enable_profiler' => false,
            'assetic.read_from' => 'C:\\wamp\\www\\stockvalue~~\\app/../web',
            'assetic.write_to' => 'C:\\wamp\\www\\stockvalue~~\\app/../web',
            'assetic.variables' => array(

            ),
            'assetic.java.bin' => 'C:\\ProgramData\\Oracle\\Java\\javapath\\java.EXE',
            'assetic.node.bin' => 'C:\\Program Files (x86)\\nodejs\\\\node.EXE',
            'assetic.ruby.bin' => '/usr/bin/ruby',
            'assetic.sass.bin' => '/usr/bin/sass',
            'assetic.filter.cssrewrite.class' => 'Assetic\\Filter\\CssRewriteFilter',
            'assetic.filter.lessphp.class' => 'Assetic\\Filter\\LessphpFilter',
            'assetic.filter.lessphp.presets' => array(

            ),
            'assetic.filter.lessphp.paths' => array(

            ),
            'assetic.filter.lessphp.formatter' => NULL,
            'assetic.filter.lessphp.preserve_comments' => NULL,
            'assetic.filter.cssmin.class' => 'Assetic\\Filter\\CssMinFilter',
            'assetic.filter.cssmin.filters' => array(

            ),
            'assetic.filter.cssmin.plugins' => array(

            ),
            'assetic.twig_extension.functions' => array(

            ),
            'doctrine_cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine_cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine_cache.file_system.class' => 'Doctrine\\Common\\Cache\\FilesystemCache',
            'doctrine_cache.php_file.class' => 'Doctrine\\Common\\Cache\\PhpFileCache',
            'doctrine_cache.mongodb.class' => 'Doctrine\\Common\\Cache\\MongoDBCache',
            'doctrine_cache.mongodb.collection.class' => 'MongoCollection',
            'doctrine_cache.mongodb.connection.class' => 'MongoClient',
            'doctrine_cache.mongodb.server' => 'localhost:27017',
            'doctrine_cache.riak.class' => 'Doctrine\\Common\\Cache\\RiakCache',
            'doctrine_cache.riak.bucket.class' => 'Riak\\Bucket',
            'doctrine_cache.riak.connection.class' => 'Riak\\Connection',
            'doctrine_cache.riak.bucket_property_list.class' => 'Riak\\BucketPropertyList',
            'doctrine_cache.riak.host' => 'localhost',
            'doctrine_cache.riak.port' => 8087,
            'doctrine_cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcacheCache',
            'doctrine_cache.memcache.connection.class' => 'Memcache',
            'doctrine_cache.memcache.host' => 'localhost',
            'doctrine_cache.memcache.port' => 11211,
            'doctrine_cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine_cache.memcached.connection.class' => 'Memcached',
            'doctrine_cache.memcached.host' => 'localhost',
            'doctrine_cache.memcached.port' => 11211,
            'doctrine_cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine_cache.redis.connection.class' => 'Redis',
            'doctrine_cache.redis.host' => 'localhost',
            'doctrine_cache.redis.port' => 6379,
            'doctrine_cache.couchbase.class' => 'Doctrine\\Common\\Cache\\CouchbaseCache',
            'doctrine_cache.couchbase.connection.class' => 'Couchbase',
            'doctrine_cache.couchbase.hostnames' => 'localhost:8091',
            'doctrine_cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine_cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine_cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine_cache.security.acl.cache.class' => 'Doctrine\\Bundle\\DoctrineCacheBundle\\Acl\\Model\\AclCache',
            'doctrine.dbal.logger.chain.class' => 'Doctrine\\DBAL\\Logging\\LoggerChain',
            'doctrine.dbal.logger.profiling.class' => 'Doctrine\\DBAL\\Logging\\DebugStack',
            'doctrine.dbal.logger.class' => 'Symfony\\Bridge\\Doctrine\\Logger\\DbalLogger',
            'doctrine.dbal.configuration.class' => 'Doctrine\\DBAL\\Configuration',
            'doctrine.data_collector.class' => 'Doctrine\\Bundle\\DoctrineBundle\\DataCollector\\DoctrineDataCollector',
            'doctrine.dbal.connection.event_manager.class' => 'Oro\\Bundle\\EntityBundle\\Event\\OroEventManager',
            'doctrine.dbal.connection_factory.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ConnectionFactory',
            'doctrine.dbal.events.mysql_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\MysqlSessionInit',
            'doctrine.dbal.events.oracle_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\OracleSessionInit',
            'doctrine.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Registry',
            'doctrine.entity_managers' => array(
                'default' => 'doctrine.orm.default_entity_manager',
            ),
            'doctrine.default_entity_manager' => 'default',
            'doctrine.dbal.connection_factory.types' => array(
                'date' => array(
                    'class' => 'Oro\\Bundle\\LocaleBundle\\DoctrineExtensions\\DBAL\\Types\\UTCDateType',
                    'commented' => true,
                ),
                'datetime' => array(
                    'class' => 'Oro\\Bundle\\LocaleBundle\\DoctrineExtensions\\DBAL\\Types\\UTCDateTimeType',
                    'commented' => true,
                ),
                'time' => array(
                    'class' => 'Oro\\Bundle\\LocaleBundle\\DoctrineExtensions\\DBAL\\Types\\UTCTimeType',
                    'commented' => true,
                ),
                'percent' => array(
                    'class' => 'Oro\\DBAL\\Types\\PercentType',
                    'commented' => true,
                ),
                'money' => array(
                    'class' => 'Oro\\DBAL\\Types\\MoneyType',
                    'commented' => true,
                ),
                'object' => array(
                    'class' => 'Oro\\DBAL\\Types\\ObjectType',
                    'commented' => true,
                ),
                'array' => array(
                    'class' => 'Oro\\DBAL\\Types\\ArrayType',
                    'commented' => true,
                ),
            ),
            'doctrine.connections' => array(
                'session' => 'doctrine.dbal.session_connection',
                'default' => 'doctrine.dbal.default_connection',
                'report_source' => 'doctrine.dbal.report_source_connection',
                'report_target' => 'doctrine.dbal.report_target_connection',
            ),
            'doctrine.default_connection' => 'default',
            'doctrine.orm.configuration.class' => 'Oro\\Bundle\\EntityBundle\\ORM\\OrmConfiguration',
            'doctrine.orm.entity_manager.class' => 'Oro\\Bundle\\EntityBundle\\ORM\\OroEntityManager',
            'doctrine.orm.manager_configurator.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ManagerConfigurator',
            'doctrine.orm.cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine.orm.cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine.orm.cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcacheCache',
            'doctrine.orm.cache.memcache_host' => 'localhost',
            'doctrine.orm.cache.memcache_port' => 11211,
            'doctrine.orm.cache.memcache_instance.class' => 'Memcache',
            'doctrine.orm.cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine.orm.cache.memcached_host' => 'localhost',
            'doctrine.orm.cache.memcached_port' => 11211,
            'doctrine.orm.cache.memcached_instance.class' => 'Memcached',
            'doctrine.orm.cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine.orm.cache.redis_host' => 'localhost',
            'doctrine.orm.cache.redis_port' => 6379,
            'doctrine.orm.cache.redis_instance.class' => 'Redis',
            'doctrine.orm.cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine.orm.cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine.orm.cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine.orm.metadata.driver_chain.class' => 'Doctrine\\Common\\Persistence\\Mapping\\Driver\\MappingDriverChain',
            'doctrine.orm.metadata.annotation.class' => 'Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver',
            'doctrine.orm.metadata.xml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver',
            'doctrine.orm.metadata.yml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver',
            'doctrine.orm.metadata.php.class' => 'Doctrine\\ORM\\Mapping\\Driver\\PHPDriver',
            'doctrine.orm.metadata.staticphp.class' => 'Doctrine\\ORM\\Mapping\\Driver\\StaticPHPDriver',
            'doctrine.orm.proxy_cache_warmer.class' => 'Symfony\\Bridge\\Doctrine\\CacheWarmer\\ProxyCacheWarmer',
            'form.type_guesser.doctrine.class' => 'Symfony\\Bridge\\Doctrine\\Form\\DoctrineOrmTypeGuesser',
            'doctrine.orm.validator.unique.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator',
            'doctrine.orm.validator_initializer.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\DoctrineInitializer',
            'doctrine.orm.security.user.provider.class' => 'Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider',
            'doctrine.orm.listeners.resolve_target_entity.class' => 'Doctrine\\ORM\\Tools\\ResolveTargetEntityListener',
            'doctrine.orm.listeners.attach_entity_listeners.class' => 'Doctrine\\ORM\\Tools\\AttachEntityListenersListener',
            'doctrine.orm.naming_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultNamingStrategy',
            'doctrine.orm.naming_strategy.underscore.class' => 'Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy',
            'doctrine.orm.entity_listener_resolver.class' => 'Doctrine\\ORM\\Mapping\\DefaultEntityListenerResolver',
            'doctrine.orm.second_level_cache.default_cache_factory.class' => 'Doctrine\\ORM\\Cache\\DefaultCacheFactory',
            'doctrine.orm.second_level_cache.default_region.class' => 'Doctrine\\ORM\\Cache\\Region\\DefaultRegion',
            'doctrine.orm.second_level_cache.filelock_region.class' => 'Doctrine\\ORM\\Cache\\Region\\FileLockRegion',
            'doctrine.orm.second_level_cache.logger_chain.class' => 'Doctrine\\ORM\\Cache\\Logging\\CacheLoggerChain',
            'doctrine.orm.second_level_cache.logger_statistics.class' => 'Doctrine\\ORM\\Cache\\Logging\\StatisticsCacheLogger',
            'doctrine.orm.second_level_cache.cache_configuration.class' => 'Doctrine\\ORM\\Cache\\CacheConfiguration',
            'doctrine.orm.second_level_cache.regions_configuration.class' => 'Doctrine\\ORM\\Cache\\RegionsConfiguration',
            'doctrine.orm.auto_generate_proxy_classes' => true,
            'doctrine.orm.proxy_dir' => 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/doctrine/orm/Proxies',
            'doctrine.orm.proxy_namespace' => 'Proxies',
            'sensio_framework_extra.view.guesser.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Templating\\TemplateGuesser',
            'sensio_framework_extra.controller.listener.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ControllerListener',
            'sensio_framework_extra.routing.loader.annot_dir.class' => 'Symfony\\Component\\Routing\\Loader\\AnnotationDirectoryLoader',
            'sensio_framework_extra.routing.loader.annot_file.class' => 'Symfony\\Component\\Routing\\Loader\\AnnotationFileLoader',
            'sensio_framework_extra.routing.loader.annot_class.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Routing\\AnnotatedRouteControllerLoader',
            'sensio_framework_extra.converter.listener.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ParamConverterListener',
            'sensio_framework_extra.converter.manager.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\ParamConverterManager',
            'sensio_framework_extra.converter.doctrine.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\DoctrineParamConverter',
            'sensio_framework_extra.converter.datetime.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\DateTimeParamConverter',
            'sensio_framework_extra.view.listener.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\TemplateListener',
            'jms_serializer.metadata.file_locator.class' => 'Metadata\\Driver\\FileLocator',
            'jms_serializer.metadata.annotation_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\AnnotationDriver',
            'jms_serializer.metadata.chain_driver.class' => 'Metadata\\Driver\\DriverChain',
            'jms_serializer.metadata.yaml_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\YamlDriver',
            'jms_serializer.metadata.xml_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\XmlDriver',
            'jms_serializer.metadata.php_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\PhpDriver',
            'jms_serializer.metadata.doctrine_type_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\DoctrineTypeDriver',
            'jms_serializer.metadata.doctrine_phpcr_type_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\DoctrinePHPCRTypeDriver',
            'jms_serializer.metadata.lazy_loading_driver.class' => 'Metadata\\Driver\\LazyLoadingDriver',
            'jms_serializer.metadata.metadata_factory.class' => 'Metadata\\MetadataFactory',
            'jms_serializer.metadata.cache.file_cache.class' => 'Metadata\\Cache\\FileCache',
            'jms_serializer.event_dispatcher.class' => 'JMS\\Serializer\\EventDispatcher\\LazyEventDispatcher',
            'jms_serializer.camel_case_naming_strategy.class' => 'JMS\\Serializer\\Naming\\CamelCaseNamingStrategy',
            'jms_serializer.serialized_name_annotation_strategy.class' => 'JMS\\Serializer\\Naming\\SerializedNameAnnotationStrategy',
            'jms_serializer.cache_naming_strategy.class' => 'JMS\\Serializer\\Naming\\CacheNamingStrategy',
            'jms_serializer.doctrine_object_constructor.class' => 'JMS\\Serializer\\Construction\\DoctrineObjectConstructor',
            'jms_serializer.unserialize_object_constructor.class' => 'JMS\\Serializer\\Construction\\UnserializeObjectConstructor',
            'jms_serializer.version_exclusion_strategy.class' => 'JMS\\Serializer\\Exclusion\\VersionExclusionStrategy',
            'jms_serializer.serializer.class' => 'JMS\\Serializer\\Serializer',
            'jms_serializer.twig_extension.class' => 'JMS\\Serializer\\Twig\\SerializerExtension',
            'jms_serializer.templating.helper.class' => 'JMS\\SerializerBundle\\Templating\\SerializerHelper',
            'jms_serializer.json_serialization_visitor.class' => 'JMS\\Serializer\\JsonSerializationVisitor',
            'jms_serializer.json_serialization_visitor.options' => 0,
            'jms_serializer.json_deserialization_visitor.class' => 'JMS\\Serializer\\JsonDeserializationVisitor',
            'jms_serializer.xml_serialization_visitor.class' => 'JMS\\Serializer\\XmlSerializationVisitor',
            'jms_serializer.xml_deserialization_visitor.class' => 'JMS\\Serializer\\XmlDeserializationVisitor',
            'jms_serializer.xml_deserialization_visitor.doctype_whitelist' => array(

            ),
            'jms_serializer.yaml_serialization_visitor.class' => 'JMS\\Serializer\\YamlSerializationVisitor',
            'jms_serializer.handler_registry.class' => 'JMS\\Serializer\\Handler\\LazyHandlerRegistry',
            'jms_serializer.datetime_handler.class' => 'JMS\\Serializer\\Handler\\DateHandler',
            'jms_serializer.array_collection_handler.class' => 'JMS\\Serializer\\Handler\\ArrayCollectionHandler',
            'jms_serializer.php_collection_handler.class' => 'JMS\\Serializer\\Handler\\PhpCollectionHandler',
            'jms_serializer.form_error_handler.class' => 'JMS\\Serializer\\Handler\\FormErrorHandler',
            'jms_serializer.constraint_violation_handler.class' => 'JMS\\Serializer\\Handler\\ConstraintViolationHandler',
            'jms_serializer.doctrine_proxy_subscriber.class' => 'JMS\\Serializer\\EventDispatcher\\Subscriber\\DoctrineProxySubscriber',
            'jms_serializer.stopwatch_subscriber.class' => 'JMS\\SerializerBundle\\Serializer\\StopwatchEventSubscriber',
            'jms_serializer.infer_types_from_doctrine_metadata' => true,
            'knp_menu.factory.class' => 'Knp\\Menu\\MenuFactory',
            'knp_menu.factory_extension.routing.class' => 'Knp\\Menu\\Silex\\RoutingExtension',
            'knp_menu.helper.class' => 'Knp\\Menu\\Twig\\Helper',
            'knp_menu.matcher.class' => 'Knp\\Menu\\Matcher\\Matcher',
            'knp_menu.menu_provider.chain.class' => 'Knp\\Menu\\Provider\\ChainProvider',
            'knp_menu.menu_provider.container_aware.class' => 'Knp\\Bundle\\MenuBundle\\Provider\\ContainerAwareProvider',
            'knp_menu.menu_provider.builder_alias.class' => 'Knp\\Bundle\\MenuBundle\\Provider\\BuilderAliasProvider',
            'knp_menu.renderer_provider.class' => 'Knp\\Bundle\\MenuBundle\\Renderer\\ContainerAwareProvider',
            'knp_menu.renderer.list.class' => 'Knp\\Menu\\Renderer\\ListRenderer',
            'knp_menu.renderer.list.options' => array(

            ),
            'knp_menu.twig.extension.class' => 'Knp\\Menu\\Twig\\MenuExtension',
            'knp_menu.renderer.twig.class' => 'Knp\\Menu\\Renderer\\TwigRenderer',
            'knp_menu.renderer.twig.options' => array(

            ),
            'knp_menu.renderer.twig.template' => 'knp_menu.html.twig',
            'knp_menu.default_renderer' => 'twig',
            'fos_rest.serializer.exclusion_strategy.version' => '',
            'fos_rest.serializer.exclusion_strategy.groups' => '',
            'fos_rest.view_handler.jsonp.callback_param' => '',
            'fos_rest.view.exception_wrapper_handler' => 'FOS\\RestBundle\\View\\ExceptionWrapperHandler',
            'fos_rest.view_handler.default.class' => 'FOS\\RestBundle\\View\\ViewHandler',
            'fos_rest.view_handler.jsonp.class' => 'FOS\\RestBundle\\View\\JsonpHandler',
            'fos_rest.serializer.exception_wrapper_serialize_handler.class' => 'FOS\\RestBundle\\Serializer\\ExceptionWrapperSerializeHandler',
            'fos_rest.routing.loader.controller.class' => 'FOS\\RestBundle\\Routing\\Loader\\RestRouteLoader',
            'fos_rest.routing.loader.yaml_collection.class' => 'FOS\\RestBundle\\Routing\\Loader\\RestYamlCollectionLoader',
            'fos_rest.routing.loader.xml_collection.class' => 'FOS\\RestBundle\\Routing\\Loader\\RestXmlCollectionLoader',
            'fos_rest.routing.loader.processor.class' => 'FOS\\RestBundle\\Routing\\Loader\\RestRouteProcessor',
            'fos_rest.routing.loader.reader.controller.class' => 'FOS\\RestBundle\\Routing\\Loader\\Reader\\RestControllerReader',
            'fos_rest.routing.loader.reader.action.class' => 'FOS\\RestBundle\\Routing\\Loader\\Reader\\RestActionReader',
            'fos_rest.format_negotiator.class' => 'FOS\\RestBundle\\Util\\FormatNegotiator',
            'fos_rest.inflector.class' => 'FOS\\RestBundle\\Util\\Inflector\\DoctrineInflector',
            'fos_rest.request_matcher.class' => 'Symfony\\Component\\HttpFoundation\\RequestMatcher',
            'fos_rest.violation_formatter.class' => 'FOS\\RestBundle\\Util\\ViolationFormatter',
            'fos_rest.request.param_fetcher.class' => 'FOS\\RestBundle\\Request\\ParamFetcher',
            'fos_rest.request.param_fetcher.reader.class' => 'FOS\\RestBundle\\Request\\ParamReader',
            'fos_rest.cache_dir' => 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/fos_rest',
            'fos_rest.routing.loader.default_format' => 'json',
            'fos_rest.routing.loader.include_format' => true,
            'fos_rest.serializer.serialize_null' => false,
            'fos_rest.exception.codes' => array(

            ),
            'fos_rest.exception.messages' => array(

            ),
            'fos_rest.converter.request_body.validation_errors_argument' => 'validationErrors',
            'fos_rest.mime_types' => array(

            ),
            'fos_rest.formats' => array(
                'json' => false,
                'html' => true,
            ),
            'fos_rest.force_redirects' => array(
                'html' => 302,
            ),
            'fos_rest.failed_validation' => 400,
            'fos_rest.empty_content' => 204,
            'fos_rest.serialize_null' => false,
            'fos_rest.default_engine' => 'php',
            'fos_rest.normalizer.camel_keys.class' => 'FOS\\RestBundle\\Normalizer\\CamelKeysNormalizer',
            'fos_rest.decoder.json.class' => 'FOS\\RestBundle\\Decoder\\JsonDecoder',
            'fos_rest.decoder.jsontoform.class' => 'FOS\\RestBundle\\Decoder\\JsonToFormDecoder',
            'fos_rest.decoder.xml.class' => 'FOS\\RestBundle\\Decoder\\XmlDecoder',
            'fos_rest.decoder_provider.class' => 'FOS\\RestBundle\\Decoder\\ContainerDecoderProvider',
            'fos_rest.body_listener.class' => 'FOS\\RestBundle\\EventListener\\BodyListener',
            'fos_rest.throw_exception_on_unsupported_content_type' => false,
            'fos_rest.body_default_format' => NULL,
            'fos_rest.decoders' => array(
                'json' => 'fos_rest.decoder.json',
            ),
            'fos_rest.format_listener.class' => 'FOS\\RestBundle\\EventListener\\FormatListener',
            'fos_rest.version_listener.class' => 'FOS\\RestBundle\\EventListener\\VersionListener',
            'fos_rest.format_listener.rules' => array(
                0 => array(
                    'path' => '^/api/rest',
                    'priorities' => array(
                        0 => 'json',
                    ),
                    'fallback_format' => 'json',
                    'prefer_extension' => false,
                    'host' => NULL,
                    'methods' => NULL,
                    'stop' => false,
                    'exception_fallback_format' => 'json',
                ),
                1 => array(
                    'path' => '^/api/soap',
                    'stop' => true,
                    'host' => NULL,
                    'methods' => NULL,
                    'prefer_extension' => true,
                    'fallback_format' => 'html',
                    'exception_fallback_format' => 'html',
                    'priorities' => array(

                    ),
                ),
                2 => array(
                    'path' => '^/',
                    'stop' => true,
                    'host' => NULL,
                    'methods' => NULL,
                    'prefer_extension' => true,
                    'fallback_format' => 'html',
                    'exception_fallback_format' => 'html',
                    'priorities' => array(

                    ),
                ),
            ),
            'fos_js_routing.extractor.class' => 'FOS\\JsRoutingBundle\\Extractor\\ExposedRoutesExtractor',
            'fos_js_routing.controller.class' => 'FOS\\JsRoutingBundle\\Controller\\Controller',
            'fos_js_routing.cache_control' => array(
                'enabled' => false,
            ),
            'nelmio_api_doc.motd.template' => 'OroUserBundle::ApiDoc/motd.html.twig',
            'nelmio_api_doc.exclude_sections' => array(

            ),
            'nelmio_api_doc.default_sections_opened' => true,
            'nelmio_api_doc.api_name' => 'API documentation',
            'nelmio_api_doc.sandbox.enabled' => true,
            'nelmio_api_doc.sandbox.endpoint' => NULL,
            'nelmio_api_doc.sandbox.accept_type' => NULL,
            'nelmio_api_doc.sandbox.body_format.formats' => array(
                0 => 'form',
                1 => 'json',
            ),
            'nelmio_api_doc.sandbox.body_format.default_format' => 'form',
            'nelmio_api_doc.sandbox.request_format.method' => 'format_param',
            'nelmio_api_doc.sandbox.request_format.default_format' => 'json',
            'nelmio_api_doc.sandbox.request_format.formats' => array(
                'json' => 'application/json',
                'xml' => 'application/xml',
            ),
            'nelmio_api_doc.sandbox.entity_to_choice' => true,
            'nelmio_api_doc.formatter.abstract_formatter.class' => 'Nelmio\\ApiDocBundle\\Formatter\\AbstractFormatter',
            'nelmio_api_doc.formatter.markdown_formatter.class' => 'Nelmio\\ApiDocBundle\\Formatter\\MarkdownFormatter',
            'nelmio_api_doc.formatter.simple_formatter.class' => 'Nelmio\\ApiDocBundle\\Formatter\\SimpleFormatter',
            'nelmio_api_doc.formatter.html_formatter.class' => 'Nelmio\\ApiDocBundle\\Formatter\\HtmlFormatter',
            'nelmio_api_doc.formatter.swagger_formatter.class' => 'Nelmio\\ApiDocBundle\\Formatter\\SwaggerFormatter',
            'nelmio_api_doc.sandbox.authentication' => NULL,
            'nelmio_api_doc.extractor.api_doc_extractor.class' => 'Nelmio\\ApiDocBundle\\Extractor\\ApiDocExtractor',
            'nelmio_api_doc.form.extension.description_form_type_extension.class' => 'Nelmio\\ApiDocBundle\\Form\\Extension\\DescriptionFormTypeExtension',
            'nelmio_api_doc.twig.extension.extra_markdown.class' => 'Nelmio\\ApiDocBundle\\Twig\\Extension\\MarkdownExtension',
            'nelmio_api_doc.doc_comment_extractor.class' => 'Nelmio\\ApiDocBundle\\Util\\DocCommentExtractor',
            'nelmio_api_doc.extractor.handler.fos_rest.class' => 'Nelmio\\ApiDocBundle\\Extractor\\Handler\\FosRestHandler',
            'nelmio_api_doc.extractor.handler.jms_security.class' => 'Nelmio\\ApiDocBundle\\Extractor\\Handler\\JmsSecurityExtraHandler',
            'nelmio_api_doc.extractor.handler.sensio_framework_extra.class' => 'Nelmio\\ApiDocBundle\\Extractor\\Handler\\SensioFrameworkExtraHandler',
            'nelmio_api_doc.extractor.handler.phpdoc.class' => 'Nelmio\\ApiDocBundle\\Extractor\\Handler\\PhpDocHandler',
            'nelmio_api_doc.parser.collection_parser.class' => 'Nelmio\\ApiDocBundle\\Parser\\CollectionParser',
            'nelmio_api_doc.parser.form_errors_parser.class' => 'Nelmio\\ApiDocBundle\\Parser\\FormErrorsParser',
            'nelmio_api_doc.request_listener.parameter' => '_doc',
            'nelmio_api_doc.event_listener.request.class' => 'Nelmio\\ApiDocBundle\\EventListener\\RequestListener',
            'nelmio_api_doc.swagger.base_path' => '/api',
            'nelmio_api_doc.swagger.swagger_version' => '1.2',
            'nelmio_api_doc.swagger.api_version' => '0.1',
            'nelmio_api_doc.swagger.info' => array(
                'title' => 'Symfony2',
                'description' => 'My awesome Symfony2 app!',
                'TermsOfServiceUrl' => NULL,
                'contact' => NULL,
                'license' => NULL,
                'licenseUrl' => NULL,
            ),
            'nelmio_api_doc.swagger.model_naming_strategy' => 'dot_notation',
            'besimple.soap.request_format.listener.class' => 'BeSimple\\SoapBundle\\EventListener\\RequestFormatListener',
            'besimple.soap.definition.loader.resolver.class' => 'Symfony\\Component\\Config\\Loader\\LoaderResolver',
            'besimple.soap.definition.loader.class' => 'Symfony\\Component\\Config\\Loader\\DelegatingLoader',
            'besimple.soap.definition.loader.annot_dir.class' => 'BeSimple\\SoapBundle\\ServiceDefinition\\Loader\\AnnotationDirectoryLoader',
            'besimple.soap.definition.loader.annot_file.class' => 'BeSimple\\SoapBundle\\ServiceDefinition\\Loader\\AnnotationFileLoader',
            'besimple.soap.definition.loader.annot_class.class' => 'BeSimple\\SoapBundle\\ServiceDefinition\\Loader\\AnnotationClassLoader',
            'besimple.soap.definition.loader.annot_complextype.class' => 'BeSimple\\SoapBundle\\ServiceDefinition\\Loader\\AnnotationComplexTypeLoader',
            'besimple.soap.converter.collection.class' => 'BeSimple\\SoapCommon\\Converter\\TypeConverterCollection',
            'besimple.soap.converter.date_time.class' => 'BeSimple\\SoapCommon\\Converter\\DateTimeTypeConverter',
            'besimple.soap.converter.date.class' => 'BeSimple\\SoapCommon\\Converter\\DateTypeConverter',
            'besimple.soap.response.class' => 'BeSimple\\SoapBundle\\Soap\\SoapResponse',
            'besimple.soap.response.listener.class' => 'BeSimple\\SoapBundle\\EventListener\\SoapResponseListener',
            'besimple.soap.exception_listener.class' => 'BeSimple\\SoapBundle\\EventListener\\SoapExceptionListener',
            'besimple.soap.context.class' => 'BeSimple\\SoapBundle\\WebServiceContext',
            'besimple.soap.binder.request_header.rpcliteral.class' => 'BeSimple\\SoapBundle\\ServiceBinding\\RpcLiteralRequestHeaderMessageBinder',
            'besimple.soap.binder.request.rpcliteral.class' => 'BeSimple\\SoapBundle\\ServiceBinding\\RpcLiteralRequestMessageBinder',
            'besimple.soap.binder.response.rpcliteral.class' => 'BeSimple\\SoapBundle\\ServiceBinding\\RpcLiteralResponseMessageBinder',
            'besimple.soap.binder.request.documentwrapped.class' => 'BeSimple\\SoapBundle\\ServiceBinding\\DocumentLiteralWrappedRequestMessageBinder',
            'besimple.soap.binder.request_header.documentwrapped.class' => 'BeSimple\\SoapBundle\\ServiceBinding\\DocumentLiteralWrappedRequestHeaderMessageBinder',
            'besimple.soap.binder.response.documentwrapped.class' => 'BeSimple\\SoapBundle\\ServiceBinding\\DocumentLiteralWrappedResponseMessageBinder',
            'besimple.soap.type.repository.class' => 'BeSimple\\SoapCommon\\Definition\\Type\\TypeRepository',
            'besimple.soap.server.classmap.class' => 'BeSimple\\SoapServer\\Classmap',
            'besimple.soap.cache.class' => 'BeSimple\\SoapBundle\\Cache',
            'besimple.soap.cache.dir' => 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/besimple/soap',
            'besimple.soap.cache.type' => 1,
            'besimple.soap.cache.lifetime' => 86400,
            'besimple.soap.cache.limit' => 5,
            'besimple.soap.definition.dumper.options.stylesheet' => NULL,
            'besimple.soap.exception_listener.controller' => 'BeSimpleSoapBundle:SoapWebService:exception',
            'stof_doctrine_extensions.event_listener.locale.class' => 'Stof\\DoctrineExtensionsBundle\\EventListener\\LocaleListener',
            'stof_doctrine_extensions.event_listener.logger.class' => 'Stof\\DoctrineExtensionsBundle\\EventListener\\LoggerListener',
            'stof_doctrine_extensions.event_listener.blame.class' => 'Stof\\DoctrineExtensionsBundle\\EventListener\\BlameListener',
            'stof_doctrine_extensions.uploadable.manager.class' => 'Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadableManager',
            'stof_doctrine_extensions.uploadable.mime_type_guesser.class' => 'Stof\\DoctrineExtensionsBundle\\Uploadable\\MimeTypeGuesserAdapter',
            'stof_doctrine_extensions.uploadable.default_file_info.class' => 'Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo',
            'stof_doctrine_extensions.default_locale' => 'en',
            'stof_doctrine_extensions.default_file_path' => NULL,
            'stof_doctrine_extensions.translation_fallback' => true,
            'stof_doctrine_extensions.persist_default_translation' => false,
            'stof_doctrine_extensions.skip_translation_on_load' => false,
            'stof_doctrine_extensions.uploadable.validate_writable_directory' => true,
            'stof_doctrine_extensions.listener.translatable.class' => 'Gedmo\\Translatable\\TranslatableListener',
            'stof_doctrine_extensions.listener.timestampable.class' => 'Gedmo\\Timestampable\\TimestampableListener',
            'stof_doctrine_extensions.listener.blameable.class' => 'Gedmo\\Blameable\\BlameableListener',
            'stof_doctrine_extensions.listener.sluggable.class' => 'Gedmo\\Sluggable\\SluggableListener',
            'stof_doctrine_extensions.listener.tree.class' => 'Gedmo\\Tree\\TreeListener',
            'stof_doctrine_extensions.listener.loggable.class' => 'Gedmo\\Loggable\\LoggableListener',
            'stof_doctrine_extensions.listener.sortable.class' => 'Gedmo\\Sortable\\SortableListener',
            'stof_doctrine_extensions.listener.softdeleteable.class' => 'Gedmo\\SoftDeleteable\\SoftDeleteableListener',
            'stof_doctrine_extensions.listener.uploadable.class' => 'Gedmo\\Uploadable\\UploadableListener',
            'stof_doctrine_extensions.listener.reference_integrity.class' => 'Gedmo\\ReferenceIntegrity\\ReferenceIntegrityListener',
            'escape_wsse_authentication.provider.class' => 'Oro\\Bundle\\UserBundle\\Security\\WsseAuthProvider',
            'escape_wsse_authentication.listener.class' => 'Oro\\Bundle\\UserBundle\\Security\\WsseAuthListener',
            'escape_wsse_authentication.entry_point.class' => 'Escape\\WSSEAuthenticationBundle\\Security\\Http\\EntryPoint\\EntryPoint',
            'escape_wsse_authentication.encoder.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder',
            'escape_wsse_authentication.nonce_cache.class' => 'Doctrine\\Common\\Cache\\PhpFileCache',
            'liip_imagine.filter.configuration.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\FilterConfiguration',
            'liip_imagine.filter.manager.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\FilterManager',
            'liip_imagine.data.manager.class' => 'Liip\\ImagineBundle\\Imagine\\Data\\DataManager',
            'liip_imagine.cache.manager.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\CacheManager',
            'liip_imagine.controller.class' => 'Liip\\ImagineBundle\\Controller\\ImagineController',
            'liip_imagine.routing.loader.class' => 'Liip\\ImagineBundle\\Routing\\ImagineLoader',
            'liip_imagine.twig.extension.class' => 'Liip\\ImagineBundle\\Templating\\ImagineExtension',
            'liip_imagine.templating.helper.class' => 'Liip\\ImagineBundle\\Templating\\Helper\\ImagineHelper',
            'liip_imagine.gd.class' => 'Imagine\\Gd\\Imagine',
            'liip_imagine.imagick.class' => 'Imagine\\Imagick\\Imagine',
            'liip_imagine.gmagick.class' => 'Imagine\\Gmagick\\Imagine',
            'liip_imagine.filter.loader.relative_resize.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\RelativeResizeFilterLoader',
            'liip_imagine.filter.loader.resize.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\ResizeFilterLoader',
            'liip_imagine.filter.loader.thumbnail.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\ThumbnailFilterLoader',
            'liip_imagine.filter.loader.crop.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\CropFilterLoader',
            'liip_imagine.filter.loader.paste.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\PasteFilterLoader',
            'liip_imagine.filter.loader.watermark.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\WatermarkFilterLoader',
            'liip_imagine.filter.loader.strip.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\StripFilterLoader',
            'liip_imagine.filter.loader.background.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\BackgroundFilterLoader',
            'liip_imagine.filter.loader.upscale.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\UpscaleFilterLoader',
            'liip_imagine.data.loader.filesystem.class' => 'Liip\\ImagineBundle\\Imagine\\Data\\Loader\\FileSystemLoader',
            'liip_imagine.data.loader.stream.class' => 'Liip\\ImagineBundle\\Imagine\\Data\\Loader\\StreamLoader',
            'liip_imagine.cache.resolver.web_path.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\WebPathResolver',
            'liip_imagine.cache.resolver.no_cache.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\NoCacheResolver',
            'liip_imagine.form.type.image.class' => 'Liip\\ImagineBundle\\Form\\Type\\ImageType',
            'liip_imagine.cache.clearer.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\CacheClearer',
            'liip_imagine.cache_prefix' => '/media/cache',
            'liip_imagine.web_root' => 'C:\\wamp\\www\\stockvalue~~\\app/../web',
            'liip_imagine.data_root' => 'C:\\wamp\\www\\stockvalue~~\\app/../web',
            'liip_imagine.cache_mkdir_mode' => 511,
            'liip_imagine.formats' => array(

            ),
            'liip_imagine.cache.resolver.default' => 'web_path',
            'liip_imagine.filter_sets' => array(
                'avatar_med' => array(
                    'quality' => 95,
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 58,
                                1 => 58,
                            ),
                            'mode' => 'outbound',
                        ),
                        'strip' => array(

                        ),
                    ),
                    'format' => NULL,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'controller_action' => NULL,
                    'route' => array(

                    ),
                ),
                'avatar_xsmall' => array(
                    'quality' => 95,
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 16,
                                1 => 16,
                            ),
                            'mode' => 'outbound',
                        ),
                        'strip' => array(

                        ),
                    ),
                    'format' => NULL,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'controller_action' => NULL,
                    'route' => array(

                    ),
                ),
            ),
            'liip_imagine.data.loader.default' => 'filesystem',
            'liip_imagine.controller_action' => 'liip_imagine.controller:filterAction',
            'liip_imagine.cache.resolver.base_path' => '',
            'genemu.form.recaptcha.public_key' => '',
            'genemu.form.recaptcha.private_key' => '',
            'genemu.form.recaptcha.server_url' => '',
            'genemu.form.recaptcha.code' => '',
            'genemu.form.recaptcha.options' => array(

            ),
            'genemu.form.recaptcha.validation.options' => array(

            ),
            'genemu.form.captcha.options' => array(
                'enabled' => true,
                'driver' => 'gd',
                'width' => 100,
                'height' => 30,
                'length' => 4,
                'format' => 'png',
                'chars' => array(
                    0 => 0,
                    1 => 1,
                    2 => 2,
                    3 => 3,
                    4 => 4,
                    5 => 5,
                    6 => 6,
                    7 => 7,
                    8 => 8,
                    9 => 9,
                ),
                'font_size' => 18,
                'grayscale' => false,
                'font_color' => array(
                    0 => '252525',
                    1 => '8B8787',
                    2 => '550707',
                    3 => '3526E6',
                    4 => '88531E',
                ),
                'fonts' => array(
                    0 => 'C:\\wamp\\www\\stockvalue~~\\app/../web/bundles/genemuform/fonts/akbar.ttf',
                    1 => 'C:\\wamp\\www\\stockvalue~~\\app/../web/bundles/genemuform/fonts/brushcut.ttf',
                    2 => 'C:\\wamp\\www\\stockvalue~~\\app/../web/bundles/genemuform/fonts/molten.ttf',
                    3 => 'C:\\wamp\\www\\stockvalue~~\\app/../web/bundles/genemuform/fonts/planetbe.ttf',
                    4 => 'C:\\wamp\\www\\stockvalue~~\\app/../web/bundles/genemuform/fonts/whoobub.ttf',
                ),
                'background_color' => 'DDDDDD',
                'border_color' => '000000',
                'code' => NULL,
            ),
            'genemu.form.tinymce.configs' => array(
                'theme' => 'advanced',
            ),
            'genemu.form.color.options' => array(

            ),
            'genemu.form.date.options' => array(

            ),
            'genemu.form.rating.options' => array(

            ),
            'genemu.form.file.root_dir' => 'C:\\wamp\\www\\stockvalue~~\\app/../web',
            'genemu.form.file.folder' => '/upload',
            'genemu.form.file.upload_dir' => 'C:\\wamp\\www\\stockvalue~~\\app/../web/upload',
            'genemu.form.file.options' => array(

            ),
            'genemu.form.image.selected' => '',
            'genemu.form.image.thumbnails' => array(

            ),
            'genemu.form.image.filters' => array(

            ),
            'a2lix_translation_form.locales' => array(
                0 => 'en',
                1 => 'fr',
            ),
            'a2lix_translation_form.default_required' => true,
            'a2lix_translation_form.default.service.translation.class' => 'A2lix\\TranslationFormBundle\\TranslationForm\\DefaultTranslationForm',
            'a2lix_translation_form.default.listener.translations.class' => 'A2lix\\TranslationFormBundle\\Form\\EventListener\\DefaultTranslationsListener',
            'a2lix_translation_form.default.type.translations.class' => 'A2lix\\TranslationFormBundle\\Form\\Type\\TranslationsType',
            'a2lix_translation_form.default.type.translationsfields.class' => 'A2lix\\TranslationFormBundle\\Form\\Type\\TranslationsFieldsType',
            'a2lix_translation_form.default.type.translationsforms.class' => 'A2lix\\TranslationFormBundle\\Form\\Type\\TranslationsFormsType',
            'a2lix_translation_form.default.type.translationslocalesselector.class' => 'A2lix\\TranslationFormBundle\\Form\\Type\\TranslationsLocalesSelectorType',
            'a2lix_translation_form.templating' => 'OroUIBundle:Form:translatable.html.twig',
            'a2lix_translation_form.listener.controller.class' => 'A2lix\\TranslationFormBundle\\EventListener\\ControllerListener',
            'a2lix_translation_form.gedmo.service.translation.class' => 'A2lix\\TranslationFormBundle\\TranslationForm\\GedmoTranslationForm',
            'a2lix_translation_form.gedmo.listener.translations.class' => 'A2lix\\TranslationFormBundle\\Form\\EventListener\\GedmoTranslationsListener',
            'a2lix_translation_form.gedmo.type.translations.class' => 'A2lix\\TranslationFormBundle\\Form\\Type\\GedmoTranslationsType',
            'a2lix_translation_form.gedmo.type.translationslocales.class' => 'A2lix\\TranslationFormBundle\\Form\\Type\\GedmoTranslationsLocalesType',
            'lexik_maintenance.listener.class' => 'Lexik\\Bundle\\MaintenanceBundle\\Listener\\MaintenanceListener',
            'lexik_maintenance.driver_factory.class' => 'Lexik\\Bundle\\MaintenanceBundle\\Drivers\\DriverFactory',
            'lexik_maintenance.driver.database.class' => 'Lexik\\Bundle\\MaintenanceBundle\\Drivers\\DatabaseDriver',
            'lexik_maintenance.driver' => array(
                'class' => 'Lexik\\Bundle\\MaintenanceBundle\\Drivers\\FileDriver',
                'options' => array(
                    'file_path' => 'C:\\wamp\\www\\stockvalue~~\\app/cache/maintenance_lock',
                ),
                'ttl' => NULL,
            ),
            'lexik_maintenance.authorized.path' => 'maintenance|.*\\.js',
            'lexik_maintenance.authorized.host' => NULL,
            'lexik_maintenance.authorized.ips' => NULL,
            'lexik_maintenance.authorized.query' => array(

            ),
            'lexik_maintenance.authorized.route' => NULL,
            'lexik_maintenance.authorized.attributes' => array(

            ),
            'oro_layout.layout_factory_builder.class' => 'Oro\\Component\\Layout\\LayoutFactoryBuilder',
            'oro_layout.layout_manager.class' => 'Oro\\Component\\Layout\\LayoutManager',
            'oro_layout.form_layout_builder.class' => 'Oro\\Bundle\\LayoutBundle\\Layout\\Form\\GroupingFormLayoutBuilder',
            'oro_layout.templating.default' => 'twig',
            'oro_layout.php.renderer.class' => 'Symfony\\Component\\Form\\FormRenderer',
            'oro_layout.php.renderer.engine.class' => 'Symfony\\Component\\Form\\Extension\\Templating\\TemplatingRendererEngine',
            'oro_layout.php.layout_renderer.class' => 'Oro\\Component\\Layout\\LayoutRenderer',
            'oro_layout.php.templating.helper.class' => 'Oro\\Component\\Layout\\Templating\\Helper\\LayoutHelper',
            'oro_layout.php.resources' => array(
                0 => 'OroLayoutBundle:Layout/php',
            ),
            'oro_layout.twig.extension.layout.class' => 'Oro\\Bundle\\LayoutBundle\\Twig\\LayoutExtension',
            'oro_layout.twig.renderer.class' => 'Symfony\\Bridge\\Twig\\Form\\TwigRenderer',
            'oro_layout.twig.renderer.engine.class' => 'Symfony\\Bridge\\Twig\\Form\\TwigRendererEngine',
            'oro_layout.twig.layout_renderer.class' => 'Oro\\Bundle\\LayoutBundle\\Layout\\TwigLayoutRenderer',
            'oro_layout.twig.resources' => array(
                0 => 'OroLayoutBundle:Layout:div_layout.html.twig',
            ),
            'oro_layout.theme_factory.class' => 'Oro\\Component\\Layout\\Extension\\Theme\\Model\\ThemeFactory',
            'oro_layout.theme_manager.class' => 'Oro\\Component\\Layout\\Extension\\Theme\\Model\\ThemeManager',
            'oro_layout.theme_extension.class' => 'Oro\\Component\\Layout\\Extension\\Theme\\ThemeExtension',
            'oro_layout.request.listener.theme.class' => 'Oro\\Bundle\\LayoutBundle\\EventListener\\ThemeListener',
            'oro_layout.default_active_theme' => NULL,
            'oro_layout.theme_updates_resources' => array(
                'embedded_default' => array(
                    0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle\\Resources\\views\\layouts\\embedded_default\\default.yml',
                    'oro_embedded_form_submit' => array(
                        0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle\\Resources\\views\\layouts\\embedded_default\\oro_embedded_form_submit\\default.yml',
                        1 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle\\Resources\\views\\layouts\\embedded_default\\oro_embedded_form_submit\\default_legacy.yml',
                    ),
                    'oro_embedded_form_success' => array(
                        0 => 'C:\\wamp\\www\\stockvalue~~\\vendor\\oro\\platform\\src\\Oro\\Bundle\\EmbeddedFormBundle\\Resources\\views\\layouts\\embedded_default\\oro_embedded_form_success\\default.yml',
                    ),
                ),
            ),
            'oro_layout.cache_dir' => 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/layouts',
            'oro_ui.placeholder.provider.class' => 'Oro\\Bundle\\UIBundle\\Placeholder\\PlaceholderProvider',
            'oro_ui.placeholder.resolver.class' => 'Oro\\Component\\Config\\Resolver\\SystemAwareResolver',
            'oro_ui.placeholder.filter.class' => 'Oro\\Bundle\\UIBundle\\Placeholder\\PlaceholderFilter',
            'oro_ui.router.class' => 'Oro\\Bundle\\UIBundle\\Route\\Router',
            'oro_ui.view.listener.class' => 'Oro\\Bundle\\UIBundle\\EventListener\\TemplateListener',
            'oro_ui.format_converter.date_time.jquery_ui.class' => 'Oro\\Bundle\\UIBundle\\Converter\\JqueryUiDateTimeFormatConverter',
            'oro_ui.label_provider.action_button.class' => 'Oro\\Bundle\\UIBundle\\Provider\\ActionButtonLabelProvider',
            'oro_ui.label_provider.action_button_group.class' => 'Oro\\Bundle\\UIBundle\\Provider\\ActionButtonGroupLabelProvider',
            'oro_ui.widget_provider.action_button.class' => 'Oro\\Bundle\\UIBundle\\Provider\\ActionButtonWidgetProvider',
            'oro_ui.widget_provider.view_actions.class' => 'Oro\\Bundle\\UIBundle\\Provider\\GroupingChainWidgetProvider',
            'oro_ui.widget_provider.update_actions.class' => 'Oro\\Bundle\\UIBundle\\Provider\\GroupingChainWidgetProvider',
            'oro_ui.content_provider.manager.class' => 'Oro\\Bundle\\UIBundle\\ContentProvider\\ContentProviderManager',
            'oro_ui.provider.widget_context.class' => 'Oro\\Bundle\\UIBundle\\Provider\\WidgetContextProvider',
            'oro_ui.view.content_provider.listener.class' => 'Oro\\Bundle\\UIBundle\\EventListener\\ContentProviderListener',
            'oro_ui.html_tag_helper.class' => 'Oro\\Bundle\\UIBundle\\Tools\\HtmlTagHelper',
            'oro_ui.formatter.class' => 'Oro\\Bundle\\UIBundle\\Formatter\\FormatterManager',
            'oro_ui.twig.extension.formatter.class' => 'Oro\\Bundle\\UIBundle\\Twig\\FormatExtension',
            'oro_ui.twig.sort_by.class' => 'Oro\\Bundle\\UIBundle\\Twig\\SortByExtension',
            'oro_ui.twig.ceil.class' => 'Oro\\Bundle\\UIBundle\\Twig\\CeilExtension',
            'oro_ui.twig.extension.class' => 'Oro\\Bundle\\UIBundle\\Twig\\UiExtension',
            'oro_ui.twig.mobile.class' => 'Oro\\Bundle\\UIBundle\\Twig\\MobileExtension',
            'oro_ui.twig.widget.class' => 'Oro\\Bundle\\UIBundle\\Twig\\WidgetExtension',
            'oro_ui.twig.date.class' => 'Oro\\Bundle\\UIBundle\\Twig\\DateExtension',
            'oro_ui.twig.regex.class' => 'Oro\\Bundle\\UIBundle\\Twig\\RegexExtension',
            'oro_ui.twig.skype_button.class' => 'Oro\\Bundle\\UIBundle\\Twig\\SkypeButtonExtension',
            'oro_ui.twig.form.class' => 'Oro\\Bundle\\UIBundle\\Twig\\FormExtension',
            'oro_ui.twig.formatter.class' => 'Oro\\Bundle\\UIBundle\\Twig\\FormatterExtension',
            'oro_ui.twig.placeholder.class' => 'Oro\\Bundle\\UIBundle\\Twig\\PlaceholderExtension',
            'oro_ui.twig.tab.class' => 'Oro\\Bundle\\UIBundle\\Twig\\TabExtension',
            'oro_ui.twig.content.class' => 'Oro\\Bundle\\UIBundle\\Twig\\ContentExtension',
            'oro_ui.twig.url.class' => 'Oro\\Bundle\\UIBundle\\Twig\\UrlExtension',
            'oro_ui.twig.js_template.class' => 'Oro\\Bundle\\UIBundle\\Twig\\JsTemplateExtension',
            'oro_ui.twig.merge_recursive.class' => 'Oro\\Bundle\\UIBundle\\Twig\\MergeRecursiveExtension',
            'oro_ui.twig.block.class' => 'Oro\\Bundle\\UIBundle\\Twig\\BlockExtension',
            'oro_ui.twig.html_tag.class' => 'Oro\\Bundle\\UIBundle\\Twig\\HtmlTagExtension',
            'oro_ui.content_provider.current_route.class' => 'Oro\\Bundle\\UIBundle\\ContentProvider\\CurrentRouteContentProvider',
            'oro_ui.content_provider.flash_messages.class' => 'Oro\\Bundle\\UIBundle\\ContentProvider\\FlashMessagesContentProvider',
            'oro_ui.placeholders' => array(
                'placeholders' => array(
                    'scripts_after' => array(
                        'items' => array(
                            0 => 'oro_reminder_subscribe_script',
                            1 => 'navigationItem',
                            2 => 'window_bundle_js',
                            3 => 'maintenance_js',
                            4 => 'sync_js',
                            5 => 'locale_settings',
                        ),
                    ),
                    'header_logo' => array(
                        'items' => array(
                            0 => 'logo',
                        ),
                    ),
                    'user_menu' => array(
                        'items' => array(
                            0 => 'menu_user',
                            1 => 'user_dots_menu',
                            2 => 'help',
                        ),
                    ),
                    'form_buttons' => array(
                        'items' => array(
                            0 => 'add_update_delete',
                        ),
                    ),
                    'head_style' => array(
                        'items' => array(
                            0 => 'assets_css',
                        ),
                    ),
                    'head_script' => array(
                        'items' => array(

                        ),
                    ),
                    'requirejs_config_extend' => array(
                        'items' => array(
                            0 => 'ui_requirejs_config',
                            1 => 'translation_requirejs_config',
                            2 => 'routing_requirejs_config',
                        ),
                    ),
                    'right_panel' => array(
                        'items' => array(
                            0 => 'sidebar',
                            1 => 'navbar',
                        ),
                    ),
                    'left_panel' => array(
                        'items' => array(
                            0 => 'navbar',
                            1 => 'sidebar',
                        ),
                    ),
                    'view_navButtons_after' => array(
                        'items' => array(
                            0 => 'view_buttons',
                        ),
                    ),
                    'update_navButtons_after' => array(
                        'items' => array(
                            0 => 'update_buttons',
                        ),
                    ),
                    'organization_selector' => array(
                        'items' => array(
                            0 => 'organization_selector',
                        ),
                    ),
                    'organization_name' => array(
                        'items' => array(
                            0 => 'organization_name',
                        ),
                    ),
                    'view_content_data_additional_information' => array(
                        'items' => array(
                            0 => 'oro_attachments',
                        ),
                    ),
                    'dots_menu' => array(
                        'items' => array(
                            0 => 'dots_menu_email',
                            1 => 'dots_menu',
                        ),
                    ),
                    'scripts_before' => array(
                        'items' => array(
                            0 => 'template_audit_condition_type_select',
                            1 => 'template_datagrid_gridview',
                            2 => 'template_datagrid_gridview_label',
                            3 => 'template_datagrid_view_name_modal',
                            4 => 'orodashboard_widget_items_templates',
                            5 => 'email_filter_templates',
                            6 => 'filter_templates',
                            7 => 'filter_embedded_templates',
                            8 => 'widget_filter_templates',
                            9 => 'template_datagrid_toolbar',
                            10 => 'filter_container',
                            11 => 'template_datagrid_toolbar_pagination',
                            12 => 'template_datagrid_toolbar_pagination_input',
                            13 => 'template_datagrid_toolbar_page_size',
                            14 => 'template_datagrid_select_all_header_cell',
                            15 => 'template_datagrid_action_header_cell',
                            16 => 'dot_menu_js',
                            17 => 'pinbar_js',
                        ),
                    ),
                    'oro_user_login_form' => array(
                        'items' => array(
                            0 => 'oauth_login',
                        ),
                    ),
                    'oro_integration_force_sync_button' => array(
                        'items' => array(
                            0 => 'force_sync_button',
                        ),
                    ),
                    'view_content_data_activities' => array(
                        'items' => array(
                            0 => 'view_oro_activity_list',
                        ),
                    ),
                    'update_content_data_activities' => array(
                        'items' => array(
                            0 => 'update_oro_activity_list',
                        ),
                    ),
                    'segment_criteria_list' => array(
                        'items' => array(
                            0 => 'activity_condition',
                            1 => 'data_audit_condition',
                        ),
                    ),
                    'oro_reminder_reminder_templates' => array(
                        'items' => array(
                            0 => 'calendar_event_reminder_template',
                            1 => 'default_template',
                        ),
                    ),
                    'change_history_block' => array(
                        'items' => array(
                            0 => 'change_history_link',
                        ),
                    ),
                    'view_before_content_addition' => array(
                        'items' => array(
                            0 => 'entity_pagination_view',
                        ),
                    ),
                    'update_before_content_addition' => array(
                        'items' => array(
                            0 => 'entity_pagination_edit',
                        ),
                    ),
                    'footer_inner' => array(
                        'items' => array(
                            0 => 'have_request',
                        ),
                    ),
                    'navbar' => array(
                        'items' => array(
                            0 => 'shortcuts',
                            1 => 'search',
                        ),
                    ),
                    'view_navButtons_before' => array(
                        'items' => array(
                            0 => 'workflow_buttons',
                        ),
                    ),
                    'page_title_before' => array(
                        'items' => array(
                            0 => 'workflow_steps',
                        ),
                    ),
                    'view_content_data_comments' => array(
                        'items' => array(
                            0 => 'oro_comment_list',
                        ),
                    ),
                    'application_menu' => array(
                        'items' => array(
                            0 => 'application_menu',
                        ),
                    ),
                    'pin_tabs_list' => array(
                        'items' => array(
                            0 => 'pin_tabs_list',
                        ),
                    ),
                    'after_navigation' => array(
                        'items' => array(

                        ),
                    ),
                    'pin_button' => array(
                        'items' => array(
                            0 => 'pin_button',
                        ),
                    ),
                    'content_before' => array(
                        'items' => array(
                            0 => 'oro_reminder_show_script',
                        ),
                    ),
                ),
                'items' => array(
                    'sync_js' => array(
                        'template' => 'OroSyncBundle::sync_js.html.twig',
                        'applicable' => '@oro_security.security_facade->hasLoggedUser()',
                    ),
                    'maintenance_js' => array(
                        'template' => 'OroSyncBundle::maintenance_js.html.twig',
                    ),
                    'logo' => array(
                        'template' => 'OroUIBundle:Default:logo.html.twig',
                    ),
                    'help' => array(
                        'template' => 'OroUIBundle:Default:help.html.twig',
                    ),
                    'user_dots_menu' => array(
                        'template' => 'OroUIBundle:Default:user_dots_menu.html.twig',
                    ),
                    'add_update_delete' => array(
                        'template' => 'OroUIBundle:Form:buttons.html.twig',
                    ),
                    'ui_requirejs_config' => array(
                        'template' => 'OroUIBundle::requirejs.config.js.twig',
                    ),
                    'navbar' => array(
                        'template' => 'OroUIBundle:Default/navbar:sided.html.twig',
                    ),
                    'view_buttons' => array(
                        'template' => 'OroUIBundle::buttons.html.twig',
                        'applicable' => '@oro_ui.widget_provider.view_actions->supports($entity$)',
                        'data' => '@oro_ui.widget_provider.view_actions->getWidgets($entity$)',
                    ),
                    'update_buttons' => array(
                        'template' => 'OroUIBundle::buttons.html.twig',
                        'applicable' => '@oro_ui.widget_provider.update_actions->supports($entity$)',
                        'data' => '@oro_ui.widget_provider.update_actions->getWidgets($entity$)',
                    ),
                    'organization_selector' => array(
                        'template' => 'OroSecurityBundle:Organization:selector.html.twig',
                        'applicable' => '@oro_user.placeholder.filter->isUserApplicable()',
                    ),
                    'organization_name' => array(
                        'template' => 'OroSecurityBundle:Organization:current_name.html.twig',
                    ),
                    'oro_add_attachment_button' => array(
                        'template' => 'OroAttachmentBundle:Attachment:addButton.html.twig',
                        'applicable' => '@oro_attachment.placeholder.filter->isAttachmentAssociationEnabled($entity$)',
                        'acl' => array(
                            0 => 'oro_attachment_create',
                            1 => 'oro_attachment_view',
                        ),
                    ),
                    'oro_add_attachment_link' => array(
                        'template' => 'OroAttachmentBundle:Attachment:addLink.html.twig',
                        'applicable' => '@oro_attachment.placeholder.filter->isAttachmentAssociationEnabled($entity$)',
                        'acl' => array(
                            0 => 'oro_attachment_create',
                            1 => 'oro_attachment_view',
                        ),
                    ),
                    'oro_attachments' => array(
                        'template' => 'OroAttachmentBundle:Attachment:attachments.html.twig',
                        'applicable' => '@oro_attachment.placeholder.filter->isAttachmentAssociationEnabled($entity$)',
                        'acl' => 'oro_attachment_view',
                    ),
                    'oro_send_email_button' => array(
                        'template' => 'OroEmailBundle:Email:activityButton.html.twig',
                        'acl' => 'oro_email_email_create',
                    ),
                    'oro_send_email_link' => array(
                        'template' => 'OroEmailBundle:Email:activityLink.html.twig',
                        'acl' => 'oro_email_email_create',
                    ),
                    'dots_menu_email' => array(
                        'action' => 'OroEmailBundle:Email:placeholderLast',
                        'applicable' => '@oro_user.placeholder.filter->isUserApplicable()',
                    ),
                    'email_filter_templates' => array(
                        'template' => 'OroEmailBundle:Js:default_templates.js.twig',
                    ),
                    'menu_user' => array(
                        'template' => 'OroUserBundle:Menu:menuProfile.html.twig',
                        'applicable' => '@oro_user.placeholder.filter->isUserApplicable()',
                    ),
                    'oro_user_password_change_button' => array(
                        'template' => 'OroUserBundle:User:passwordChangeButton.html.twig',
                        'applicable' => '@oro_user.placeholder.filter->isPasswordManageEnabled($entity$)',
                        'acl' => 'password_management',
                    ),
                    'oro_user_password_change_link' => array(
                        'template' => 'OroUserBundle:User:passwordChangeLink.html.twig',
                        'applicable' => '@oro_user.placeholder.filter->isPasswordManageEnabled($entity$)',
                        'acl' => 'password_management',
                    ),
                    'oro_user_password_reset_button' => array(
                        'template' => 'OroUserBundle:User:passwordResetButton.html.twig',
                        'applicable' => '@oro_user.placeholder.filter->isPasswordManageEnabled($entity$)',
                        'acl' => 'password_management',
                    ),
                    'oro_user_password_reset_link' => array(
                        'template' => 'OroUserBundle:User:passwordResetLink.html.twig',
                        'applicable' => '@oro_user.placeholder.filter->isPasswordManageEnabled($entity$)',
                        'acl' => 'password_management',
                    ),
                    'oauth_login' => array(
                        'template' => 'OroSSOBundle:Security:oauthLogin.html.twig',
                    ),
                    'force_sync_button' => array(
                        'template' => 'OroIntegrationBundle:Integration:forceSyncButton.html.twig',
                        'applicable' => '@oro_integration.manager.types_registry->supportsForceSync($entity$)',
                    ),
                    'oro_activities' => array(
                        'action' => 'OroActivityBundle:Activity:activities',
                    ),
                    'view_oro_activity_list' => array(
                        'applicable' => '@oro_activity_list.placeholder.filter->isApplicable($entity$, Oro\\Bundle\\ActivityBundle\\EntityConfig\\ActivityScope::VIEW_PAGE)',
                        'template' => 'OroActivityListBundle:ActivityList:activities.html.twig',
                    ),
                    'update_oro_activity_list' => array(
                        'applicable' => '@oro_activity_list.placeholder.filter->isApplicable($entity$, Oro\\Bundle\\ActivityBundle\\EntityConfig\\ActivityScope::UPDATE_PAGE)',
                        'template' => 'OroActivityListBundle:ActivityList:activities.html.twig',
                    ),
                    'activity_condition' => array(
                        'action' => 'OroActivityListBundle:Segment:activityCondition',
                    ),
                    'assets_css' => array(
                        'template' => 'OroAsseticBundle:Assets:oro_css.html.twig',
                    ),
                    'calendar_event_reminder_template' => array(
                        'template' => 'OroCalendarBundle:CalendarEvent:reminderTemplate.html.twig',
                    ),
                    'oro_add_calendar_event_button' => array(
                        'template' => 'OroCalendarBundle:CalendarEvent:activityButton.html.twig',
                        'acl' => 'oro_calendar_event_create',
                    ),
                    'oro_assign_calendar_event_button' => array(
                        'template' => 'OroCalendarBundle:CalendarEvent:assignCalendarEventButton.html.twig',
                        'applicable' => '@oro_ui.placeholder.filter->isInstanceOf($entity$, Oro\\Bundle\\UserBundle\\Entity\\User)',
                        'acl' => 'oro_calendar_event_create',
                    ),
                    'oro_add_calendar_event_link' => array(
                        'template' => 'OroCalendarBundle:CalendarEvent:activityLink.html.twig',
                        'acl' => 'oro_calendar_event_create',
                    ),
                    'oro_assign_calendar_event_link' => array(
                        'template' => 'OroCalendarBundle:CalendarEvent:assignCalendarEventLink.html.twig',
                        'applicable' => '@oro_ui.placeholder.filter->isInstanceOf($entity$, Oro\\Bundle\\UserBundle\\Entity\\User)',
                        'acl' => 'oro_calendar_event_create',
                    ),
                    'change_history_link' => array(
                        'template' => 'OroDataAuditBundle::change_history_link.html.twig',
                        'applicable' => '@oro_dataaudit.placeholder.filter->isEntityAuditable($entity$, $audit_show_change_history$)',
                        'acl' => 'oro_dataaudit_history',
                    ),
                    'template_audit_condition_type_select' => array(
                        'template' => 'OroDataAuditBundle:js:audit-condition-type-select.html.twig',
                    ),
                    'data_audit_condition' => array(
                        'template' => 'OroDataAuditBundle:Segment:data_audit_condition.html.twig',
                    ),
                    'template_datagrid_toolbar' => array(
                        'template' => 'OroDataGridBundle:js:toolbar.html.twig',
                    ),
                    'template_datagrid_toolbar_pagination' => array(
                        'template' => 'OroDataGridBundle:js:pagination.html.twig',
                    ),
                    'template_datagrid_toolbar_pagination_input' => array(
                        'template' => 'OroDataGridBundle:js:pagination-input.html.twig',
                    ),
                    'template_datagrid_toolbar_page_size' => array(
                        'template' => 'OroDataGridBundle:js:page-size.html.twig',
                    ),
                    'template_datagrid_select_all_header_cell' => array(
                        'template' => 'OroDataGridBundle:js:select-all-header-cell.html.twig',
                    ),
                    'template_datagrid_action_header_cell' => array(
                        'template' => 'OroDataGridBundle:js:action-header-cell.html.twig',
                    ),
                    'template_datagrid_gridview' => array(
                        'template' => 'OroDataGridBundle:js:grid-view.html.twig',
                    ),
                    'template_datagrid_gridview_label' => array(
                        'template' => 'OroDataGridBundle:js:grid-view-label.html.twig',
                    ),
                    'template_datagrid_view_name_modal' => array(
                        'template' => 'OroDataGridBundle:js:view-name-modal.html.twig',
                    ),
                    'entity_pagination_view' => array(
                        'template' => 'OroEntityPaginationBundle:Placeholder:viewPagination.html.twig',
                    ),
                    'entity_pagination_edit' => array(
                        'template' => 'OroEntityPaginationBundle:Placeholder:editPagination.html.twig',
                    ),
                    'filter_templates' => array(
                        'template' => 'OroFilterBundle:Js:default_templates.js.twig',
                    ),
                    'filter_embedded_templates' => array(
                        'template' => 'OroFilterBundle:Js:embedded_templates.js.twig',
                    ),
                    'filter_container' => array(
                        'template' => 'OroFilterBundle:Js:container.js.twig',
                    ),
                    'locale_settings' => array(
                        'template' => 'OroLocaleBundle::locale_settings.html.twig',
                    ),
                    'oro_add_note_button' => array(
                        'template' => 'OroNoteBundle:Note:addButton.html.twig',
                        'applicable' => '@oro_note.placeholder.filter->isNoteAssociationEnabled($entity$)',
                        'acl' => array(
                            0 => 'oro_note_create',
                            1 => 'oro_note_view',
                        ),
                    ),
                    'oro_add_note_link' => array(
                        'template' => 'OroNoteBundle:Note:addLink.html.twig',
                        'applicable' => '@oro_note.placeholder.filter->isNoteAssociationEnabled($entity$)',
                        'acl' => array(
                            0 => 'oro_note_create',
                            1 => 'oro_note_view',
                        ),
                    ),
                    'oro_notes' => array(
                        'template' => 'OroNoteBundle:Note:notes.html.twig',
                        'applicable' => '@oro_note.placeholder.filter->isNoteAssociationEnabled($entity$)',
                        'acl' => 'oro_note_view',
                    ),
                    'have_request' => array(
                        'template' => 'OroPlatformBundle::have_request.html.twig',
                    ),
                    'search' => array(
                        'action' => 'OroSearchBundle:Search:searchBar',
                        'applicable' => '@oro_user.placeholder.filter->isUserApplicable()',
                    ),
                    'sidebar' => array(
                        'template' => 'OroSidebarBundle::sidebar.html.twig',
                        'applicable' => '@oro_user.placeholder.filter->isUserApplicable()',
                    ),
                    'translation_requirejs_config' => array(
                        'template' => 'OroTranslationBundle::requirejs.config.js.twig',
                    ),
                    'window_bundle_js' => array(
                        'template' => 'OroWindowsBundle:Include:javascript.html.twig',
                    ),
                    'workflow_buttons' => array(
                        'template' => 'OroWorkflowBundle:Widget:buttons.html.twig',
                    ),
                    'workflow_steps' => array(
                        'template' => 'OroWorkflowBundle:Widget:steps.html.twig',
                    ),
                    'oro_comment_list' => array(
                        'applicable' => '@oro_comment.placeholder.filter->isApplicable($entity$)',
                        'template' => 'OroCommentBundle:Comment:comments.html.twig',
                    ),
                    'widget_filter_templates' => array(
                        'template' => 'OroDashboardBundle:Js:default_templates.js.twig',
                    ),
                    'orodashboard_widget_items_templates' => array(
                        'template' => 'OroDashboardBundle:Js:items.html.twig',
                    ),
                    'dot_menu_js' => array(
                        'template' => 'OroNavigationBundle:Js:dot.menu.js.twig',
                    ),
                    'pinbar_js' => array(
                        'template' => 'OroNavigationBundle:Js:pinbar.js.twig',
                    ),
                    'routing_requirejs_config' => array(
                        'template' => 'OroNavigationBundle:Js:requirejs.config.js.twig',
                    ),
                    'shortcuts' => array(
                        'template' => 'OroNavigationBundle:Shortcut:shortcuts.html.twig',
                        'applicable' => '@oro_user.placeholder.filter->isUserApplicable()',
                    ),
                    'application_menu' => array(
                        'template' => 'OroNavigationBundle:ApplicationMenu:applicationMenu.html.twig',
                        'applicable' => '@oro_user.placeholder.filter->isUserApplicable()',
                    ),
                    'dots_menu' => array(
                        'template' => 'OroNavigationBundle:ApplicationMenu:dotsMenu.html.twig',
                        'applicable' => '@oro_user.placeholder.filter->isUserApplicable()',
                    ),
                    'pin_tabs_list' => array(
                        'template' => 'OroNavigationBundle:Menu:pin_tabs_list.html.twig',
                        'applicable' => '@oro_user.placeholder.filter->isUserApplicable()',
                    ),
                    'pin_button' => array(
                        'template' => 'OroNavigationBundle:ApplicationMenu:pinButton.html.twig',
                        'applicable' => '@oro_user.placeholder.filter->isUserApplicable()',
                    ),
                    'oro_reminder_subscribe_script' => array(
                        'template' => 'OroReminderBundle:Reminder:subscribeScript.html.twig',
                    ),
                    'oro_reminder_show_script' => array(
                        'template' => 'OroReminderBundle:Reminder:showScript.html.twig',
                    ),
                    'default_template' => array(
                        'template' => 'OroReminderBundle:Reminder:reminderDefault.html.twig',
                    ),
                ),
            ),
            'oro_organization.business_unit.entity.class' => 'Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit',
            'oro_organization.business_unit.manager.class' => 'Oro\\Bundle\\OrganizationBundle\\Entity\\Manager\\BusinessUnitManager',
            'oro_organization.organization.manager.class' => 'Oro\\Bundle\\OrganizationBundle\\Entity\\Manager\\OrganizationManager',
            'oro_organization.organization.entity.class' => 'Oro\\Bundle\\OrganizationBundle\\Entity\\Organization',
            'oro_organization.business_unit.manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_organization.organization.manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_organization.twig.get_owner.class' => 'Oro\\Bundle\\OrganizationBundle\\Twig\\OwnerTypeExtension',
            'oro_organization.twig.business_units.class' => 'Oro\\Bundle\\OrganizationBundle\\Twig\\BusinessUnitExtension',
            'oro_organization.form.listener.class' => 'Oro\\Bundle\\OrganizationBundle\\Event\\FormListener',
            'oro_organization.listener.config_subscriber.class' => 'Oro\\Bundle\\OrganizationBundle\\Event\\ConfigSubscriber',
            'oro_organization.entity_ownership.listener.class' => 'Oro\\Bundle\\OrganizationBundle\\Event\\RecordOwnerDataListener',
            'oro_organization.business_unit.listener.class' => 'Oro\\Bundle\\OrganizationBundle\\Event\\BusinessUnitListener',
            'oro_organization.import_strategy.listener.class' => 'Oro\\Bundle\\OrganizationBundle\\Event\\ImportStrategyListener',
            'oro_organization.provider.business_units.class' => 'Oro\\Bundle\\OrganizationBundle\\Provider\\BusinessUnitGridService',
            'oro_organization.owner_deletion_manager.class' => 'Oro\\Bundle\\OrganizationBundle\\Ownership\\OwnerDeletionManager',
            'oro_organization.owner_assignment_checker.default.class' => 'Oro\\Bundle\\OrganizationBundle\\Ownership\\OwnerAssignmentChecker',
            'oro_organization.autocomplete.organization.search_handler' => 'Oro\\Bundle\\OrganizationBundle\\Autocomplete\\OrganizationSearchHandler',
            'oro_organization.entity_config_dumper.extension.class' => 'Oro\\Bundle\\OrganizationBundle\\Tools\\OwnershipEntityConfigDumperExtension',
            'oro_organization.event.business_unit_grid_listener.class' => 'Oro\\Bundle\\OrganizationBundle\\Event\\BusinessUnitGridListener',
            'oro_organization.autocomplete.organization_search_handler.class' => 'Oro\\Bundle\\OrganizationBundle\\Autocomplete\\OrganizationSearchHandler',
            'oro_organization.provider.phone.business_unit.class' => 'Oro\\Bundle\\OrganizationBundle\\Provider\\BusinessUnitPhoneProvider',
            'oro_organization.orm.validator.oranization_unique.class' => 'Oro\\Bundle\\OrganizationBundle\\Validator\\Constraints\\OrganizationUniqueEntityValidator',
            'oro_organization.form.type.business_unit.class' => 'Oro\\Bundle\\OrganizationBundle\\Form\\Type\\BusinessUnitType',
            'oro_organization.form.handler.business_unit.class' => 'Oro\\Bundle\\OrganizationBundle\\Form\\Handler\\BusinessUnitHandler',
            'oro_organization.form.type.business_unit_tree_type.class' => 'Oro\\Bundle\\OrganizationBundle\\Form\\Type\\BusinessUnitTreeType',
            'oro_organization.form.type.business_unit_tree_select_type.class' => 'Oro\\Bundle\\OrganizationBundle\\Form\\Type\\BusinessUnitTreeSelectType',
            'oro_organization.form.type.business_unit.api.class' => 'Oro\\Bundle\\OrganizationBundle\\Form\\Type\\BusinessUnitApiType',
            'oro_organization.form.type.business_unit_select.class' => 'Oro\\Bundle\\OrganizationBundle\\Form\\Type\\BusinessUnitSelectType',
            'oro_organization.form.type.organization.class' => 'Oro\\Bundle\\OrganizationBundle\\Form\\Type\\OrganizationType',
            'oro_organization.form.handler.organization.class' => 'Oro\\Bundle\\OrganizationBundle\\Form\\Handler\\OrganizationHandler',
            'oro_organization.form.type.organization_select.class' => 'Oro\\Bundle\\OrganizationBundle\\Form\\Type\\OrganizationSelectType',
            'oro_organization.form.type.organizations_select.class' => 'Oro\\Bundle\\OrganizationBundle\\Form\\Type\\OrganizationsSelectType',
            'oro_organization.form.type.ownership_type.class' => 'Oro\\Bundle\\OrganizationBundle\\Form\\Type\\OwnershipType',
            'oro_organization.form.extension.owner.class' => 'Oro\\Bundle\\OrganizationBundle\\Form\\Extension\\OwnerFormExtension',
            'oro_organization.form.extension.organization.class' => 'Oro\\Bundle\\OrganizationBundle\\Form\\Extension\\OrganizationFormExtension',
            'oro_organization.importexport.template_fixture.business_unit.class' => 'Oro\\Bundle\\OrganizationBundle\\ImportExport\\TemplateFixture\\BusinessUnitFixture',
            'oro_organization.importexport.template_fixture.organization.class' => 'Oro\\Bundle\\OrganizationBundle\\ImportExport\\TemplateFixture\\OrganizationFixture',
            'oro_security.entity.owners' => array(
                'organization' => 'OroOrganizationBundle:Organization',
                'business_unit' => 'OroOrganizationBundle:BusinessUnit',
                'user' => 'OroUserBundle:User',
            ),
            'oro_security.owner.entity_owner_accessor.class' => 'Oro\\Bundle\\SecurityBundle\\Owner\\EntityOwnerAccessor',
            'oro_security.owner.metadata_provider.chain.class' => 'Oro\\Bundle\\SecurityBundle\\Owner\\Metadata\\ChainMetadataProvider',
            'oro_security.owner.ownership_metadata_provider.class' => 'Oro\\Bundle\\SecurityBundle\\Owner\\Metadata\\OwnershipMetadataProvider',
            'oro_security.owner.ownership_config_subscriber.class' => 'Oro\\Bundle\\SecurityBundle\\EventListener\\OwnershipConfigSubscriber',
            'oro_security.owner.ownership_metadata_provider.cache.warmer.class' => 'Oro\\Bundle\\SecurityBundle\\Cache\\OwnershipMetadataCacheWarmer',
            'oro_security.owner.ownership_metadata_provider.cache.clearer.class' => 'Oro\\Bundle\\SecurityBundle\\Cache\\OwnershipMetadataCacheClearer',
            'oro_security.owner.ownership_decision_maker.chain.class' => 'Oro\\Bundle\\SecurityBundle\\Owner\\ChainEntityOwnershipDecisionMaker',
            'oro_security.security_facade.class' => 'Oro\\Bundle\\SecurityBundle\\SecurityFacade',
            'oro_security.acl.manager.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Persistence\\AclManager',
            'oro_security.acl.sid_manager.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Persistence\\AclSidManager',
            'oro_security.acl.ace_provider.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Persistence\\AceManipulationHelper',
            'oro_security.acl.privilege_repository.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Persistence\\AclPrivilegeRepository',
            'oro_security.acl.extension_selector.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Extension\\AclExtensionSelector',
            'oro_security.acl.extension.entity.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Extension\\EntityAclExtension',
            'oro_security.acl.extension.action.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Extension\\ActionAclExtension',
            'oro_security.acl.voter.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Voter\\AclVoter',
            'oro_security.acl.provider.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Domain\\RootBasedAclProvider',
            'oro_security.acl.dbal.provider.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Dbal\\MutableAclProvider',
            'oro_security.acl.permission_granting_strategy.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Domain\\PermissionGrantingStrategy',
            'oro_security.acl.permission_map.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Permission\\PermissionMap',
            'oro_security.acl.object_identity_factory.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Domain\\ObjectIdentityFactory',
            'oro_security.acl.object_identity_retrieval_strategy.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Domain\\ObjectIdentityRetrievalStrategy',
            'oro_security.acl.object_id_accessor.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Domain\\ObjectIdAccessor',
            'oro_security.acl.group_provider.chain.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Group\\ChainAclGroupProvider',
            'oro_security.owner.tree.class' => 'Oro\\Bundle\\SecurityBundle\\Owner\\OwnerTree',
            'oro_security.owner.decision_maker.class' => 'Oro\\Bundle\\SecurityBundle\\Owner\\EntityOwnershipDecisionMaker',
            'oro_security.owner.decision_maker.abstract.class' => 'Oro\\Bundle\\SecurityBundle\\Owner\\AbstractEntityOwnershipDecisionMaker',
            'oro_security.type.oro_acl_access_level_selector.class' => 'Oro\\Bundle\\SecurityBundle\\Form\\Type\\AclAccessLevelSelectorType',
            'oro_security.type.oro_acl_label.class' => 'Oro\\Bundle\\SecurityBundle\\Form\\Type\\ObjectLabelType',
            'oro_security.type.oro_acl_collection.class' => 'Oro\\Bundle\\SecurityBundle\\Form\\Type\\PrivilegeCollectionType',
            'oro_security.type.oro_acl_privilege.class' => 'Oro\\Bundle\\SecurityBundle\\Form\\Type\\AclPrivilegeType',
            'oro_security.entity_security_metadata_provider.class' => 'Oro\\Bundle\\SecurityBundle\\Metadata\\EntitySecurityMetadataProvider',
            'oro_security.action_metadata_provider.class' => 'Oro\\Bundle\\SecurityBundle\\Metadata\\ActionMetadataProvider',
            'oro_security.acl.annotation_provider.class' => 'Oro\\Bundle\\SecurityBundle\\Metadata\\AclAnnotationProvider',
            'oro_security.acl.annotation_loader.class' => 'Oro\\Bundle\\SecurityBundle\\Annotation\\Loader\\AclAnnotationLoader',
            'oro_security.acl.config_loader.class' => 'Oro\\Bundle\\SecurityBundle\\Annotation\\Loader\\AclConfigLoader',
            'oro_security.entity_security_config_subscriber.class' => 'Oro\\Bundle\\SecurityBundle\\EventListener\\EntitySecurityMetadataConfigSubscriber',
            'oro_security.acl.annotation_provider.cache.warmer.class' => 'Oro\\Bundle\\SecurityBundle\\Cache\\AclAnnotationCacheWarmer',
            'oro_security.acl.annotation_provider.cache.clearer.class' => 'Oro\\Bundle\\SecurityBundle\\Cache\\AclAnnotationCacheClearer',
            'oro_security.action_metadata_provider.cache.warmer.class' => 'Oro\\Bundle\\SecurityBundle\\Cache\\ActionMetadataCacheWarmer',
            'oro_security.action_metadata_provider.cache.clearer.class' => 'Oro\\Bundle\\SecurityBundle\\Cache\\ActionMetadataCacheClearer',
            'oro_security.entity_security_metadata_provider.cache.warmer.class' => 'Oro\\Bundle\\SecurityBundle\\Cache\\EntitySecurityMetadataCacheWarmer',
            'oro_security.entity_security_metadata_provider.cache.clearer.class' => 'Oro\\Bundle\\SecurityBundle\\Cache\\EntitySecurityMetadataCacheClearer',
            'oro_security.listener.controller.class' => 'Oro\\Bundle\\SecurityBundle\\EventListener\\ControllerListener',
            'oro_security.twig.security_extension' => 'Oro\\Bundle\\SecurityBundle\\Twig\\OroSecurityExtension',
            'oro_security.twig.security_organization_extension' => 'Oro\\Bundle\\SecurityBundle\\Twig\\OroSecurityOrganizationExtension',
            'oro_security.encoder.mcrypt.class' => 'Oro\\Bundle\\SecurityBundle\\Encoder\\Mcrypt',
            'oro_security.acl_helper.class' => 'Oro\\Bundle\\SecurityBundle\\ORM\\Walker\\AclHelper',
            'oro_security.search.acl_helper.class' => 'Oro\\Bundle\\SecurityBundle\\Search\\AclHelper',
            'oro_security.orm.ownership_sql_walker_builder.class' => 'Oro\\Bundle\\SecurityBundle\\ORM\\Walker\\OwnershipConditionDataBuilder',
            'oro_security.ownership_tree_provider.class' => 'Oro\\Bundle\\SecurityBundle\\Owner\\OwnerTreeProvider',
            'oro_security.abstract_ownership_tree_provider.class' => 'Oro\\Bundle\\SecurityBundle\\Owner\\AbstractOwnerTreeProvider',
            'oro_security.ownership_tree_provider.chain.class' => 'Oro\\Bundle\\SecurityBundle\\Owner\\ChainOwnerTreeProvider',
            'oro_security.ownership_tree.cache.warmer.class' => 'Oro\\Bundle\\SecurityBundle\\Cache\\OwnerTreeCacheWarmer',
            'oro_security.ownership_tree.cache.clearer.class' => 'Oro\\Bundle\\SecurityBundle\\Cache\\OwnerTreeCacheCleaner',
            'oro_security.ownership_tree_subscriber.class' => 'Oro\\Bundle\\SecurityBundle\\EventListener\\OwnerTreeListener',
            'oro-security.authentication.listener.basic.class' => 'Oro\\Bundle\\SecurityBundle\\Http\\Firewall\\OrganizationBasicAuthenticationListener',
            'oro_security.authentication.provider.username_password_organization.class' => 'Oro\\Bundle\\SecurityBundle\\Authentication\\Provider\\UsernamePasswordOrganizationAuthenticationProvider',
            'oro_security.authentication.provider.organization_rememberme.class' => 'Oro\\Bundle\\SecurityBundle\\Authentication\\Provider\\OrganizationRememberMeAuthenticationProvider',
            'oro_security.listener.context_listener.class' => 'Oro\\Bundle\\SecurityBundle\\Http\\Firewall\\ContextListener',
            'oro_security.listener.refresh_context_listener.class' => 'Oro\\Bundle\\SecurityBundle\\EventListener\\RefreshContextListener',
            'oro_security.listener.api_listener.class' => 'Oro\\Bundle\\SecurityBundle\\EventListener\\ApiEventListener',
            'oro_security.listener.search_listener.class' => 'Oro\\Bundle\\SecurityBundle\\EventListener\\SearchListener',
            'oro_security.listener.console_context_listener.class' => 'Oro\\Bundle\\SecurityBundle\\EventListener\\ConsoleContextListener',
            'oro_security.form.extension.aclprotected_type.class' => 'Oro\\Bundle\\SecurityBundle\\Form\\Extension\\AclProtectedTypeExtension',
            'oro_attachment.manager.attachment_manager.class' => 'Oro\\Bundle\\AttachmentBundle\\Manager\\AttachmentManager',
            'oro_attachment.listener.file_listener.class' => 'Oro\\Bundle\\AttachmentBundle\\EventListener\\FileListener',
            'oro_attachment.entity.class' => 'Oro\\Bundle\\AttachmentBundle\\Entity\\Attachment',
            'oro_attachment.file.entity.class' => 'Oro\\Bundle\\AttachmentBundle\\Entity\\File',
            'oro_attachment.manager.api.class' => 'Oro\\Bundle\\AttachmentBundle\\Entity\\Manager\\AttachmentApiEntityManager',
            'oro_attachment.manager.file.api.class' => 'Oro\\Bundle\\AttachmentBundle\\Entity\\Manager\\FileApiEntityManager',
            'oro_attachment.twig.file_extension.class' => 'Oro\\Bundle\\AttachmentBundle\\Twig\\FileExtension',
            'oro_attachment.entity_config_dumper.extension.file.class' => 'Oro\\Bundle\\AttachmentBundle\\Tools\\FileEntityConfigDumperExtension',
            'oro_attachment.entity_config_dumper.extension.class' => 'Oro\\Bundle\\AttachmentBundle\\Tools\\AttachmentConfigDumperExtension',
            'oro_attachment.entity_generator.extension.class' => 'Oro\\Bundle\\AttachmentBundle\\Tools\\AttachmentEntityGeneratorExtension',
            'oro_attachment.migration.extension.attachment.class' => 'Oro\\Bundle\\AttachmentBundle\\Migration\\Extension\\AttachmentExtension',
            'oro_attachment.serializer.file_normalizer.class' => 'Oro\\Bundle\\AttachmentBundle\\ImportExport\\FileNormalizer',
            'oro_attachment.placeholder.filter.class' => 'Oro\\Bundle\\AttachmentBundle\\Placeholder\\PlaceholderFilter',
            'oro_attachment.attachment_grid_listener' => 'Oro\\Bundle\\AttachmentBundle\\EventListener\\AttachmentGridListener',
            'oro_attachment.datagrid.action.dialog.class' => 'Oro\\Bundle\\AttachmentBundle\\DataGrid\\Action\\DialogAction',
            'oro_attachment.provider.attachment.class' => 'Oro\\Bundle\\AttachmentBundle\\Provider\\AttachmentProvider',
            'oro_attachment.config.class' => 'Oro\\Bundle\\AttachmentBundle\\EntityConfig\\AttachmentConfig',
            'oro_attachment.formatter.image_encoded.class' => 'Oro\\Bundle\\AttachmentBundle\\Formatter\\ImageEncodedFormatter',
            'oro_attachment.formatter.image_link.class' => 'Oro\\Bundle\\AttachmentBundle\\Formatter\\ImageLinkFormatter',
            'oro_attachment.formatter.image_src.class' => 'Oro\\Bundle\\AttachmentBundle\\Formatter\\ImageSrcFormatter',
            'oro_attachment.form.type.file_config.class' => 'Oro\\Bundle\\AttachmentBundle\\Form\\Type\\FileConfigType',
            'oro_attachment.form.type.file.class' => 'Oro\\Bundle\\AttachmentBundle\\Form\\Type\\FileType',
            'oro_attachment.form.type.image.class' => 'Oro\\Bundle\\AttachmentBundle\\Form\\Type\\ImageType',
            'oro_attachment.form.file_subscriber.class' => 'Oro\\Bundle\\AttachmentBundle\\Form\\EventSubscriber\\FileSubscriber',
            'oro_attachment.validator.file_config_validator.class' => 'Oro\\Bundle\\AttachmentBundle\\Validator\\ConfigFileValidator',
            'oro_attachment.form.handler.attachment.class' => 'Oro\\Bundle\\AttachmentBundle\\Form\\Handler\\AttachmentHandler',
            'oro_attachment.files' => array(
                'default' => 'icon-file-alt',
                'doc' => 'icon-file-alt',
                'docx' => 'icon-file-alt',
                'xls' => 'icon-file-alt',
                'xlsx' => 'icon-file-alt',
            ),
            'oro_email.email_sync_exclusions' => array(

            ),
            'oro_email.flash_notification.max_emails_display' => 4,
            'oro_email.email.entity.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\Email',
            'oro_email.email_folder.entity.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\EmailFolder',
            'oro_email.email_origin.entity.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\EmailOrigin',
            'oro_email.email_user.entity.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser',
            'oro_email.email_folder.model.class' => 'Oro\\Bundle\\EmailBundle\\Model\\FolderType',
            'oro_email.email.cache.manager.class' => 'Oro\\Bundle\\EmailBundle\\Cache\\EmailCacheManager',
            'oro_email.email_holder_helper.class' => 'Oro\\Bundle\\EmailBundle\\Tools\\EmailHolderHelper',
            'oro_email.email.address.helper.class' => 'Oro\\Bundle\\EmailBundle\\Tools\\EmailAddressHelper',
            'oro_email.email.address.manager.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\Manager\\EmailAddressManager',
            'oro_email.email.owner.provider.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\Provider\\EmailOwnerProvider',
            'oro_email.email.owner.provider.storage.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\Provider\\EmailOwnerProviderStorage',
            'oro_email.email.owner.manager.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\Manager\\EmailOwnerManager',
            'oro_email.email.model.builder.helper.class' => 'Oro\\Bundle\\EmailBundle\\Builder\\Helper\\EmailModelBuilderHelper',
            'oro_email.email.entity.builder.class' => 'Oro\\Bundle\\EmailBundle\\Builder\\EmailEntityBuilder',
            'oro_email.email.model.builder.class' => 'Oro\\Bundle\\EmailBundle\\Builder\\EmailModelBuilder',
            'oro_email.email.entity.batch_processor.class' => 'Oro\\Bundle\\EmailBundle\\Builder\\EmailEntityBatchProcessor',
            'oro_email.email_body_loader_selector.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\EmailBodyLoaderSelector',
            'oro_email.email_flag_manager_loader_selector.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\EmailFlagManagerLoaderSelector',
            'oro_email.listener.entity_listener.class' => 'Oro\\Bundle\\EmailBundle\\EventListener\\EntityListener',
            'oro_email.listener.auto_response_listener.class' => 'Oro\\Bundle\\EmailBundle\\EventListener\\AutoResponseListener',
            'oro_email.manager.autoresponserule.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_email.autoresponserule_manager.class' => 'Oro\\Bundle\\EmailBundle\\Manager\\AutoResponseManager',
            'oro_email.manager.email.api.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\Manager\\EmailApiEntityManager',
            'oro_email.manager.email_origin.api.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\Manager\\EmailOriginApiEntityManager',
            'oro_email.manager.email_activity_search.api.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\Manager\\EmailActivitySearchApiEntityManager',
            'oro_email.entity.cache.warmer.class' => 'Oro\\Bundle\\EmailBundle\\Cache\\EntityCacheWarmer',
            'oro_email.entity.cache.clearer.class' => 'Oro\\Bundle\\EmailBundle\\Cache\\EntityCacheClearer',
            'oro_email.direct_mailer.class' => 'Oro\\Bundle\\EmailBundle\\Mailer\\DirectMailer',
            'oro_email.mailer.processor.class' => 'Oro\\Bundle\\EmailBundle\\Mailer\\Processor',
            'oro_email.email.activity.manager.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\Manager\\EmailActivityManager',
            'oro_email.email_synchronization_manager.class' => 'Oro\\Bundle\\EmailBundle\\Sync\\EmailSynchronizationManager',
            'oro_email.known_email_address_checker_factory.class' => 'Oro\\Bundle\\EmailBundle\\Sync\\KnownEmailAddressCheckerFactory',
            'oro_email.twig.extension.email.class' => 'Oro\\Bundle\\EmailBundle\\Twig\\EmailExtension',
            'oro_email.email.manager.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\Manager\\EmailManager',
            'oro_email.email.flag.manager.class' => 'Oro\\Bundle\\EmailBundle\\Manager\\EmailFlagManager',
            'oro_email.email.thread.manager.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\Manager\\EmailThreadManager',
            'oro_email.email.thread.provider.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\Provider\\EmailThreadProvider',
            'oro_email.email_attachment_transformer.class' => 'Oro\\Bundle\\EmailBundle\\Tools\\EmailAttachmentTransformer',
            'oro_email.email_websocket.processor.class' => 'Oro\\Bundle\\EmailBundle\\Model\\WebSocket\\WebSocketSendProcessor',
            'oro_email.emailtemplate.entity.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\EmailTemplate',
            'oro_email.autoresponserule.entity.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\AutoResponseRule',
            'oro_email.manager.emailtemplate.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_email.listener.config_subscriber.class' => 'Oro\\Bundle\\EmailBundle\\EventListener\\ConfigSubscriber',
            'oro_email.event_listener.email_user_listener.class' => 'Oro\\Bundle\\EmailBundle\\EventListener\\EmailUserListener',
            'oro_email.emailtemplate.variable_provider.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\VariablesProvider',
            'oro_email.emailtemplate.variable_provider.entity.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\EntityVariablesProvider',
            'oro_email.emailtemplate.variable_provider.system.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\SystemVariablesProvider',
            'oro_email.emailtemplate.variable_provider.user.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\LoggedUserVariablesProvider',
            'oro_email.activity_list.provider.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\EmailActivityListProvider',
            'oro_email.related_emails.provider.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\RelatedEmailsProvider',
            'oro_email.email_recipients.provider.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\EmailRecipientsProvider',
            'oro_email.recent_email_recipients.provider.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\RecentEmailRecipientsProvider',
            'oro_email.context_email_recipients.provider.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\ContextEmailRecipientsProvider',
            'oro_email.provider.email_recipients.helper.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\EmailRecipientsHelper',
            'oro_email.provider.emailowners.provider.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\EmailOwnersProvider',
            'oro_email.manager.notification.class' => 'Oro\\Bundle\\EmailBundle\\Manager\\EmailNotificationManager',
            'oro_email.cache.available_in_template_key' => 'oro_email.available_in_template_fields',
            'oro_email.email_renderer.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\EmailRenderer',
            'oro_email.twig.email_security_policy.class' => 'Twig_Sandbox_SecurityPolicy',
            'oro_email.helper.datagrid.emails.class' => 'Oro\\Bundle\\EmailBundle\\Datagrid\\EmailGridHelper',
            'oro_email.datagrid_query_factory.class' => 'Oro\\Bundle\\EmailBundle\\Datagrid\\EmailQueryFactory',
            'oro_email.emailtemplate.datagrid_view_list.class' => 'Oro\\Bundle\\EmailBundle\\Datagrid\\EmailTemplatesViewList',
            'oro_email.emailtemplate.datagrid_helper.class' => 'Oro\\Bundle\\EmailBundle\\Datagrid\\EmailTemplateGridHelper',
            'oro_email.emailfolder.datagrid_view_list.class' => 'Oro\\Bundle\\EmailBundle\\Datagrid\\EmailFolderViewList',
            'oro_email.emailseen.datagrid_view_list.class' => 'Oro\\Bundle\\EmailBundle\\Datagrid\\EmailSeenViewList',
            'oro_email.listener.datagrid.email.class' => 'Oro\\Bundle\\EmailBundle\\EventListener\\Datagrid\\EmailGridListener',
            'oro_email.listener.datagrid.activity.class' => 'Oro\\Bundle\\EmailBundle\\EventListener\\Datagrid\\ActivityGridListener',
            'oro_email.listener.datagrid.user_emails.recent.class' => 'Oro\\Bundle\\EmailBundle\\EventListener\\Datagrid\\RecentEmailGridListener',
            'oro_email.listener.datagrid.context.class' => 'Oro\\Bundle\\EmailBundle\\EventListener\\Datagrid\\ContextGridListener',
            'oro_email.workflow.action.send_email.class' => 'Oro\\Bundle\\EmailBundle\\Workflow\\Action\\SendEmail',
            'oro_email.workflow.action.send_email_template.class' => 'Oro\\Bundle\\EmailBundle\\Workflow\\Action\\SendEmailTemplate',
            'oro_email.listener.search_listener.class' => 'Oro\\Bundle\\EmailBundle\\EventListener\\SearchListener',
            'oro_email.listener.email_body_add_listener.class' => 'Oro\\Bundle\\EmailBundle\\EventListener\\EmailBodyAddListener',
            'oro_email.listener.replace_embedded_attachments_listener.class' => 'Oro\\Bundle\\EmailBundle\\EventListener\\ReplaceEmbeddedAttachmentsListener',
            'oro_email.validator.email_template_syntax_validator.class' => 'Oro\\Bundle\\EmailBundle\\Validator\\EmailTemplateSyntaxValidator',
            'oro_email.validator.email_address_validator.class' => 'Oro\\Bundle\\EmailBundle\\Validator\\EmailAddressValidator',
            'oro_email.validator.email_recipients_validator.class' => 'Oro\\Bundle\\EmailBundle\\Validator\\EmailRecipientsValidator',
            'oro_email.manager.email_attachment_manager.class' => 'Oro\\Bundle\\EmailBundle\\Manager\\EmailAttachmentManager',
            'oro_email.provider.email_attachment_provider.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\EmailAttachmentProvider',
            'oro_email.acl.voter.email_voter.class' => 'Oro\\Bundle\\EmailBundle\\Acl\\Voter\\EmailVoter',
            'oro_email.acl.voter.email_user_voter.class' => 'Oro\\Bundle\\EmailBundle\\Acl\\Voter\\EmailUserVoter',
            'oro_email.manager.email_activity.api.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\Manager\\EmailActivityApiEntityManager',
            'oro_email.datagrid.origin_folder.provider.class' => 'Oro\\Bundle\\EmailBundle\\Datagrid\\OriginFolderFilterProvider',
            'oro_email.mailbox.entity.class' => 'Oro\\Bundle\\EmailBundle\\Entity\\Mailbox',
            'oro_email.mailbox.process_storage.class' => 'Oro\\Bundle\\EmailBundle\\Mailbox\\MailboxProcessStorage',
            'oro_email.mailbox_email_owner_provider.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\MailboxEmailOwnerProvider',
            'oro_email.mailbox_choice_list.class' => 'Oro\\Bundle\\EmailBundle\\Datagrid\\MailboxChoiceList',
            'oro_email.mailbox.manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_email.mailbox.entity_name_provider.class' => 'Oro\\Bundle\\EmailBundle\\Provider\\MailboxEntityNameProvider',
            'oro_email.listener.mailbox_process_trigger_listener.class' => 'Oro\\Bundle\\EmailBundle\\EventListener\\MailboxProcessTriggerListener',
            'oro_email.listener.mailbox.authorization.class' => 'Oro\\Bundle\\EmailBundle\\EventListener\\MailboxAuthorizationListener',
            'oro_email.listener.datagrid.mailbox_grid.class' => 'Oro\\Bundle\\EmailBundle\\EventListener\\Datagrid\\MailboxGridListener',
            'oro_email.autocomplete.mailbox_user_search_handler.class' => 'Oro\\Bundle\\EmailBundle\\Autocomplete\\MailboxUserSearchHandler',
            'oro_email.workflow.condition.instanceof.class' => 'Oro\\Bundle\\EmailBundle\\Model\\Condition\\IsInstanceOf',
            'oro_email.workflow.condition.has_count.class' => 'Oro\\Bundle\\EmailBundle\\Model\\Condition\\HasCount',
            'oro_email.workflow.action.parse_first_name.class' => 'Oro\\Bundle\\EmailBundle\\Model\\Action\\ParseFirstNameFromEmailAddress',
            'oro_email.workflow.action.parse_last_name.class' => 'Oro\\Bundle\\EmailBundle\\Model\\Action\\ParseLastNameFromEmailAddress',
            'oro_email.workflow.action.request_mailboxes.class' => 'Oro\\Bundle\\EmailBundle\\Model\\Action\\RequestMailboxes',
            'oro_email.workflow.action.strip_html_tags.class' => 'Oro\\Bundle\\EmailBundle\\Model\\Action\\StripHtmlTags',
            'oro_email.workflow.action.add_activity_target.class' => 'Oro\\Bundle\\EmailBundle\\Model\\Action\\AddActivityTarget',
            'oro_email.form.subscriber.emailtemplate.class' => 'Oro\\Bundle\\EmailBundle\\Form\\EventListener\\BuildTemplateFormSubscriber',
            'oro_email.form.subscriber.autoresponserule.class' => 'Oro\\Bundle\\EmailBundle\\Form\\EventListener\\AutoResponseRuleSubscriber',
            'oro_email.form.type.autoresponserule.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\AutoResponseRuleType',
            'oro_email.form.type.autoresponserule_condition.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\AutoResponseRuleConditionType',
            'oro_email.form.type.autoresponse_template.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\AutoResponseTemplateType',
            'oro_email.form.type.autoresponse_template_choice.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\AutoResponseTemplateChoiceType',
            'oro_email.form.extension.mailbox_unbound_rules.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Extension\\MailboxUnboudRulesExtension',
            'oro_email.form.type.emailtemplate.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailTemplateType',
            'oro_email.form.type.emailtemplate_select.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailTemplateSelectType',
            'oro_email.form.type.emailtemplate_translation.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailTemplateTranslationType',
            'oro_email.form.handler.emailtemplate.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Handler\\EmailTemplateHandler',
            'oro_email.form.type.emailtemplate.api.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailTemplateApiType',
            'oro_email.form.handler.email.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Handler\\EmailHandler',
            'oro_email.form.handler.email.api.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Handler\\EmailApiHandler',
            'oro_email.form.type.email.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailType',
            'oro_email.form.type.email.api.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailApiType',
            'oro_email.form.type.email_folder.api.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailFolderApiType',
            'oro_email.form.type.email_address.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailAddressType',
            'oro_email.form.type.email_address.api.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailAddressApiType',
            'oro_email.form.type.attachment.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailAttachmentType',
            'oro_email.form.type.attachments.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailAttachmentsType',
            'oro_email.form.type.contexts_select.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\ContextsSelectType',
            'oro_email.form.type.email_link_to_scope.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailLinkToScopeType',
            'oro_email.form.type.mailbox_grid.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\MailboxGridType',
            'oro_email.form.type.mailbox.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\MailboxType',
            'oro_email.form.handler.mailbox.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Handler\\MailboxHandler',
            'oro_email.form.factory.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Model\\Factory',
            'oro_email.form.type.email_folder.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailFolderType',
            'oro_email.form.type.email_folder_tree.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailFolderTreeType',
            'oro_email.form.type.filter.originfolder.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\Filter\\ChoiceOriginFolderFilterType',
            'oro_email.form.type.email_address_from.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailAddressFromType',
            'oro_email.form.type.email_address_recipients.class' => 'Oro\\Bundle\\EmailBundle\\Form\\Type\\EmailAddressRecipientsType',
            'oro_email.mass_action.mark.read.class' => 'Oro\\Bundle\\EmailBundle\\Datagrid\\Extension\\MassAction\\Actions\\MarkReadMassAction',
            'oro_email.mass_action.mark.unread.class' => 'Oro\\Bundle\\EmailBundle\\Datagrid\\Extension\\MassAction\\Actions\\MarkUnreadMassAction',
            'oro_email.mass_action.mark_handler.class' => 'Oro\\Bundle\\EmailBundle\\Datagrid\\Extension\\MassAction\\MarkMassActionHandler',
            'oro_email_filter.filter_origin_folder.class' => 'Oro\\Bundle\\EmailBundle\\Filter\\ChoiceOriginFolderFilter',
            'oro_email_filter.filter_massage_type.class' => 'Oro\\Bundle\\EmailBundle\\Filter\\ChoiceMessageTypeFilter',
            'oro_user.manager.base.class' => 'Oro\\Bundle\\UserBundle\\Entity\\BaseUserManager',
            'oro_user.manager.class' => 'Oro\\Bundle\\UserBundle\\Entity\\UserManager',
            'oro_user.manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_user.permission.manager.api.class' => 'Oro\\Bundle\\UserBundle\\Entity\\Manager\\UserPermissionApiEntityManager',
            'oro_user.status.manager.class' => 'Oro\\Bundle\\UserBundle\\Entity\\Manager\\StatusManager',
            'oro_user.entity.class' => 'Oro\\Bundle\\UserBundle\\Entity\\User',
            'oro_user.group.entity.class' => 'Oro\\Bundle\\UserBundle\\Entity\\Group',
            'oro_user.role.entity.class' => 'Oro\\Bundle\\UserBundle\\Entity\\Role',
            'oro_user.security.provider.class' => 'Oro\\Bundle\\UserBundle\\Security\\UserProvider',
            'oro_user.security.login.class' => 'Oro\\Bundle\\UserBundle\\EventListener\\LoginSubscriber',
            'oro_user.twig.user_extension.class' => 'Oro\\Bundle\\UserBundle\\Twig\\OroUserExtension',
            'oro_user.user_menu.builder.class' => 'Oro\\Bundle\\UserBundle\\Menu\\UserMenuBuilder',
            'oro_user.role.listener.class' => 'Oro\\Bundle\\UserBundle\\EventListener\\RoleListener',
            'oro_user.role.manager.class' => 'Oro\\Bundle\\UserBundle\\Entity\\Manager\\RoleManager',
            'oro_user.role.manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_user.group.manager.class' => 'Oro\\Bundle\\UserBundle\\Entity\\Manager\\GroupManager',
            'oro_user.group.manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_user.autocomplete.user.search_handler' => 'Oro\\Bundle\\UserBundle\\Autocomplete\\UserSearchHandler',
            'oro_user.autocomplete.user.search_without_current_handler.class' => 'Oro\\Bundle\\UserBundle\\Autocomplete\\UserWithoutCurrentHandler',
            'oro_user.autocomplete.user.search_acl_handler.class' => 'Oro\\Bundle\\UserBundle\\Autocomplete\\UserAclHandler',
            'oro_user.autocomplete.user.organization_search_handler.class' => 'Oro\\Bundle\\UserBundle\\Autocomplete\\OrganizationUsersHandler',
            'oro_user.autocomplete.role.search_handler.class' => 'Oro\\Bundle\\FormBundle\\Autocomplete\\SearchHandler',
            'oro_user.autocomplete.role.authenticated_search_handler.class' => 'Oro\\Bundle\\UserBundle\\Autocomplete\\AuthenticatedRolesHandler',
            'oro_user.email.owner.provider.class' => 'Oro\\Bundle\\UserBundle\\Entity\\Provider\\EmailOwnerProvider',
            'oro_user.gender_provider.class' => 'Oro\\Bundle\\UserBundle\\Provider\\GenderProvider',
            'oro_user.email_recipients_provider.class' => 'Oro\\Bundle\\UserBundle\\Provider\\EmailRecipientsProvider',
            'oro_user.change_password.subscriber.class' => 'Oro\\Bundle\\UserBundle\\Form\\EventListener\\ChangePasswordSubscriber',
            'oro_user.handler.delete.class' => 'Oro\\Bundle\\UserBundle\\Handler\\UserDeleteHandler',
            'oro_user.role.handler.delete.class' => 'Oro\\Bundle\\UserBundle\\Handler\\RoleDeleteHandler',
            'oro_user.activity_widget_provider.class' => 'Oro\\Bundle\\UIBundle\\Provider\\TabMenuWidgetProvider',
            'oro_user.event_listener.owner_user_grid_listener.class' => 'Oro\\Bundle\\UserBundle\\EventListener\\OwnerUserGridListener',
            'oro_user.mailer.processor.class' => 'Oro\\Bundle\\UserBundle\\Mailer\\Processor',
            'oro_user.placeholder.filter.class' => 'Oro\\Bundle\\UserBundle\\Placeholder\\PlaceholderFilter',
            'oro_user.security.user_checker.class' => 'Oro\\Bundle\\UserBundle\\Security\\UserChecker',
            'oro_user.form.type.user.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\UserType',
            'oro_user.form.type.user.api.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\UserApiType',
            'oro_user.form.type.reset.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\ResetType',
            'oro_user.form.type.role.api.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\RoleApiType',
            'oro_user.form.type.group.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\GroupType',
            'oro_user.form.type.group.api.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\GroupApiType',
            'oro_user.form.type.status.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\StatusType',
            'oro_user.form.type.user_select.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\UserSelectType',
            'oro_user.form.type.user_multiselect.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\UserMultiSelectType',
            'oro_user.form.type.role_multiselect.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\RoleMultiSelectType',
            'oro_user.form.type.gender.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\GenderType',
            'oro_user.form.type.email.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\EmailType',
            'oro_user.form.type.change_password.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\ChangePasswordType',
            'oro_user.form.type.set_password.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\SetPasswordType',
            'oro_user.form.handler.user.class' => 'Oro\\Bundle\\UserBundle\\Form\\Handler\\UserHandler',
            'oro_user.form.handler.reset.class' => 'Oro\\Bundle\\UserBundle\\Form\\Handler\\ResetHandler',
            'oro_user.form.handler.role.class' => 'Oro\\Bundle\\UserBundle\\Form\\Handler\\RoleHandler',
            'oro_user.form.handler.group.class' => 'Oro\\Bundle\\UserBundle\\Form\\Handler\\GroupHandler',
            'oro_user.form.handler.status.class' => 'Oro\\Bundle\\UserBundle\\Form\\Handler\\StatusHandler',
            'oro_user.form.handler.acl_role.class' => 'Oro\\Bundle\\UserBundle\\Form\\Handler\\AclRoleHandler',
            'oro_user.form.handler.set_password.class' => 'Oro\\Bundle\\UserBundle\\Form\\Handler\\SetPasswordHandler',
            'oro_user.form.type.user_acl_select.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\UserAclSelectType',
            'oro_user.form.type.organization_user_acl_select.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\OrganizationUserAclSelectType',
            'oro_user.form.type.organization_user_multiselect.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\OrganizationUserAclMultiSelectType',
            'oro_user.importexport.template_fixture.user.class' => 'Oro\\Bundle\\UserBundle\\ImportExport\\TemplateFixture\\UserFixture',
            'oro_user.reset.ttl' => 86400,
            'oro_user.privileges' => array(
                'entity' => array(
                    'label' => 'oro.user.privileges.entity.label',
                    'view_type' => 'grid',
                    'types' => array(
                        0 => 'entity',
                    ),
                    'field_type' => 'oro_acl_access_level_selector',
                    'fix_values' => false,
                    'default_value' => 5,
                    'show_default' => true,
                ),
                'action' => array(
                    'label' => 'oro.user.privileges.action.label',
                    'view_type' => 'list',
                    'types' => array(
                        0 => 'action',
                    ),
                    'field_type' => 'oro_acl_access_level_selector',
                    'fix_values' => false,
                    'default_value' => 1,
                    'show_default' => false,
                ),
            ),
            'hwi_oauth.authentication.listener.oauth.class' => 'HWI\\Bundle\\OAuthBundle\\Security\\Http\\Firewall\\OAuthListener',
            'hwi_oauth.authentication.provider.oauth.class' => 'Oro\\Bundle\\SSOBundle\\Security\\OAuthProvider',
            'hwi_oauth.authentication.entry_point.oauth.class' => 'HWI\\Bundle\\OAuthBundle\\Security\\Http\\EntryPoint\\OAuthEntryPoint',
            'hwi_oauth.user.provider.class' => 'HWI\\Bundle\\OAuthBundle\\Security\\Core\\User\\OAuthUserProvider',
            'hwi_oauth.user.provider.entity.class' => 'HWI\\Bundle\\OAuthBundle\\Security\\Core\\User\\EntityUserProvider',
            'hwi_oauth.user.provider.fosub_bridge.class' => 'HWI\\Bundle\\OAuthBundle\\Security\\Core\\User\\FOSUBUserProvider',
            'hwi_oauth.registration.form.handler.fosub_bridge.class' => 'HWI\\Bundle\\OAuthBundle\\Form\\FOSUBRegistrationFormHandler',
            'hwi_oauth.resource_owner.oauth1.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\GenericOAuth1ResourceOwner',
            'hwi_oauth.resource_owner.oauth2.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\GenericOAuth2ResourceOwner',
            'hwi_oauth.resource_owner.amazon.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\AmazonResourceOwner',
            'hwi_oauth.resource_owner.bitbucket.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\BitbucketResourceOwner',
            'hwi_oauth.resource_owner.bitly.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\BitlyResourceOwner',
            'hwi_oauth.resource_owner.box.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\BoxResourceOwner',
            'hwi_oauth.resource_owner.dailymotion.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\DailymotionResourceOwner',
            'hwi_oauth.resource_owner.deviantart.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\DeviantartResourceOwner',
            'hwi_oauth.resource_owner.disqus.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\DisqusResourceOwner',
            'hwi_oauth.resource_owner.dropbox.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\DropboxResourceOwner',
            'hwi_oauth.resource_owner.eventbrite.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\EventbriteResourceOwner',
            'hwi_oauth.resource_owner.facebook.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\FacebookResourceOwner',
            'hwi_oauth.resource_owner.flickr.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\FlickrResourceOwner',
            'hwi_oauth.resource_owner.foursquare.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\FoursquareResourceOwner',
            'hwi_oauth.resource_owner.github.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\GitHubResourceOwner',
            'hwi_oauth.resource_owner.google.class' => 'Oro\\Bundle\\SSOBundle\\OAuth\\ResourceOwner\\GoogleResourceOwner',
            'hwi_oauth.resource_owner.instagram.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\InstagramResourceOwner',
            'hwi_oauth.resource_owner.jira.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\JiraResourceOwner',
            'hwi_oauth.resource_owner.linkedin.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\LinkedinResourceOwner',
            'hwi_oauth.resource_owner.mailru.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\MailRuResourceOwner',
            'hwi_oauth.resource_owner.qq.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\QQResourceOwner',
            'hwi_oauth.resource_owner.sensio_connect.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\SensioConnectResourceOwner',
            'hwi_oauth.resource_owner.sina_weibo.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\SinaWeiboResourceOwner',
            'hwi_oauth.resource_owner.stack_exchange.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\StackExchangeResourceOwner',
            'hwi_oauth.resource_owner.stereomood.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\StereomoodResourceOwner',
            'hwi_oauth.resource_owner.trello.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\TrelloResourceOwner',
            'hwi_oauth.resource_owner.twitch.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\TwitchResourceOwner',
            'hwi_oauth.resource_owner.twitter.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\TwitterResourceOwner',
            'hwi_oauth.resource_owner.vkontakte.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\VkontakteResourceOwner',
            'hwi_oauth.resource_owner.windows_live.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\WindowsLiveResourceOwner',
            'hwi_oauth.resource_owner.wordpress.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\WordpressResourceOwner',
            'hwi_oauth.resource_owner.yahoo.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\YahooResourceOwner',
            'hwi_oauth.resource_owner.yandex.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\YandexResourceOwner',
            'hwi_oauth.resource_owner.odnoklassniki.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\OdnoklassnikiResourceOwner',
            'hwi_oauth.resource_owner.37signals.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\ThirtySevenSignalsResourceOwner',
            'hwi_oauth.resource_owner.salesforce.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\ResourceOwner\\SalesforceResourceOwner',
            'hwi_oauth.resource_ownermap.class' => 'HWI\\Bundle\\OAuthBundle\\Security\\Http\\ResourceOwnerMap',
            'hwi_oauth.security.oauth_utils.class' => 'HWI\\Bundle\\OAuthBundle\\Security\\OAuthUtils',
            'hwi_oauth.storage.session.class' => 'HWI\\Bundle\\OAuthBundle\\OAuth\\RequestDataStorage\\SessionStorage',
            'hwi_oauth.templating.helper.oauth.class' => 'HWI\\Bundle\\OAuthBundle\\Templating\\Helper\\OAuthHelper',
            'hwi_oauth.twig.extension.oauth.class' => 'HWI\\Bundle\\OAuthBundle\\Twig\\Extension\\OAuthExtension',
            'buzz.client.class' => 'Buzz\\Client\\Curl',
            'hwi_oauth.firewall_name' => 'main',
            'hwi_oauth.target_path_parameter' => NULL,
            'hwi_oauth.resource_owners' => array(
                0 => 'google',
            ),
            'hwi_oauth.connect' => false,
            'hwi_oauth.templating.engine' => 'twig',
            'oro_sso.oauth_provider.class' => 'Oro\\Bundle\\SSOBundle\\Security\\Core\\User\\OAuthUserProvider',
            'oro_sso.event_listener.user_email_change_listener.class' => 'Oro\\Bundle\\SSOBundle\\EventListener\\UserEmailChangeListener',
            'oro_entity.hidden_fields' => array(

            ),
            'oro_entity.doctrine_helper.class' => 'Oro\\Bundle\\EntityBundle\\ORM\\DoctrineHelper',
            'oro_entity.entity_identifier_accessor.class' => 'Oro\\Bundle\\EntityBundle\\ORM\\EntityIdAccessor',
            'oro_entity.orm.entity_class_resolver.class' => 'Oro\\Bundle\\EntityBundle\\ORM\\EntityClassResolver',
            'oro_entity.query_hint_resolver.class' => 'Oro\\Bundle\\EntityBundle\\ORM\\QueryHintResolver',
            'oro_entity.form.type.custom_entity.class' => 'Oro\\Bundle\\EntityBundle\\Form\\Type\\CustomEntityType',
            'oro_entity.form.type.entity_choice.class' => 'Oro\\Bundle\\EntityBundle\\Form\\Type\\EntityChoiceType',
            'oro_entity.form.type.entity_field_choice.class' => 'Oro\\Bundle\\EntityBundle\\Form\\Type\\EntityFieldChoiceType',
            'oro_entity.form.type.entity_field_select.class' => 'Oro\\Bundle\\EntityBundle\\Form\\Type\\EntityFieldSelectType',
            'oro_entity.form.type.option_select.class' => 'Oro\\Bundle\\EntityBundle\\Form\\Type\\OptionSelectType',
            'oro_entity.form.type.entity_select.class' => 'Oro\\Bundle\\EntityBundle\\Form\\Type\\EntitySelectType',
            'oro_entity.form.handler.entity_select.class' => 'Oro\\Bundle\\EntityBundle\\Form\\Handler\\EntitySelectHandler',
            'oro_entity.form.guesser.form_config.class' => 'Oro\\Bundle\\EntityBundle\\Form\\Guesser\\FormConfigGuesser',
            'oro_entity.form.guesser.doctrine_type.class' => 'Oro\\Bundle\\EntityBundle\\Form\\Guesser\\DoctrineTypeGuesser',
            'oro_entity.listener.navigation_listener.class' => 'Oro\\Bundle\\EntityBundle\\EventListener\\NavigationListener',
            'oro_entity.owner.entity_config_subscriber.class' => 'Oro\\Bundle\\EntityBundle\\EventListener\\EntityConfigSubscriber',
            'oro_entity.datagrid_helper.class' => 'Oro\\Bundle\\EntityBundle\\Grid\\GridHelper',
            'oro_entity.event_listener.custom_entity_grid_listener.class' => 'Oro\\Bundle\\EntityBundle\\EventListener\\CustomEntityGridListener',
            'oro_entity.event_listener.entity_relation_grid_listener.class' => 'Oro\\Bundle\\EntityBundle\\EventListener\\EntityRelationGridListener',
            'oro_entity.entity_hierarchy_provider.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\EntityHierarchyProvider',
            'oro_entity.exclusion_provider.config.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\ConfigExclusionProvider',
            'oro_entity.exclusion_provider.chain.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\ChainExclusionProvider',
            'oro_entity.dictionary_value_list_provider.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\ChainDictionaryValueListProvider',
            'oro_entity.exclusion_provider.dictionary.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\DictionaryExclusionProvider',
            'oro_entity.virtual_relation_provider.config.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\ConfigVirtualRelationProvider',
            'oro_entity.virtual_relation_provider.chain.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\ChainVirtualRelationProvider',
            'oro_entity.virtual_field_provider.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\ConfigVirtualFieldProvider',
            'oro_entity.virtual_field_provider.chain.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\ChainVirtualFieldProvider',
            'oro_entity.virtual_field_provider.dictionary.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\DictionaryVirtualFieldProvider',
            'oro_entity.virtual_field_provider.enum.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\EnumVirtualFieldProvider',
            'oro_entity.entity_provider.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\EntityProvider',
            'oro_entity.entity_field_provider.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\EntityFieldProvider',
            'oro_entity.entity_field_list_provider.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\EntityWithFieldsProvider',
            'oro_entity.twig.extension.entity.class' => 'Oro\\Bundle\\EntityBundle\\Twig\\EntityExtension',
            'oro_entity.routing_helper.class' => 'Oro\\Bundle\\EntityBundle\\Tools\\EntityRoutingHelper',
            'oro_entity.extension.unique_entity_extension.class' => 'Oro\\Bundle\\EntityBundle\\Form\\Extension\\UniqueEntityExtension',
            'oro_entity.listener.orm.generated_value_strategy_listener.class' => 'Oro\\Bundle\\EntityBundle\\EventListener\\ORM\\GeneratedValueStrategyListener',
            'oro_entity.migration.extension.change_type.class' => 'Oro\\Bundle\\EntityBundle\\Migrations\\Extension\\ChangeTypeExtension',
            'oro_entity.entity_context_provider.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\EntityContextProvider',
            'oro_entity.entity_alias_resolver.class' => 'Oro\\Bundle\\EntityBundle\\ORM\\EntityAliasResolver',
            'oro_entity.entity_alias_config_bag.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\EntityAliasConfigBag',
            'oro_entity.entity_alias_provider.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\EntityAliasProvider',
            'oro_entity.entity_class_name_helper.class' => 'Oro\\Bundle\\EntityBundle\\Tools\\EntityClassNameHelper',
            'oro_entity.entity_name_resolver.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\EntityNameResolver',
            'oro_entity.entity_name_provider.default.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\EntityNameProvider',
            'oro_entity.entity_class_name_provider.default.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\EntityClassNameProvider',
            'oro_entity.dictionary_value_list_provider.default.class' => 'Oro\\Bundle\\EntityBundle\\Provider\\DictionaryValueListProvider',
            'oro_entity.manager.dictionary.api.class' => 'Oro\\Bundle\\EntityBundle\\Entity\\Manager\\DictionaryApiEntityManager',
            'oro_entity.helper.dictionary.class' => 'Oro\\Bundle\\EntityBundle\\Helper\\DictionaryHelper',
            'oro_entity.exclusions' => array(
                0 => array(
                    'entity' => 'Oro\\Bundle\\AddressBundle\\Entity\\AbstractAddress',
                    'field' => 'regionText',
                ),
                1 => array(
                    'entity' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingData',
                ),
                2 => array(
                    'entity' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingEventDictionary',
                ),
                3 => array(
                    'entity' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingVisit',
                ),
                4 => array(
                    'entity' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingVisitEvent',
                    'field' => 'parsingCount',
                ),
                5 => array(
                    'entity' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingVisitEvent',
                    'field' => 'event',
                ),
                6 => array(
                    'entity' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingVisitEvent',
                    'field' => 'visit',
                ),
            ),
            'oro_entity.virtual_fields' => array(
                'Oro\\Bundle\\AddressBundle\\Entity\\AbstractAddress' => array(
                    'region_name' => array(
                        'query' => array(
                            'select' => array(
                                'expr' => 'COALESCE(entity.regionText, region.name)',
                                'return_type' => 'string',
                            ),
                            'join' => array(
                                'left' => array(
                                    0 => array(
                                        'join' => 'entity.region',
                                        'alias' => 'region',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingVisitEvent' => array(
                    'ip' => array(
                        'query' => array(
                            'select' => array(
                                'expr' => 'visit.ip',
                                'return_type' => 'string',
                            ),
                            'join' => array(
                                'left' => array(
                                    0 => array(
                                        'join' => 'entity.visit',
                                        'alias' => 'visit',
                                    ),
                                ),
                            ),
                        ),
                    ),
                    'os' => array(
                        'query' => array(
                            'select' => array(
                                'expr' => 'visit.os',
                                'return_type' => 'string',
                            ),
                            'join' => array(
                                'left' => array(
                                    0 => array(
                                        'join' => 'entity.visit',
                                        'alias' => 'visit',
                                    ),
                                ),
                            ),
                        ),
                    ),
                    'osVersion' => array(
                        'query' => array(
                            'select' => array(
                                'expr' => 'visit.osVersion',
                                'return_type' => 'string',
                            ),
                            'join' => array(
                                'left' => array(
                                    0 => array(
                                        'join' => 'entity.visit',
                                        'alias' => 'visit',
                                    ),
                                ),
                            ),
                        ),
                    ),
                    'client' => array(
                        'query' => array(
                            'select' => array(
                                'expr' => 'visit.client',
                                'return_type' => 'string',
                            ),
                            'join' => array(
                                'left' => array(
                                    0 => array(
                                        'join' => 'entity.visit',
                                        'alias' => 'visit',
                                    ),
                                ),
                            ),
                        ),
                    ),
                    'clientVersion' => array(
                        'query' => array(
                            'select' => array(
                                'expr' => 'visit.clientVersion',
                                'return_type' => 'string',
                            ),
                            'join' => array(
                                'left' => array(
                                    0 => array(
                                        'join' => 'entity.visit',
                                        'alias' => 'visit',
                                    ),
                                ),
                            ),
                        ),
                    ),
                    'clientType' => array(
                        'query' => array(
                            'select' => array(
                                'expr' => 'visit.clientType',
                                'return_type' => 'string',
                            ),
                            'join' => array(
                                'left' => array(
                                    0 => array(
                                        'join' => 'entity.visit',
                                        'alias' => 'visit',
                                    ),
                                ),
                            ),
                        ),
                    ),
                    'desktop' => array(
                        'query' => array(
                            'select' => array(
                                'expr' => 'visit.desktop',
                                'return_type' => 'boolean',
                            ),
                            'join' => array(
                                'left' => array(
                                    0 => array(
                                        'join' => 'entity.visit',
                                        'alias' => 'visit',
                                    ),
                                ),
                            ),
                        ),
                    ),
                    'mobile' => array(
                        'query' => array(
                            'select' => array(
                                'expr' => 'visit.mobile',
                                'return_type' => 'boolean',
                            ),
                            'join' => array(
                                'left' => array(
                                    0 => array(
                                        'join' => 'entity.visit',
                                        'alias' => 'visit',
                                    ),
                                ),
                            ),
                        ),
                    ),
                    'bot' => array(
                        'query' => array(
                            'select' => array(
                                'expr' => 'visit.bot',
                                'return_type' => 'boolean',
                            ),
                            'join' => array(
                                'left' => array(
                                    0 => array(
                                        'join' => 'entity.visit',
                                        'alias' => 'visit',
                                    ),
                                ),
                            ),
                        ),
                    ),
                    'identifierDetected' => array(
                        'query' => array(
                            'select' => array(
                                'expr' => 'visit.identifierDetected',
                                'return_type' => 'boolean',
                            ),
                            'join' => array(
                                'left' => array(
                                    0 => array(
                                        'join' => 'entity.visit',
                                        'alias' => 'visit',
                                    ),
                                ),
                            ),
                        ),
                    ),
                    'url' => array(
                        'query' => array(
                            'select' => array(
                                'expr' => 'trackingEvent.url',
                                'return_type' => 'string',
                            ),
                            'join' => array(
                                'left' => array(
                                    0 => array(
                                        'join' => 'entity.webEvent',
                                        'alias' => 'trackingEvent',
                                    ),
                                ),
                            ),
                        ),
                    ),
                    'title' => array(
                        'query' => array(
                            'select' => array(
                                'expr' => 'trackingEvent.title',
                                'return_type' => 'string',
                            ),
                            'join' => array(
                                'left' => array(
                                    0 => array(
                                        'join' => 'entity.webEvent',
                                        'alias' => 'trackingEvent',
                                    ),
                                ),
                            ),
                        ),
                    ),
                    'eventDate' => array(
                        'query' => array(
                            'select' => array(
                                'expr' => 'trackingEvent.loggedAt',
                                'return_type' => 'datetime',
                            ),
                            'join' => array(
                                'left' => array(
                                    0 => array(
                                        'join' => 'entity.webEvent',
                                        'alias' => 'trackingEvent',
                                    ),
                                ),
                            ),
                        ),
                    ),
                    'type' => array(
                        'query' => array(
                            'select' => array(
                                'expr' => 'eventType.name',
                                'return_type' => 'string',
                            ),
                            'join' => array(
                                'left' => array(
                                    0 => array(
                                        'join' => 'entity.event',
                                        'alias' => 'eventType',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
            ),
            'oro_entity.virtual_relations' => array(

            ),
            'oro_entity.entity_aliases' => array(
                'Oro\\Bundle\\UserBundle\\Entity\\Email' => array(
                    'alias' => 'useremail',
                    'plural_alias' => 'useremails',
                ),
                'Oro\\Bundle\\UserBundle\\Entity\\Group' => array(
                    'alias' => 'usergroup',
                    'plural_alias' => 'usergroups',
                ),
                'Oro\\Bundle\\UserBundle\\Entity\\Role' => array(
                    'alias' => 'userrole',
                    'plural_alias' => 'userroles',
                ),
                'Oro\\Bundle\\UserBundle\\Entity\\Status' => array(
                    'alias' => 'userstatus',
                    'plural_alias' => 'userstatuses',
                ),
                'Oro\\Bundle\\IntegrationBundle\\Entity\\Channel' => array(
                    'alias' => 'integrationchannel',
                    'plural_alias' => 'integrationchannels',
                ),
                'Oro\\Bundle\\IntegrationBundle\\Entity\\FieldsChanges' => array(
                    'alias' => 'integrationfieldschanges',
                    'plural_alias' => 'integrationfieldschanges',
                ),
                'Oro\\Bundle\\IntegrationBundle\\Entity\\Status' => array(
                    'alias' => 'integrationstatus',
                    'plural_alias' => 'integrationstatuses',
                ),
                'Oro\\Bundle\\IntegrationBundle\\Entity\\Transport' => array(
                    'alias' => 'integrationtransport',
                    'plural_alias' => 'integrationtransports',
                ),
                'JMS\\JobQueueBundle\\Entity\\Job' => array(
                    'alias' => 'job',
                    'plural_alias' => 'jobs',
                ),
                'Oro\\Bundle\\NotificationBundle\\Entity\\Event' => array(
                    'alias' => 'notificationevent',
                    'plural_alias' => 'notificationevents',
                ),
                'Oro\\Bundle\\NotificationBundle\\Entity\\RecipientList' => array(
                    'alias' => 'notificationrecipientlist',
                    'plural_alias' => 'notificationrecipientlist',
                ),
                'Oro\\Bundle\\SidebarBundle\\Entity\\Widget' => array(
                    'alias' => 'sidebarwidget',
                    'plural_alias' => 'sidebarwidgets',
                ),
                'Oro\\Bundle\\DashboardBundle\\Entity\\Widget' => array(
                    'alias' => 'dashboardwidget',
                    'plural_alias' => 'dashboardwidgets',
                ),
                'Oro\\Bundle\\DashboardBundle\\Entity\\WidgetState' => array(
                    'alias' => 'dashboardwidgetstate',
                    'plural_alias' => 'dashboardwidgetstates',
                ),
                'Oro\\Bundle\\NavigationBundle\\Entity\\Title' => array(
                    'alias' => 'pagetitle',
                    'plural_alias' => 'pagetitles',
                ),
            ),
            'oro_entity.entity_alias_exclusions' => array(
                0 => 'Oro\\Bundle\\EmailBundle\\Entity\\EmailAttachmentContent',
                1 => 'Oro\\Bundle\\EmailBundle\\Entity\\EmailBody',
                2 => 'Oro\\Bundle\\EmailBundle\\Entity\\EmailRecipient',
                3 => 'Oro\\Bundle\\EmailBundle\\Entity\\InternalEmailOrigin',
                4 => 'Oro\\Bundle\\EntityConfigBundle\\Entity\\ConfigLog',
                5 => 'Oro\\Bundle\\EntityConfigBundle\\Entity\\ConfigLogDiff',
                6 => 'Oro\\Bundle\\EntityConfigBundle\\Entity\\ConfigModelIndexValue',
                7 => 'Oro\\Bundle\\EntityConfigBundle\\Entity\\EntityConfigModel',
                8 => 'Oro\\Bundle\\EntityConfigBundle\\Entity\\FieldConfigModel',
                9 => 'Oro\\Bundle\\EntityConfigBundle\\Entity\\OptionSet',
                10 => 'Oro\\Bundle\\EntityConfigBundle\\Entity\\OptionSetRelation',
                11 => 'Akeneo\\Bundle\\BatchBundle\\Entity\\FieldMapping',
                12 => 'Akeneo\\Bundle\\BatchBundle\\Entity\\ItemMapping',
                13 => 'Akeneo\\Bundle\\BatchBundle\\Entity\\JobExecution',
                14 => 'Akeneo\\Bundle\\BatchBundle\\Entity\\JobInstance',
                15 => 'Akeneo\\Bundle\\BatchBundle\\Entity\\StepExecution',
                16 => 'Akeneo\\Bundle\\BatchBundle\\Entity\\Warning',
                17 => 'Oro\\Bundle\\ConfigBundle\\Entity\\Config',
                18 => 'Oro\\Bundle\\ConfigBundle\\Entity\\ConfigValue',
                19 => 'Oro\\Bundle\\DataGridBundle\\Entity\\GridView',
                20 => 'Oro\\Bundle\\ImapBundle\\Entity\\ImapEmail',
                21 => 'Oro\\Bundle\\ImapBundle\\Entity\\ImapEmailFolder',
                22 => 'Oro\\Bundle\\ImapBundle\\Entity\\UserEmailOrigin',
                23 => 'Oro\\Bundle\\MigrationBundle\\Entity\\DataFixture',
                24 => 'Oro\\Bundle\\MigrationBundle\\Entity\\DataMigration',
                25 => 'Oro\\Bundle\\NotificationBundle\\Entity\\SpoolItem',
                26 => 'Oro\\Bundle\\SearchBundle\\Entity\\IndexDatetime',
                27 => 'Oro\\Bundle\\SearchBundle\\Entity\\IndexDecimal',
                28 => 'Oro\\Bundle\\SearchBundle\\Entity\\IndexInteger',
                29 => 'Oro\\Bundle\\SearchBundle\\Entity\\IndexText',
                30 => 'Oro\\Bundle\\SearchBundle\\Entity\\Item',
                31 => 'Oro\\Bundle\\SearchBundle\\Entity\\Query',
                32 => 'Oro\\Bundle\\SearchBundle\\Entity\\UpdateEntity',
                33 => 'Oro\\Bundle\\TagBundle\\Entity\\Tagging',
            ),
            'oro_entity.entity_name_formats' => array(
                'full' => array(
                    'fallback' => 'short',
                ),
                'short' => array(
                    'fallback' => NULL,
                ),
            ),
            'oro_entity.entity_name_format.default' => 'full',
            'oro_entity.orm.hydrators' => array(
                1 => array(
                    'name' => 'ObjectHydrator',
                    'class' => 'Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator',
                    'loggingClass' => 'OroLoggingHydrator\\LoggingObjectHydrator',
                ),
                2 => array(
                    'name' => 'ArrayHydrator',
                    'class' => 'Doctrine\\ORM\\Internal\\Hydration\\ArrayHydrator',
                    'loggingClass' => 'OroLoggingHydrator\\LoggingArrayHydrator',
                ),
                3 => array(
                    'name' => 'ScalarHydrator',
                    'class' => 'Doctrine\\ORM\\Internal\\Hydration\\ScalarHydrator',
                    'loggingClass' => 'OroLoggingHydrator\\LoggingScalarHydrator',
                ),
                4 => array(
                    'name' => 'SingleScalarHydrator',
                    'class' => 'Doctrine\\ORM\\Internal\\Hydration\\SingleScalarHydrator',
                    'loggingClass' => 'OroLoggingHydrator\\LoggingSingleScalarHydrator',
                ),
                5 => array(
                    'name' => 'SimpleObjectHydrator',
                    'class' => 'Doctrine\\ORM\\Internal\\Hydration\\SimpleObjectHydrator',
                    'loggingClass' => 'OroLoggingHydrator\\LoggingSimpleObjectHydrator',
                ),
                '__gedmo.translatable.object.hydrator' => array(
                    'name' => 'TranslatableObjectHydrator',
                    'class' => 'Gedmo\\Translatable\\Hydrator\\ORM\\ObjectHydrator',
                    'loggingClass' => 'OroLoggingHydrator\\LoggingTranslatableObjectHydrator',
                ),
                '__gedmo.translatable.simple_object.hydrator' => array(
                    'name' => 'TranslatableSimpleObjectHydrator',
                    'class' => 'Gedmo\\Translatable\\Hydrator\\ORM\\SimpleObjectHydrator',
                    'loggingClass' => 'OroLoggingHydrator\\LoggingTranslatableSimpleObjectHydrator',
                ),
            ),
            'oro_entity_config.config_manager.class' => 'Oro\\Bundle\\EntityConfigBundle\\Config\\ConfigManager',
            'oro_entity_config.config_model_manager.class' => 'Oro\\Bundle\\EntityConfigBundle\\Config\\ConfigModelManager',
            'oro_entity_config.config_audit_mamanger.class' => 'Oro\\Bundle\\EntityConfigBundle\\Audit\\AuditManager',
            'oro_entity_config.tools.command_executor.class' => 'Oro\\Bundle\\EntityConfigBundle\\Tools\\CommandExecutor',
            'oro_entity_config.config_loader.class' => 'Oro\\Bundle\\EntityExtendBundle\\Tools\\ExtendConfigLoader',
            'oro_entity_config.provider_bag.class' => 'Oro\\Bundle\\EntityConfigBundle\\Provider\\ConfigProviderBag',
            'oro_entity_config.event_listener.option_set_listener.class' => 'Oro\\Bundle\\EntityConfigBundle\\EventListener\\OptionSetListener',
            'oro_entity_config.event_listener.entityconfig_grid_listener.class' => 'Oro\\Bundle\\EntityConfigBundle\\EventListener\\EntityConfigGridListener',
            'oro_entity_config.event_listener.entityfields_grid_listener.class' => 'Oro\\Bundle\\EntityConfigBundle\\EventListener\\FieldConfigGridListener',
            'oro_entity_config.twig.extension.config.class' => 'Oro\\Bundle\\EntityConfigBundle\\Twig\\ConfigExtension',
            'oro_entity_config.migration.post_up.listener.class' => 'Oro\\Bundle\\EntityConfigBundle\\EventListener\\PostUpMigrationListener',
            'oro_entity_config.metadata.metadata_factory.class' => 'Metadata\\MetadataFactory',
            'oro_entity_config.metadata.annotation_driver.class' => 'Oro\\Bundle\\EntityConfigBundle\\Metadata\\Driver\\AnnotationDriver',
            'oro_entity_config.type.config.class' => 'Oro\\Bundle\\EntityConfigBundle\\Form\\Type\\ConfigType',
            'oro_entity_config.extension.config.class' => 'Oro\\Bundle\\EntityConfigBundle\\Form\\Extension\\ConfigExtension',
            'oro_entity_config.config_type_helper.class' => 'Oro\\Bundle\\EntityConfigBundle\\Form\\Util\\ConfigTypeHelper',
            'oro_entity_config.type.integer.class' => 'Oro\\Bundle\\EntityConfigBundle\\Form\\Type\\IntegerType',
            'oro_entity_config.type.text.class' => 'Oro\\Bundle\\EntityConfigBundle\\Form\\Type\\TextType',
            'oro_entity_config.type.textarea.class' => 'Oro\\Bundle\\EntityConfigBundle\\Form\\Type\\TextareaType',
            'oro_entity_config.type.choice.class' => 'Oro\\Bundle\\EntityConfigBundle\\Form\\Type\\ChoiceType',
            'oro_entity_extend.migration.config_processor.options.path' => 'C:\\wamp\\www\\stockvalue~~\\app\\cache\\dev/oro_migration/extend_config_options.yml',
            'oro_entity_extend.entity.cache.warmer.class' => 'Oro\\Bundle\\EntityExtendBundle\\Cache\\EntityCacheWarmer',
            'oro_entity_extend.datagrid.extension.additional_fields.class' => 'Oro\\Bundle\\EntityExtendBundle\\Grid\\AdditionalFieldsExtension',
            'oro_entity_extend.datagrid.extension.dynamic_fields.class' => 'Oro\\Bundle\\EntityExtendBundle\\Grid\\DynamicFieldsExtension',
            'oro_entity_extend.form.extension.dynamic_fields.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Extension\\DynamicFieldsExtension',
            'oro_entity_extend.tools.dumper.class' => 'Oro\\Bundle\\EntityExtendBundle\\Tools\\ExtendConfigDumper',
            'oro_entity_extend.entity_config_dumper.extension.index.class' => 'Oro\\Bundle\\EntityExtendBundle\\Tools\\DumperExtensions\\IndexEntityConfigDumperExtension',
            'oro_entity_extend.entity_config_dumper.extension.relation.class' => 'Oro\\Bundle\\EntityExtendBundle\\Tools\\DumperExtensions\\RelationEntityConfigDumperExtension',
            'oro_entity_extend.entity_config_dumper.extension.enum.class' => 'Oro\\Bundle\\EntityExtendBundle\\Tools\\DumperExtensions\\EnumEntityConfigDumperExtension',
            'oro_entity_extend.listener.config_subscriber.class' => 'Oro\\Bundle\\EntityExtendBundle\\EventListener\\ConfigSubscriber',
            'oro_entity_extend.extend.entity_processor.class' => 'Oro\\Bundle\\EntityExtendBundle\\Extend\\EntityProcessor',
            'oro_entity_extend.extend.entity_proxy_generator.class' => 'Oro\\Bundle\\EntityExtendBundle\\Extend\\EntityProxyGenerator',
            'oro_entity_extend.extend.field_type_helper.class' => 'Oro\\Bundle\\EntityExtendBundle\\Extend\\FieldTypeHelper',
            'oro_entity_extend.validator.not_sql_keyword.class' => 'Oro\\Bundle\\EntityExtendBundle\\Validator\\Constraints\\NotSqlKeywordValidator',
            'oro_entity_extend.validator.unique_keys.class' => 'Oro\\Bundle\\EntityExtendBundle\\Validator\\Constraints\\UniqueKeysValidator',
            'oro_entity_extend.validator.unique_enum_name.class' => 'Oro\\Bundle\\EntityExtendBundle\\Validator\\Constraints\\UniqueEnumNameValidator',
            'oro_entity_extend.migration.config_processor.class' => 'Oro\\Bundle\\EntityExtendBundle\\Migration\\ExtendConfigProcessor',
            'oro_entity_extend.migration.refresh_cache.post_up.listener.class' => 'Oro\\Bundle\\EntityExtendBundle\\EventListener\\RefreshExtendCachePostUpMigrationListener',
            'oro_entity_extend.migration.update_config.post_up.listener.class' => 'Oro\\Bundle\\EntityExtendBundle\\EventListener\\UpdateExtendConfigPostUpMigrationListener',
            'oro_entity_extend.migration.update_indices.post_up.listener.class' => 'Oro\\Bundle\\EntityExtendBundle\\EventListener\\UpdateExtendIndicesPostUpMigrationListener',
            'oro_entity_extend.migration.entity_metadata_helper.class' => 'Oro\\Bundle\\EntityExtendBundle\\Migration\\EntityMetadataHelper',
            'oro_entity_extend.migration.options_manager.class' => 'Oro\\Bundle\\EntityExtendBundle\\Migration\\ExtendOptionsManager',
            'oro_entity_extend.migration.options_parser.class' => 'Oro\\Bundle\\EntityExtendBundle\\Migration\\ExtendOptionsParser',
            'oro_entity_extend.migration.extension.extend.class' => 'Oro\\Bundle\\EntityExtendBundle\\Migration\\Extension\\ExtendExtension',
            'oro_entity_extend.migration.extension.rename.class' => 'Oro\\Bundle\\EntityExtendBundle\\Migration\\Extension\\RenameExtension',
            'oro_entity_extend.entity_generator.class' => 'Oro\\Bundle\\EntityExtendBundle\\Tools\\EntityGenerator',
            'oro_entity_extend.entity_generator.extension.class' => 'Oro\\Bundle\\EntityExtendBundle\\Tools\\GeneratorExtensions\\ExtendEntityGeneratorExtension',
            'oro_entity_extend.relation_builder.class' => 'Oro\\Bundle\\EntityExtendBundle\\Tools\\RelationBuilder',
            'oro_entity_extend.association_builder.class' => 'Oro\\Bundle\\EntityExtendBundle\\Tools\\AssociationBuilder',
            'oro_entity_extend.enum_synchronizer.class' => 'Oro\\Bundle\\EntityExtendBundle\\Tools\\EnumSynchronizer',
            'oro_entity_extend.enum_filter.class' => 'Oro\\Bundle\\EntityExtendBundle\\Filter\\EnumFilter',
            'oro_entity_extend.multi_enum_filter.class' => 'Oro\\Bundle\\EntityExtendBundle\\Filter\\MultiEnumFilter',
            'oro_entity_extend.dictionary_filter.class' => 'Oro\\Bundle\\EntityExtendBundle\\Filter\\DictionaryFilter',
            'oro_entity_extend.twig.extension.dynamic_fields.class' => 'Oro\\Bundle\\EntityExtendBundle\\Twig\\DynamicFieldsExtension',
            'oro_entity_extend.twig.extension.enum.class' => 'Oro\\Bundle\\EntityExtendBundle\\Twig\\EnumExtension',
            'oro_entity_extend.datagrid.column_options_guesser.class' => 'Oro\\Bundle\\EntityExtendBundle\\Grid\\ExtendColumnOptionsGuesser',
            'oro_entity_extend.datagrid.action.type.ajaxdeletefield.class' => 'Oro\\Bundle\\EntityExtendBundle\\Grid\\Action\\AjaxDeleteFieldAction',
            'oro_entity_extend.validation_loader.class' => 'Oro\\Bundle\\EntityExtendBundle\\Validator\\ExtendFieldValidationLoader',
            'oro_entity_extend.listener.extend_field_value_render.class' => 'Oro\\Bundle\\EntityExtendBundle\\EventListener\\ExtendFieldValueRenderListener',
            'oro_entity_extend.importexport.normalizer.enum.class' => 'Oro\\Bundle\\EntityExtendBundle\\ImportExport\\Serializer\\EnumNormalizer',
            'oro_entity_extend.listener.before_map_object_search_listener.class' => 'Oro\\Bundle\\EntityExtendBundle\\EventListener\\BeforeMapObjectSearchListener',
            'oro_entity_extend.listener.search_entity_config_listener.class' => 'Oro\\Bundle\\EntityExtendBundle\\EventListener\\SearchEntityConfigListener',
            'oro_entity_extend.association_manager.class' => 'Oro\\Bundle\\EntityExtendBundle\\Entity\\Manager\\AssociationManager',
            'oro_entity_extend.entity_alias_provider.class' => 'Oro\\Bundle\\EntityExtendBundle\\Provider\\ExtendEntityAliasProvider',
            'oro_entity_extend.entity_class_name_provider.enum.class' => 'Oro\\Bundle\\EntityExtendBundle\\Provider\\EnumEntityClassNameProvider',
            'oro_entity_extend.enum_value_provider.class' => 'Oro\\Bundle\\EntityExtendBundle\\Provider\\EnumValueProvider',
            'oro_entity_extend.dictionary_value_list_provider.enum.class' => 'Oro\\Bundle\\EntityExtendBundle\\Provider\\EnumValueListProvider',
            'oro_entity_extend.entity_metadata_builder.class' => 'Oro\\Bundle\\EntityExtendBundle\\ORM\\ExtendMetadataBuilder',
            'oro_entity_extend.entity_metadata_builder.relations.class' => 'Oro\\Bundle\\EntityExtendBundle\\ORM\\RelationMetadataBuilder',
            'oro_entity_extend.entity_metadata_builder.indices.class' => 'Oro\\Bundle\\EntityExtendBundle\\ORM\\IndexMetadataBuilder',
            'oro_entity_extend.listener.entity_listener.class' => 'Oro\\Bundle\\EntityExtendBundle\\EventListener\\DoctrineListener',
            'oro_entity_extend.manager.multi_enum_entity.class' => 'Oro\\Bundle\\EntityExtendBundle\\Entity\\Manager\\MultiEnumManager',
            'oro_entity_extend.type.entity.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\EntityType',
            'oro_entity_extend.type.field.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\FieldType',
            'oro_entity_extend.type.relation.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\RelationType',
            'oro_entity_extend.type.target_field_type.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\TargetFieldType',
            'oro_entity_extend.type.option_set.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\OptionSetType',
            'oro_entity_extend.type.option_set_collection.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\OptionSetCollectionType',
            'oro_entity_extend.type.integer.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\IntegerType',
            'oro_entity_extend.type.text.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\TextType',
            'oro_entity_extend.type.textarea.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\TextareaType',
            'oro_entity_extend.type.choice.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\ChoiceType',
            'oro_entity_extend.association_type_helper.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Util\\AssociationTypeHelper',
            'oro_entity_extend.type.association_choice.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\AssociationChoiceType',
            'oro_entity_extend.type.multiple_association_choice.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\MultipleAssociationChoiceType',
            'oro_entity_extend.type.association.integer.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\IntegerAssociationPropertyType',
            'oro_entity_extend.type.association.text.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\TextAssociationPropertyType',
            'oro_entity_extend.type.association.textarea.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\TextareaAssociationPropertyType',
            'oro_entity_extend.type.association.choice.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\ChoiceAssociationPropertyType',
            'oro_entity_extend.type.multiple_entity.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\MultipleEntityType',
            'oro_entity_extend.type.unique_key_collection_type.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\UniqueKeyCollectionType',
            'oro_entity_extend.enum_type_helper.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Util\\EnumTypeHelper',
            'oro_entity_extend.type.enum_value.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\EnumValueType',
            'oro_entity_extend.type.enum_value_collection.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\EnumValueCollectionType',
            'oro_entity_extend.type.enum_name.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\EnumNameType',
            'oro_entity_extend.type.enum_public.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\EnumPublicType',
            'oro_entity_extend.entity_config_type.extension.enum.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Extension\\EnumFieldConfigExtension',
            'oro_entity_extend.type.enum_choice.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\EnumChoiceType',
            'oro_entity_extend.type.enum_select.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\EnumSelectType',
            'oro_entity_extend.type.enum_filter.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\EnumFilterType',
            'oro_entity_extend.type.dictionary_filter.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Type\\DictionaryFilterType',
            'oro_entity_extend.form.guesser.extend_field.class' => 'Oro\\Bundle\\EntityExtendBundle\\Form\\Guesser\\ExtendFieldTypeGuesser',
            'oro_integration.action.schedule_sync.class' => 'Oro\\Bundle\\IntegrationBundle\\Datagrid\\ScheduleSyncAction',
            'oro_integration.entity.class' => 'Oro\\Bundle\\IntegrationBundle\\Entity\\Channel',
            'oro_integration.fields_changes.class' => 'Oro\\Bundle\\IntegrationBundle\\Entity\\FieldsChanges',
            'oro_integration.form.type.channel.class' => 'Oro\\Bundle\\IntegrationBundle\\Form\\Type\\ChannelType',
            'oro_integration.form.type.oro_integration_type_select.class' => 'Oro\\Bundle\\IntegrationBundle\\Form\\Type\\IntegrationTypeSelectType',
            'oro_integration.form.type.oro_integration_select.class' => 'Oro\\Bundle\\IntegrationBundle\\Form\\Type\\IntegrationSelectType',
            'oro_integration.form.handler.integration.class' => 'Oro\\Bundle\\IntegrationBundle\\Form\\Handler\\ChannelHandler',
            'oro_integration.form.subscriber.channel_subscriber.class' => 'Oro\\Bundle\\IntegrationBundle\\Form\\EventListener\\ChannelFormSubscriber',
            'oro_integration.form.subscriber.default_owner_subscriber.class' => 'Oro\\Bundle\\IntegrationBundle\\Form\\EventListener\\DefaultOwnerSubscriber',
            'oro_integration.manager.types_registry.class' => 'Oro\\Bundle\\IntegrationBundle\\Manager\\TypesRegistry',
            'oro_integration.manager.fields_changes.class' => 'Oro\\Bundle\\IntegrationBundle\\Manager\\FieldsChangesManager',
            'oro_integration.sync.processor.class' => 'Oro\\Bundle\\IntegrationBundle\\Provider\\SyncProcessor',
            'oro_integration.processor_registry.class' => 'Oro\\Bundle\\IntegrationBundle\\Provider\\SyncProcessorRegistry',
            'oro_integration.provider.connector_context_mediator.class' => 'Oro\\Bundle\\IntegrationBundle\\Provider\\ConnectorContextMediator',
            'oro_integration.importexport.processor.import.class' => 'Oro\\Bundle\\IntegrationBundle\\ImportExport\\Processor\\StepExecutionAwareImportProcessor',
            'oro_integration.importexport.processor.export.class' => 'Oro\\Bundle\\IntegrationBundle\\ImportExport\\Processor\\StepExecutionAwareExportProcessor',
            'oro_integration.job_executor.class' => 'Oro\\Bundle\\IntegrationBundle\\ImportExport\\Job\\Executor',
            'oro_integration.writer.persistent_batch_writer.class' => 'Oro\\Bundle\\IntegrationBundle\\ImportExport\\Writer\\PersistentBatchWriter',
            'oro_integration.helper.default_owner_helper.class' => 'Oro\\Bundle\\IntegrationBundle\\ImportExport\\Helper\\DefaultOwnerHelper',
            'oro_integration.reader.entity.by_id.class' => 'Oro\\Bundle\\IntegrationBundle\\Reader\\EntityReaderById',
            'oro_integration.logger.strategy.class' => 'Oro\\Bundle\\IntegrationBundle\\Logger\\LoggerStrategy',
            'oro_integration.delete_manager.class' => 'Oro\\Bundle\\IntegrationBundle\\Manager\\DeleteManager',
            'oro_integration.sync_scheduler.class' => 'Oro\\Bundle\\IntegrationBundle\\Manager\\SyncScheduler',
            'oro_integration.reverse_sync.processor.class' => 'Oro\\Bundle\\IntegrationBundle\\Provider\\ReverseSyncProcessor',
            'oro_integration.provider.settings_provider.class' => 'Oro\\Bundle\\IntegrationBundle\\Provider\\SettingsProvider',
            'oro_integration.config_resolver.class' => 'Oro\\Component\\Config\\Resolver\\SystemAwareResolver',
            'oro_integration.utils.form_utils.class' => 'Oro\\Bundle\\IntegrationBundle\\Utils\\FormUtils',
            'oro_integration.datagrid.status_grid_helper.class' => 'Oro\\Bundle\\IntegrationBundle\\Datagrid\\StatusGridHelper',
            'oro_integration.event_listener.keep_avile.class' => 'Oro\\Bundle\\IntegrationBundle\\EventListener\\KeepAliveListener',
            'oro_integration.action.save_fields_changes.class' => 'Oro\\Bundle\\IntegrationBundle\\Model\\Action\\SaveFieldsChangesAction',
            'oro_integration.action.remove_fields_changes.class' => 'Oro\\Bundle\\IntegrationBundle\\Model\\Action\\RemoveFieldsChangesAction',
            'oro_integration.workflow.condition.has_active_integration.class' => 'Oro\\Bundle\\IntegrationBundle\\Model\\Condition\\HasActiveIntegration',
            'oro_integration.workflow.action.populate_integration_owner.class' => 'Oro\\Bundle\\IntegrationBundle\\Model\\Action\\PopulateIntegrationOwner',
            'oro_integration.twig.integration.class' => 'Oro\\Bundle\\IntegrationBundle\\Twig\\IntegrationExtension',
            'oro_integration.transport.rest.guzzle.client_factory.class' => 'Oro\\Bundle\\IntegrationBundle\\Provider\\Rest\\Client\\Guzzle\\GuzzleRestClientFactory',
            'oro_integration.transport.rest.abstract_transport.class' => 'Oro\\Bundle\\IntegrationBundle\\Provider\\Rest\\Transport\\AbstractRestTransport',
            'akeneo_batch.connectors.class' => 'Akeneo\\Bundle\\BatchBundle\\Connector\\ConnectorRegistry',
            'akeneo_batch.job_repository.class' => 'Akeneo\\Bundle\\BatchBundle\\Job\\DoctrineJobRepository',
            'akeneo_batch.job_factory.class' => 'Akeneo\\Bundle\\BatchBundle\\Job\\JobFactory',
            'akeneo_batch.step_factory.class' => 'Akeneo\\Bundle\\BatchBundle\\Step\\StepFactory',
            'akeneo_batch.logger_subscriber.class' => 'Akeneo\\Bundle\\BatchBundle\\EventListener\\LoggerSubscriber',
            'akeneo_batch.notification_subscriber.class' => 'Akeneo\\Bundle\\BatchBundle\\EventListener\\NotificationSubscriber',
            'akeneo_batch.logger.batch_log_handler.class' => 'Oro\\Bundle\\BatchBundle\\Monolog\\Handler\\BatchLogHandler',
            'akeneo_batch.mail_notifier.class' => 'Akeneo\\Bundle\\BatchBundle\\Notification\\MailNotifier',
            'akeneo_batch.set_job_execution_log_file_subscriber.class' => 'Akeneo\\Bundle\\BatchBundle\\EventListener\\SetJobExecutionLogFileSubscriber',
            'akeneo_batch.manager.job_execution.class' => 'Akeneo\\Bundle\\BatchBundle\\Manager\\JobExecutionManager',
            'akeneo_batch.launcher.simple_job_launcher.class' => 'Akeneo\\Bundle\\BatchBundle\\Launcher\\SimpleJobLauncher',
            'akeneo_batch.connectors_config' => NULL,
            'akeneo_batch.jobs_config' => NULL,
            'akeneo_batch.entity.job_execution.class' => 'Akeneo\\Bundle\\BatchBundle\\Entity\\JobExecution',
            'akeneo_batch.mail_notifier.sender_email' => 'mailer@bap.com',
            'jms_job_queue.entity.many_to_any_listener.class' => 'JMS\\JobQueueBundle\\Entity\\Listener\\ManyToAnyListener',
            'jms_job_queue.twig.extension.class' => 'JMS\\JobQueueBundle\\Twig\\JobQueueExtension',
            'jms_job_queue.statistics' => true,
            'jms_job_queue.entity.statistics_listener.class' => 'JMS\\JobQueueBundle\\Entity\\Listener\\StatisticsListener',
            'jms_job_queue.queue_options_defaults' => array(

            ),
            'jms_job_queue.queue_options' => array(

            ),
            'knp_gaufrette.filesystem_map.class' => 'Knp\\Bundle\\GaufretteBundle\\FilesystemMap',
            'oro_activity.manager.class' => 'Oro\\Bundle\\ActivityBundle\\Manager\\ActivityManager',
            'oro_activity.entity_config_dumper.extension.class' => 'Oro\\Bundle\\ActivityBundle\\Tools\\ActivityEntityConfigDumperExtension',
            'oro_activity.entity_generator.extension.class' => 'Oro\\Bundle\\ActivityBundle\\Tools\\ActivityEntityGeneratorExtension',
            'oro_activity.migration.extension.activity.class' => 'Oro\\Bundle\\ActivityBundle\\Migration\\Extension\\ActivityExtension',
            'oro_activity.widget_provider.activities.class' => 'Oro\\Bundle\\UIBundle\\Provider\\ChainWidgetProvider',
            'oro_activity.widget_provider.activities.main.class' => 'Oro\\Bundle\\ActivityBundle\\Provider\\ActivityWidgetProvider',
            'oro_activity.widget_provider.activities.menu.class' => 'Oro\\Bundle\\UIBundle\\Provider\\TabMenuWidgetProvider',
            'oro_activity.widget_provider.actions.class' => 'Oro\\Bundle\\ActivityBundle\\Provider\\ActivityActionWidgetProvider',
            'oro_activity.manager.activity.api.class' => 'Oro\\Bundle\\ActivityBundle\\Entity\\Manager\\ActivityApiEntityManager',
            'oro_activity.manager.activity_search.api.class' => 'Oro\\Bundle\\ActivityBundle\\Entity\\Manager\\ActivitySearchApiEntityManager',
            'oro_activity.manager.activity_entity.api.class' => 'Oro\\Bundle\\ActivityBundle\\Entity\\Manager\\ActivityEntityApiEntityManager',
            'oro_activity.handler.delete.activity_entity.class' => 'Oro\\Bundle\\ActivityBundle\\Entity\\Manager\\ActivityEntityDeleteHandler',
            'oro_activity.form.handler.activity_entity.api.class' => 'Oro\\Bundle\\ActivityBundle\\Form\\Handler\\ActivityEntityApiHandler',
            'oro_activity.manager.activity_target.api.class' => 'Oro\\Bundle\\ActivityBundle\\Entity\\Manager\\ActivityTargetApiEntityManager',
            'oro_activity_list.entity.class' => 'Oro\\Bundle\\ActivityListBundle\\Entity\\ActivityList',
            'oro_activity_list.manager.class' => 'Oro\\Bundle\\ActivityListBundle\\Entity\\Manager\\ActivityListManager',
            'oro_activity_list.collect_manager.class' => 'Oro\\Bundle\\ActivityListBundle\\Entity\\Manager\\CollectListManager',
            'oro_activity_list.manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_activity_list.event_listener.actitity_list_listener.class' => 'Oro\\Bundle\\ActivityListBundle\\EventListener\\ActivityListListener',
            'oro_activity_list.event_listener.actitity_list_changes_listener.class' => 'Oro\\Bundle\\ActivityListBundle\\EventListener\\ActivityListChangesListener',
            'oro_activity_list.provider.chain.class' => 'Oro\\Bundle\\ActivityListBundle\\Provider\\ActivityListChainProvider',
            'oro_activity_list.provider.email_recipients.class' => 'Oro\\Bundle\\ActivityListBundle\\Provider\\EmailRecipientsProvider',
            'oro_activity_list.event_listener.segment_widget_options_listener.class' => 'Oro\\Bundle\\ActivityListBundle\\EventListener\\SegmentWidgetOptionsListener',
            'oro_activity_list.event_listener.segment_condition_builder_options_listener.class' => 'Oro\\Bundle\\ActivityListBundle\\EventListener\\SegmentConditionBuilderOptionsListener',
            'oro_activity_list.entity_config_dumper.extension.class' => 'Oro\\Bundle\\ActivityListBundle\\Tools\\ActivityListEntityConfigDumperExtension',
            'oro_activity_list.entity_generator.extension.class' => 'Oro\\Bundle\\ActivityListBundle\\Tools\\ActivityListEntityGeneratorExtension',
            'oro_activity_list.migration.extension.activity_list' => 'Oro\\Bundle\\ActivityListBundle\\Migration\\Extension\\ActivityListExtension',
            'oro_activity_list.migration.activity_list.post_up.listener.class' => 'Oro\\Bundle\\ActivityListBundle\\EventListener\\ActivityListPostUpMigrationListener',
            'oro_activity_list.placeholder.filter.class' => 'Oro\\Bundle\\ActivityListBundle\\Placeholder\\PlaceholderFilter',
            'oro_activity_list.filter.helper.class' => 'Oro\\Bundle\\ActivityListBundle\\Filter\\ActivityListFilterHelper',
            'oro_activity_list.filter.activity_list.class' => 'Oro\\Bundle\\ActivityListBundle\\Filter\\ActivityListFilter',
            'oro_activity_list.filter.datagrid_helper.class' => 'Oro\\Bundle\\ActivityListBundle\\Filter\\DatagridHelper',
            'oro_activity_list.helper.acl_criteria.class' => 'Oro\\Bundle\\ActivityListBundle\\Helper\\ActivityListAclCriteriaHelper',
            'oro_activity_list.form.type.activity_list_filter.class' => 'Oro\\Bundle\\ActivityListBundle\\Form\\Type\\ActivityListFilterType',
            'oro_address.address.entity.class' => 'Oro\\Bundle\\AddressBundle\\Entity\\Address',
            'oro_address.address.type.entity.class' => 'Oro\\Bundle\\AddressBundle\\Entity\\AddressType',
            'oro_address.address.manager.class' => 'Oro\\Bundle\\AddressBundle\\Entity\\Manager\\AddressManager',
            'oro_address.provider.address.class' => 'Oro\\Bundle\\AddressBundle\\Provider\\AddressProvider',
            'oro_address.provider.phone.class' => 'Oro\\Bundle\\AddressBundle\\Provider\\PhoneProvider',
            'oro_address.form.listener.address.class' => 'Oro\\Bundle\\AddressBundle\\Form\\EventListener\\AddressCountryAndRegionSubscriber',
            'oro_address.form.type.address.class' => 'Oro\\Bundle\\AddressBundle\\Form\\Type\\AddressType',
            'oro_address.form.type.address_collection.class' => 'Oro\\Bundle\\AddressBundle\\Form\\Type\\AddressCollectionType',
            'oro_address.form.type.typed_address.class' => 'Oro\\Bundle\\AddressBundle\\Form\\Type\\TypedAddressType',
            'oro_address.form.type.email.class' => 'Oro\\Bundle\\AddressBundle\\Form\\Type\\EmailType',
            'oro_address.form.type.email_collection.class' => 'Oro\\Bundle\\AddressBundle\\Form\\Type\\EmailCollectionType',
            'oro_address.form.type.country.class' => 'Oro\\Bundle\\AddressBundle\\Form\\Type\\CountryType',
            'oro_address.form.type.region.class' => 'Oro\\Bundle\\AddressBundle\\Form\\Type\\RegionType',
            'oro_address.form.type.phone.class' => 'Oro\\Bundle\\AddressBundle\\Form\\Type\\PhoneType',
            'oro_address.form.type.phone_collection.class' => 'Oro\\Bundle\\AddressBundle\\Form\\Type\\PhoneCollectionType',
            'oro_address.form.handler.address.class' => 'Oro\\Bundle\\AddressBundle\\Form\\Handler\\AddressHandler',
            'oro_address.importexport.template_fixture.country.class' => 'Oro\\Bundle\\AddressBundle\\ImportExport\\TemplateFixture\\CountryFixture',
            'oro_address.importexport.template_fixture.region.class' => 'Oro\\Bundle\\AddressBundle\\ImportExport\\TemplateFixture\\RegionFixture',
            'oro_address.importexport.template_fixture.address.class' => 'Oro\\Bundle\\AddressBundle\\ImportExport\\TemplateFixture\\AddressFixture',
            'oro_address.importexport.template_fixture.address_type.class' => 'Oro\\Bundle\\AddressBundle\\ImportExport\\TemplateFixture\\AddressTypeFixture',
            'oro_address' => array(

            ),
            'oro_assetic.raw_configuration' => array(
                'css_debug_groups' => array(

                ),
                'css_debug_all' => false,
                'css' => array(
                    'timepicker' => array(
                        0 => 'bundles/oroui/lib/jquery.timepicker-1.4.13/jquery.timepicker.css',
                    ),
                    'oroui' => array(
                        0 => 'bundles/oroui/lib/bootstrap/bootstrap.less',
                        1 => 'bundles/oroui/lib/jstree/themes/default/style.css',
                        2 => 'bundles/oroui/lib/font-awesome/css/font-awesome.css',
                        3 => 'bundles/oroui/lib/simplecolorpicker/jquery.simplecolorpicker.css',
                        4 => 'bundles/oroui/lib/simplecolorpicker/jquery.simplecolorpicker-fontawesome.css',
                        5 => 'bundles/oroui/lib/minicolors/jquery.minicolors.css',
                        6 => 'bundles/oroui/css/font-awesome-4.3/font-awesome.css',
                        7 => 'bundles/oroui/css/jquery-ui.grid.css',
                        8 => 'bundles/oroui/css/jquery-ui-1.10.2.custom.css',
                        9 => 'bundles/oroui/css/less/main.less',
                        10 => 'bundles/oroui/css/all.css',
                    ),
                    'orosecurity' => array(
                        0 => 'bundles/orosecurity/css/selector.less',
                    ),
                    'oroattachment' => array(
                        0 => 'bundles/oroattachment/css/attachment.less',
                    ),
                    'oroemail' => array(
                        0 => 'bundles/oroemail/css/less/style.less',
                    ),
                    'oroentityextend' => array(
                        0 => 'bundles/oroentityextend/css/extend.css',
                    ),
                    'orointegration' => array(
                        0 => 'bundles/orointegration/css/style.css',
                    ),
                    'oroactivitylist' => array(
                        0 => 'bundles/oroactivitylist/css/less/activity-list.less',
                    ),
                    'oroaddress' => array(
                        0 => 'bundles/oroaddress/css/less/address.less',
                        1 => 'bundles/oroaddress/css/address.css',
                    ),
                    'orocalendar' => array(
                        0 => 'bundles/orocalendar/css/calendar.css',
                        1 => 'bundles/orocalendar/css/less/print.less',
                        2 => 'bundles/orocalendar/lib/fullcalendar/fullcalendar.css',
                    ),
                    'oroconfig' => array(
                        0 => 'bundles/oroconfig/css/less/config.less',
                        1 => 'bundles/oroform/css/less/form.less',
                    ),
                    'orodataaudit' => array(
                        0 => 'bundles/orodataaudit/css/less/oro.audit.less',
                    ),
                    'orodatagrid' => array(
                        0 => 'bundles/orodatagrid/lib/backgrid/backgrid.css',
                        1 => 'bundles/orodatagrid/lib/backgrid/extensions/paginator/backgrid-paginator.css',
                        2 => 'bundles/orodatagrid/css/oro.grid.less',
                    ),
                    'oroentitymerge' => array(
                        0 => 'bundles/oroentitymerge/css/less/merge_view.less',
                    ),
                    'oroentitypagination' => array(
                        0 => 'bundles/oroentitypagination/css/entity-pagination.css',
                    ),
                    'orofilter' => array(
                        0 => 'bundles/orofilter/lib/multiselect/jquery.multiselect.css',
                        1 => 'bundles/orofilter/lib/multiselect/jquery.multiselect.filter.css',
                        2 => 'bundles/orofilter/css/less/oro.filter.less',
                    ),
                    'oroimportexport' => array(
                        0 => 'bundles/oroimportexport/css/import.css',
                    ),
                    'orolocale' => array(
                        0 => 'bundles/orolocale/css/style.css',
                    ),
                    'oronote' => array(
                        0 => 'bundles/oronote/css/less/note.less',
                    ),
                    'oroplatform' => array(
                        0 => 'bundles/oroplatform/css/style.css',
                    ),
                    'oroquerydesigner' => array(
                        0 => 'bundles/oroquerydesigner/css/less/condition-builder.less',
                        1 => 'bundles/oroquerydesigner/css/query-designer.css',
                    ),
                    'ororeport' => array(
                        0 => 'bundles/ororeport/css/report.css',
                    ),
                    'orosearch' => array(
                        0 => 'bundles/orosearch/css/search.less',
                    ),
                    'orosegment' => array(
                        0 => 'bundles/orosegment/css/segment.css',
                    ),
                    'orosidebar' => array(
                        0 => 'bundles/orosidebar/css/sidebar.css',
                        1 => 'bundles/orosidebar/css/widget-add.css',
                        2 => 'bundles/orosidebar/css/modal.css',
                        3 => 'bundles/orosidebar/sidebar_widgets/sticky_note/css/styles.css',
                    ),
                    'orotag' => array(
                        0 => 'bundles/orotag/css/tag-grid.less',
                    ),
                    'orotranslation' => array(
                        0 => 'bundles/orotranslation/css/style.css',
                    ),
                    'orowindows' => array(
                        0 => 'bundles/orowindows/css/jquery.dialog.extended.css',
                    ),
                    'oroworkflow' => array(
                        0 => 'bundles/oroworkflow/css/less/workflow.less',
                    ),
                    'orocomment' => array(
                        0 => 'bundles/orocomment/css/less/comment.less',
                    ),
                    'orodashboard' => array(
                        0 => 'bundles/orodashboard/css/less/dashboard.less',
                    ),
                    'orotracking' => array(
                        0 => 'bundles/orotracking/css/less/code.less',
                    ),
                    'ororeminder' => array(
                        0 => 'bundles/ororeminder/less/style.less',
                    ),
                ),
            ),
            'oro_assetic.configuration.class' => 'Oro\\Bundle\\AsseticBundle\\AssetsConfiguration',
            'oro_assetic.twig_extension.class' => 'Oro\\Bundle\\AsseticBundle\\Twig\\AsseticExtension',
            'oro_batch.cleanup_interval' => '1 month',
            'oro_batch.log_batch' => false,
            'oro_batch.orm.query_builder.count_query_optimizer.class' => 'Oro\\Bundle\\BatchBundle\\ORM\\QueryBuilder\\CountQueryBuilderOptimizer',
            'oro_calendar.enabled_system_calendar' => 'system',
            'oro_calendar.calendar.entity.class' => 'Oro\\Bundle\\CalendarBundle\\Entity\\Calendar',
            'oro_calendar.calendar_event.entity.class' => 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent',
            'oro_calendar.calendar_property.entity.class' => 'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarProperty',
            'oro_calendar.system_calendar.entity.class' => 'Oro\\Bundle\\CalendarBundle\\Entity\\SystemCalendar',
            'oro_calendar.listener.entity_listener.class' => 'Oro\\Bundle\\CalendarBundle\\EventListener\\EntityListener',
            'oro_calendar.listener.datagrid.activity.class' => 'Oro\\Bundle\\CalendarBundle\\EventListener\\Datagrid\\ActivityGridListener',
            'oro_calendar.listener.datagrid.system_calendar.class' => 'Oro\\Bundle\\CalendarBundle\\EventListener\\Datagrid\\SystemCalendarGridListener',
            'oro_calendar.datagrid.action_permission_provider.class' => 'Oro\\Bundle\\CalendarBundle\\Datagrid\\ActionPermissionProvider',
            'oro_calendar.calendar_event.manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_calendar.calendar_property.manager.api.class' => 'Oro\\Bundle\\CalendarBundle\\Manager\\CalendarPropertyApiEntityManager',
            'oro_calendar.system_calendar.manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_calendar.twig.dateformat.class' => 'Oro\\Bundle\\CalendarBundle\\Twig\\DateFormatExtension',
            'oro_calendar.provider.calendar_config.class' => 'Oro\\Bundle\\CalendarBundle\\Provider\\CalendarDateTimeConfigProvider',
            'oro_calendar.owner_assignment_checker.calendar.class' => 'Oro\\Bundle\\CalendarBundle\\Ownership\\CalendarOwnerAssignmentChecker',
            'oro_calendar.activity_list.provider.class' => 'Oro\\Bundle\\CalendarBundle\\Provider\\CalendarEventActivityListProvider',
            'oro_calendar.calendar_event_manager.class' => 'Oro\\Bundle\\CalendarBundle\\Manager\\CalendarEventManager',
            'oro_calendar.calendar_manager.class' => 'Oro\\Bundle\\CalendarBundle\\Manager\\CalendarManager',
            'oro_calendar.calendar_property_provider.class' => 'Oro\\Bundle\\CalendarBundle\\Provider\\CalendarPropertyProvider',
            'oro_calendar.calendar_provider.user.class' => 'Oro\\Bundle\\CalendarBundle\\Provider\\UserCalendarProvider',
            'oro_calendar.calendar_provider.system.class' => 'Oro\\Bundle\\CalendarBundle\\Provider\\SystemCalendarProvider',
            'oro_calendar.calendar_provider.public.class' => 'Oro\\Bundle\\CalendarBundle\\Provider\\PublicCalendarProvider',
            'oro_calendar.calendar_event_normalizer.user.class' => 'Oro\\Bundle\\CalendarBundle\\Provider\\UserCalendarEventNormalizer',
            'oro_calendar.calendar_event_normalizer.system.class' => 'Oro\\Bundle\\CalendarBundle\\Provider\\SystemCalendarEventNormalizer',
            'oro_calendar.calendar_event_normalizer.public.class' => 'Oro\\Bundle\\CalendarBundle\\Provider\\PublicCalendarEventNormalizer',
            'oro_calendar.autocomplete.user_calendar_handler.class' => 'Oro\\Bundle\\CalendarBundle\\Autocomplete\\UserCalendarHandler',
            'oro_calendar.send_processor.email.class' => 'Oro\\Bundle\\CalendarBundle\\Model\\Email\\EmailSendProcessor',
            'oro_calendar.system_calendar_config.class' => 'Oro\\Bundle\\CalendarBundle\\Provider\\SystemCalendarConfig',
            'oro_calendar.event_listener.navigation.class' => 'Oro\\Bundle\\CalendarBundle\\EventListener\\NavigationListener',
            'oro_calendar.system_calendar.handler.delete.class' => 'Oro\\Bundle\\CalendarBundle\\Handler\\SystemCalendarDeleteHandler',
            'oro_calendar.calendar_event.handler.delete.class' => 'Oro\\Bundle\\CalendarBundle\\Handler\\CalendarEventDeleteHandler',
            'oro_calendar.system_calendar_event.datagrid_helper.class' => 'Oro\\Bundle\\CalendarBundle\\Datagrid\\SystemCalendarEventGridHelper',
            'oro_calendar.calendar_event.form.type.class' => 'Oro\\Bundle\\CalendarBundle\\Form\\Type\\CalendarEventType',
            'oro_calendar.calendar_event.form.type.api.class' => 'Oro\\Bundle\\CalendarBundle\\Form\\Type\\CalendarEventApiType',
            'oro_calendar.calendar_event.form.handler.class' => 'Oro\\Bundle\\CalendarBundle\\Form\\Handler\\CalendarEventHandler',
            'oro_calendar.calendar_event.form.handler.api.class' => 'Oro\\Bundle\\CalendarBundle\\Form\\Handler\\CalendarEventApiHandler',
            'oro_calendar.calendar_event_invitees.form.type.class' => 'Oro\\Bundle\\CalendarBundle\\Form\\Type\\CalendarEventInviteesType',
            'oro_calendar.calendar_event.transformer.events_to_users.class' => 'Oro\\Bundle\\CalendarBundle\\Form\\DataTransformer\\EventsToUsersTransformer',
            'oro_calendar.calendar_property.form.type.api.class' => 'Oro\\Bundle\\CalendarBundle\\Form\\Type\\CalendarPropertyApiType',
            'oro_calendar.calendar_property.form.handler.api.class' => 'Oro\\Bundle\\CalendarBundle\\Form\\Handler\\CalendarPropertyApiHandler',
            'oro_calendar.calendar_choice.form.type.class' => 'Oro\\Bundle\\CalendarBundle\\Form\\Type\\CalendarChoiceType',
            'oro_calendar.calendar_choice_template.form.type.class' => 'Oro\\Bundle\\CalendarBundle\\Form\\Type\\CalendarChoiceTemplateType',
            'oro_calendar.system_calendar.form.handler.class' => 'Oro\\Bundle\\CalendarBundle\\Form\\Handler\\SystemCalendarHandler',
            'oro_calendar.system_calendar.form.type.class' => 'Oro\\Bundle\\CalendarBundle\\Form\\Type\\SystemCalendarType',
            'oro_calendar.system_calendar_event.form.handler.class' => 'Oro\\Bundle\\CalendarBundle\\Form\\Handler\\SystemCalendarEventHandler',
            'oro_calendar.extension.acl_label.class' => 'Oro\\Bundle\\CalendarBundle\\Form\\Extension\\AclObjectLabelTypeExtension',
            'oro_chart.config_provider.class' => 'Oro\\Bundle\\ChartBundle\\Model\\ConfigProvider',
            'oro_chart.view_builder.class' => 'Oro\\Bundle\\ChartBundle\\Model\\ChartViewBuilder',
            'oro_chart.options_builder.class' => 'Oro\\Bundle\\ChartBundle\\Model\\ChartOptionsBuilder',
            'oro_chart.data_transformer.factory.class' => 'Oro\\Bundle\\ChartBundle\\Model\\Data\\Transformer\\TransformerFactory',
            'oro_chart.data_transformer.pie_chart.class' => 'Oro\\Bundle\\ChartBundle\\Model\\Data\\Transformer\\PieChartDataTransformer',
            'oro_chart.form.type.settings.class' => 'Oro\\Bundle\\ChartBundle\\Form\\Type\\ChartSettingsType',
            'oro_chart.form.type.class' => 'Oro\\Bundle\\ChartBundle\\Form\\Type\\ChartType',
            'oro_chart.form.type.settings.collection.class' => 'Oro\\Bundle\\ChartBundle\\Form\\Type\\ChartSettingsCollectionType',
            'oro_chart.form.event_listener.chart.class' => 'Oro\\Bundle\\ChartBundle\\Form\\EventListener\\ChartTypeEventListener',
            'oro_config.config_bag.class' => 'Oro\\Bundle\\ConfigBundle\\Config\\ConfigBag',
            'oro_config.config_definition_bag.class' => 'Oro\\Bundle\\ConfigBundle\\Config\\ConfigDefinitionImmutableBag',
            'oro_config.global.class' => 'Oro\\Bundle\\ConfigBundle\\Config\\GlobalScopeManager',
            'oro_config.user.class' => 'Oro\\Bundle\\ConfigBundle\\Config\\UserScopeManager',
            'oro_config.twig_extension.class' => 'Oro\\Bundle\\ConfigBundle\\Twig\\ConfigExtension',
            'oro_config.provider.system_configuration.form_provider.class' => 'Oro\\Bundle\\ConfigBundle\\Provider\\SystemConfigurationFormProvider',
            'oro_config.form.config_subscriber.class' => 'Oro\\Bundle\\ConfigBundle\\Form\\EventListener\\ConfigSubscriber',
            'oro_config.form.handler.config.class' => 'Oro\\Bundle\\ConfigBundle\\Form\\Handler\\ConfigHandler',
            'oro_config.type.form.class' => 'Oro\\Bundle\\ConfigBundle\\Form\\Type\\FormType',
            'oro_config.type.form_field.class' => 'Oro\\Bundle\\ConfigBundle\\Form\\Type\\FormFieldType',
            'oro_config.type.config_checkbox.class' => 'Oro\\Bundle\\ConfigBundle\\Form\\Type\\ConfigCheckbox',
            'oro_config.type.parent_scope_checkbox.class' => 'Oro\\Bundle\\ConfigBundle\\Form\\Type\\ParentScopeCheckbox',
            'oro_config.manager.api.class' => 'Oro\\Bundle\\ConfigBundle\\Config\\ConfigApiManager',
            'oro_config.manager.class' => 'Oro\\Bundle\\ConfigBundle\\Config\\ConfigManager',
            'oro_config.user_config_manager.class' => 'Oro\\Bundle\\ConfigBundle\\Manager\\UserConfigManager',
            'oro_cron.job_daemon.class' => 'Oro\\Bundle\\CronBundle\\Job\\Daemon',
            'oro_cron.job_manager.class' => 'Oro\\Bundle\\CronBundle\\Entity\\Manager\\JobManager',
            'oro_cron.max_jobs' => 5,
            'oro_cron.max_runtime' => 3600,
            'oro_cron.jms_statistics' => true,
            'oro_dataaudit.metadata.metadata_factory.class' => 'Oro\\Bundle\\DataAuditBundle\\Metadata\\ExtendMetadataFactory',
            'oro_dataaudit.metadata.annotation_driver.class' => 'Oro\\Bundle\\DataAuditBundle\\Metadata\\Driver\\AnnotationDriver',
            'oro_dataaudit.listener.entity_listener.class' => 'Oro\\Bundle\\DataAuditBundle\\EventListener\\EntityListener',
            'oro_dataaudit.listener.kernel_listener.class' => 'Oro\\Bundle\\DataAuditBundle\\EventListener\\KernelListener',
            'oro_dataaudit.listener.deprecated_audit_data_listener.class' => 'Oro\\Bundle\\DataAuditBundle\\EventListener\\DeprecatedAuditDataListener',
            'oro_dataaudit.loggable.loggable_manager.class' => 'Oro\\Bundle\\DataAuditBundle\\Loggable\\LoggableManager',
            'oro_dataaudit.loggable.audit_entity_mapper.class' => 'Oro\\Bundle\\DataAuditBundle\\Loggable\\AuditEntityMapper',
            'oro_dataaudit.loggable.entity.class' => 'Oro\\Bundle\\DataAuditBundle\\Entity\\Audit',
            'oro_dataaudit.loggable.entity_field.class' => 'Oro\\Bundle\\DataAuditBundle\\Entity\\AuditField',
            'oro_dataaudit.event_listener.dataaudit_grid_listener.class' => 'Oro\\Bundle\\DataAuditBundle\\EventListener\\AuditGridListener',
            'oro_dataaudit.event_listener.dataaudit_history_grid_listener.class' => 'Oro\\Bundle\\DataAuditBundle\\EventListener\\AuditHistoryGridListener',
            'oro_dataaudit.event_listener.segment_widget_options_listener.class' => 'Oro\\Bundle\\DataAuditBundle\\EventListener\\SegmentWidgetOptionsListener',
            'oro_dataaudit.event_listener.segment_condition_builder_options_listener.class' => 'Oro\\Bundle\\DataAuditBundle\\EventListener\\SegmentConditionBuilderOptionsListener',
            'oro_dataaudit.placeholder.filter.class' => 'Oro\\Bundle\\DataAuditBundle\\Placeholder\\AuditableFilter',
            'oro_dataaudit.audit.manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_dataaudit.filter.audit.class' => 'Oro\\Bundle\\DataAuditBundle\\Filter\\AuditFilter',
            'oro_dataaudit.migration.extension.audit_field.class' => 'Oro\\Bundle\\DataAuditBundle\\Migration\\Extension\\AuditFieldExtension',
            'oro_dataaudit.form.type.filter.class' => 'Oro\\Bundle\\DataAuditBundle\\Form\\Type\\FilterType',
            'oro_datagrid.datagrid.base.class' => 'Oro\\Bundle\\DataGridBundle\\Datagrid\\Datagrid',
            'oro_datagrid.extension.acceptor.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Acceptor',
            'oro_datagrid.datagrid.name_strategy.class' => 'Oro\\Bundle\\DashboardBundle\\Datagrid\\NameStrategy',
            'oro_datagrid.datagrid.manager.class' => 'Oro\\Bundle\\DataGridBundle\\Datagrid\\Manager',
            'oro_datagrid.datagrid.builder.class' => 'Oro\\Bundle\\DataGridBundle\\Datagrid\\Builder',
            'oro_datagrid.datagrid.parameters.class' => 'Oro\\Bundle\\DataGridBundle\\Datagrid\\ParameterBag',
            'oro_datagrid.datagrid.request_parameters_factory.class' => 'Oro\\Bundle\\DataGridBundle\\Datagrid\\RequestParameterBagFactory',
            'oro_datagrid.datagrid.guesser.class' => 'Oro\\Bundle\\DataGridBundle\\Datagrid\\DatagridGuesser',
            'oro_datagrid.datagrid.column_options_guesser.class' => 'Oro\\Bundle\\DataGridBundle\\Datagrid\\DefaultColumnOptionsGuesser',
            'oro_datagrid.provider.resolver.class' => 'Oro\\Bundle\\DataGridBundle\\Provider\\SystemAwareResolver',
            'oro_datagrid.configuration.provider.class' => 'Oro\\Bundle\\DataGridBundle\\Provider\\ConfigurationProvider',
            'oro_datagrid.configuration.provider.chain.class' => 'Oro\\Bundle\\DataGridBundle\\Provider\\ChainConfigurationProvider',
            'oro_datagrid.event.dispatcher.class' => 'Oro\\Bundle\\DataGridBundle\\Event\\EventDispatcher',
            'oro_datagrid.event_listener.base_orm_relation.class' => 'Oro\\Bundle\\DataGridBundle\\EventListener\\BaseOrmRelationDatagridListener',
            'oro_datagrid.event_listener.datasource_bind_parameters.class' => 'Oro\\Bundle\\DataGridBundle\\EventListener\\DatasourceBindParametersListener',
            'oro_datagrid.event_listener.ormdatasource_acl.class' => 'Oro\\Bundle\\DataGridBundle\\EventListener\\OrmDatasourceAclListener',
            'oro_datagrid.event_listener.row_selection.class' => 'Oro\\Bundle\\DataGridBundle\\EventListener\\RowSelectionListener',
            'oro_datagrid.event_listener.cell_selection.class' => 'Oro\\Bundle\\DataGridBundle\\EventListener\\CellSelectionListener',
            'oro_datagrid.twig.datagrid.class' => 'Oro\\Bundle\\DataGridBundle\\Twig\\DataGridExtension',
            'oro_datagrid.event_listener.grid_views_load.class' => 'Oro\\Bundle\\DataGridBundle\\EventListener\\GridViewsLoadListener',
            'oro_datagrid.form.type.grid_view_type.class' => 'Oro\\Bundle\\DataGridBundle\\Form\\Type\\GridViewType',
            'oro_datagrid.form.type.filter_type.class' => 'Oro\\Bundle\\DataGridBundle\\Form\\Type\\FilterType',
            'oro_datagrid.form.type.sorting_type.class' => 'Oro\\Bundle\\DataGridBundle\\Form\\Type\\GridSortingType',
            'oro_datagrid.grid_view.manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_datagrid.grid_view.entity.class' => 'Oro\\Bundle\\DataGridBundle\\Entity\\GridView',
            'oro_datagrid.grid_view.form.handler.api.class' => 'Oro\\Bundle\\DataGridBundle\\Form\\Handler\\GridViewApiHandler',
            'oro_datagrid.extension.toolbar.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Toolbar\\ToolbarExtension',
            'oro_datagrid.extension.formatter.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Formatter\\FormatterExtension',
            'oro_datagrid.extension.orm_pager.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Pager\\OrmPagerExtension',
            'oro_datagrid.extension.pager.orm.pager.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Pager\\Orm\\Pager',
            'oro_datagrid.extension.orm_sorter.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension',
            'oro_datagrid.extension.action.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Action\\ActionExtension',
            'oro_datagrid.extension.mass_action.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\MassActionExtension',
            'oro_datagrid.extension.views.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\GridViews\\GridViewsExtension',
            'oro_datagrid.extension.export.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Export\\ExportExtension',
            'oro_datagrid.extension.gridparams.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\GridParams\\GridParamsExtension',
            'oro_datagrid.extension.totals.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Totals\\OrmTotalsExtension',
            'oro_datagrid.datasource.orm.class' => 'Oro\\Bundle\\DataGridBundle\\Datasource\\Orm\\OrmDatasource',
            'oro_datagrid.datasource.orm.parameter_binder.class' => 'Oro\\Bundle\\DataGridBundle\\Datasource\\Orm\\ParameterBinder',
            'oro_datagrid.extension.formatter.property.field_property.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\FieldProperty',
            'oro_datagrid.extension.formatter.property.url_property.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\UrlProperty',
            'oro_datagrid.extension.formatter.property.link_property.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\LinkProperty',
            'oro_datagrid.extension.formatter.property.twig_property.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\TwigTemplateProperty',
            'oro_datagrid.extension.formatter.property.translatable_property.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\TranslatableProperty',
            'oro_datagrid.extension.formatter.property.callback_property.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\CallbackProperty',
            'oro_datagrid.extension.formatter.property.localized_number_property.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\LocalizedNumberProperty',
            'oro_datagrid.extension.action.type.navigate.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Action\\Actions\\NavigateAction',
            'oro_datagrid.extension.action.type.ajax.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Action\\Actions\\AjaxAction',
            'oro_datagrid.extension.action.type.delete.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Action\\Actions\\DeleteAction',
            'oro_datagrid.extension.action.type.ajaxdelete.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Action\\Actions\\AjaxDeleteAction',
            'oro_datagrid.extension.mass_action.handler.delete.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\DeleteMassActionHandler',
            'oro_datagrid.mass_action.parameters_parser.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\MassActionParametersParser',
            'oro_datagrid.mass_action.dispatcher.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\MassActionDispatcher',
            'oro_datagrid.extension.mass_action.type.ajax.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\Actions\\Ajax\\AjaxMassAction',
            'oro_datagrid.extension.mass_action.type.delete.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\Actions\\Ajax\\DeleteMassAction',
            'oro_datagrid.extension.mass_action.type.redirect.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\Actions\\Redirect\\RedirectMassAction',
            'oro_datagrid.extension.mass_action.type.widget.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\Actions\\Widget\\WidgetMassAction',
            'oro_datagrid.extension.mass_action.type.window.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\Actions\\Widget\\WindowMassAction',
            'oro_datagrid.importexport.data_converter.class' => 'Oro\\Bundle\\DataGridBundle\\ImportExport\\DatagridDataConverter',
            'oro_datagrid.importexport.export_reader.class' => 'Oro\\Bundle\\DataGridBundle\\ImportExport\\DatagridExportReader',
            'oro_datagrid.importexport.export_connector.class' => 'Oro\\Bundle\\DataGridBundle\\ImportExport\\DatagridExportConnector',
            'oro_distribution.routing_loader.class' => 'Oro\\Bundle\\DistributionBundle\\Routing\\OroAutoLoader',
            'oro_distribution.expose_routing_loader.class' => 'Oro\\Bundle\\DistributionBundle\\Routing\\OroExposeLoader',
            'oro_distribution.package_manager.class' => 'Oro\\Bundle\\DistributionBundle\\Manager\\PackageManager',
            'oro_distribution.script_runner.class' => 'Oro\\Bundle\\DistributionBundle\\Script\\Runner',
            'oro_distribution.composer.class' => 'Composer\\Composer',
            'oro_distribution.composer.io.class' => 'Composer\\IO\\BufferIO',
            'oro_distribution.composer.installer.class' => 'Composer\\Installer',
            'oro_distribution.composer.installation_manager.class' => 'Composer\\Installer\\InstallationManager',
            'oro_distribution.composer.json_file.class' => 'Composer\\Json\\JsonFile',
            'oro_distribution.composer_json' => 'C:\\wamp\\www\\stockvalue~~\\app/../composer.json',
            'oro_distribution.listener.navigation_listener.class' => 'Oro\\Bundle\\DistributionBundle\\EventListener\\NavigationListener',
            'oro_distribution.entry_point' => 'install.php',
            'oro_distribution.security.access_denied_listener.class' => 'Oro\\Bundle\\DistributionBundle\\Security\\AccessDeniedListener',
            'oro_distribution.form.type.composer_config.class' => 'Oro\\Bundle\\DistributionBundle\\Form\\Type\\Composer\\ConfigType',
            'oro_distribution.form.type.composer_repository.class' => 'Oro\\Bundle\\DistributionBundle\\Form\\Type\\Composer\\RepositoryType',
            'oro_distribution.package_manager.system_paths' => array(
                0 => 'vendor',
                1 => 'web/bundles',
                2 => 'web/js',
                3 => 'web/css',
                4 => 'composer.json',
            ),
            'oro_distribution.composer_cache_home' => 'C:\\wamp\\www\\stockvalue~~\\app/cache/composer',
            'oro.embedded_form.form_type.available_form.class' => 'Oro\\Bundle\\EmbeddedFormBundle\\Form\\Type\\AvailableEmbeddedFormType',
            'oro_embedded_form.manager.class' => 'Oro\\Bundle\\EmbeddedFormBundle\\Manager\\EmbeddedFormManager',
            'oro_embedded_form.back_link.twig.extension.class' => 'Oro\\Bundle\\EmbeddedFormBundle\\Twig\\BackLinkExtension',
            'oro_embedded_form.form_type.class' => 'Oro\\Bundle\\EmbeddedFormBundle\\Form\\Type\\EmbeddedFormType',
            'oro_embedded_form.embed_form_layout_manager.class' => 'Oro\\Bundle\\EmbeddedFormBundle\\Manager\\EmbedFormLayoutManager',
            'oro_embedded_form.grid.formatter.embedded_form_type_property.class' => 'Oro\\Bundle\\EmbeddedFormBundle\\DataGrid\\Formatter\\EmbeddedFormTypeProperty',
            'oro_entity_merge.doctrine_helper.class' => 'Oro\\Bundle\\EntityMergeBundle\\Doctrine\\DoctrineHelper',
            'oro_entity_merge.metadata.builder.class' => 'Oro\\Bundle\\EntityMergeBundle\\Metadata\\MetadataBuilder',
            'oro_entity_merge.metadata.factory.class' => 'Oro\\Bundle\\EntityMergeBundle\\Metadata\\MetadataFactory',
            'oro_entity_merge.metadata.registry.class' => 'Oro\\Bundle\\EntityMergeBundle\\Metadata\\MetadataRegistry',
            'oro_entity_merge.data.entity_data_factory.class' => 'Oro\\Bundle\\EntityMergeBundle\\Data\\EntityDataFactory',
            'oro_entity_merge.merger.class' => 'Oro\\Bundle\\EntityMergeBundle\\Model\\EntityMerger',
            'oro_entity_merge.step.validate.class' => 'Oro\\Bundle\\EntityMergeBundle\\Model\\Step\\ValidateStep',
            'oro_entity_merge.step.merge_fields.class' => 'Oro\\Bundle\\EntityMergeBundle\\Model\\Step\\MergeFieldsStep',
            'oro_entity_merge.step.remove_entities.class' => 'Oro\\Bundle\\EntityMergeBundle\\Model\\Step\\RemoveEntitiesStep',
            'oro_entity_merge.accessor.delegate.class' => 'Oro\\Bundle\\EntityMergeBundle\\Model\\Accessor\\DelegateAccessor',
            'oro_entity_merge.accessor.default.class' => 'Oro\\Bundle\\EntityMergeBundle\\Model\\Accessor\\DefaultAccessor',
            'oro_entity_merge.accessor.inverse_association.class' => 'Oro\\Bundle\\EntityMergeBundle\\Model\\Accessor\\InverseAssociationAccessor',
            'oro_entity_merge.strategy.delegate.class' => 'Oro\\Bundle\\EntityMergeBundle\\Model\\Strategy\\DelegateStrategy',
            'oro_entity_merge.strategy.replace.class' => 'Oro\\Bundle\\EntityMergeBundle\\Model\\Strategy\\ReplaceStrategy',
            'oro_entity_merge.strategy.unite.class' => 'Oro\\Bundle\\EntityMergeBundle\\Model\\Strategy\\UniteStrategy',
            'oro_entity_merge.listener.metadata.entity_config.helper.class' => 'Oro\\Bundle\\EntityMergeBundle\\EventListener\\Metadata\\EntityConfigHelper',
            'oro_entity_merge.listener.metadata.entity_config.class' => 'Oro\\Bundle\\EntityMergeBundle\\EventListener\\Metadata\\EntityConfigListener',
            'oro_entity_merge.listener.metadata.default_label.class' => 'Oro\\Bundle\\EntityMergeBundle\\EventListener\\Metadata\\DefaultLabelListener',
            'oro_entity_merge.listener.metadata.merge_modes.class' => 'Oro\\Bundle\\EntityMergeBundle\\EventListener\\Metadata\\MergeModesListener',
            'oro_entity_merge.listener.merge_field.cascade_remove_association.class' => 'Oro\\Bundle\\EntityMergeBundle\\EventListener\\MergeField\\CascadeRemoveAssociationListener',
            'oro_entity_merge.listener.render.localized_value_render.class' => 'Oro\\Bundle\\EntityMergeBundle\\EventListener\\Render\\LocalizedValueRenderListener',
            'oro_entity_merge.validator.doctrine_helper.class' => 'Oro\\Bundle\\EntityMergeBundle\\Validator\\Constraints\\DoctrineHelperValidator',
            'oro_entity_merge.validator.max_entities_validator.class' => 'Oro\\Bundle\\EntityMergeBundle\\Validator\\Constraints\\MaxEntitiesCountValidator',
            'oro_entity_merge.validator.master_entity.class' => 'Oro\\Bundle\\EntityMergeBundle\\Validator\\Constraints\\MasterEntityValidator',
            'oro_entity_merge.validator.source_entity.class' => 'Oro\\Bundle\\EntityMergeBundle\\Validator\\Constraints\\SourceEntityValidator',
            'oro_entity_merge.validator.unique_entity.class' => 'Oro\\Bundle\\EntityMergeBundle\\Validator\\Constraints\\UniqueEntityValidator',
            'oro_entity_merge.mass_action.merge.class' => 'Oro\\Bundle\\EntityMergeBundle\\DataGrid\\Extension\\MassAction\\MergeMassAction',
            'oro_entity_merge.mass_action.data_handler.class' => 'Oro\\Bundle\\EntityMergeBundle\\DataGrid\\Extension\\MassAction\\MergeMassActionHandler',
            'oro_entity_merge.mass_action.merge_mass_action_listener.class' => 'Oro\\Bundle\\EntityMergeBundle\\EventListener\\DataGrid\\MergeMassActionListener',
            'oro_entity_merge.form.type.merge.class' => 'Oro\\Bundle\\EntityMergeBundle\\Form\\Type\\MergeType',
            'oro_entity_merge.form.type.merge_field.class' => 'Oro\\Bundle\\EntityMergeBundle\\Form\\Type\\MergeFieldType',
            'oro_entity_merge.twig.extension.class' => 'Oro\\Bundle\\EntityMergeBundle\\Twig\\MergeExtension',
            'oro_entity_merge.twig.renderer.class' => 'Oro\\Bundle\\EntityMergeBundle\\Twig\\MergeRenderer',
            'oro_entity_pagination.datagrid.extension.entity_pagination.class' => 'Oro\\Bundle\\EntityPaginationBundle\\Datagrid\\EntityPaginationExtension',
            'oro_entity_pagination.event_listener.entity_pagination.class' => 'Oro\\Bundle\\EntityPaginationBundle\\EventListener\\EntityPaginationListener',
            'oro_entity_pagination.storage.class' => 'Oro\\Bundle\\EntityPaginationBundle\\Storage\\EntityPaginationStorage',
            'oro_entity_pagination.storage.data_collector.class' => 'Oro\\Bundle\\EntityPaginationBundle\\Storage\\StorageDataCollector',
            'oro_entity_pagination.manager.class' => 'Oro\\Bundle\\EntityPaginationBundle\\Manager\\EntityPaginationManager',
            'oro_entity_pagination.message_manager.class' => 'Oro\\Bundle\\EntityPaginationBundle\\Manager\\MessageManager',
            'oro_entity_pagination.navigation.class' => 'Oro\\Bundle\\EntityPaginationBundle\\Navigation\\EntityPaginationNavigation',
            'oro_entity_pagination.twig_extension.entity_pagination.class' => 'Oro\\Bundle\\EntityPaginationBundle\\Twig\\EntityPaginationExtension',
            'oro_filter.form.event_subscriber.date.class' => 'Oro\\Bundle\\FilterBundle\\Form\\EventListener\\DateFilterSubscriber',
            'oro_filter.form.type.date_range.class' => 'Oro\\Bundle\\FilterBundle\\Form\\Type\\DateRangeType',
            'oro_filter.form.type.datetime_range.class' => 'Oro\\Bundle\\FilterBundle\\Form\\Type\\DateTimeRangeType',
            'oro_filter.form.type.filter.class' => 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\FilterType',
            'oro_filter.form.type.filter.choice.class' => 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\ChoiceFilterType',
            'oro_filter.form.type.filter.text.class' => 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\TextFilterType',
            'oro_filter.form.type.filter.number.class' => 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\NumberFilterType',
            'oro_filter.form.type.filter.date_range.class' => 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\DateRangeFilterType',
            'oro_filter.form.type.filter.datetime_range.class' => 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\DateTimeRangeFilterType',
            'oro_filter.form.type.filter.boolean.class' => 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\BooleanFilterType',
            'oro_filter.form.type.filter.entity.class' => 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\EntityFilterType',
            'oro_filter.form.type.filter.selectrow.class' => 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\SelectRowFilterType',
            'oro_filter.form.type.filter.many_to_many.class' => 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\ManyToManyFilterType',
            'oro_filter.form.type.filter.dictionary.class' => 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\DictionaryFilterType',
            'oro_filter.extension.orm_filter.class' => 'Oro\\Bundle\\FilterBundle\\Grid\\Extension\\OrmFilterExtension',
            'oro_filter.datagrid.column_options_guesser.class' => 'Oro\\Bundle\\FilterBundle\\Grid\\DefaultColumnFilteringOptionsGuesser',
            'oro_filter.provider.datevarsprovider.class' => 'Oro\\Bundle\\FilterBundle\\Provider\\DateModifierProvider',
            'oro_filter.expression.date.compiler.class' => 'Oro\\Bundle\\FilterBundle\\Expression\\Date\\Compiler',
            'oro_filter.expression.date.lexer.class' => 'Oro\\Bundle\\FilterBundle\\Expression\\Date\\Lexer',
            'oro_filter.expression.date.parser.class' => 'Oro\\Bundle\\FilterBundle\\Expression\\Date\\Parser',
            'oro_filter.builder.many_relation.class' => 'Oro\\Bundle\\FilterBundle\\Datasource\\ManyRelationBuilder',
            'oro_filter.builder.many_relation.orm.class' => 'Oro\\Bundle\\FilterBundle\\Datasource\\Orm\\OrmManyRelationBuilder',
            'oro_filter.filter_utility.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\FilterUtility',
            'oro_filter.string_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\StringFilter',
            'oro_filter.select_row_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\SelectRowFilter',
            'oro_filter.number_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\NumberFilter',
            'oro_filter.percent_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\PercentFilter',
            'oro_filter.currency_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\CurrencyFilter',
            'oro_filter.choice_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\ChoiceFilter',
            'oro_filter.single_choice_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\SingleChoiceFilter',
            'oro_filter.entity_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\EntityFilter',
            'oro_filter.boolean_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\BooleanFilter',
            'oro_filter.date_filter_utility.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\DateFilterUtility',
            'oro_filter.date_range_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\DateRangeFilter',
            'oro_filter.datetime_range_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\DateTimeRangeFilter',
            'oro_filter.many_to_many_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\ManyToManyFilter',
            'oro_filter.dictionary_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\DictionaryFilter',
            'oro_form.autocomplete.security.class' => 'Oro\\Bundle\\FormBundle\\Autocomplete\\Security',
            'oro_form.autocomplete.search_registry.class' => 'Oro\\Bundle\\FormBundle\\Autocomplete\\SearchRegistry',
            'oro_form.autocomplete.search_handler.class' => 'Oro\\Bundle\\FormBundle\\Autocomplete\\SearchHandler',
            'oro_form.autocomplete.full_name.search_handler.class' => 'Oro\\Bundle\\FormBundle\\Autocomplete\\FullNameSearchHandler',
            'oro_form.type.date.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroDateType',
            'oro_form.type.datetime.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroDateTimeType',
            'oro_form.type.time_interval.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroTimeIntervalType',
            'oro_form.type.money.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroMoneyType',
            'oro_form.type.percent.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroPercentType',
            'oro_form.type.entity_identifier.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\EntityIdentifierType',
            'oro_form.type.jqueryselect2_hidden.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroJquerySelect2HiddenType',
            'oro_form.type.icon.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroIconType',
            'oro_form.type.multiple_entity.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\MultipleEntityType',
            'oro_form.type.collection.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\CollectionType',
            'oro_form.type.entity_create_or_select.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroEntityCreateOrSelectType',
            'oro_form.type.entity_create_or_select_choice.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroEntityCreateOrSelectChoiceType',
            'oro_form.type.encoded_password.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroEncodedPasswordType',
            'oro_form.type.textlist.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroTextListType',
            'oro_form.type.oro_entity_create_or_select_inline.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroEntitySelectOrCreateInlineType',
            'oro_form.type.simple_color_picker.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroSimpleColorPickerType',
            'oro_form.type.simple_color_choice.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroSimpleColorChoiceType',
            'oro_form.type.color_table.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroColorTableType',
            'oro_form.type.link.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\LinkType',
            'oro_form.type.download_links.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\DownloadLinksType',
            'oro_form.type.api.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\DecoratorApiType',
            'oro_form.type.rich_text.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroRichTextType',
            'oro_form.type.resizeable_rich_text.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\OroResizeableRichTextType',
            'oro_form.type.entity_changeset.class' => 'Oro\\Bundle\\FormBundle\\Form\\Type\\EntityChangesetType',
            'oro_form.extension.data_block.class' => 'Oro\\Bundle\\FormBundle\\Form\\Extension\\DataBlockExtension',
            'oro_form.extension.client_validation.class' => 'Oro\\Bundle\\FormBundle\\Form\\Extension\\ClientValidationExtension',
            'oro_form.extension.constraint_as_option.class' => 'Oro\\Bundle\\FormBundle\\Form\\Extension\\ConstraintAsOptionExtension',
            'oro_form.extension.tooltip.class' => 'Oro\\Bundle\\FormBundle\\Form\\Extension\\TooltipFormExtension',
            'oro_form.extension.js_validation.class' => 'Oro\\Bundle\\FormBundle\\Form\\Extension\\JsValidationExtension',
            'oro_form.extension.js_validation.constraints_provider.class' => 'Oro\\Bundle\\FormBundle\\Form\\Extension\\JsValidation\\ConstraintsProvider',
            'oro_form.extension.js_validation.repeated.class' => 'Oro\\Bundle\\FormBundle\\Form\\Extension\\JsValidation\\RepeatedTypeExtension',
            'oro_form.extension.random_id.class' => 'Oro\\Bundle\\FormBundle\\Form\\Extension\\RandomIdExtension',
            'oro_form.extension.data_transformer.class' => 'Oro\\Bundle\\FormBundle\\Form\\Extension\\DataTransformerExtension',
            'oro_form.extension.sortable.class' => 'Oro\\Bundle\\FormBundle\\Form\\Extension\\SortableExtension',
            'oro_form.form_handler.api.class' => 'Oro\\Bundle\\FormBundle\\Form\\Handler\\ApiFormHandler',
            'oro_form.validator.entity_class.class' => 'Oro\\Bundle\\FormBundle\\Validator\\Constraints\\EntityClassValidator',
            'oro_form.validator.related_entity.class' => 'Oro\\Bundle\\FormBundle\\Validator\\Constraints\\RelatedEntityValidator',
            'oro_form.importexport.primary_item_collection_normalizer.class' => 'Oro\\Bundle\\FormBundle\\ImportExport\\Serializer\\Normalizer\\PrimaryItemCollectionNormalizer',
            'oro_form.validator.constraint_factory.class' => 'Oro\\Bundle\\FormBundle\\Validator\\ConstraintFactory',
            'oro_form.twig.form.class' => 'Oro\\Bundle\\FormBundle\\Twig\\FormExtension',
            'oro_form.twig.js_validation_extension.class' => 'Oro\\Bundle\\FormBundle\\Twig\\JsValidationExtension',
            'oro_form.model.update_handler.class' => 'Oro\\Bundle\\FormBundle\\Model\\UpdateHandler',
            'oro_form.provider.html_tag_provider.class' => 'Oro\\Bundle\\FormBundle\\Provider\\HtmlTagProvider',
            'oro_help.model.help_link_provider.class' => 'Oro\\Bundle\\HelpBundle\\Model\\HelpLinkProvider',
            'oro_help.twig.extension.class' => 'Oro\\Bundle\\HelpBundle\\Twig\\HelpExtension',
            'oro_help.listener.help_link.class' => 'Oro\\Bundle\\HelpBundle\\EventListener\\HelpLinkRequestListener',
            'oro_imap.connector.factory.class' => 'Oro\\Bundle\\ImapBundle\\Connector\\ImapConnectorFactory',
            'oro_imap.connector.class' => 'Oro\\Bundle\\ImapBundle\\Connector\\ImapConnector',
            'oro_imap.services.factory.class' => 'Oro\\Bundle\\ImapBundle\\Connector\\ImapServicesFactory',
            'oro_imap.search_string_manager.gmail.class' => 'Oro\\Bundle\\ImapBundle\\Connector\\Search\\GmailSearchStringManager',
            'oro_imap.search_string_manager.other.class' => 'Oro\\Bundle\\ImapBundle\\Connector\\Search\\SearchStringManager',
            'oro_imap.storage.gmail.class' => 'Oro\\Bundle\\ImapBundle\\Mail\\Storage\\GmailImap',
            'oro_imap.storage.other.class' => 'Oro\\Bundle\\ImapBundle\\Mail\\Storage\\Imap',
            'oro_imap.email_body_loader.class' => 'Oro\\Bundle\\ImapBundle\\Provider\\ImapEmailBodyLoader',
            'oro_imap.email_flag_manager_loader.class' => 'Oro\\Bundle\\ImapBundle\\Provider\\ImapEmailFlagManagerLoader',
            'oro_imap.email_synchronizer.class' => 'Oro\\Bundle\\ImapBundle\\Sync\\ImapEmailSynchronizer',
            'oro_imap.email_sync_processor_factory.class' => 'Oro\\Bundle\\ImapBundle\\Sync\\ImapEmailSynchronizationProcessorFactory',
            'oro_imap.imap_clear_manager.class' => 'Oro\\Bundle\\ImapBundle\\Manager\\ImapClearManager',
            'oro_imap.workflow.action.dependency_job.class' => 'Oro\\Bundle\\ImapBundle\\Workflow\\Action\\DependencyJob',
            'oro_imap.form.type.configuration.class' => 'Oro\\Bundle\\ImapBundle\\Form\\Type\\ConfigurationType',
            'oro_imap.listener.user_email_origin.class' => 'Oro\\Bundle\\ImapBundle\\EventListener\\UserEmailOriginListener',
            'oro_importexport.serializer.class' => 'Oro\\Bundle\\ImportExportBundle\\Serializer\\Serializer',
            'oro_importexport.serializer.dummy_encoder.class' => 'Oro\\Bundle\\ImportExportBundle\\Serializer\\Encoder\\DummyEncoder',
            'oro_importexport.serializer.datetime_normalizer.class' => 'Oro\\Bundle\\ImportExportBundle\\Serializer\\Normalizer\\DateTimeNormalizer',
            'oro_importexport.serializer.collection_normalizer.class' => 'Oro\\Bundle\\ImportExportBundle\\Serializer\\Normalizer\\CollectionNormalizer',
            'oro_importexport.serializer.configurable_entity_normalizer.class' => 'Oro\\Bundle\\ImportExportBundle\\Serializer\\Normalizer\\ConfigurableEntityNormalizer',
            'oro_importexport.context_registry.class' => 'Oro\\Bundle\\ImportExportBundle\\Context\\ContextRegistry',
            'oro_importexport.data_converter.default.class' => 'Oro\\Bundle\\ImportExportBundle\\Converter\\DefaultDataConverter',
            'oro_importexport.data_converter.configurable.class' => 'Oro\\Bundle\\ImportExportBundle\\Converter\\ConfigurableTableDataConverter',
            'oro_importexport.data_converter.relation_calculator.class' => 'Oro\\Bundle\\ImportExportBundle\\Converter\\RelationCalculator',
            'oro_importexport.data_converter.template_fixture.relation_calculator.class' => 'Oro\\Bundle\\ImportExportBundle\\Converter\\TemplateFixtureRelationCalculator',
            'oro_importexport.strategy.import.helper.class' => 'Oro\\Bundle\\ImportExportBundle\\Strategy\\Import\\ImportStrategyHelper',
            'oro_importexport.strategy.configurable_add_or_replace.class' => 'Oro\\Bundle\\ImportExportBundle\\Strategy\\Import\\ConfigurableAddOrReplaceStrategy',
            'oro_importexport.reader.csv.class' => 'Oro\\Bundle\\ImportExportBundle\\Reader\\CsvFileReader',
            'oro_importexport.reader.entity.class' => 'Oro\\Bundle\\ImportExportBundle\\Reader\\EntityReader',
            'oro_importexport.reader.template_fixture.class' => 'Oro\\Bundle\\ImportExportBundle\\Reader\\TemplateFixtureReader',
            'oro_importexport.writer.csv.class' => 'Oro\\Bundle\\ImportExportBundle\\Writer\\CsvFileWriter',
            'oro_importexport.writer.entity.class' => 'Oro\\Bundle\\ImportExportBundle\\Writer\\EntityWriter',
            'oro_importexport.writer.entity_detach_fixer.class' => 'Oro\\Bundle\\ImportExportBundle\\Writer\\EntityDetachFixer',
            'oro_importexport.writer.dummy.class' => 'Oro\\Bundle\\ImportExportBundle\\Writer\\DummyWriter',
            'oro_importexport.writer.doctrine_clear.class' => 'Oro\\Bundle\\ImportExportBundle\\Writer\\DoctrineClearWriter',
            'oro_importexport.writer.echo.csv.class' => 'Oro\\Bundle\\ImportExportBundle\\Writer\\CsvEchoWriter',
            'oro_importexport.processor.registry.class' => 'Oro\\Bundle\\ImportExportBundle\\Processor\\ProcessorRegistry',
            'oro_importexport.processor.registry_delegate_processor.class' => 'Oro\\Bundle\\ImportExportBundle\\Processor\\RegistryDelegateProcessor',
            'oro_importexport.processor.export_abstract.class' => 'Oro\\Bundle\\ImportExportBundle\\Processor\\ExportProcessor',
            'oro_importexport.processor.import_abstract.class' => 'Oro\\Bundle\\ImportExportBundle\\Processor\\ImportProcessor',
            'oro_importexport.form.type.import.class' => 'Oro\\Bundle\\ImportExportBundle\\Form\\Type\\ImportType',
            'oro_importexport.job_executor.class' => 'Oro\\Bundle\\ImportExportBundle\\Job\\JobExecutor',
            'oro_importexport.file.file_system_operator.class' => 'Oro\\Bundle\\ImportExportBundle\\File\\FileSystemOperator',
            'oro_importexport.file.mime_type_guesser.class' => 'Oro\\Bundle\\ImportExportBundle\\MimeType\\MimeTypeGuesser',
            'oro_importexport.handler.abstract.class' => 'Oro\\Bundle\\ImportExportBundle\\Handler\\AbstractHandler',
            'oro_importexport.handler.import.abstract.class' => 'Oro\\Bundle\\ImportExportBundle\\Handler\\AbstractImportHandler',
            'oro_importexport.handler.import.http.class' => 'Oro\\Bundle\\ImportExportBundle\\Handler\\HttpImportHandler',
            'oro_importexport.handler.import.cli.class' => 'Oro\\Bundle\\ImportExportBundle\\Handler\\CliImportHandler',
            'oro_importexport.handler.export.class' => 'Oro\\Bundle\\ImportExportBundle\\Handler\\ExportHandler',
            'oro_importexport.field.field_helper.class' => 'Oro\\Bundle\\ImportExportBundle\\Field\\FieldHelper',
            'oro_importexport.field.database_helper.class' => 'Oro\\Bundle\\ImportExportBundle\\Field\\DatabaseHelper',
            'oro_importexport.template_fixture.entity_registry.class' => 'Oro\\Bundle\\ImportExportBundle\\TemplateFixture\\TemplateEntityRegistry',
            'oro_importexport.template_fixture.manager.class' => 'Oro\\Bundle\\ImportExportBundle\\TemplateFixture\\TemplateManager',
            'oro_importexport.action.execute_job.class' => 'Oro\\Bundle\\ImportExportBundle\\Model\\Action\\ExecuteJobAction',
            'oro_installer.scenario.class' => 'Oro\\Bundle\\InstallerBundle\\Process\\InstallerScenario',
            'oro_installer.yaml_persister.class' => 'Oro\\Bundle\\InstallerBundle\\Persister\\YamlPersister',
            'oro_installer.listener.request.class' => 'Oro\\Bundle\\InstallerBundle\\EventListener\\RequestListener',
            'oro_installer.script_manager.class' => 'Oro\\Bundle\\InstallerBundle\\ScriptManager',
            'oro_installer.form.type.configuration.class' => 'Oro\\Bundle\\InstallerBundle\\Form\\Type\\ConfigurationType',
            'oro_installer.form.type.configuration.database.class' => 'Oro\\Bundle\\InstallerBundle\\Form\\Type\\Configuration\\DatabaseType',
            'oro_installer.form.type.configuration.mailer.class' => 'Oro\\Bundle\\InstallerBundle\\Form\\Type\\Configuration\\MailerType',
            'oro_installer.form.type.configuration.system.class' => 'Oro\\Bundle\\InstallerBundle\\Form\\Type\\Configuration\\SystemType',
            'oro_installer.form.type.configuration.ws.class' => 'Oro\\Bundle\\InstallerBundle\\Form\\Type\\Configuration\\WebsocketType',
            'oro_installer.form.type.setup.class' => 'Oro\\Bundle\\InstallerBundle\\Form\\Type\\SetupType',
            'oro_locale.format.name' => array(
                'en' => '%prefix% %first_name% %middle_name% %last_name% %suffix%',
                'en_US' => '%prefix% %first_name% %middle_name% %last_name% %suffix%',
                'ru' => '%last_name% %first_name% %middle_name%',
                'ru_RU' => '%last_name% %first_name% %middle_name%',
            ),
            'oro_locale.format.address' => array(
                'AD' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %REGION%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'region',
                    ),
                    'region_name_type' => 'parish',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'AE' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'AG' => array(
                    'require' => array(
                        0 => 'street',
                    ),
                    'format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'AM' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code%\\n%city%\\n%region%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%postal_code%\\n%city%\\n%region%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'AR' => array(
                    'format' => '%name%\\n%organization%\\n%STREET%\\n%POSTAL_CODE% %CITY%\\n%region%\\n%country%',
                    'region_name_type' => 'region',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'AT' => array(
                    'format' => '%organization%\\n%name%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'AU' => array(
                    'format' => '%organization%\\n%name%\\n%street%\\n%CITY% %REGION% %COUNTRY% %postal_code%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                        3 => 'postal_code',
                    ),
                    'region_name_type' => 'region',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'AZ' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\nAZ %postal_code% %city%\\n%country%',
                    'postprefix' => 'AZ ',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'BA' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'BB' => array(
                    'region_name_type' => 'parish',
                    'format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'BD' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% - %postal_code%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'BE' => array(
                    'format' => '%organization%\\n%name%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'BF' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'BG' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'BH' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'BL' => array(
                    'format' => '%organization%\\n%name%\\n%STREET%\\n%postal_code% %CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'BN' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'BR' => array(
                    'format' => '%organization%\\n%name%\\n%street%\\n%CITY%-%REGION%\\n%COUNTRY%\\n%postal_code%',
                    'require' => array(
                        0 => 'street',
                        1 => 'region',
                        2 => 'city',
                        3 => 'postal_code',
                    ),
                    'region_name_type' => 'region',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'BS' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%, %region%\\n%country%',
                    'region_name_type' => 'island',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'BY' => array(
                    'format' => '%country%\\n%region%\\n%postal_code% %city% %street%\\n%organization%\\n%name%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'CA' => array(
                    'format' => '%NAME%\\n%ORGANIZATION%\\n%STREET%\\n%CITY% %REGION%, %COUNTRY% %POSTAL_CODE%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                        3 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'CD' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'CH' => array(
                    'format' => '%organization%\\n%name%\\n%street%\\nCH-%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'postprefix' => 'CH-',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'CI' => array(
                    'format' => '%name%\\n%organization% %street% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'CL' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%region%\\n%country%',
                    'region_name_type' => 'region',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'CN' => array(
                    'format' => '%postal_code%\\n%COUNTRY%\\n%REGION%%city%\\n%street%\\n%organization%\\n%name%',
                    'latin_format' => '%name%\\n%organization%\\n%street%, %city%\\n%REGION%, %COUNTRY% %postal_code%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                        3 => 'postal_code',
                    ),
                    'has_disputed' => true,
                    'format_charset' => 'GB2312',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                ),
                'CO' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%, %region%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'CR' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'CV' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%region%\\n%country%',
                    'region_name_type' => 'island',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'CY' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'CZ' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'DE' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'DK' => array(
                    'format' => '%organization%\\n%name%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'DO' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'DZ' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'EC' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%POSTAL_CODE%\\n%CITY%\\n%COUNTRY%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'EE' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'EG' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%region%\\n%country%\\n%postal_code%',
                    'direction' => 'rtl',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'ES' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %CITY% %REGION%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                        3 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'ET' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'FI' => array(
                    'format' => '%organization%\\n%name%\\n%street%\\nFI-%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'postprefix' => 'FI-',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'FM' => array(
                    'format' => '%NAME%\\n%ORGANIZATION%\\n%STREET%\\n%CITY% %COUNTRY% %REGION% %postal_code%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                        3 => 'postal_code',
                    ),
                    'zip_name_type' => 'zip',
                    'region_name_type' => 'region',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'FR' => array(
                    'format' => '%organization%\\n%name%\\n%street%\\n%postal_code% %CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'GB' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%region%\\n%country%\\n%POSTAL_CODE%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'region_name_type' => 'county',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'GE' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'GG' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%\\nGUERNSEY\\n%POSTAL_CODE%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'GL' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'GN' => array(
                    'format' => '%name%\\n%organization%\\n%postal_code% %street% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'GR' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'GT' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code%- %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'GW' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'HN' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%, %region%\\n%country%\\n%postal_code%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'HR' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\nHR-%postal_code% %city%\\n%country%',
                    'postprefix' => 'HR-',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'HT' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\nHT%postal_code% %city%\\n%country%',
                    'postprefix' => 'HT',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'HU' => array(
                    'format' => '%NAME%\\n%ORGANIZATION%\\n%CITY%\\n%STREET%\\n%COUNTRY%\\n%postal_code%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'ID' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%region%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'IE' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%region%\\n%country%',
                    'region_name_type' => 'county',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'IL' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%',
                    'direction' => 'rtl',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'IM' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%\\n%POSTAL_CODE%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'IN' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%region%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                        3 => 'postal_code',
                    ),
                    'region_name_type' => 'region',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'IQ' => array(
                    'format' => '%organization%\\n%name%\\n%street%\\n%CITY%, %REGION%\\n%COUNTRY%\\n%postal_code%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'IS' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'IT' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %CITY% %REGION%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                        3 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'JE' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%\\nJERSEY\\n%POSTAL_CODE%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'JM' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%region%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                    ),
                    'region_name_type' => 'parish',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'JO' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'JP' => array(
                    'format' => '〒%postal_code%\\n%REGION%%city%\\n%street%\\n%organization%\\n%name%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%city%, %REGION%\\n%COUNTRY%\\n%postal_code%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                        3 => 'postal_code',
                    ),
                    'region_name_type' => 'prefecture',
                    'format_charset' => 'ISO-2022-JP',
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                ),
                'KE' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%\\n%postal_code%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'KG' => array(
                    'format' => '%postal_code% %country% %city% %street%\\n%organization%\\n%name%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'KH' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'KI' => array(
                    'format' => '%NAME%\\n%ORGANIZATION%\\n%STREET%\\n%REGION%\\n%CITY%\\n%COUNTRY%',
                    'region_name_type' => 'island',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'KN' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%, %region%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                    ),
                    'region_name_type' => 'island',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'KR' => array(
                    'format' => '%country%\\n%region% %city%\\n%street%\\n%organization%\\n%name%\\nSEOUL %POSTAL_CODE%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%region%\\n%country%\\nSEOUL %POSTAL_CODE%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                        3 => 'postal_code',
                    ),
                    'region_name_type' => 'do_si',
                    'format_charset' => 'EUC-KR',
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                ),
                'KW' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'KZ' => array(
                    'format' => '%postal_code%\\n%country%\\n%region%\\n%city%\\n%street%\\n%organization%\\n%name%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'LA' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'LB' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'LI' => array(
                    'format' => '%organization%\\n%name%\\n%street%\\nFL-%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'postprefix' => 'FL-',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'LK' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%\\n%postal_code%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'LR' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'LS' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'LT' => array(
                    'format' => '%organization%\\n%name%\\n%street%\\nLT-%postal_code% %city%\\n%country%',
                    'postprefix' => 'LT-',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'LU' => array(
                    'format' => '%organization%\\n%name%\\n%street%\\nL-%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'postprefix' => 'L-',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'LV' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% %country%, %postal_code%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'MA' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'MD' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\nMD-%postal_code% %city%\\n%country%',
                    'postprefix' => 'MD-',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'ME' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'MF' => array(
                    'format' => '%organization%\\n%name%\\n%STREET%\\n%postal_code% %CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'MG' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'MH' => array(
                    'format' => '%NAME%\\n%ORGANIZATION%\\n%STREET%\\n%CITY% %COUNTRY% %REGION% %postal_code%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                        3 => 'postal_code',
                    ),
                    'zip_name_type' => 'zip',
                    'region_name_type' => 'region',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'MK' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'MN' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%region% %city%\\n%country%\\n%postal_code%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'MO' => array(
                    'format' => '%street%\\n%organization%\\n%name%',
                    'latin_format' => '%name%\\n%organization%\\n%street%',
                    'require' => array(
                        0 => 'street',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'MT' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%CITY% %POSTAL_CODE%\\n%COUNTRY%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'MU' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%POSTAL_CODE%\\n%CITY%\\n%COUNTRY%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'MV' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'MW' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'MX' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%POSTAL_CODE% %CITY%, %REGION%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'region_name_type' => 'region',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'MY' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %CITY%, %REGION%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'region_name_type' => 'region',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'MZ' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'NE' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'NG' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%CITY% %postal_code%\\n%REGION%\\n%COUNTRY%',
                    'region_name_type' => 'region',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'NI' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code%\\n%CITY%, %REGION%\\n%COUNTRY%',
                    'region_name_type' => 'department',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'NL' => array(
                    'format' => '%organization%\\n%name%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'NO' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'NP' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'NR' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%region%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'region',
                    ),
                    'region_name_type' => 'district',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'NZ' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'OM' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code%\\n%city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'PA' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%REGION%\\n%COUNTRY%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'PG' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code% %region%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'PH' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%region%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'PK' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%-%postal_code%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'PL' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'PT' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'PW' => array(
                    'format' => '%NAME%\\n%ORGANIZATION%\\n%STREET%\\n%CITY% %COUNTRY% %REGION% %postal_code%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                        3 => 'postal_code',
                    ),
                    'zip_name_type' => 'zip',
                    'region_name_type' => 'region',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'PY' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'RO' => array(
                    'format' => '%name%\\n%organization%\\n%STREET%\\n%postal_code% %CITY%\\n%COUNTRY%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'RS' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'RU' => array(
                    'format' => '%postal_code% %COUNTRY% %CITY%\\n%STREET%\\n%organization%\\n%name%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'SA' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city% %postal_code%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'SC' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%REGION%\\n%COUNTRY%',
                    'region_name_type' => 'island',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'SE' => array(
                    'format' => '%organization%\\n%name%\\n%street%\\nSE-%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'postprefix' => 'SE-',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'SG' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\nSINGAPORE %postal_code%',
                    'require' => array(
                        0 => 'street',
                        1 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'SH' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%\\n%POSTAL_CODE%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'SI' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\nSI- %postal_code% %city%\\n%country%',
                    'postprefix' => 'SI-',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'SK' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'SM' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'SN' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'SO' => array(
                    'format' => '%name%\\n%organization%\\n%STREET%\\n%CITY%, %REGION% %COUNTRY% %postal_code%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'SR' => array(
                    'format' => '%name%\\n%organization%\\n%STREET%\\n%city% %REGION%\\n%COUNTRY%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'ST' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'SV' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%POSTAL_CODE%-%CITY%\\n%REGION%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'SZ' => array(
                    'format' => '%name%\\n%organization%\\n%STREET%\\n%CITY%\\n%COUNTRY%\\n%POSTAL_CODE%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'TH' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%REGION% %COUNTRY% %postal_code%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%REGION% %COUNTRY% %postal_code%',
                    'format_charset' => 'TIS-620',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                ),
                'TJ' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'TM' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'TN' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'TR' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%/%region%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'TV' => array(
                    'format' => '%name%\\n%organization%\\n%STREET%\\n%CITY%\\n%REGION%\\n%COUNTRY%',
                    'region_name_type' => 'island',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'TW' => array(
                    'format' => '%postal_code%\\n%country%\\n%region%%city%\\n%street%\\n%organization%\\n%name%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%city%, %region% %country% %postal_code%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                        3 => 'postal_code',
                    ),
                    'region_name_type' => 'county',
                    'format_charset' => 'Big5',
                    'zip_name_type' => 'postal',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                ),
                'UA' => array(
                    'format' => '%postal_code% %country% %city%\\n%street%\\n%organization%\\n%name%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'UM' => array(
                    'format' => '%NAME%\\n%ORGANIZATION%\\n%STREET%\\n%CITY% %REGION% %COUNTRY% %postal_code%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                    ),
                    'zip_name_type' => 'zip',
                    'region_name_type' => 'region',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'US' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%CITY% %REGION_CODE% %COUNTRY_ISO2% %postal_code%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                        3 => 'postal_code',
                    ),
                    'zip_name_type' => 'zip',
                    'region_name_type' => 'region',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'UY' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %CITY% %REGION%\\n%COUNTRY%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'UZ' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %CITY%\\n%REGION%\\n%COUNTRY%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'VE' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%CITY% %postal_code%, %REGION%\\n%COUNTRY%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'region',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'VN' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%region%\\n%country%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%region%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'YE' => array(
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'ZA' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%city%\\n%country%\\n%postal_code%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                        2 => 'postal_code',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
                'ZM' => array(
                    'format' => '%name%\\n%organization%\\n%street%\\n%postal_code% %city%\\n%country%',
                    'require' => array(
                        0 => 'street',
                        1 => 'city',
                    ),
                    'latin_format' => '%name%\\n%organization%\\n%street%\\n%CITY%\\n%COUNTRY%',
                    'zip_name_type' => 'postal',
                    'region_name_type' => 'province',
                    'direction' => 'ltr',
                    'postprefix' => NULL,
                    'has_disputed' => false,
                    'format_charset' => 'UTF-8',
                ),
            ),
            'oro_locale.locale_data' => array(
                'AD' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '376',
                    'default_locale' => 'ca',
                ),
                'AE' => array(
                    'currency_code' => 'AED',
                    'phone_prefix' => '971',
                    'default_locale' => 'ar_AE',
                ),
                'AF' => array(
                    'currency_code' => 'AFN',
                    'phone_prefix' => '93',
                    'default_locale' => 'fa_AF',
                ),
                'AG' => array(
                    'currency_code' => 'XCD',
                    'phone_prefix' => '+1-268',
                    'default_locale' => 'en_AG',
                ),
                'AL' => array(
                    'currency_code' => 'ALL',
                    'phone_prefix' => '355',
                    'default_locale' => 'sq',
                ),
                'AM' => array(
                    'currency_code' => 'AMD',
                    'phone_prefix' => '374',
                    'default_locale' => 'hy',
                ),
                'AO' => array(
                    'currency_code' => 'AOA',
                    'phone_prefix' => '244',
                    'default_locale' => 'pt_AO',
                ),
                'AR' => array(
                    'currency_code' => 'ARS',
                    'phone_prefix' => '54',
                    'default_locale' => 'es_AR',
                ),
                'AT' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '43',
                    'default_locale' => 'de_AT',
                ),
                'AU' => array(
                    'currency_code' => 'AUD',
                    'phone_prefix' => '61',
                    'default_locale' => 'en_AU',
                ),
                'AZ' => array(
                    'currency_code' => 'AZN',
                    'phone_prefix' => '994',
                    'default_locale' => 'az',
                ),
                'BA' => array(
                    'currency_code' => 'BAM',
                    'phone_prefix' => '387',
                    'default_locale' => 'bs',
                ),
                'BB' => array(
                    'currency_code' => 'BBD',
                    'phone_prefix' => '+1-246',
                    'default_locale' => 'en_BB',
                ),
                'BD' => array(
                    'currency_code' => 'BDT',
                    'phone_prefix' => '880',
                    'default_locale' => 'bn_BD',
                ),
                'BE' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '32',
                    'default_locale' => 'nl_BE',
                ),
                'BF' => array(
                    'currency_code' => 'XOF',
                    'phone_prefix' => '226',
                    'default_locale' => 'fr_BF',
                ),
                'BG' => array(
                    'currency_code' => 'BGN',
                    'phone_prefix' => '359',
                    'default_locale' => 'bg',
                ),
                'BH' => array(
                    'currency_code' => 'BHD',
                    'phone_prefix' => '973',
                    'default_locale' => 'ar_BH',
                ),
                'BI' => array(
                    'currency_code' => 'BIF',
                    'phone_prefix' => '257',
                    'default_locale' => 'fr_BI',
                ),
                'BJ' => array(
                    'currency_code' => 'XOF',
                    'phone_prefix' => '229',
                    'default_locale' => 'fr_BJ',
                ),
                'BL' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '590',
                    'default_locale' => 'fr',
                ),
                'BN' => array(
                    'currency_code' => 'BND',
                    'phone_prefix' => '673',
                    'default_locale' => 'ms_BN',
                ),
                'BO' => array(
                    'currency_code' => 'BOB',
                    'phone_prefix' => '591',
                    'default_locale' => 'es_BO',
                ),
                'BR' => array(
                    'currency_code' => 'BRL',
                    'phone_prefix' => '55',
                    'default_locale' => 'pt_BR',
                ),
                'BS' => array(
                    'currency_code' => 'BSD',
                    'phone_prefix' => '+1-242',
                    'default_locale' => 'en_BS',
                ),
                'BT' => array(
                    'currency_code' => 'BTN',
                    'phone_prefix' => '975',
                    'default_locale' => 'dz',
                ),
                'BW' => array(
                    'currency_code' => 'BWP',
                    'phone_prefix' => '267',
                    'default_locale' => 'en_BW',
                ),
                'BY' => array(
                    'currency_code' => 'BYR',
                    'phone_prefix' => '375',
                    'default_locale' => 'be',
                ),
                'BZ' => array(
                    'currency_code' => 'BZD',
                    'phone_prefix' => '501',
                    'default_locale' => 'en_BZ',
                ),
                'CA' => array(
                    'currency_code' => 'CAD',
                    'phone_prefix' => '1',
                    'default_locale' => 'en_CA',
                ),
                'CD' => array(
                    'currency_code' => 'CDF',
                    'phone_prefix' => '243',
                    'default_locale' => 'fr_CD',
                ),
                'CF' => array(
                    'currency_code' => 'XAF',
                    'phone_prefix' => '236',
                    'default_locale' => 'fr_CF',
                ),
                'CG' => array(
                    'currency_code' => 'XAF',
                    'phone_prefix' => '242',
                    'default_locale' => 'fr_CG',
                ),
                'CH' => array(
                    'currency_code' => 'CHF',
                    'phone_prefix' => '41',
                    'default_locale' => 'de_CH',
                ),
                'CI' => array(
                    'currency_code' => 'XOF',
                    'phone_prefix' => '225',
                    'default_locale' => 'fr_CI',
                ),
                'CL' => array(
                    'currency_code' => 'CLP',
                    'phone_prefix' => '56',
                    'default_locale' => 'es_CL',
                ),
                'CM' => array(
                    'currency_code' => 'XAF',
                    'phone_prefix' => '237',
                    'default_locale' => 'en_CM',
                ),
                'CN' => array(
                    'currency_code' => 'CNY',
                    'phone_prefix' => '86',
                    'default_locale' => 'zh_CN',
                ),
                'CO' => array(
                    'currency_code' => 'COP',
                    'phone_prefix' => '57',
                    'default_locale' => 'es_CO',
                ),
                'CR' => array(
                    'currency_code' => 'CRC',
                    'phone_prefix' => '506',
                    'default_locale' => 'es_CR',
                ),
                'CU' => array(
                    'currency_code' => 'CUP',
                    'phone_prefix' => '53',
                    'default_locale' => 'es_CU',
                ),
                'CV' => array(
                    'currency_code' => 'CVE',
                    'phone_prefix' => '238',
                    'default_locale' => 'pt_CV',
                ),
                'CY' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '357',
                    'default_locale' => 'el_CY',
                ),
                'CZ' => array(
                    'currency_code' => 'CZK',
                    'phone_prefix' => '420',
                    'default_locale' => 'cs',
                ),
                'DE' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '49',
                    'default_locale' => 'de',
                ),
                'DJ' => array(
                    'currency_code' => 'DJF',
                    'phone_prefix' => '253',
                    'default_locale' => 'fr_DJ',
                ),
                'DK' => array(
                    'currency_code' => 'DKK',
                    'phone_prefix' => '45',
                    'default_locale' => 'da_DK',
                ),
                'DM' => array(
                    'currency_code' => 'XCD',
                    'phone_prefix' => '+1-767',
                    'default_locale' => 'en_DM',
                ),
                'DO' => array(
                    'currency_code' => 'DOP',
                    'phone_prefix' => '+1-809',
                    'default_locale' => 'es_DO',
                ),
                'DZ' => array(
                    'currency_code' => 'DZD',
                    'phone_prefix' => '213',
                    'default_locale' => 'ar_DZ',
                ),
                'EC' => array(
                    'currency_code' => 'USD',
                    'phone_prefix' => '593',
                    'default_locale' => 'es_EC',
                ),
                'EE' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '372',
                    'default_locale' => 'et',
                ),
                'EG' => array(
                    'currency_code' => 'EGP',
                    'phone_prefix' => '20',
                    'default_locale' => 'ar_EG',
                ),
                'ER' => array(
                    'currency_code' => 'ERN',
                    'phone_prefix' => '291',
                    'default_locale' => 'ti_ER',
                ),
                'ES' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '34',
                    'default_locale' => 'es_ES',
                ),
                'ET' => array(
                    'currency_code' => 'ETB',
                    'phone_prefix' => '251',
                    'default_locale' => 'am',
                ),
                'FI' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '358',
                    'default_locale' => 'fi_FI',
                ),
                'FJ' => array(
                    'currency_code' => 'FJD',
                    'phone_prefix' => '679',
                    'default_locale' => 'en_FJ',
                ),
                'FM' => array(
                    'currency_code' => 'USD',
                    'phone_prefix' => '691',
                    'default_locale' => 'en_FM',
                ),
                'FR' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '33',
                    'default_locale' => 'fr_FR',
                ),
                'GA' => array(
                    'currency_code' => 'XAF',
                    'phone_prefix' => '241',
                    'default_locale' => 'fr_GA',
                ),
                'GB' => array(
                    'currency_code' => 'GBP',
                    'phone_prefix' => '44',
                    'default_locale' => 'en_GB',
                ),
                'GD' => array(
                    'currency_code' => 'XCD',
                    'phone_prefix' => '+1-473',
                    'default_locale' => 'en_GD',
                ),
                'GE' => array(
                    'currency_code' => 'GEL',
                    'phone_prefix' => '995',
                    'default_locale' => 'ka',
                ),
                'GG' => array(
                    'currency_code' => 'GBP',
                    'phone_prefix' => '+44-1481',
                    'default_locale' => 'en',
                ),
                'GH' => array(
                    'currency_code' => 'GHS',
                    'phone_prefix' => '233',
                    'default_locale' => 'en_GH',
                ),
                'GL' => array(
                    'currency_code' => 'DKK',
                    'phone_prefix' => '299',
                    'default_locale' => 'kl',
                ),
                'GM' => array(
                    'currency_code' => 'GMD',
                    'phone_prefix' => '220',
                    'default_locale' => 'en_GM',
                ),
                'GN' => array(
                    'currency_code' => 'GNF',
                    'phone_prefix' => '224',
                    'default_locale' => 'fr_GN',
                ),
                'GQ' => array(
                    'currency_code' => 'XAF',
                    'phone_prefix' => '240',
                    'default_locale' => 'es_GQ',
                ),
                'GR' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '30',
                    'default_locale' => 'el_GR',
                ),
                'GT' => array(
                    'currency_code' => 'GTQ',
                    'phone_prefix' => '502',
                    'default_locale' => 'es_GT',
                ),
                'GW' => array(
                    'currency_code' => 'XOF',
                    'phone_prefix' => '245',
                    'default_locale' => 'pt_GW',
                ),
                'GY' => array(
                    'currency_code' => 'GYD',
                    'phone_prefix' => '592',
                    'default_locale' => 'en_GY',
                ),
                'HN' => array(
                    'currency_code' => 'HNL',
                    'phone_prefix' => '504',
                    'default_locale' => 'es_HN',
                ),
                'HR' => array(
                    'currency_code' => 'HRK',
                    'phone_prefix' => '385',
                    'default_locale' => 'hr_HR',
                ),
                'HT' => array(
                    'currency_code' => 'HTG',
                    'phone_prefix' => '509',
                    'default_locale' => 'fr',
                ),
                'HU' => array(
                    'currency_code' => 'HUF',
                    'phone_prefix' => '36',
                    'default_locale' => 'hu_HU',
                ),
                'ID' => array(
                    'currency_code' => 'IDR',
                    'phone_prefix' => '62',
                    'default_locale' => 'id',
                ),
                'IE' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '353',
                    'default_locale' => 'en_IE',
                ),
                'IL' => array(
                    'currency_code' => 'ILS',
                    'phone_prefix' => '972',
                    'default_locale' => 'he',
                ),
                'IM' => array(
                    'currency_code' => 'GBP',
                    'phone_prefix' => '+44-1624',
                    'default_locale' => 'en',
                ),
                'IN' => array(
                    'currency_code' => 'INR',
                    'phone_prefix' => '91',
                    'default_locale' => 'en_IN',
                ),
                'IQ' => array(
                    'currency_code' => 'IQD',
                    'phone_prefix' => '964',
                    'default_locale' => 'ar_IQ',
                ),
                'IR' => array(
                    'currency_code' => 'IRR',
                    'phone_prefix' => '98',
                    'default_locale' => 'fa_IR',
                ),
                'IS' => array(
                    'currency_code' => 'ISK',
                    'phone_prefix' => '354',
                    'default_locale' => 'is',
                ),
                'IT' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '39',
                    'default_locale' => 'it_IT',
                ),
                'JE' => array(
                    'currency_code' => 'GBP',
                    'phone_prefix' => '+44-1534',
                    'default_locale' => 'en',
                ),
                'JM' => array(
                    'currency_code' => 'JMD',
                    'phone_prefix' => '+1-876',
                    'default_locale' => 'en_JM',
                ),
                'JO' => array(
                    'currency_code' => 'JOD',
                    'phone_prefix' => '962',
                    'default_locale' => 'ar_JO',
                ),
                'JP' => array(
                    'currency_code' => 'JPY',
                    'phone_prefix' => '81',
                    'default_locale' => 'ja',
                ),
                'KE' => array(
                    'currency_code' => 'KES',
                    'phone_prefix' => '254',
                    'default_locale' => 'en_KE',
                ),
                'KG' => array(
                    'currency_code' => 'KGS',
                    'phone_prefix' => '996',
                    'default_locale' => 'ru',
                ),
                'KH' => array(
                    'currency_code' => 'KHR',
                    'phone_prefix' => '855',
                    'default_locale' => 'km',
                ),
                'KI' => array(
                    'currency_code' => 'AUD',
                    'phone_prefix' => '686',
                    'default_locale' => 'en_KI',
                ),
                'KM' => array(
                    'currency_code' => 'KMF',
                    'phone_prefix' => '269',
                    'default_locale' => 'ar',
                ),
                'KN' => array(
                    'currency_code' => 'XCD',
                    'phone_prefix' => '+1-869',
                    'default_locale' => 'en_KN',
                ),
                'KP' => array(
                    'currency_code' => 'KPW',
                    'phone_prefix' => '850',
                    'default_locale' => 'ko_KP',
                ),
                'KR' => array(
                    'currency_code' => 'KRW',
                    'phone_prefix' => '82',
                    'default_locale' => 'ko_KR',
                ),
                'KW' => array(
                    'currency_code' => 'KWD',
                    'phone_prefix' => '965',
                    'default_locale' => 'ar_KW',
                ),
                'KZ' => array(
                    'currency_code' => 'KZT',
                    'phone_prefix' => '7',
                    'default_locale' => 'kk',
                ),
                'LA' => array(
                    'currency_code' => 'LAK',
                    'phone_prefix' => '856',
                    'default_locale' => 'lo',
                ),
                'LB' => array(
                    'currency_code' => 'LBP',
                    'phone_prefix' => '961',
                    'default_locale' => 'ar_LB',
                ),
                'LI' => array(
                    'currency_code' => 'CHF',
                    'phone_prefix' => '423',
                    'default_locale' => 'de_LI',
                ),
                'LK' => array(
                    'currency_code' => 'LKR',
                    'phone_prefix' => '94',
                    'default_locale' => 'si',
                ),
                'LR' => array(
                    'currency_code' => 'LRD',
                    'phone_prefix' => '231',
                    'default_locale' => 'en_LR',
                ),
                'LS' => array(
                    'currency_code' => 'LSL',
                    'phone_prefix' => '266',
                    'default_locale' => 'en_LS',
                ),
                'LT' => array(
                    'currency_code' => 'LTL',
                    'phone_prefix' => '370',
                    'default_locale' => 'lt',
                ),
                'LU' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '352',
                    'default_locale' => 'fr',
                ),
                'LV' => array(
                    'currency_code' => 'LVL',
                    'phone_prefix' => '371',
                    'default_locale' => 'lv',
                ),
                'LY' => array(
                    'currency_code' => 'LYD',
                    'phone_prefix' => '218',
                    'default_locale' => 'ar_LY',
                ),
                'MA' => array(
                    'currency_code' => 'MAD',
                    'phone_prefix' => '212',
                    'default_locale' => 'ar_MA',
                ),
                'MD' => array(
                    'currency_code' => 'MDL',
                    'phone_prefix' => '373',
                    'default_locale' => 'ro',
                ),
                'ME' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '382',
                    'default_locale' => 'sr',
                ),
                'MF' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '590',
                    'default_locale' => 'fr',
                ),
                'MG' => array(
                    'currency_code' => 'MGA',
                    'phone_prefix' => '261',
                    'default_locale' => 'fr_MG',
                ),
                'MH' => array(
                    'currency_code' => 'USD',
                    'phone_prefix' => '692',
                    'default_locale' => 'en',
                ),
                'MK' => array(
                    'currency_code' => 'MKD',
                    'phone_prefix' => '389',
                    'default_locale' => 'mk',
                ),
                'ML' => array(
                    'currency_code' => 'XOF',
                    'phone_prefix' => '223',
                    'default_locale' => 'fr_ML',
                ),
                'MM' => array(
                    'currency_code' => 'MMK',
                    'phone_prefix' => '95',
                    'default_locale' => 'my',
                ),
                'MN' => array(
                    'currency_code' => 'MNT',
                    'phone_prefix' => '976',
                    'default_locale' => 'mn',
                ),
                'MO' => array(
                    'currency_code' => 'MOP',
                    'phone_prefix' => '853',
                    'default_locale' => 'zh',
                ),
                'MR' => array(
                    'currency_code' => 'MRO',
                    'phone_prefix' => '222',
                    'default_locale' => 'ar_MR',
                ),
                'MT' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '356',
                    'default_locale' => 'mt',
                ),
                'MU' => array(
                    'currency_code' => 'MUR',
                    'phone_prefix' => '230',
                    'default_locale' => 'en_MU',
                ),
                'MV' => array(
                    'currency_code' => 'MVR',
                    'phone_prefix' => '960',
                    'default_locale' => 'en',
                ),
                'MW' => array(
                    'currency_code' => 'MWK',
                    'phone_prefix' => '265',
                    'default_locale' => 'en',
                ),
                'MX' => array(
                    'currency_code' => 'MXN',
                    'phone_prefix' => '52',
                    'default_locale' => 'es_MX',
                ),
                'MY' => array(
                    'currency_code' => 'MYR',
                    'phone_prefix' => '60',
                    'default_locale' => 'ms_MY',
                ),
                'MZ' => array(
                    'currency_code' => 'MZN',
                    'phone_prefix' => '258',
                    'default_locale' => 'pt_MZ',
                ),
                'NA' => array(
                    'currency_code' => 'NAD',
                    'phone_prefix' => '264',
                    'default_locale' => 'en_NA',
                ),
                'NE' => array(
                    'currency_code' => 'XOF',
                    'phone_prefix' => '227',
                    'default_locale' => 'fr_NE',
                ),
                'NG' => array(
                    'currency_code' => 'NGN',
                    'phone_prefix' => '234',
                    'default_locale' => 'en_NG',
                ),
                'NI' => array(
                    'currency_code' => 'NIO',
                    'phone_prefix' => '505',
                    'default_locale' => 'es_NI',
                ),
                'NL' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '31',
                    'default_locale' => 'nl_NL',
                ),
                'NO' => array(
                    'currency_code' => 'NOK',
                    'phone_prefix' => '47',
                    'default_locale' => 'no',
                ),
                'NP' => array(
                    'currency_code' => 'NPR',
                    'phone_prefix' => '977',
                    'default_locale' => 'ne',
                ),
                'NR' => array(
                    'currency_code' => 'AUD',
                    'phone_prefix' => '674',
                    'default_locale' => 'en',
                ),
                'NZ' => array(
                    'currency_code' => 'NZD',
                    'phone_prefix' => '64',
                    'default_locale' => 'en_NZ',
                ),
                'OM' => array(
                    'currency_code' => 'OMR',
                    'phone_prefix' => '968',
                    'default_locale' => 'ar_OM',
                ),
                'PA' => array(
                    'currency_code' => 'PAB',
                    'phone_prefix' => '507',
                    'default_locale' => 'es_PA',
                ),
                'PE' => array(
                    'currency_code' => 'PEN',
                    'phone_prefix' => '51',
                    'default_locale' => 'es_PE',
                ),
                'PG' => array(
                    'currency_code' => 'PGK',
                    'phone_prefix' => '675',
                    'default_locale' => 'en_PG',
                ),
                'PH' => array(
                    'currency_code' => 'PHP',
                    'phone_prefix' => '63',
                    'default_locale' => 'tl',
                ),
                'PK' => array(
                    'currency_code' => 'PKR',
                    'phone_prefix' => '92',
                    'default_locale' => 'ur_PK',
                ),
                'PL' => array(
                    'currency_code' => 'PLN',
                    'phone_prefix' => '48',
                    'default_locale' => 'pl',
                ),
                'PS' => array(
                    'currency_code' => 'ILS',
                    'phone_prefix' => '970',
                    'default_locale' => 'ar_PS',
                ),
                'PT' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '351',
                    'default_locale' => 'pt_PT',
                ),
                'PW' => array(
                    'currency_code' => 'USD',
                    'phone_prefix' => '680',
                    'default_locale' => 'en',
                ),
                'PY' => array(
                    'currency_code' => 'PYG',
                    'phone_prefix' => '595',
                    'default_locale' => 'es_PY',
                ),
                'QA' => array(
                    'currency_code' => 'QAR',
                    'phone_prefix' => '974',
                    'default_locale' => 'ar_QA',
                ),
                'RO' => array(
                    'currency_code' => 'RON',
                    'phone_prefix' => '40',
                    'default_locale' => 'ro',
                ),
                'RS' => array(
                    'currency_code' => 'RSD',
                    'phone_prefix' => '381',
                    'default_locale' => 'sr',
                ),
                'RU' => array(
                    'currency_code' => 'RUB',
                    'phone_prefix' => '7',
                    'default_locale' => 'ru',
                ),
                'RW' => array(
                    'currency_code' => 'RWF',
                    'phone_prefix' => '250',
                    'default_locale' => 'rw',
                ),
                'SA' => array(
                    'currency_code' => 'SAR',
                    'phone_prefix' => '966',
                    'default_locale' => 'ar_SA',
                ),
                'SB' => array(
                    'currency_code' => 'SBD',
                    'phone_prefix' => '677',
                    'default_locale' => 'en_SB',
                ),
                'SC' => array(
                    'currency_code' => 'SCR',
                    'phone_prefix' => '248',
                    'default_locale' => 'en_SC',
                ),
                'SD' => array(
                    'currency_code' => 'SDG',
                    'phone_prefix' => '249',
                    'default_locale' => 'ar_SD',
                ),
                'SE' => array(
                    'currency_code' => 'SEK',
                    'phone_prefix' => '46',
                    'default_locale' => 'sv_SE',
                ),
                'SG' => array(
                    'currency_code' => 'SGD',
                    'phone_prefix' => '65',
                    'default_locale' => 'en',
                ),
                'SH' => array(
                    'currency_code' => 'SHP',
                    'phone_prefix' => '290',
                    'default_locale' => 'en',
                ),
                'SI' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '386',
                    'default_locale' => 'sl',
                ),
                'SK' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '421',
                    'default_locale' => 'sk',
                ),
                'SL' => array(
                    'currency_code' => 'SLL',
                    'phone_prefix' => '232',
                    'default_locale' => 'en_SL',
                ),
                'SM' => array(
                    'currency_code' => 'EUR',
                    'phone_prefix' => '378',
                    'default_locale' => 'it_SM',
                ),
                'SN' => array(
                    'currency_code' => 'XOF',
                    'phone_prefix' => '221',
                    'default_locale' => 'fr_SN',
                ),
                'SO' => array(
                    'currency_code' => 'SOS',
                    'phone_prefix' => '252',
                    'default_locale' => 'so_SO',
                ),
                'SR' => array(
                    'currency_code' => 'SRD',
                    'phone_prefix' => '597',
                    'default_locale' => 'nl_SR',
                ),
                'ST' => array(
                    'currency_code' => 'STD',
                    'phone_prefix' => '239',
                    'default_locale' => 'pt_ST',
                ),
                'SV' => array(
                    'currency_code' => 'USD',
                    'phone_prefix' => '503',
                    'default_locale' => 'es_SV',
                ),
                'SY' => array(
                    'currency_code' => 'SYP',
                    'phone_prefix' => '963',
                    'default_locale' => 'ar_SY',
                ),
                'SZ' => array(
                    'currency_code' => 'SZL',
                    'phone_prefix' => '268',
                    'default_locale' => 'en_SZ',
                ),
                'TD' => array(
                    'currency_code' => 'XAF',
                    'phone_prefix' => '235',
                    'default_locale' => 'fr_TD',
                ),
                'TG' => array(
                    'currency_code' => 'XOF',
                    'phone_prefix' => '228',
                    'default_locale' => 'fr_TG',
                ),
                'TH' => array(
                    'currency_code' => 'THB',
                    'phone_prefix' => '66',
                    'default_locale' => 'th',
                ),
                'TJ' => array(
                    'currency_code' => 'TJS',
                    'phone_prefix' => '992',
                    'default_locale' => 'fr',
                ),
                'TL' => array(
                    'currency_code' => 'USD',
                    'phone_prefix' => '670',
                    'default_locale' => 'pt',
                ),
                'TM' => array(
                    'currency_code' => 'TMT',
                    'phone_prefix' => '993',
                    'default_locale' => 'ru',
                ),
                'TN' => array(
                    'currency_code' => 'TND',
                    'phone_prefix' => '216',
                    'default_locale' => 'ar_TN',
                ),
                'TO' => array(
                    'currency_code' => 'TOP',
                    'phone_prefix' => '676',
                    'default_locale' => 'to',
                ),
                'TR' => array(
                    'currency_code' => 'TRY',
                    'phone_prefix' => '90',
                    'default_locale' => 'tr_TR',
                ),
                'TT' => array(
                    'currency_code' => 'TTD',
                    'phone_prefix' => '+1-868',
                    'default_locale' => 'en_TT',
                ),
                'TV' => array(
                    'currency_code' => 'AUD',
                    'phone_prefix' => '688',
                    'default_locale' => 'en',
                ),
                'TW' => array(
                    'currency_code' => 'TWD',
                    'phone_prefix' => '886',
                    'default_locale' => 'zh_TW',
                ),
                'TZ' => array(
                    'currency_code' => 'TZS',
                    'phone_prefix' => '255',
                    'default_locale' => 'sw_TZ',
                ),
                'UA' => array(
                    'currency_code' => 'UAH',
                    'phone_prefix' => '380',
                    'default_locale' => 'uk',
                ),
                'UG' => array(
                    'currency_code' => 'UGX',
                    'phone_prefix' => '256',
                    'default_locale' => 'en_UG',
                ),
                'UM' => array(
                    'currency_code' => 'USD',
                    'phone_prefix' => '1',
                    'default_locale' => 'en_UM',
                ),
                'US' => array(
                    'currency_code' => 'USD',
                    'phone_prefix' => '1',
                    'default_locale' => 'en_US',
                ),
                'UY' => array(
                    'currency_code' => 'UYU',
                    'phone_prefix' => '598',
                    'default_locale' => 'es_UY',
                ),
                'UZ' => array(
                    'currency_code' => 'UZS',
                    'phone_prefix' => '998',
                    'default_locale' => 'uz',
                ),
                'VC' => array(
                    'currency_code' => 'XCD',
                    'phone_prefix' => '+1-784',
                    'default_locale' => 'en_VC',
                ),
                'VE' => array(
                    'currency_code' => 'VEF',
                    'phone_prefix' => '58',
                    'default_locale' => 'es_VE',
                ),
                'VN' => array(
                    'currency_code' => 'VND',
                    'phone_prefix' => '84',
                    'default_locale' => 'vi',
                ),
                'VU' => array(
                    'currency_code' => 'VUV',
                    'phone_prefix' => '678',
                    'default_locale' => 'fr',
                ),
                'WS' => array(
                    'currency_code' => 'WST',
                    'phone_prefix' => '685',
                    'default_locale' => 'en',
                ),
                'YE' => array(
                    'currency_code' => 'YER',
                    'phone_prefix' => '967',
                    'default_locale' => 'ar_YE',
                ),
                'ZA' => array(
                    'currency_code' => 'ZAR',
                    'phone_prefix' => '27',
                    'default_locale' => 'zu',
                ),
                'ZM' => array(
                    'currency_code' => 'ZMK',
                    'phone_prefix' => '260',
                    'default_locale' => 'en_ZM',
                ),
                'ZW' => array(
                    'currency_code' => 'ZWL',
                    'phone_prefix' => '263',
                    'default_locale' => 'en_ZW',
                ),
            ),
            'oro_locale.currency_data' => array(
                'AED' => array(
                    'symbol' => 'د.إ.‏',
                ),
                'AFN' => array(
                    'symbol' => '؋',
                ),
                'ALL' => array(
                    'symbol' => 'Lek',
                ),
                'AMD' => array(
                    'symbol' => 'դր.',
                ),
                'AOA' => array(
                    'symbol' => 'Kz',
                ),
                'ARS' => array(
                    'symbol' => '$',
                ),
                'AUD' => array(
                    'symbol' => 'AU$',
                ),
                'AZN' => array(
                    'symbol' => 'man.',
                ),
                'BAM' => array(
                    'symbol' => 'KM',
                ),
                'BBD' => array(
                    'symbol' => '$',
                ),
                'BDT' => array(
                    'symbol' => '৳',
                ),
                'BGN' => array(
                    'symbol' => 'лв.',
                ),
                'BHD' => array(
                    'symbol' => 'د.ب.‏',
                ),
                'BIF' => array(
                    'symbol' => 'FBu',
                ),
                'BND' => array(
                    'symbol' => '$',
                ),
                'BOB' => array(
                    'symbol' => 'Bs',
                ),
                'BRL' => array(
                    'symbol' => 'R$',
                ),
                'BSD' => array(
                    'symbol' => 'BSD',
                ),
                'BTN' => array(
                    'symbol' => 'BTN',
                ),
                'BWP' => array(
                    'symbol' => 'P',
                ),
                'BYR' => array(
                    'symbol' => 'BYR',
                ),
                'BZD' => array(
                    'symbol' => '$',
                ),
                'CAD' => array(
                    'symbol' => '$',
                ),
                'CDF' => array(
                    'symbol' => 'FrCD',
                ),
                'CHF' => array(
                    'symbol' => 'CHF',
                ),
                'CLP' => array(
                    'symbol' => '$',
                ),
                'CNY' => array(
                    'symbol' => '￥',
                ),
                'COP' => array(
                    'symbol' => '$',
                ),
                'CRC' => array(
                    'symbol' => '₡',
                ),
                'CUP' => array(
                    'symbol' => 'CUP',
                ),
                'CVE' => array(
                    'symbol' => 'CVE',
                ),
                'CZK' => array(
                    'symbol' => 'Kč',
                ),
                'DJF' => array(
                    'symbol' => 'Fdj',
                ),
                'DKK' => array(
                    'symbol' => 'kr',
                ),
                'DOP' => array(
                    'symbol' => '$',
                ),
                'DZD' => array(
                    'symbol' => 'د.ج.‏',
                ),
                'EGP' => array(
                    'symbol' => 'ج.م.‏',
                ),
                'ERN' => array(
                    'symbol' => 'Nfk',
                ),
                'ETB' => array(
                    'symbol' => 'ብር',
                ),
                'EUR' => array(
                    'symbol' => '€',
                ),
                'FJD' => array(
                    'symbol' => 'FJD',
                ),
                'GBP' => array(
                    'symbol' => '£',
                ),
                'GEL' => array(
                    'symbol' => 'GEL',
                ),
                'GHS' => array(
                    'symbol' => 'GHS',
                ),
                'GMD' => array(
                    'symbol' => 'GMD',
                ),
                'GNF' => array(
                    'symbol' => 'FG',
                ),
                'GTQ' => array(
                    'symbol' => 'Q',
                ),
                'GYD' => array(
                    'symbol' => 'GYD',
                ),
                'HNL' => array(
                    'symbol' => 'L',
                ),
                'HRK' => array(
                    'symbol' => 'kn',
                ),
                'HTG' => array(
                    'symbol' => 'HTG',
                ),
                'HUF' => array(
                    'symbol' => 'Ft',
                ),
                'IDR' => array(
                    'symbol' => 'Rp',
                ),
                'ILS' => array(
                    'symbol' => '₪',
                ),
                'INR' => array(
                    'symbol' => '₹',
                ),
                'IQD' => array(
                    'symbol' => 'د.ع.‏',
                ),
                'IRR' => array(
                    'symbol' => '﷼',
                ),
                'ISK' => array(
                    'symbol' => 'kr',
                ),
                'JMD' => array(
                    'symbol' => '$',
                ),
                'JOD' => array(
                    'symbol' => 'د.أ.‏',
                ),
                'JPY' => array(
                    'symbol' => '￥',
                ),
                'KES' => array(
                    'symbol' => 'KES',
                ),
                'KGS' => array(
                    'symbol' => 'KGS',
                ),
                'KHR' => array(
                    'symbol' => '៛',
                ),
                'KMF' => array(
                    'symbol' => 'ف.ج.ق.‏',
                ),
                'KPW' => array(
                    'symbol' => 'KPW',
                ),
                'KRW' => array(
                    'symbol' => '₩',
                ),
                'KWD' => array(
                    'symbol' => 'د.ك.‏',
                ),
                'KZT' => array(
                    'symbol' => 'тңг.',
                ),
                'LAK' => array(
                    'symbol' => 'LAK',
                ),
                'LBP' => array(
                    'symbol' => 'ل.ل.‏',
                ),
                'LKR' => array(
                    'symbol' => 'රු.',
                ),
                'LRD' => array(
                    'symbol' => 'LRD',
                ),
                'LSL' => array(
                    'symbol' => 'LSL',
                ),
                'LTL' => array(
                    'symbol' => 'Lt',
                ),
                'LVL' => array(
                    'symbol' => 'Ls',
                ),
                'LYD' => array(
                    'symbol' => 'د.ل.‏',
                ),
                'MAD' => array(
                    'symbol' => 'د.م.‏',
                ),
                'MDL' => array(
                    'symbol' => 'MDL',
                ),
                'MGA' => array(
                    'symbol' => 'MGA',
                ),
                'MKD' => array(
                    'symbol' => 'MKD',
                ),
                'MMK' => array(
                    'symbol' => 'K',
                ),
                'MNT' => array(
                    'symbol' => 'MNT',
                ),
                'MOP' => array(
                    'symbol' => 'MOP',
                ),
                'MRO' => array(
                    'symbol' => 'أ.م.‏',
                ),
                'MUR' => array(
                    'symbol' => 'MUR',
                ),
                'MVR' => array(
                    'symbol' => 'Rf.',
                ),
                'MWK' => array(
                    'symbol' => 'MWK',
                ),
                'MXN' => array(
                    'symbol' => '$',
                ),
                'MYR' => array(
                    'symbol' => 'RM',
                ),
                'MZN' => array(
                    'symbol' => 'MTn',
                ),
                'NAD' => array(
                    'symbol' => '$',
                ),
                'NGN' => array(
                    'symbol' => 'NGN',
                ),
                'NIO' => array(
                    'symbol' => 'C$',
                ),
                'NOK' => array(
                    'symbol' => 'kr',
                ),
                'NPR' => array(
                    'symbol' => 'नेरू ',
                ),
                'NZD' => array(
                    'symbol' => 'NZ$',
                ),
                'OMR' => array(
                    'symbol' => 'ر.ع.‏',
                ),
                'PAB' => array(
                    'symbol' => 'B/.',
                ),
                'PEN' => array(
                    'symbol' => 'S/.',
                ),
                'PGK' => array(
                    'symbol' => 'PGK',
                ),
                'PHP' => array(
                    'symbol' => '₱',
                ),
                'PKR' => array(
                    'symbol' => 'PKRs',
                ),
                'PLN' => array(
                    'symbol' => 'zł',
                ),
                'PYG' => array(
                    'symbol' => '₲',
                ),
                'QAR' => array(
                    'symbol' => 'ر.ق.‏',
                ),
                'RON' => array(
                    'symbol' => 'RON',
                ),
                'RSD' => array(
                    'symbol' => 'дин.',
                ),
                'RUB' => array(
                    'symbol' => 'руб.',
                ),
                'RWF' => array(
                    'symbol' => 'RF',
                ),
                'SAR' => array(
                    'symbol' => 'ر.س.‏',
                ),
                'SBD' => array(
                    'symbol' => 'SBD',
                ),
                'SCR' => array(
                    'symbol' => 'SCR',
                ),
                'SDG' => array(
                    'symbol' => 'SDG',
                ),
                'SEK' => array(
                    'symbol' => 'kr',
                ),
                'SGD' => array(
                    'symbol' => 'SGD',
                ),
                'SHP' => array(
                    'symbol' => 'SHP',
                ),
                'SLL' => array(
                    'symbol' => 'SLL',
                ),
                'SOS' => array(
                    'symbol' => 'SOS',
                ),
                'SRD' => array(
                    'symbol' => 'SRD',
                ),
                'STD' => array(
                    'symbol' => 'Db',
                ),
                'SYP' => array(
                    'symbol' => 'ل.س.‏',
                ),
                'SZL' => array(
                    'symbol' => 'SZL',
                ),
                'THB' => array(
                    'symbol' => '฿',
                ),
                'TJS' => array(
                    'symbol' => 'TJS',
                ),
                'TMT' => array(
                    'symbol' => 'TMT',
                ),
                'TND' => array(
                    'symbol' => 'د.ت.‏',
                ),
                'TOP' => array(
                    'symbol' => 'T$',
                ),
                'TRY' => array(
                    'symbol' => 'TL',
                ),
                'TTD' => array(
                    'symbol' => '$',
                ),
                'TWD' => array(
                    'symbol' => 'NT$',
                ),
                'TZS' => array(
                    'symbol' => 'TSh',
                ),
                'UAH' => array(
                    'symbol' => '₴',
                ),
                'UGX' => array(
                    'symbol' => 'UGX',
                ),
                'USD' => array(
                    'symbol' => '$',
                ),
                'UYU' => array(
                    'symbol' => '$',
                ),
                'UZS' => array(
                    'symbol' => 'UZS',
                ),
                'VEF' => array(
                    'symbol' => 'Bs.F.',
                ),
                'VND' => array(
                    'symbol' => '₫',
                ),
                'VUV' => array(
                    'symbol' => 'VUV',
                ),
                'WST' => array(
                    'symbol' => 'WST',
                ),
                'XAF' => array(
                    'symbol' => 'FCFA',
                ),
                'XCD' => array(
                    'symbol' => 'EC$',
                ),
                'XOF' => array(
                    'symbol' => 'CFA',
                ),
                'YER' => array(
                    'symbol' => 'ر.ي.‏',
                ),
                'ZAR' => array(
                    'symbol' => 'R',
                ),
                'ZMK' => array(
                    'symbol' => 'ZMK',
                ),
                'ZWL' => array(
                    'symbol' => 'ZWL',
                ),
            ),
            'oro_locale.settings.class' => 'Oro\\Bundle\\LocaleBundle\\Model\\LocaleSettings',
            'oro_locale.calendar.class' => 'Oro\\Bundle\\LocaleBundle\\Model\\Calendar',
            'oro_locale.calendar_factory.class' => 'Oro\\Bundle\\LocaleBundle\\Model\\CalendarFactory',
            'oro_locale.form.type.name_format.class' => 'Oro\\Bundle\\LocaleBundle\\Form\\Type\\NameFormatType',
            'oro_locale.format_converter.date_time.registry.class' => 'Oro\\Bundle\\LocaleBundle\\Converter\\DateTimeFormatConverterRegistry',
            'oro_locale.format_converter.date_time.intl.class' => 'Oro\\Bundle\\LocaleBundle\\Converter\\IntlDateTimeFormatConverter',
            'oro_locale.format_converter.date_time.moment.class' => 'Oro\\Bundle\\LocaleBundle\\Converter\\MomentDateTimeFormatConverter',
            'oro_locale.format_converter.date_time.php.class' => 'Oro\\Bundle\\LocaleBundle\\Converter\\PhpDateTimeFormatConverter',
            'oro_locale.formatter.name.class' => 'Oro\\Bundle\\LocaleBundle\\Formatter\\NameFormatter',
            'oro_locale.formatter.address.class' => 'Oro\\Bundle\\LocaleBundle\\Formatter\\AddressFormatter',
            'oro_locale.formatter.date_time.class' => 'Oro\\Bundle\\LocaleBundle\\Formatter\\DateTimeFormatter',
            'oro_locale.formatter.number.class' => 'Oro\\Bundle\\LocaleBundle\\Formatter\\NumberFormatter',
            'oro_locale.dql.formatter.name.class' => 'Oro\\Bundle\\LocaleBundle\\DQL\\DQLNameFormatter',
            'oro_locale.entity_name_provider.class' => 'Oro\\Bundle\\LocaleBundle\\Provider\\EntityNameProvider',
            'oro_locale.form.type.country.class' => 'Oro\\Bundle\\LocaleBundle\\Form\\Type\\CountryType',
            'oro_locale.form.type.currency.class' => 'Oro\\Bundle\\LocaleBundle\\Form\\Type\\CurrencyType',
            'oro_locale.form.type.locale.class' => 'Oro\\Bundle\\LocaleBundle\\Form\\Type\\LocaleType',
            'oro_locale.form.type.language.class' => 'Oro\\Bundle\\LocaleBundle\\Form\\Type\\LanguageType',
            'oro_locale.form.type.timezone.class' => 'Oro\\Bundle\\LocaleBundle\\Form\\Type\\TimezoneType',
            'oro_locale.form.type.quarter.class' => 'Oro\\Bundle\\LocaleBundle\\Form\\Type\\QuarterType',
            'oro_locale.locale_listener.class' => 'Oro\\Bundle\\LocaleBundle\\EventListener\\LocaleListener',
            'oro_locale.twig.date_format.class' => 'Oro\\Bundle\\LocaleBundle\\Twig\\DateFormatExtension',
            'oro_locale.twig.locale.class' => 'Oro\\Bundle\\LocaleBundle\\Twig\\LocaleExtension',
            'oro_locale.twig.calendar.class' => 'Oro\\Bundle\\LocaleBundle\\Twig\\CalendarExtension',
            'oro_locale.twig.date_time.class' => 'Oro\\Bundle\\LocaleBundle\\Twig\\DateTimeExtension',
            'oro_locale.twig.name.class' => 'Oro\\Bundle\\LocaleBundle\\Twig\\NameExtension',
            'oro_locale.twig.address.class' => 'Oro\\Bundle\\LocaleBundle\\Twig\\AddressExtension',
            'oro_locale.twig.number.class' => 'Oro\\Bundle\\LocaleBundle\\Twig\\NumberExtension',
            'oro_locale.formatter.datetime.class' => 'Oro\\Bundle\\LocaleBundle\\Formatter\\DateTimeValueFormatter',
            'oro_migration.db_id_name_generator.class' => 'Oro\\Bundle\\EntityExtendBundle\\Tools\\ExtendDbIdentifierNameGenerator',
            'oro_migration.data_fixtures.loader.class' => 'Oro\\Bundle\\MigrationBundle\\Migration\\Loader\\DataFixturesLoader',
            'oro_migration.migrations.loader.class' => 'Oro\\Bundle\\MigrationBundle\\Migration\\Loader\\MigrationsLoader',
            'oro_migration.migrations.query_executor.class' => 'Oro\\Bundle\\MigrationBundle\\Migration\\MigrationQueryExecutor',
            'oro_migration.migrations.executor.class' => 'Oro\\Bundle\\EntityExtendBundle\\Migration\\ExtendMigrationExecutor',
            'oro_migration.migration.pre_up.listener.class' => 'Oro\\Bundle\\MigrationBundle\\EventListener\\PreUpMigrationListener',
            'oro_migration.migrations.extension_manager.class' => 'Oro\\Bundle\\MigrationBundle\\Migration\\MigrationExtensionManager',
            'oro_migration.migration.extension.rename.class' => 'Oro\\Bundle\\MigrationBundle\\Migration\\Extension\\RenameExtension',
            'oro_migration.listener.release_data_fixture.class' => 'Oro\\Bundle\\MigrationBundle\\EventListener\\ReleaseDataFixtureListener',
            'oro_migration.tools.schema_dumper.class' => 'Oro\\Bundle\\MigrationBundle\\Tools\\SchemaDumper',
            'oro_migration.twig.schema_dumper.class' => 'Oro\\Bundle\\MigrationBundle\\Twig\\SchemaDumperExtension',
            'oro_migration.migration.extension.data_strore.class' => 'Oro\\Bundle\\MigrationBundle\\Migration\\Extension\\DataStorageExtension',
            'oro_note.entity.class' => 'Oro\\Bundle\\NoteBundle\\Entity\\Note',
            'oro_note.note_lifecycle_listener.class' => 'Oro\\Bundle\\NoteBundle\\EventListener\\NoteLifecycleListener',
            'oro_note.placeholder.filter.class' => 'Oro\\Bundle\\NoteBundle\\Placeholder\\PlaceholderFilter',
            'oro_note.migration.extension.note.class' => 'Oro\\Bundle\\NoteBundle\\Migration\\Extension\\NoteExtension',
            'oro_note.entity_config_dumper.extension.class' => 'Oro\\Bundle\\NoteBundle\\Tools\\NoteEntityConfigDumperExtension',
            'oro_note.entity_generator.extension.class' => 'Oro\\Bundle\\NoteBundle\\Tools\\NoteEntityGeneratorExtension',
            'oro_note.manager.class' => 'Oro\\Bundle\\NoteBundle\\Entity\\Manager\\NoteManager',
            'oro_note.manager.api.class' => 'Oro\\Bundle\\NoteBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_note.activity_list.provider.class' => 'Oro\\Bundle\\NoteBundle\\Provider\\NoteActivityListProvider',
            'oro_note.form.type.note.class' => 'Oro\\Bundle\\NoteBundle\\Form\\Type\\NoteType',
            'oro_note.form.type.note_api.class' => 'Oro\\Bundle\\NoteBundle\\Form\\Type\\NoteApiType',
            'oro_note.form.handler.note.class' => 'Oro\\Bundle\\NoteBundle\\Form\\Handler\\NoteHandler',
            'oro_note.form.handler.note_api.class' => 'Oro\\Bundle\\NoteBundle\\Form\\Handler\\NoteApiHandler',
            'oro_notification.event_entity.class' => 'Oro\\Bundle\\NotificationBundle\\Entity\\Event',
            'oro_notification.emailnotification.entity.class' => 'Oro\\Bundle\\NotificationBundle\\Entity\\EmailNotification',
            'oro_notification.entity_spool.class' => 'Oro\\Bundle\\NotificationBundle\\Doctrine\\EntityPool',
            'oro_notification.email_processor.class' => 'Oro\\Bundle\\NotificationBundle\\Processor\\EmailNotificationProcessor',
            'oro_notification.manager.class' => 'Oro\\Bundle\\NotificationBundle\\Provider\\NotificationManager',
            'oro_notification.email_handler.class' => 'Oro\\Bundle\\NotificationBundle\\Event\\Handler\\EmailNotificationHandler',
            'oro_notification.doctrine_listener.class' => 'Oro\\Bundle\\NotificationBundle\\Provider\\DoctrineListener',
            'oro_notification.form.type.email_notification.class' => 'Oro\\Bundle\\NotificationBundle\\Form\\Type\\EmailNotificationType',
            'oro_notification.form.type.recipient_list.class' => 'Oro\\Bundle\\NotificationBundle\\Form\\Type\\RecipientListType',
            'oro_notification.form.handler.email_notification.class' => 'Oro\\Bundle\\NotificationBundle\\Form\\Handler\\EmailNotificationHandler',
            'oro_notification.form.type.email_notification_entity_choice.class' => 'Oro\\Bundle\\NotificationBundle\\Form\\Type\\EmailNotificationEntityChoiceType',
            'oro_notification.email_notification.manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_notification.form.type.email_notification.api.class' => 'Oro\\Bundle\\NotificationBundle\\Form\\Type\\EmailNotificationApiType',
            'oro_notification.form.handler.email_notification.api.class' => 'Oro\\Bundle\\NotificationBundle\\Form\\Handler\\EmailNotificationHandler',
            'oro_notification.mailer.transport.spool_db.class' => 'Oro\\Bundle\\NotificationBundle\\Provider\\Mailer\\DbSpool',
            'oro_notification.mailer.transport.spool_entity.class' => 'Oro\\Bundle\\NotificationBundle\\Entity\\SpoolItem',
            'swiftmailer.mailer.db_spool_mailer.spool.enabled' => true,
            'oro_notification.event_listener.email_notification_service.class' => 'Oro\\Bundle\\NotificationBundle\\Provider\\EmailNotificationGridHelper',
            'oro_notification.email_notification_entity_provider.class' => 'Oro\\Bundle\\NotificationBundle\\Provider\\EmailNotificationEntityProvider',
            'oro_platform.composer.local_repo_factory.class' => 'Oro\\Bundle\\PlatformBundle\\Composer\\LocalRepositoryFactory',
            'oro_platform.composer.installed_json' => 'C:\\wamp\\www\\stockvalue~~\\app/../vendor/composer/installed.json',
            'oro_platform.composer.version_helper.class' => 'Oro\\Bundle\\PlatformBundle\\Composer\\VersionHelper',
            'oro_platform.maintenance.class' => 'Oro\\Bundle\\PlatformBundle\\Maintenance\\Mode',
            'oro_platform.event_listener.driver_lock.class' => 'Oro\\Bundle\\PlatformBundle\\EventListener\\Console\\DriverLockCommandListener',
            'oro_platform.twig.platform_extension.class' => 'Oro\\Bundle\\PlatformBundle\\Twig\\PlatformExtension',
            'oro_platform.optional_listeners.manager.class' => 'Oro\\Bundle\\PlatformBundle\\Manager\\OptionalListenerManager',
            'oro_platform.event_listener.optional_listeners.class' => 'Oro\\Bundle\\PlatformBundle\\EventListener\\Console\\OptionalListenersListener',
            'oro_query_designer.query_designer.manager.class' => 'Oro\\Bundle\\QueryDesignerBundle\\QueryDesigner\\Manager',
            'oro_query_designer.query_designer.restriction_builder.class' => 'Oro\\Bundle\\QueryDesignerBundle\\QueryDesigner\\RestrictionBuilder',
            'oro_query_designer.config.resolver.class' => 'Oro\\Bundle\\QueryDesignerBundle\\QueryDesigner\\ConfigurationResolver',
            'oro_query_designer.grid.extension.orm_datasource.class' => 'Oro\\Bundle\\QueryDesignerBundle\\Grid\\Extension\\OrmDatasourceExtension',
            'oro_query_designer.validator.query_validator.class' => 'Oro\\Bundle\\QueryDesignerBundle\\Validator\\QueryValidator',
            'oro_query_designer.validator.grouping_validator.class' => 'Oro\\Bundle\\QueryDesignerBundle\\Validator\\GroupingValidator',
            'oro_query_designer.grid.datagrid_configuration_builder.class' => 'Oro\\Bundle\\QueryDesignerBundle\\Grid\\DatagridConfigurationBuilder',
            'oro_query_designer.group_by_helper.class' => 'Oro\\Bundle\\QueryDesignerBundle\\Model\\GroupByHelper',
            'oro_query_designer.form.type.field_choice.class' => 'Oro\\Bundle\\QueryDesignerBundle\\Form\\Type\\FieldChoiceType',
            'oro_query_designer.form.type.function_choice.class' => 'Oro\\Bundle\\QueryDesignerBundle\\Form\\Type\\FunctionChoiceType',
            'oro_query_designer.form.type.sorting_choice.class' => 'Oro\\Bundle\\QueryDesignerBundle\\Form\\Type\\SortingChoiceType',
            'oro_query_designer.form.type.query_designer_column.class' => 'Oro\\Bundle\\QueryDesignerBundle\\Form\\Type\\ColumnType',
            'oro_query_designer.form.type.query_designer_filter.class' => 'Oro\\Bundle\\QueryDesignerBundle\\Form\\Type\\FilterType',
            'oro_query_designer.form.type.query_designer_grouping.class' => 'Oro\\Bundle\\QueryDesignerBundle\\Form\\Type\\GroupingType',
            'oro_report.report.entity.class' => 'Oro\\Bundle\\ReportBundle\\Entity\\Report',
            'oro_report.datagrid.configuration.provider.class' => 'Oro\\Bundle\\ReportBundle\\Grid\\ReportDatagridConfigurationProvider',
            'oro_report.listener.navigation_listener.class' => 'Oro\\Bundle\\ReportBundle\\EventListener\\NavigationListener',
            'oro_report.report_manager.class' => 'Oro\\Bundle\\ReportBundle\\Entity\\Manager\\ReportManager',
            'oro_report.grid.base_configuration_builder.class' => 'Oro\\Bundle\\ReportBundle\\Grid\\BaseReportConfigurationBuilder',
            'oro_report.grid.datagrid_configuration_builder.class' => 'Oro\\Bundle\\ReportBundle\\Grid\\ReportDatagridConfigurationBuilder',
            'oro_report.form.extension.schema.extension.class' => 'Oro\\Bundle\\ReportBundle\\Form\\Extension\\ReportChartSchemaTypeExtension',
            'oro_report.form.type.report.class' => 'Oro\\Bundle\\ReportBundle\\Form\\Type\\ReportType',
            'oro_report.form.type.entity_choice.class' => 'Oro\\Bundle\\ReportBundle\\Form\\Type\\ReportEntityChoiceType',
            'oro_report.form.type.chart.class' => 'Oro\\Bundle\\ReportBundle\\Form\\Type\\ReportChartType',
            'oro_report.form.type.chart.schema.class' => 'Oro\\Bundle\\ReportBundle\\Form\\Type\\ReportChartSchemaType',
            'oro_report.form.type.chart.schema.collection.class' => 'Oro\\Bundle\\ReportBundle\\Form\\Type\\ReportChartSchemaCollectionType',
            'oro_report.form.handler.report.class' => 'Oro\\Bundle\\ReportBundle\\Form\\Handler\\ReportHandler',
            'oro_report.report.manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_requirejs.twig.class' => 'Oro\\Bundle\\RequireJSBundle\\Twig\\OroRequireJSExtension',
            'oro_requirejs.provider.config.class' => 'Oro\\Bundle\\RequireJSBundle\\Provider\\Config',
            'oro_require_js' => array(
                'build_path' => 'js/oro.min.js',
                'building_timeout' => 3600,
                'build' => array(
                    'preserveLicenseComments' => true,
                    'optimize' => 'uglify2',
                    'paths' => array(

                    ),
                ),
                'config' => array(
                    'waitSeconds' => 0,
                ),
                'web_root' => 'C:\\wamp\\www\\stockvalue~~\\app/../web',
                'js_engine' => 'node',
            ),
            'oro_require_js.web_root' => 'C:\\wamp\\www\\stockvalue~~\\app/../web',
            'oro_require_js.build_path' => 'js/oro.min.js',
            'oro_search.engine' => 'orm',
            'oro_search.engine_parameters' => array(

            ),
            'oro_search.log_queries' => false,
            'oro_search.realtime_update' => true,
            'oro_search.entities_config' => array(
                'Oro\\Bundle\\OrganizationBundle\\Entity\\Organization' => array(
                    'alias' => 'organization',
                    'search_template' => 'OroOrganizationBundle:Search:organizationResult.html.twig',
                    'title_fields' => array(
                        0 => 'name',
                    ),
                    'fields' => array(
                        0 => array(
                            'name' => 'name',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'name',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                    ),
                    'label' => NULL,
                    'mode' => 'normal',
                ),
                'Oro\\Bundle\\OrganizationBundle\\Entity\\BusinessUnit' => array(
                    'alias' => 'business_unit',
                    'search_template' => 'OroOrganizationBundle:Search:businessUnitResult.html.twig',
                    'title_fields' => array(
                        0 => 'name',
                    ),
                    'fields' => array(
                        0 => array(
                            'name' => 'name',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'name',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                    ),
                    'label' => NULL,
                    'mode' => 'normal',
                ),
                'Oro\\Bundle\\EmailBundle\\Entity\\EmailUser' => array(
                    'alias' => 'oro_email',
                    'label' => 'Emails',
                    'search_template' => 'OroEmailBundle:Email:searchResult.html.twig',
                    'route' => array(
                        'name' => 'oro_email_thread_view',
                        'parameters' => array(
                            'id' => 'email.id',
                        ),
                    ),
                    'title_fields' => array(
                        0 => 'email.subject',
                    ),
                    'fields' => array(
                        0 => array(
                            'name' => 'email',
                            'relation_type' => 'many-to-one',
                            'relation_fields' => array(
                                0 => array(
                                    'name' => 'subject',
                                    'target_type' => 'text',
                                    'target_fields' => array(
                                        0 => 'subject',
                                    ),
                                    'relation_fields' => array(

                                    ),
                                ),
                            ),
                            'target_fields' => array(

                            ),
                        ),
                    ),
                    'mode' => 'normal',
                ),
                'Oro\\Bundle\\UserBundle\\Entity\\User' => array(
                    'alias' => 'oro_user',
                    'title_fields' => array(
                        0 => 'username',
                    ),
                    'route' => array(
                        'name' => 'oro_user_view',
                        'parameters' => array(
                            'id' => 'id',
                        ),
                    ),
                    'search_template' => 'OroUserBundle:Search:result.html.twig',
                    'fields' => array(
                        0 => array(
                            'name' => 'username',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'username',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                        1 => array(
                            'name' => 'email',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'email',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                        2 => array(
                            'name' => 'phone',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'phone',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                        3 => array(
                            'name' => 'namePrefix',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'namePrefix',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                        4 => array(
                            'name' => 'firstName',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'firstName',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                        5 => array(
                            'name' => 'middleName',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'middleName',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                        6 => array(
                            'name' => 'lastName',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'lastName',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                        7 => array(
                            'name' => 'nameSuffix',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'nameSuffix',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                        8 => array(
                            'name' => 'birthday',
                            'target_type' => 'datetime',
                            'target_fields' => array(
                                0 => 'birthday',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                        9 => array(
                            'name' => 'emails',
                            'relation_type' => 'one-to-many',
                            'relation_fields' => array(
                                0 => array(
                                    'name' => 'email',
                                    'target_type' => 'text',
                                    'target_fields' => array(
                                        0 => 'email',
                                    ),
                                    'relation_fields' => array(

                                    ),
                                ),
                            ),
                            'target_fields' => array(

                            ),
                        ),
                    ),
                    'label' => NULL,
                    'mode' => 'normal',
                ),
                'Oro\\Bundle\\UserBundle\\Entity\\Role' => array(
                    'alias' => 'oro_access_role',
                    'title_fields' => array(
                        0 => 'label',
                    ),
                    'search_template' => 'OroUserBundle:Role:Search\\result.html.twig',
                    'route' => array(
                        'name' => 'oro_user_role_index',
                        'parameters' => array(

                        ),
                    ),
                    'fields' => array(
                        0 => array(
                            'name' => 'label',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'label',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                    ),
                    'label' => NULL,
                    'mode' => 'normal',
                ),
                'Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent' => array(
                    'alias' => 'oro_clendar_event',
                    'title_fields' => array(
                        0 => 'title',
                    ),
                    'route' => array(
                        'name' => 'oro_calendar_view',
                        'parameters' => array(
                            'id' => 'calendar.id',
                        ),
                    ),
                    'search_template' => 'OroCalendarBundle:Search:result.html.twig',
                    'fields' => array(
                        0 => array(
                            'name' => 'title',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'title',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                        1 => array(
                            'name' => 'description',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'description',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                        2 => array(
                            'name' => 'start',
                            'target_type' => 'datetime',
                            'target_fields' => array(
                                0 => 'start',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                        3 => array(
                            'name' => 'end',
                            'target_type' => 'datetime',
                            'target_fields' => array(
                                0 => 'end',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                    ),
                    'label' => NULL,
                    'mode' => 'normal',
                ),
                'Oro\\Bundle\\ReportBundle\\Entity\\Report' => array(
                    'alias' => 'oro_report',
                    'title_fields' => array(
                        0 => 'name',
                    ),
                    'route' => array(
                        'name' => 'oro_report_view',
                        'parameters' => array(
                            'id' => 'id',
                        ),
                    ),
                    'search_template' => 'OroReportBundle:Search:result.html.twig',
                    'fields' => array(
                        0 => array(
                            'name' => 'name',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'name',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                        1 => array(
                            'name' => 'description',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'description',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                    ),
                    'label' => NULL,
                    'mode' => 'normal',
                ),
                'Oro\\Bundle\\TagBundle\\Entity\\Tag' => array(
                    'alias' => 'oro_tag',
                    'title_fields' => array(
                        0 => 'name',
                    ),
                    'search_template' => 'OroTagBundle:Search:result.html.twig',
                    'route' => array(
                        'name' => 'oro_tag_search',
                        'parameters' => array(
                            'id' => 'id',
                        ),
                    ),
                    'fields' => array(
                        0 => array(
                            'name' => 'name',
                            'target_type' => 'text',
                            'target_fields' => array(
                                0 => 'name',
                            ),
                            'relation_fields' => array(

                            ),
                        ),
                    ),
                    'label' => NULL,
                    'mode' => 'normal',
                ),
            ),
            'oro_search.twig.item_container_template' => 'OroSearchBundle:Datagrid:itemContainer.html.twig',
            'oro_search.index.class' => 'Oro\\Bundle\\SearchBundle\\Engine\\Indexer',
            'oro_search.security_provider.class' => 'Oro\\Bundle\\SearchBundle\\Security\\SecurityProvider',
            'oro_search.index_listener.class' => 'Oro\\Bundle\\SearchBundle\\EventListener\\IndexListener',
            'oro_search.twig_extension.class' => 'Oro\\Bundle\\SearchBundle\\Twig\\OroSearchExtension',
            'oro_search.mapper.class' => 'Oro\\Bundle\\SearchBundle\\Engine\\ObjectMapper',
            'oro_search.provider.result_statistics_provider.class' => 'Oro\\Bundle\\SearchBundle\\Provider\\ResultStatisticsProvider',
            'oro_search.formatter.result_formatter.class' => 'Oro\\Bundle\\SearchBundle\\Formatter\\ResultFormatter',
            'oro_search.prepare_result_item.listener.class' => 'Oro\\Bundle\\SearchBundle\\EventListener\\PrepareResultItemListener',
            'oro_search.extension.formatter.property.search_result_property.class' => 'Oro\\Bundle\\SearchBundle\\Extension\\SearchResultProperty',
            'oro_search.extension.search_results.class' => 'Oro\\Bundle\\SearchBundle\\Extension\\SearchResultsExtension',
            'oro_search.event_listener.search_results_grid_listener.class' => 'Oro\\Bundle\\SearchBundle\\EventListener\\SearchResultsGridListener',
            'oro_search.event_listener.demo_data_listener.class' => 'Oro\\Bundle\\SearchBundle\\EventListener\\DemoDataMigrationListener',
            'oro_search.datasource.search.class' => 'Oro\\Bundle\\SearchBundle\\Extension\\SearchDatasource',
            'oro_search.extension.orm_pager.class' => 'Oro\\Bundle\\SearchBundle\\Extension\\Pager\\SearchPagerExtension',
            'oro_search.extension.pager.search.pager.class' => 'Oro\\Bundle\\SearchBundle\\Extension\\Pager\\IndexerPager',
            'oro_search.provider.search_mapping.class' => 'Oro\\Bundle\\SearchBundle\\Provider\\SearchMappingProvider',
            'oro_search.fulltext_index_manager.class' => 'Oro\\Bundle\\SearchBundle\\Engine\\FulltextIndexManager',
            'oro_search.event_listener.update_schema_listener.class' => 'Oro\\Bundle\\SearchBundle\\EventListener\\UpdateSchemaDoctrineListener',
            'oro_search.event_listener.orm.fulltext_index_listener.class' => 'Oro\\Bundle\\SearchBundle\\EventListener\\ORM\\FulltextIndexListener',
            'oro_search.drivers' => array(
                'pdo_mysql' => 'Oro\\Bundle\\SearchBundle\\Engine\\Orm\\PdoMysql',
                'pdo_pgsql' => 'Oro\\Bundle\\SearchBundle\\Engine\\Orm\\PdoPgsql',
            ),
            'oro_search.engine.class' => 'Oro\\Bundle\\SearchBundle\\Engine\\Orm',
            'oro_segment.segment.entity.class' => 'Oro\\Bundle\\SegmentBundle\\Entity\\Segment',
            'oro_segment.segment_manager.class' => 'Oro\\Bundle\\SegmentBundle\\Entity\\Manager\\SegmentManager',
            'oro_segment.static_segment_manager.class' => 'Oro\\Bundle\\SegmentBundle\\Entity\\Manager\\StaticSegmentManager',
            'oro_segment.segment_manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_segment.datagrid.configuration.provider.class' => 'Oro\\Bundle\\SegmentBundle\\Grid\\ConfigurationProvider',
            'oro_segment.filter.segment.class' => 'Oro\\Bundle\\SegmentBundle\\Filter\\SegmentFilter',
            'oro_segment.query.dynamic_segment.query_builder.class' => 'Oro\\Bundle\\SegmentBundle\\Query\\DynamicSegmentQueryBuilder',
            'oro_segment.query.static_segment.query_builder.class' => 'Oro\\Bundle\\SegmentBundle\\Query\\StaticSegmentQueryBuilder',
            'oro_segment.event_listener.doctrine_pre_remove.class' => 'Oro\\Bundle\\SegmentBundle\\EventListener\\DoctrinePreRemoveListener',
            'oro_segment.entity_name_provider.class' => 'Oro\\Bundle\\SegmentBundle\\Provider\\EntityNameProvider',
            'oro_segment.grid.datagrid_configuration_builder.class' => 'Oro\\Bundle\\SegmentBundle\\Grid\\SegmentDatagridConfigurationBuilder',
            'oro_segment.form.type.segment.class' => 'Oro\\Bundle\\SegmentBundle\\Form\\Type\\SegmentType',
            'oro_segment.form.type.entity_choice.class' => 'Oro\\Bundle\\SegmentBundle\\Form\\Type\\SegmentEntityChoiceType',
            'oro_segment.form.handler.segment.class' => 'Oro\\Bundle\\SegmentBundle\\Form\\Handler\\SegmentHandler',
            'oro_segment.twig.extension.segment.class' => 'Oro\\Bundle\\SegmentBundle\\Twig\\SegmentExtension',
            'oro_sidebar.sidebar_widgets_definitions' => array(
                'sticky_note' => array(
                    'title' => 'Sticky Note',
                    'icon' => 'bundles/orosidebar/sidebar_widgets/sticky_note/img/icon.ico',
                    'module' => 'orosidebar/widget/sticky-note',
                    'placement' => 'both',
                    'cssClass' => 'sidebar-widget-sticky-note',
                    'settings' => array(
                        'content' => 'Welcome to OroCRM!
OroCRM is an easy-to-use, open source CRM with built-in marketing tools for your ecommerce business. learn more at www.orocrm.com
',
                    ),
                    'iconClass' => NULL,
                ),
            ),
            'oro_sidebar.entity.sidebar_state.class' => 'Oro\\Bundle\\SidebarBundle\\Entity\\SidebarState',
            'oro_sidebar.entity.widget.class' => 'Oro\\Bundle\\SidebarBundle\\Entity\\Widget',
            'oro_sidebar.widget_definition.registry.class' => 'Oro\\Bundle\\SidebarBundle\\Model\\WidgetDefinitionRegistry',
            'oro_sidebar.twig.extension.class' => 'Oro\\Bundle\\SidebarBundle\\Twig\\SidebarExtension',
            'oro_sidebar.request.handler.class' => 'Oro\\Bundle\\SidebarBundle\\EventListener\\RequestHandler',
            'oro_soap.loader.class' => 'Oro\\Bundle\\SoapBundle\\ServiceDefinition\\Loader\\OroSoapLoader',
            'oro_soap.handler.delete.class' => 'Oro\\Bundle\\SoapBundle\\Handler\\DeleteHandler',
            'oro_soap.handler.include_delegate.class' => 'Oro\\Bundle\\SoapBundle\\Handler\\DelegateIncludeHandler',
            'oro_soap.handler.include_total_header.class' => 'Oro\\Bundle\\SoapBundle\\Handler\\TotalHeaderHandler',
            'oro_soap.provider.metadata.chain.class' => 'Oro\\Bundle\\SoapBundle\\Provider\\ChainMetadataProvider',
            'oro_soap.provider.metadata.entity.class' => 'Oro\\Bundle\\SoapBundle\\Provider\\EntityMetadataProvider',
            'oro_soap.entity_serializer.class' => 'Oro\\Bundle\\SoapBundle\\Serializer\\EntitySerializer',
            'oro_soap.entity_accessor.class' => 'Oro\\Bundle\\SoapBundle\\Serializer\\EntityDataAccessor',
            'oro_soap.entity_data_transformer.class' => 'Oro\\Bundle\\SoapBundle\\Serializer\\EntityDataTransformer',
            'oro_soap.locale_listener.class' => 'Oro\\Bundle\\SoapBundle\\EventListener\\LocaleListener',
            'oro_tag.tag.entity.class' => 'Oro\\Bundle\\TagBundle\\Entity\\Tag',
            'oro_tag.tagging.entity.class' => 'Oro\\Bundle\\TagBundle\\Entity\\Tagging',
            'oro_tag.tag_listener.class' => 'Oro\\Bundle\\TagBundle\\EventListener\\TagListener',
            'oro_tag.tag.form.type.tag.class' => 'Oro\\Bundle\\TagBundle\\Form\\Type\\TagType',
            'oro_tag.tag.form.type.tag.api.class' => 'Oro\\Bundle\\TagBundle\\Form\\Type\\TagApiType',
            'oro_tag.tag.form.handler.tag.class' => 'Oro\\Bundle\\TagBundle\\Form\\Handler\\TagHandler',
            'oro_tag.tag.manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_tag.tag.manager.class' => 'Oro\\Bundle\\TagBundle\\Entity\\TagManager',
            'oro_tag.autocomplete.tag.search_handler.class' => 'Oro\\Bundle\\FormBundle\\Autocomplete\\SearchHandler',
            'oro_tag.form.type.entity_tags_selector.class' => 'Oro\\Bundle\\TagBundle\\Form\\Type\\EntityTagsSelectType',
            'oro_tag.form.type.tag_select.class' => 'Oro\\Bundle\\TagBundle\\Form\\Type\\TagSelectType',
            'oro_tag.form.type.tag_autocomplete.class' => 'Oro\\Bundle\\TagBundle\\Form\\Type\\TagAutocompleteType',
            'oro_tag.form.type.entity_tags_filter.class' => 'Oro\\Bundle\\TagBundle\\Form\\Type\\EntityTagsFilterType',
            'oro_tag.form.subscriber.tag_select.class' => 'Oro\\Bundle\\TagBundle\\Form\\EventSubscriber\\TagSubscriber',
            'oro_tag.form.transformer.tag_select.class' => 'Oro\\Bundle\\TagBundle\\Form\\Transformer\\TagTransformer',
            'oro_tag.provider.search_provider.class' => 'Oro\\Bundle\\TagBundle\\Provider\\SearchProvider',
            'oro_tag.provider.virtual_relation.tags.class' => 'Oro\\Bundle\\TagBundle\\Provider\\TagVirtualRelationProvider',
            'oro_tag.security_provider.class' => 'Oro\\Bundle\\TagBundle\\Security\\SecurityProvider',
            'oro_tag.twig.tag.extension.class' => 'Oro\\Bundle\\TagBundle\\Twig\\TagExtension',
            'oro_tag.event_listener.search_results_grid_listener.class' => 'Oro\\Bundle\\TagBundle\\EventListener\\TagSearchResultsGridListener',
            'oro_tag.owner_assignment_checker.tag.class' => 'Oro\\Bundle\\TagBundle\\Ownership\\TagOwnerAssignmentChecker',
            'oro_tag.event_listener.merge_listener.class' => 'Oro\\Bundle\\TagBundle\\EventListener\\MergeListener',
            'oro_tag.grid.extension.tag_filter.class' => 'Oro\\Bundle\\TagBundle\\EventListener\\TagsGridListener',
            'oro_tag.filter.tags.class' => 'Oro\\Bundle\\TagBundle\\Filter\\TagsFilter',
            'oro_theme.settings' => array(
                'demo' => array(
                    'label' => 'Demo Theme',
                    'icon' => 'bundles/oroui/themes/demo/images/favicon.ico',
                    'styles' => array(
                        0 => 'bundles/oroui/themes/demo/css/less/main.less',
                        1 => 'bundles/oroui/themes/demo/css/style.css',
                    ),
                ),
                'oro' => array(
                    'label' => 'Oro Theme',
                    'icon' => 'bundles/oroui/themes/oro/images/favicon.ico',
                    'styles' => array(
                        0 => 'bundles/oroui/themes/oro/css/style.css',
                    ),
                ),
            ),
            'oro_theme.registry.class' => 'Oro\\Bundle\\ThemeBundle\\Model\\ThemeRegistry',
            'oro_theme.event_listener.load_css.class' => 'Oro\\Bundle\\ThemeBundle\\EventListener\\LoadCssEventListener',
            'oro_theme.twig.extension.class' => 'Oro\\Bundle\\ThemeBundle\\Twig\\ThemeExtension',
            'oro_translation.form.type.translatable_entity.class' => 'Oro\\Bundle\\TranslationBundle\\Form\\Type\\TranslatableEntityType',
            'oro_translation.form.type.available_translations.class' => 'Oro\\Bundle\\TranslationBundle\\Form\\Type\\AvailableTranslationsConfigurationType',
            'oro_translation.form.extension.translatable_choice.class' => 'Oro\\Bundle\\TranslationBundle\\Form\\Extension\\TranslatableChoiceTypeExtension',
            'oro_translation.translation_walker.class' => 'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker',
            'oro_translation.controller.class' => 'Oro\\Bundle\\TranslationBundle\\Controller\\Controller',
            'oro_translation.extractor.php_code_extractor.class' => 'Oro\\Bundle\\TranslationBundle\\Extractor\\PhpCodeExtractor',
            'oro_translation.database_translation.persister.class' => 'Oro\\Bundle\\TranslationBundle\\Translation\\DatabasePersister',
            'oro_translation.database_translation.loader.class' => 'Oro\\Bundle\\TranslationBundle\\Translation\\OrmTranslationLoader',
            'oro_translation.empty_array.loader.class' => 'Oro\\Bundle\\TranslationBundle\\Translation\\EmptyArrayLoader',
            'oro_translation.dynamic_translation.metadata.cache.class' => 'Oro\\Bundle\\TranslationBundle\\Translation\\DynamicTranslationMetadataCache',
            'oro_translation.service_provider.class' => 'Oro\\Bundle\\TranslationBundle\\Provider\\TranslationServiceProvider',
            'oro_translation.statistic_provider.class' => 'Oro\\Bundle\\TranslationBundle\\Provider\\TranslationStatisticProvider',
            'oro_translation.crowdin.adapter.class' => 'Oro\\Bundle\\TranslationBundle\\Provider\\CrowdinAdapter',
            'oro_translation.oro_translation.adapter.class' => 'Oro\\Bundle\\TranslationBundle\\Provider\\OroTranslationAdapter',
            'oro_translation.js_dumper.class' => 'Oro\\Bundle\\TranslationBundle\\Provider\\JsTranslationDumper',
            'oro_translation.guzzle_client.class' => 'Guzzle\\Http\\Client',
            'oro_translation.twig.translation.extension.class' => 'Oro\\Bundle\\TranslationBundle\\Twig\\TranslationExtension',
            'oro_translation.twig.translation_status.extension.class' => 'Oro\\Bundle\\TranslationBundle\\Twig\\TranslationStatusExtension',
            'oro_translation.packages_provider.class' => 'Oro\\Bundle\\TranslationBundle\\Provider\\PackagesProvider',
            'oro_translation.event_listener.language_change.class' => 'Oro\\Bundle\\TranslationBundle\\EventListener\\LanguageChangeListener',
            'oro_translation.js_translation.domains' => array(
                0 => 'jsmessages',
                1 => 'validators',
            ),
            'oro_translation.api.crowdin.endpoint' => 'http://api.crowdin.net/api',
            'oro_translation.api.oro_service.endpoint' => 'http://translations.orocrm.com/api',
            'oro_translation.api.oro_service.key' => '',
            'oro_translation.debug_translator' => false,
            'oro_windows.twig.extension.class' => 'Oro\\Bundle\\WindowsBundle\\Twig\\WindowsExtension',
            'oro_workflow.attribute_guesser.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\AttributeGuesser',
            'oro_workflow.context_accessor.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\ContextAccessor',
            'oro_workflow.datagrid.action.workflow_activate.class' => 'Oro\\Bundle\\WorkflowBundle\\Datagrid\\Action\\WorkflowActivateAction',
            'oro_workflow.entity_connector.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\EntityConnector',
            'oro_workflow.manager.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\WorkflowManager',
            'oro_workflow.process_definition.entity.class' => 'Oro\\Bundle\\WorkflowBundle\\Entity\\ProcessDefinition',
            'oro_workflow.process.process_factory.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\ProcessFactory',
            'oro_workflow.process.process_handler.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\ProcessHandler',
            'oro_workflow.process.schedule_policy.exclude_definitions.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\ExcludeDefinitionsProcessSchedulePolicy',
            'oro_workflow.process.logger.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\ProcessLogger',
            'oro_workflow.registry.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\WorkflowRegistry',
            'oro_workflow.workflow_definition.entity.class' => 'Oro\\Bundle\\WorkflowBundle\\Entity\\WorkflowDefinition',
            'oro_workflow.workflow_result.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\WorkflowResult',
            'oro_workflow.prototype.workflow.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Workflow',
            'oro_workflow.prototype.step_manager.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\StepManager',
            'oro_workflow.prototype.attribute_manager.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\AttributeManager',
            'oro_workflow.prototype.transition_manager.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\TransitionManager',
            'oro_workflow.action_factory.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\ActionFactory',
            'oro_workflow.action.tree.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\TreeExecutor',
            'oro_workflow.action.configurable.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\Configurable',
            'oro_workflow.action.assign_value.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\AssignValue',
            'oro_workflow.action.unset_value.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\UnsetValue',
            'oro_workflow.action.create_object.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\CreateObject',
            'oro_workflow.action.create_date.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\CreateDate',
            'oro_workflow.action.create_datetime.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\CreateDateTime',
            'oro_workflow.action.create_entity.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\CreateEntity',
            'oro_workflow.action.create_related_entity.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\CreateRelatedEntity',
            'oro_workflow.action.request_entity.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\RequestEntity',
            'oro_workflow.action.call_method.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\CallMethod',
            'oro_workflow.action.start_workflow.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\StartWorkflow',
            'oro_workflow.action.redirect.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\Redirect',
            'oro_workflow.action.format_string.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\FormatString',
            'oro_workflow.action.assign_active_user.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\AssignActiveUser',
            'oro_workflow.action.format_name.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\FormatName',
            'oro_workflow.action.traverse.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\Traverse',
            'oro_workflow.action.translate.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\TranslateAction',
            'oro_workflow.action.flash_message.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\FlashMessage',
            'oro_workflow.workflow.action.remove_entity.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\RemoveEntity',
            'oro_workflow.workflow.action.assign_constant_value.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\AssignConstantValue',
            'oro_workflow.workflow.action.copy_tagging.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\CopyTagging',
            'oro_workflow.configuration_pass.replace_property_path.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\ConfigurationPass\\ReplacePropertyPath',
            'oro_workflow.action_assembler.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\Action\\ActionAssembler',
            'oro_workflow.attribute_assembler.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\AttributeAssembler',
            'oro_workflow.step_assembler.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\StepAssembler',
            'oro_workflow.transition_assembler.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\TransitionAssembler',
            'oro_workflow.workflow_assembler.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\WorkflowAssembler',
            'oro_workflow.form_options_assembler.class' => 'Oro\\Bundle\\WorkflowBundle\\Model\\FormOptionsAssembler',
            'oro_workflow.form.event_listener.default_values.class' => 'Oro\\Bundle\\WorkflowBundle\\Form\\EventListener\\DefaultValuesListener',
            'oro_workflow.form.event_listener.init_actions.class' => 'Oro\\Bundle\\WorkflowBundle\\Form\\EventListener\\InitActionsListener',
            'oro_workflow.form.event_listener.required_attributes.class' => 'Oro\\Bundle\\WorkflowBundle\\Form\\EventListener\\RequiredAttributesListener',
            'oro_workflow.form.type.attributes.class' => 'Oro\\Bundle\\WorkflowBundle\\Form\\Type\\WorkflowAttributesType',
            'oro_workflow.form.type.transition.class' => 'Oro\\Bundle\\WorkflowBundle\\Form\\Type\\WorkflowTransitionType',
            'oro_workflow.form.type.workflow_step_select.class' => 'Oro\\Bundle\\WorkflowBundle\\Form\\Type\\WorkflowStepSelectType',
            'oro_workflow.form.type.workflow_select.class' => 'Oro\\Bundle\\WorkflowBundle\\Form\\Type\\WorkflowSelectType',
            'oro_workflow.form.type.applicable_entities.class' => 'Oro\\Bundle\\WorkflowBundle\\Form\\Type\\ApplicableEntitiesType',
            'oro_workflow.form.type.workflow_definition.class' => 'Oro\\Bundle\\WorkflowBundle\\Form\\Type\\WorkflowDefinitionType',
            'oro_workflow.serializer.data.attribute_normalizer.entity.class' => 'Oro\\Bundle\\WorkflowBundle\\Serializer\\Normalizer\\EntityAttributeNormalizer',
            'oro_workflow.serializer.data.attribute_normalizer.multiple_entity.class' => 'Oro\\Bundle\\WorkflowBundle\\Serializer\\Normalizer\\MultipleEntityAttributeNormalizer',
            'oro_workflow.serializer.data.attribute_normalizer.standard.class' => 'Oro\\Bundle\\WorkflowBundle\\Serializer\\Normalizer\\StandardAttributeNormalizer',
            'oro_workflow.serializer.data.normalizer.class' => 'Oro\\Bundle\\WorkflowBundle\\Serializer\\Normalizer\\WorkflowDataNormalizer',
            'oro_workflow.serializer.data.serializer.class' => 'Oro\\Bundle\\WorkflowBundle\\Serializer\\WorkflowDataSerializer',
            'oro_workflow.serializer.handler.workflow_result.class' => 'Oro\\Bundle\\WorkflowBundle\\Serializer\\Handler\\WorkflowResultHandler',
            'oro_workflow.serializer.process.serializer.class' => 'Oro\\Bundle\\WorkflowBundle\\Serializer\\ProcessDataSerializer',
            'oro_workflow.serializer.process.normalizer.process_data.class' => 'Oro\\Bundle\\WorkflowBundle\\Serializer\\Normalizer\\ProcessDataNormalizer',
            'oro_workflow.serializer.process.normalizer.entity.class' => 'Oro\\Bundle\\WorkflowBundle\\Serializer\\Normalizer\\ProcessEntityNormalizer',
            'oro_workflow.serializer.process.normalizer.object.class' => 'Oro\\Bundle\\WorkflowBundle\\Serializer\\Normalizer\\ProcessObjectNormalizer',
            'oro_workflow.serializer.process.normalizer.traversable.class' => 'Oro\\Bundle\\WorkflowBundle\\Serializer\\Normalizer\\ProcessTraversableNormalizer',
            'oro_workflow.serializer.process.normalizer.scalar.class' => 'Oro\\Bundle\\WorkflowBundle\\Serializer\\Normalizer\\ProcessScalarNormalizer',
            'oro_workflow.configuration.config.workflow_sole.class' => 'Oro\\Bundle\\WorkflowBundle\\Configuration\\WorkflowConfiguration',
            'oro_workflow.configuration.config.workflow_list.class' => 'Oro\\Bundle\\WorkflowBundle\\Configuration\\WorkflowListConfiguration',
            'oro_workflow.configuration.handler.step.class' => 'Oro\\Bundle\\WorkflowBundle\\Configuration\\Handler\\StepHandler',
            'oro_workflow.configuration.handler.attribute.class' => 'Oro\\Bundle\\WorkflowBundle\\Configuration\\Handler\\AttributeHandler',
            'oro_workflow.configuration.handler.transition.class' => 'Oro\\Bundle\\WorkflowBundle\\Configuration\\Handler\\TransitionHandler',
            'oro_workflow.configuration.handler.workflow.class' => 'Oro\\Bundle\\WorkflowBundle\\Configuration\\Handler\\WorkflowHandler',
            'oro_workflow.configuration.config.process_definition_sole.class' => 'Oro\\Bundle\\WorkflowBundle\\Configuration\\ProcessDefinitionConfiguration',
            'oro_workflow.configuration.config.process_definition_list.class' => 'Oro\\Bundle\\WorkflowBundle\\Configuration\\ProcessDefinitionListConfiguration',
            'oro_workflow.configuration.config.process_trigger_sole.class' => 'Oro\\Bundle\\WorkflowBundle\\Configuration\\ProcessTriggerConfiguration',
            'oro_workflow.configuration.config.process_trigger_list.class' => 'Oro\\Bundle\\WorkflowBundle\\Configuration\\ProcessTriggerListConfiguration',
            'oro_workflow.configuration.provider.workflow_config.class' => 'Oro\\Bundle\\WorkflowBundle\\Configuration\\WorkflowConfigurationProvider',
            'oro_workflow.configuration.provider.process_config.class' => 'Oro\\Bundle\\WorkflowBundle\\Configuration\\ProcessConfigurationProvider',
            'oro_workflow.configuration.builder.workflow_definition.class' => 'Oro\\Bundle\\WorkflowBundle\\Configuration\\WorkflowDefinitionConfigurationBuilder',
            'oro_workflow.configuration.builder.workflow_definition.handle.class' => 'Oro\\Bundle\\WorkflowBundle\\Configuration\\WorkflowDefinitionHandleBuilder',
            'oro_workflow.configuration.builder.process_configuration.class' => 'Oro\\Bundle\\WorkflowBundle\\Configuration\\ProcessConfigurationBuilder',
            'oro_workflow.twig.extension.workflow.class' => 'Oro\\Bundle\\WorkflowBundle\\Twig\\WorkflowExtension',
            'oro_workflow.listener.process_data_serialize.class' => 'Oro\\Bundle\\WorkflowBundle\\EventListener\\ProcessDataSerializeListener',
            'oro_workflow.listener.workflow_data_serialize.class' => 'Oro\\Bundle\\WorkflowBundle\\EventListener\\WorkflowDataSerializeListener',
            'oro_workflow.listener.workflow_item.class' => 'Oro\\Bundle\\WorkflowBundle\\EventListener\\WorkflowItemListener',
            'oro_workflow.listener.process_collector.class' => 'Oro\\Bundle\\WorkflowBundle\\EventListener\\ProcessCollectorListener',
            'oro_workflow.validator.transition_is_allowed.class' => 'Oro\\Bundle\\WorkflowBundle\\Validator\\Constraints\\TransitionIsAllowedValidator',
            'oro_workflow.security.acl.manager.class' => 'Oro\\Bundle\\WorkflowBundle\\Acl\\AclManager',
            'oro_workflow.security.acl.voter.entity.class' => 'Oro\\Bundle\\WorkflowBundle\\Acl\\Voter\\WorkflowEntityVoter',
            'oro_workflow.field_generator.class' => 'Oro\\Bundle\\WorkflowBundle\\Field\\FieldGenerator',
            'oro_workflow.entity_field_provider.class' => 'Oro\\Bundle\\WorkflowBundle\\Field\\FieldProvider',
            'oro_workflow.datagrid.action_permission_provider.class' => 'Oro\\Bundle\\WorkflowBundle\\Datagrid\\ActionPermissionProvider',
            'oro_workflow.datagrid.entity_name_provider.class' => 'Oro\\Bundle\\WorkflowBundle\\Datagrid\\GridEntityNameProvider',
            'oro_workflow.datagrid.listener.workflow_step_column.class' => 'Oro\\Bundle\\WorkflowBundle\\Datagrid\\WorkflowStepColumnListener',
            'oro_workflow.cache.process_trigger.class' => 'Oro\\Bundle\\WorkflowBundle\\Cache\\ProcessTriggerCache',
            'sylius.process.builder.class' => 'Sylius\\Bundle\\FlowBundle\\Process\\Builder\\ProcessBuilder',
            'sylius.process.context.class' => 'Sylius\\Bundle\\FlowBundle\\Process\\Context\\ProcessContext',
            'sylius.controller.process.class' => 'Sylius\\Bundle\\FlowBundle\\Controller\\ProcessController',
            'sylius.process.coordinator.class' => 'Sylius\\Bundle\\FlowBundle\\Process\\Coordinator\\Coordinator',
            'sylius.process_storage.session.class' => 'Sylius\\Bundle\\FlowBundle\\Storage\\SessionStorage',
            'sylius.process_storage.session.bag.class' => 'Sylius\\Bundle\\FlowBundle\\Storage\\SessionFlowsBag',
            'oro_comment.migration.extension.comment.class' => 'Oro\\Bundle\\CommentBundle\\Migration\\Extension\\CommentExtension',
            'oro_comment.entity_generator.extension.class' => 'Oro\\Bundle\\CommentBundle\\Tools\\CommentEntityGeneratorExtension',
            'oro_comment.entity_config_dumper.extension.class' => 'Oro\\Bundle\\CommentBundle\\Tools\\CommentEntityConfigDumperExtension',
            'oro_comment.comment.api_manager.class' => 'Oro\\Bundle\\CommentBundle\\Entity\\Manager\\CommentApiManager',
            'oro_comment.comment_lifecycle_listener.class' => 'Oro\\Bundle\\CommentBundle\\EventListener\\CommentLifecycleListener',
            'oro_comment.placeholder.filter.class' => 'Oro\\Bundle\\CommentBundle\\Placeholder\\CommentPlaceholderFilter',
            'oro_comment.api.form.type.comment.class' => 'Oro\\Bundle\\CommentBundle\\Form\\Type\\CommentTypeApi',
            'oro_comment.api.form.handler.class' => 'Oro\\Bundle\\CommentBundle\\Form\\Handler\\CommentApiHandler',
            'oro_dashboard.config_resolver.class' => 'Oro\\Component\\Config\\Resolver\\SystemAwareResolver',
            'oro_dashboard.manager.state.class' => 'Oro\\Bundle\\DashboardBundle\\Model\\StateManager',
            'oro_dashboard.manager.class' => 'Oro\\Bundle\\DashboardBundle\\Model\\Manager',
            'oro_dashboard.widget_configs.class' => 'Oro\\Bundle\\DashboardBundle\\Model\\WidgetConfigs',
            'oro_dashboard.factory.class' => 'Oro\\Bundle\\DashboardBundle\\Model\\Factory',
            'oro_dashboard.config_provider.class' => 'Oro\\Bundle\\DashboardBundle\\Model\\ConfigProvider',
            'oro_dashboard.dashboard_entity.class' => 'Oro\\Bundle\\DashboardBundle\\Entity\\Dashboard',
            'oro_dashboard.dashboard_widget_entity.class' => 'Oro\\Bundle\\DashboardBundle\\Entity\\Widget',
            'oro_dashboard.navigation_listener.class' => 'Oro\\Bundle\\DashboardBundle\\EventListener\\NavigationListener',
            'oro_dashboard.form.type.edit.class' => 'Oro\\Bundle\\DashboardBundle\\Form\\Type\\DashboardType',
            'oro_dashboard.form.type.select.class' => 'Oro\\Bundle\\DashboardBundle\\Form\\Type\\DashboardSelectType',
            'oro_dashboard.provider.widget_configuration_form_provider.class' => 'Oro\\Bundle\\DashboardBundle\\Provider\\WidgetConfigurationFormProvider',
            'oro_dashboard.widget_config_value.provider.class' => 'Oro\\Bundle\\DashboardBundle\\Provider\\ConfigValueProvider',
            'oro_dashboard.datetime.helper.class' => 'Oro\\Bundle\\DashboardBundle\\Helper\\DateHelper',
            'oro_dashboard.event_listener.widget_configuration_load.class' => 'Oro\\Bundle\\DashboardBundle\\EventListener\\WidgetConfigurationLoadListener',
            'oro_dashboard.event_listener.widget_items_load_data.class' => 'Oro\\Bundle\\DashboardBundle\\EventListener\\WidgetItemsLoadDataListener',
            'oro_dashboard.widget_config_value.date_range.converter.class' => 'Oro\\Bundle\\DashboardBundle\\Provider\\Converters\\FilterDateTimeRangeConverter',
            'oro_dashboard.widget_config_value.previous_date_range.converter.class' => 'Oro\\Bundle\\DashboardBundle\\Provider\\Converters\\PreviousFilterDateRangeConverter',
            'oro_dashboard.widget_config_value.widget_title.converter.class' => 'Oro\\Bundle\\DashboardBundle\\Provider\\Converters\\WidgetTitleConverter',
            'oro_dashboard.widget_config_value.widget_items_choice.converter.class' => 'Oro\\Bundle\\DashboardBundle\\Provider\\Converters\\WidgetItemsChoiceTypeConverter',
            'oro_dashboard.form.type.widget_date_range.class' => 'Oro\\Bundle\\DashboardBundle\\Form\\Type\\WidgetDateRangeType',
            'oro_dashboard.form.type.date_range_value.class' => 'Oro\\Bundle\\DashboardBundle\\Form\\Type\\WidgetDateRangeValueType',
            'oro_dashboard.form.type.widget_widget_title.class' => 'Oro\\Bundle\\DashboardBundle\\Form\\Type\\WidgetTitleType',
            'oro_dashboard.form.type.widget_previous_date_rang.class' => 'Oro\\Bundle\\DashboardBundle\\Form\\Type\\WidgetPreviousDateRangeType',
            'oro_dashboard.form.type.widget_items_choice.class' => 'Oro\\Bundle\\DashboardBundle\\Form\\Type\\WidgetItemsChoiceType',
            'oro_dashboard.form.type.widget_items.class' => 'Oro\\Bundle\\DashboardBundle\\Form\\Type\\WidgetItemsType',
            'oro_dashboard.form.type.widget_item.class' => 'Oro\\Bundle\\DashboardBundle\\Form\\Type\\WidgetItemType',
            'oro_dashboard.event_listener.widget_items_form_subscriber.class' => 'Oro\\Bundle\\DashboardBundle\\Form\\EventListener\\WidgetItemsFormSubscriber',
            'oro_navigation.entity.navigation_item.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\NavigationItem',
            'oro_navigation.entity.navigation_history_item.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\NavigationHistoryItem',
            'oro_navigation.entity.pinbar_tab.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\PinbarTab',
            'oro_navigation.entity.page_state.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\PageState',
            'oro_menu.factory.acl_extension.class' => 'Oro\\Bundle\\NavigationBundle\\Menu\\AclAwareMenuFactoryExtension',
            'oro_menu.factory.class' => 'Knp\\Menu\\MenuFactory',
            'oro_menu.configuration_resolver.class' => 'Oro\\Component\\Config\\Resolver\\SystemAwareResolver',
            'oro_menu.builder_chain.class' => 'Oro\\Bundle\\NavigationBundle\\Provider\\BuilderChainProvider',
            'oro_menu.configuration_builder.class' => 'Oro\\Bundle\\NavigationBundle\\Menu\\ConfigurationBuilder',
            'oro_menu.twig.extension.class' => 'Oro\\Bundle\\NavigationBundle\\Twig\\MenuExtension',
            'oro_navigation.navigation_item_menu.builder.class' => 'Oro\\Bundle\\NavigationBundle\\Menu\\NavigationItemBuilder',
            'oro_navigation.navigation_history_menu.builder.class' => 'Oro\\Bundle\\NavigationBundle\\Menu\\NavigationHistoryBuilder',
            'oro_navigation.navigation_mostviewed_menu.builder.class' => 'Oro\\Bundle\\NavigationBundle\\Menu\\NavigationMostviewedBuilder',
            'oro_navigation.item.builder.pinbar.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\Builder\\PinbarTabBuilder',
            'oro_navigation.item.builder.favorite.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\Builder\\NavigationItemBuilder',
            'oro_navigation.item.builder.history.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\Builder\\HistoryItemBuilder',
            'oro_navigation.item.factory.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\Builder\\ItemFactory',
            'oro_navigation.item.pinbar.post_persist_listener.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\Listener\\PinbarPostPersist',
            'oro_navigation.event.response_history.listener.class' => 'Oro\\Bundle\\NavigationBundle\\Event\\ResponseHistoryListener',
            'oro_navigation.event.response_hashnav.listener.class' => 'Oro\\Bundle\\NavigationBundle\\Event\\ResponseHashnavListener',
            'oro_navigation.event.doctrine_tag_listener.class' => 'Oro\\Bundle\\NavigationBundle\\Event\\DoctrineTagEventListener',
            'oro_navigation.event.master_request_route_listener.class' => 'Oro\\Bundle\\NavigationBundle\\Event\\AddMasterRequestRouteListener',
            'oro_navigation.menu.matcher.voter.request' => 'Oro\\Bundle\\NavigationBundle\\Menu\\Matcher\\Voter\\RequestVoter',
            'oro_navigation.menu.matcher.voter.routepattern' => 'Oro\\Bundle\\NavigationBundle\\Menu\\Matcher\\Voter\\RoutePatternVoter',
            'oro_navigation.title_service.class' => 'Oro\\Bundle\\NavigationBundle\\Provider\\TitleService',
            'oro_navigation.title_provider.class' => 'Oro\\Bundle\\NavigationBundle\\Provider\\TitleProvider',
            'oro_navigation.title_translator.class' => 'Oro\\Bundle\\NavigationBundle\\Provider\\TitleTranslator',
            'oro_navigation.title_service.twig.extension.class' => 'Oro\\Bundle\\NavigationBundle\\Twig\\TitleExtension',
            'oro_navigation.title_service.annotations_reader.class' => 'Oro\\Bundle\\NavigationBundle\\Title\\TitleReader\\AnnotationsReader',
            'oro_navigation.title_service.config_reader.class' => 'Oro\\Bundle\\NavigationBundle\\Title\\TitleReader\\ConfigReader',
            'oro_navigation.title_service.event.request.listener.class' => 'Oro\\Bundle\\NavigationBundle\\Event\\RequestTitleListener',
            'oro_navigation.translation.extractor.class' => 'Oro\\Bundle\\NavigationBundle\\Title\\TranslationExtractor',
            'oro_navigation.twig_hash_nav_extension.class' => 'Oro\\Bundle\\NavigationBundle\\Twig\\HashNavExtension',
            'oro_navigation.form.type.pagestate.class' => 'Oro\\Bundle\\NavigationBundle\\Form\\Type\\PageStateType',
            'oro_navigation.form.handler.pagestate.class' => 'Oro\\Bundle\\NavigationBundle\\Form\\Handler\\PageStateHandler',
            'oro_navigation.breadcrumbs_manager.class' => 'Oro\\Bundle\\NavigationBundle\\Menu\\BreadcrumbManager',
            'oro_navigation.twig.content_tags.class' => 'Oro\\Bundle\\NavigationBundle\\Twig\\ContentTagsExtension',
            'oro_navigation.content.topic_sender.class' => 'Oro\\Bundle\\NavigationBundle\\Content\\TopicSender',
            'oro_navigation.content.tag_generator_chain.class' => 'Oro\\Bundle\\NavigationBundle\\Content\\TagGeneratorChain',
            'oro_navigation.content.doctrine_tag_generator.class' => 'Oro\\Bundle\\NavigationBundle\\Content\\DoctrineTagGenerator',
            'oro_navigation.content.simple_tag_generator.class' => 'Oro\\Bundle\\NavigationBundle\\Content\\SimpleTagGenerator',
            'oro_navigation.content.datagrid_tag_listener.class' => 'Oro\\Bundle\\NavigationBundle\\Content\\DataGridTagListener',
            'oro_navigation.content_provider.menu.class' => 'Oro\\Bundle\\NavigationBundle\\ContentProvider\\MenuContentProvider',
            'oro_navigation.content_provider.title.class' => 'Oro\\Bundle\\NavigationBundle\\ContentProvider\\TitleContentProvider',
            'oro_navigation.content_provider.title_short.class' => 'Oro\\Bundle\\NavigationBundle\\ContentProvider\\TitleShortContentProvider',
            'oro_navigation.content_provider.title_serialized.class' => 'Oro\\Bundle\\NavigationBundle\\ContentProvider\\TitleSerializedContentProvider',
            'oro_navigation.content_provider.navigation_elements.class' => 'Oro\\Bundle\\NavigationBundle\\ContentProvider\\NavigationElementsContentProvider',
            'oro_tracking.tracking_website.class' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingWebsite',
            'oro_tracking.tracking_event.class' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingEvent',
            'oro_tracking.tracking_data.class' => 'Oro\\Bundle\\TrackingBundle\\Entity\\TrackingData',
            'oro_tracking.form.type.tracking_website.class' => 'Oro\\Bundle\\TrackingBundle\\Form\\Type\\TrackingWebsiteType',
            'oro_tracking.form.handler.tracking_website.class' => 'Oro\\Bundle\\TrackingBundle\\Form\\Handler\\TrackingWebsiteHandler',
            'oro_tracking.tracking_website.manager.api.class' => 'Oro\\Bundle\\SoapBundle\\Entity\\Manager\\ApiEntityManager',
            'oro_tracking.importexport.reader.log.class' => 'Oro\\Bundle\\TrackingBundle\\ImportExport\\LogReader',
            'oro_tracking.importexport.reader.context.class' => 'Oro\\Bundle\\TrackingBundle\\ImportExport\\ContextReader',
            'oro_tracking.importexport.normalizer.data.class' => 'Oro\\Bundle\\TrackingBundle\\ImportExport\\DataNormalizer',
            'oro_tracking.importexport.data_converter.data.class' => 'Oro\\Bundle\\TrackingBundle\\ImportExport\\DataConverter',
            'oro_tracking.config.listener' => 'Oro\\Bundle\\TrackingBundle\\EventListener\\ConfigListener',
            'oro_tracking.entity_config_dumper.visit_identifier.extension.class' => 'Oro\\Bundle\\TrackingBundle\\Tools\\IdentifierVisitConfigDumperExtension',
            'oro_tracking.entity_generator.visit_identifie.extension.class' => 'Oro\\Bundle\\TrackingBundle\\Tools\\IdentifierVisitGeneratorExtension',
            'oro_tracking.processor.tracking_processor.class' => 'Oro\\Bundle\\TrackingBundle\\Processor\\TrackingProcessor',
            'oro_tracking.provider.identifier_provider.class' => 'Oro\\Bundle\\TrackingBundle\\Provider\\TrackingEventIdentificationProvider',
            'oro_reminder.event_listener.reminder_listener.class' => 'Oro\\Bundle\\ReminderBundle\\EventListener\\ReminderListener',
            'oro_reminder.form.extension.reminder.class' => 'Oro\\Bundle\\ReminderBundle\\Form\\Extension\\ReminderExtension',
            'oro_reminder.form.type.reminder.class' => 'Oro\\Bundle\\ReminderBundle\\Form\\Type\\ReminderType',
            'oro_reminder.form.type.reminder_collection.class' => 'Oro\\Bundle\\ReminderBundle\\Form\\Type\\ReminderCollectionType',
            'oro_reminder.form.type.method.class' => 'Oro\\Bundle\\ReminderBundle\\Form\\Type\\MethodType',
            'oro_reminder.form.type.reminder_interval.class' => 'Oro\\Bundle\\ReminderBundle\\Form\\Type\\ReminderIntervalType',
            'oro_reminder.form.type.reminder_interval.unit.class' => 'Oro\\Bundle\\ReminderBundle\\Form\\Type\\ReminderInterval\\UnitType',
            'oro_reminder.entity.class' => 'Oro\\Bundle\\ReminderBundle\\Entity\\Reminder',
            'oro_reminder.entity.manager.class' => 'Oro\\Bundle\\ReminderBundle\\Entity\\Manager\\ReminderManager',
            'oro_reminder.sender.class' => 'Oro\\Bundle\\ReminderBundle\\Model\\ReminderSender',
            'oro_reminder.send_processor_registry.class' => 'Oro\\Bundle\\ReminderBundle\\Model\\SendProcessorRegistry',
            'oro_reminder.model.email_notification.class' => 'Oro\\Bundle\\ReminderBundle\\Model\\Email\\EmailNotification',
            'oro_reminder.send_processor.email.class' => 'Oro\\Bundle\\ReminderBundle\\Model\\Email\\EmailSendProcessor',
            'oro_reminder.send_processor.web_socket.class' => 'Oro\\Bundle\\ReminderBundle\\Model\\WebSocket\\WebSocketSendProcessor',
            'oro_reminder.twig.extension.class' => 'Oro\\Bundle\\ReminderBundle\\Twig\\ReminderExtension',
            'oro_reminder.web_socket.message_params_provider.class' => 'Oro\\Bundle\\ReminderBundle\\Model\\WebSocket\\MessageParamsProvider',
            'oro_reminder.url_provider.class' => 'Oro\\Bundle\\ReminderBundle\\Model\\UrlProvider',
            'web_profiler.controller.profiler.class' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\ProfilerController',
            'web_profiler.controller.router.class' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\RouterController',
            'web_profiler.controller.exception.class' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\ExceptionController',
            'twig.extension.webprofiler.class' => 'Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension',
            'web_profiler.debug_toolbar.position' => 'bottom',
            'web_profiler.debug_toolbar.class' => 'Symfony\\Bundle\\WebProfilerBundle\\EventListener\\WebDebugToolbarListener',
            'web_profiler.debug_toolbar.intercept_redirects' => false,
            'web_profiler.debug_toolbar.mode' => 2,
            'sensio_distribution.webconfigurator.class' => 'Sensio\\Bundle\\DistributionBundle\\Configurator\\Configurator',
            'jdare_clank.web_socket_server.class' => 'JDare\\ClankBundle\\Server\\Type\\WebSocketServerType',
            'jdare_clank.web_socket_server.port' => 8080,
            'jdare_clank.web_socket_server.host' => '0.0.0.0',
            'jdare_clank.periodic_services' => array(

            ),
            'jdare_clank.rpc_services' => array(

            ),
            'jdare_clank.topic_services' => array(

            ),
            'jdare_clank.session_handler' => NULL,
            'jdare_clank.servers' => array(
                0 => 'jdare_clank.web_socket_server',
            ),
            'data_collector.templates' => array(
                'data_collector.config' => array(
                    0 => 'config',
                    1 => '@WebProfiler/Collector/config.html.twig',
                ),
                'data_collector.request' => array(
                    0 => 'request',
                    1 => '@WebProfiler/Collector/request.html.twig',
                ),
                'data_collector.ajax' => array(
                    0 => 'ajax',
                    1 => '@WebProfiler/Collector/ajax.html.twig',
                ),
                'data_collector.exception' => array(
                    0 => 'exception',
                    1 => '@WebProfiler/Collector/exception.html.twig',
                ),
                'data_collector.events' => array(
                    0 => 'events',
                    1 => '@WebProfiler/Collector/events.html.twig',
                ),
                'data_collector.logger' => array(
                    0 => 'logger',
                    1 => '@WebProfiler/Collector/logger.html.twig',
                ),
                'data_collector.time' => array(
                    0 => 'time',
                    1 => '@WebProfiler/Collector/time.html.twig',
                ),
                'data_collector.memory' => array(
                    0 => 'memory',
                    1 => '@WebProfiler/Collector/memory.html.twig',
                ),
                'data_collector.router' => array(
                    0 => 'router',
                    1 => '@WebProfiler/Collector/router.html.twig',
                ),
                'data_collector.form' => array(
                    0 => 'form',
                    1 => '@WebProfiler/Collector/form.html.twig',
                ),
                'data_collector.translation' => array(
                    0 => 'translation',
                    1 => '@WebProfiler/Collector/translation.html.twig',
                ),
                'data_collector.twig' => array(
                    0 => 'twig',
                    1 => '@WebProfiler/Collector/twig.html.twig',
                ),
                'data_collector.security' => array(
                    0 => 'security',
                    1 => '@Security/Collector/security.html.twig',
                ),
                'swiftmailer.data_collector' => array(
                    0 => 'swiftmailer',
                    1 => '@Swiftmailer/Collector/swiftmailer.html.twig',
                ),
                'data_collector.doctrine' => array(
                    0 => 'db',
                    1 => '@Doctrine/Collector/db.html.twig',
                ),
                'oro_entity.profiler.orm_data_collector' => array(
                    0 => 'orm',
                    1 => 'OroEntityBundle:Collector:orm.html.twig',
                ),
            ),
            'console.command.ids' => array(

            ),
            'nelmio_api_doc.parser.form_type_parser.class' => 'Nelmio\\ApiDocBundle\\Parser\\FormTypeParser',
            'nelmio_api_doc.parser.validation_parser.class' => 'Nelmio\\ApiDocBundle\\Parser\\ValidationParser',
            'nelmio_api_doc.parser.jms_metadata_parser.class' => 'Nelmio\\ApiDocBundle\\Parser\\JmsMetadataParser',
            'oro_ui.widget_provider.view_actions.page_type' => 1,
            'oro_ui.widget_provider.update_actions.page_type' => 2,
        );
    }
}

class SymfonyBundleSecurityBundleEventListenerAclSchemaListener_000000002e47f97900000000e28c9ac7 extends \Symfony\Bundle\SecurityBundle\EventListener\AclSchemaListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2a85bdba494189605 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2a85bdba445528897 = null;

    /**
     * {@inheritDoc}
     */
    public function postGenerateSchema(\Doctrine\ORM\Tools\Event\GenerateSchemaEventArgs $args)
    {
        $this->initializer5614d2a85bdba445528897 && $this->initializer5614d2a85bdba445528897->__invoke($this->valueHolder5614d2a85bdba494189605, $this, 'postGenerateSchema', array('args' => $args), $this->initializer5614d2a85bdba445528897);

        return $this->valueHolder5614d2a85bdba494189605->postGenerateSchema($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2a85bdba445528897 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2a85bdba445528897 && $this->initializer5614d2a85bdba445528897->__invoke($this->valueHolder5614d2a85bdba494189605, $this, '__get', array('name' => $name), $this->initializer5614d2a85bdba445528897);

        return $this->valueHolder5614d2a85bdba494189605->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2a85bdba445528897 && $this->initializer5614d2a85bdba445528897->__invoke($this->valueHolder5614d2a85bdba494189605, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2a85bdba445528897);

        $this->valueHolder5614d2a85bdba494189605->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2a85bdba445528897 && $this->initializer5614d2a85bdba445528897->__invoke($this->valueHolder5614d2a85bdba494189605, $this, '__isset', array('name' => $name), $this->initializer5614d2a85bdba445528897);

        return isset($this->valueHolder5614d2a85bdba494189605->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2a85bdba445528897 && $this->initializer5614d2a85bdba445528897->__invoke($this->valueHolder5614d2a85bdba494189605, $this, '__unset', array('name' => $name), $this->initializer5614d2a85bdba445528897);

        unset($this->valueHolder5614d2a85bdba494189605->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2a85bdba445528897 && $this->initializer5614d2a85bdba445528897->__invoke($this->valueHolder5614d2a85bdba494189605, $this, '__clone', array(), $this->initializer5614d2a85bdba445528897);

        $this->valueHolder5614d2a85bdba494189605 = clone $this->valueHolder5614d2a85bdba494189605;
    }

    public function __sleep()
    {
        $this->initializer5614d2a85bdba445528897 && $this->initializer5614d2a85bdba445528897->__invoke($this->valueHolder5614d2a85bdba494189605, $this, '__sleep', array(), $this->initializer5614d2a85bdba445528897);

        return array('valueHolder5614d2a85bdba494189605');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2a85bdba445528897 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2a85bdba445528897;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2a85bdba445528897 && $this->initializer5614d2a85bdba445528897->__invoke($this->valueHolder5614d2a85bdba494189605, $this, 'initializeProxy', array(), $this->initializer5614d2a85bdba445528897);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2a85bdba494189605;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2a85bdba494189605;
    }


}

class OroBundleUIBundleTwigEnvironment_000000002e47f9af00000000e28c9ac7 extends \Oro\Bundle\UIBundle\Twig\Environment implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2a861f63509839809 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2a86234b966788175 = null;

    /**
     * {@inheritDoc}
     */
    public function generateTemplateCache($name)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'generateTemplateCache', array('name' => $name), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->generateTemplateCache($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getBaseTemplateClass()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getBaseTemplateClass', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getBaseTemplateClass();
    }

    /**
     * {@inheritDoc}
     */
    public function setBaseTemplateClass($class)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'setBaseTemplateClass', array('class' => $class), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->setBaseTemplateClass($class);
    }

    /**
     * {@inheritDoc}
     */
    public function enableDebug()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'enableDebug', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->enableDebug();
    }

    /**
     * {@inheritDoc}
     */
    public function disableDebug()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'disableDebug', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->disableDebug();
    }

    /**
     * {@inheritDoc}
     */
    public function isDebug()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'isDebug', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->isDebug();
    }

    /**
     * {@inheritDoc}
     */
    public function enableAutoReload()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'enableAutoReload', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->enableAutoReload();
    }

    /**
     * {@inheritDoc}
     */
    public function disableAutoReload()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'disableAutoReload', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->disableAutoReload();
    }

    /**
     * {@inheritDoc}
     */
    public function isAutoReload()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'isAutoReload', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->isAutoReload();
    }

    /**
     * {@inheritDoc}
     */
    public function enableStrictVariables()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'enableStrictVariables', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->enableStrictVariables();
    }

    /**
     * {@inheritDoc}
     */
    public function disableStrictVariables()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'disableStrictVariables', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->disableStrictVariables();
    }

    /**
     * {@inheritDoc}
     */
    public function isStrictVariables()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'isStrictVariables', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->isStrictVariables();
    }

    /**
     * {@inheritDoc}
     */
    public function getCache()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getCache', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getCache();
    }

    /**
     * {@inheritDoc}
     */
    public function setCache($cache)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'setCache', array('cache' => $cache), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->setCache($cache);
    }

    /**
     * {@inheritDoc}
     */
    public function getCacheFilename($name)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getCacheFilename', array('name' => $name), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getCacheFilename($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplateClass($name, $index = null)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getTemplateClass', array('name' => $name, 'index' => $index), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getTemplateClass($name, $index);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplateClassPrefix()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getTemplateClassPrefix', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getTemplateClassPrefix();
    }

    /**
     * {@inheritDoc}
     */
    public function render($name, array $context = array())
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'render', array('name' => $name, 'context' => $context), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->render($name, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function display($name, array $context = array())
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'display', array('name' => $name, 'context' => $context), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->display($name, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function loadTemplate($name, $index = null)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'loadTemplate', array('name' => $name, 'index' => $index), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->loadTemplate($name, $index);
    }

    /**
     * {@inheritDoc}
     */
    public function createTemplate($template)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'createTemplate', array('template' => $template), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->createTemplate($template);
    }

    /**
     * {@inheritDoc}
     */
    public function isTemplateFresh($name, $time)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'isTemplateFresh', array('name' => $name, 'time' => $time), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->isTemplateFresh($name, $time);
    }

    /**
     * {@inheritDoc}
     */
    public function resolveTemplate($names)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'resolveTemplate', array('names' => $names), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->resolveTemplate($names);
    }

    /**
     * {@inheritDoc}
     */
    public function clearTemplateCache()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'clearTemplateCache', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->clearTemplateCache();
    }

    /**
     * {@inheritDoc}
     */
    public function clearCacheFiles()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'clearCacheFiles', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->clearCacheFiles();
    }

    /**
     * {@inheritDoc}
     */
    public function getLexer()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getLexer', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getLexer();
    }

    /**
     * {@inheritDoc}
     */
    public function setLexer(\Twig_LexerInterface $lexer)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'setLexer', array('lexer' => $lexer), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->setLexer($lexer);
    }

    /**
     * {@inheritDoc}
     */
    public function tokenize($source, $name = null)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'tokenize', array('source' => $source, 'name' => $name), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->tokenize($source, $name);
    }

    /**
     * {@inheritDoc}
     */
    public function getParser()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getParser', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getParser();
    }

    /**
     * {@inheritDoc}
     */
    public function setParser(\Twig_ParserInterface $parser)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'setParser', array('parser' => $parser), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->setParser($parser);
    }

    /**
     * {@inheritDoc}
     */
    public function parse(\Twig_TokenStream $stream)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'parse', array('stream' => $stream), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->parse($stream);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompiler()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getCompiler', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getCompiler();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompiler(\Twig_CompilerInterface $compiler)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'setCompiler', array('compiler' => $compiler), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->setCompiler($compiler);
    }

    /**
     * {@inheritDoc}
     */
    public function compile(\Twig_NodeInterface $node)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'compile', array('node' => $node), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->compile($node);
    }

    /**
     * {@inheritDoc}
     */
    public function compileSource($source, $name = null)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'compileSource', array('source' => $source, 'name' => $name), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->compileSource($source, $name);
    }

    /**
     * {@inheritDoc}
     */
    public function setLoader(\Twig_LoaderInterface $loader)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'setLoader', array('loader' => $loader), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->setLoader($loader);
    }

    /**
     * {@inheritDoc}
     */
    public function getLoader()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getLoader', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getLoader();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharset($charset)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'setCharset', array('charset' => $charset), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->setCharset($charset);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharset()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getCharset', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getCharset();
    }

    /**
     * {@inheritDoc}
     */
    public function initRuntime()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'initRuntime', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->initRuntime();
    }

    /**
     * {@inheritDoc}
     */
    public function hasExtension($name)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'hasExtension', array('name' => $name), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->hasExtension($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtension($name)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getExtension', array('name' => $name), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getExtension($name);
    }

    /**
     * {@inheritDoc}
     */
    public function addExtension(\Twig_ExtensionInterface $extension)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'addExtension', array('extension' => $extension), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->addExtension($extension);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExtension($name)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'removeExtension', array('name' => $name), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->removeExtension($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setExtensions(array $extensions)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'setExtensions', array('extensions' => $extensions), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->setExtensions($extensions);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtensions()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getExtensions', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getExtensions();
    }

    /**
     * {@inheritDoc}
     */
    public function addTokenParser(\Twig_TokenParserInterface $parser)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'addTokenParser', array('parser' => $parser), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->addTokenParser($parser);
    }

    /**
     * {@inheritDoc}
     */
    public function getTokenParsers()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getTokenParsers', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getTokenParsers();
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getTags', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function addNodeVisitor(\Twig_NodeVisitorInterface $visitor)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'addNodeVisitor', array('visitor' => $visitor), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->addNodeVisitor($visitor);
    }

    /**
     * {@inheritDoc}
     */
    public function getNodeVisitors()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getNodeVisitors', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getNodeVisitors();
    }

    /**
     * {@inheritDoc}
     */
    public function addFilter($name, $filter = null)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'addFilter', array('name' => $name, 'filter' => $filter), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->addFilter($name, $filter);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilter($name)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getFilter', array('name' => $name), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getFilter($name);
    }

    /**
     * {@inheritDoc}
     */
    public function registerUndefinedFilterCallback($callable)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'registerUndefinedFilterCallback', array('callable' => $callable), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->registerUndefinedFilterCallback($callable);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilters()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getFilters', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getFilters();
    }

    /**
     * {@inheritDoc}
     */
    public function addTest($name, $test = null)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'addTest', array('name' => $name, 'test' => $test), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->addTest($name, $test);
    }

    /**
     * {@inheritDoc}
     */
    public function getTests()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getTests', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getTests();
    }

    /**
     * {@inheritDoc}
     */
    public function getTest($name)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getTest', array('name' => $name), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getTest($name);
    }

    /**
     * {@inheritDoc}
     */
    public function addFunction($name, $function = null)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'addFunction', array('name' => $name, 'function' => $function), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->addFunction($name, $function);
    }

    /**
     * {@inheritDoc}
     */
    public function getFunction($name)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getFunction', array('name' => $name), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getFunction($name);
    }

    /**
     * {@inheritDoc}
     */
    public function registerUndefinedFunctionCallback($callable)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'registerUndefinedFunctionCallback', array('callable' => $callable), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->registerUndefinedFunctionCallback($callable);
    }

    /**
     * {@inheritDoc}
     */
    public function getFunctions()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getFunctions', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getFunctions();
    }

    /**
     * {@inheritDoc}
     */
    public function addGlobal($name, $value)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'addGlobal', array('name' => $name, 'value' => $value), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->addGlobal($name, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function getGlobals()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getGlobals', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getGlobals();
    }

    /**
     * {@inheritDoc}
     */
    public function mergeGlobals(array $context)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'mergeGlobals', array('context' => $context), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->mergeGlobals($context);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnaryOperators()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getUnaryOperators', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getUnaryOperators();
    }

    /**
     * {@inheritDoc}
     */
    public function getBinaryOperators()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'getBinaryOperators', array(), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->getBinaryOperators();
    }

    /**
     * {@inheritDoc}
     */
    public function computeAlternatives($name, $items)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'computeAlternatives', array('name' => $name, 'items' => $items), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->computeAlternatives($name, $items);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2a86234b966788175 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, '__get', array('name' => $name), $this->initializer5614d2a86234b966788175);

        return $this->valueHolder5614d2a861f63509839809->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2a86234b966788175);

        $this->valueHolder5614d2a861f63509839809->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, '__isset', array('name' => $name), $this->initializer5614d2a86234b966788175);

        return isset($this->valueHolder5614d2a861f63509839809->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, '__unset', array('name' => $name), $this->initializer5614d2a86234b966788175);

        unset($this->valueHolder5614d2a861f63509839809->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, '__clone', array(), $this->initializer5614d2a86234b966788175);

        $this->valueHolder5614d2a861f63509839809 = clone $this->valueHolder5614d2a861f63509839809;
    }

    public function __sleep()
    {
        $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, '__sleep', array(), $this->initializer5614d2a86234b966788175);

        return array('valueHolder5614d2a861f63509839809');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2a86234b966788175 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2a86234b966788175;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2a86234b966788175 && $this->initializer5614d2a86234b966788175->__invoke($this->valueHolder5614d2a861f63509839809, $this, 'initializeProxy', array(), $this->initializer5614d2a86234b966788175);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2a861f63509839809;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2a861f63509839809;
    }


}

class SymfonyBundleTwigBundleControllerExceptionController_000000002e47f9e500000000e28c9ac7 extends \Symfony\Bundle\TwigBundle\Controller\ExceptionController implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2a96eea8377240313 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2a96eea8661328518 = null;

    /**
     * {@inheritDoc}
     */
    public function showAction(\Symfony\Component\HttpFoundation\Request $request, \Symfony\Component\HttpKernel\Exception\FlattenException $exception, \Symfony\Component\HttpKernel\Log\DebugLoggerInterface $logger = null)
    {
        $this->initializer5614d2a96eea8661328518 && $this->initializer5614d2a96eea8661328518->__invoke($this->valueHolder5614d2a96eea8377240313, $this, 'showAction', array('request' => $request, 'exception' => $exception, 'logger' => $logger), $this->initializer5614d2a96eea8661328518);

        return $this->valueHolder5614d2a96eea8377240313->showAction($request, $exception, $logger);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2a96eea8661328518 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2a96eea8661328518 && $this->initializer5614d2a96eea8661328518->__invoke($this->valueHolder5614d2a96eea8377240313, $this, '__get', array('name' => $name), $this->initializer5614d2a96eea8661328518);

        return $this->valueHolder5614d2a96eea8377240313->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2a96eea8661328518 && $this->initializer5614d2a96eea8661328518->__invoke($this->valueHolder5614d2a96eea8377240313, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2a96eea8661328518);

        $this->valueHolder5614d2a96eea8377240313->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2a96eea8661328518 && $this->initializer5614d2a96eea8661328518->__invoke($this->valueHolder5614d2a96eea8377240313, $this, '__isset', array('name' => $name), $this->initializer5614d2a96eea8661328518);

        return isset($this->valueHolder5614d2a96eea8377240313->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2a96eea8661328518 && $this->initializer5614d2a96eea8661328518->__invoke($this->valueHolder5614d2a96eea8377240313, $this, '__unset', array('name' => $name), $this->initializer5614d2a96eea8661328518);

        unset($this->valueHolder5614d2a96eea8377240313->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2a96eea8661328518 && $this->initializer5614d2a96eea8661328518->__invoke($this->valueHolder5614d2a96eea8377240313, $this, '__clone', array(), $this->initializer5614d2a96eea8661328518);

        $this->valueHolder5614d2a96eea8377240313 = clone $this->valueHolder5614d2a96eea8377240313;
    }

    public function __sleep()
    {
        $this->initializer5614d2a96eea8661328518 && $this->initializer5614d2a96eea8661328518->__invoke($this->valueHolder5614d2a96eea8377240313, $this, '__sleep', array(), $this->initializer5614d2a96eea8661328518);

        return array('valueHolder5614d2a96eea8377240313');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2a96eea8661328518 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2a96eea8661328518;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2a96eea8661328518 && $this->initializer5614d2a96eea8661328518->__invoke($this->valueHolder5614d2a96eea8377240313, $this, 'initializeProxy', array(), $this->initializer5614d2a96eea8661328518);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2a96eea8377240313;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2a96eea8377240313;
    }


}

class AsseticFactoryLazyAssetManager_000000002e47e44c00000000e28c9ac7 extends \Assetic\Factory\LazyAssetManager implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2a9b4800149456061 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2a9b4be8451266602 = null;

    /**
     * {@inheritDoc}
     */
    public function setLoader($alias, \Assetic\Factory\Loader\FormulaLoaderInterface $loader)
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, 'setLoader', array('alias' => $alias, 'loader' => $loader), $this->initializer5614d2a9b4be8451266602);

        return $this->valueHolder5614d2a9b4800149456061->setLoader($alias, $loader);
    }

    /**
     * {@inheritDoc}
     */
    public function addResource(\Assetic\Factory\Resource\ResourceInterface $resource, $loader)
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, 'addResource', array('resource' => $resource, 'loader' => $loader), $this->initializer5614d2a9b4be8451266602);

        return $this->valueHolder5614d2a9b4800149456061->addResource($resource, $loader);
    }

    /**
     * {@inheritDoc}
     */
    public function getResources()
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, 'getResources', array(), $this->initializer5614d2a9b4be8451266602);

        return $this->valueHolder5614d2a9b4800149456061->getResources();
    }

    /**
     * {@inheritDoc}
     */
    public function hasFormula($name)
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, 'hasFormula', array('name' => $name), $this->initializer5614d2a9b4be8451266602);

        return $this->valueHolder5614d2a9b4800149456061->hasFormula($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormula($name)
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, 'getFormula', array('name' => $name), $this->initializer5614d2a9b4be8451266602);

        return $this->valueHolder5614d2a9b4800149456061->getFormula($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setFormula($name, array $formula)
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, 'setFormula', array('name' => $name, 'formula' => $formula), $this->initializer5614d2a9b4be8451266602);

        return $this->valueHolder5614d2a9b4800149456061->setFormula($name, $formula);
    }

    /**
     * {@inheritDoc}
     */
    public function load()
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, 'load', array(), $this->initializer5614d2a9b4be8451266602);

        return $this->valueHolder5614d2a9b4800149456061->load();
    }

    /**
     * {@inheritDoc}
     */
    public function get($name)
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, 'get', array('name' => $name), $this->initializer5614d2a9b4be8451266602);

        return $this->valueHolder5614d2a9b4800149456061->get($name);
    }

    /**
     * {@inheritDoc}
     */
    public function has($name)
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, 'has', array('name' => $name), $this->initializer5614d2a9b4be8451266602);

        return $this->valueHolder5614d2a9b4800149456061->has($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getNames()
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, 'getNames', array(), $this->initializer5614d2a9b4be8451266602);

        return $this->valueHolder5614d2a9b4800149456061->getNames();
    }

    /**
     * {@inheritDoc}
     */
    public function isDebug()
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, 'isDebug', array(), $this->initializer5614d2a9b4be8451266602);

        return $this->valueHolder5614d2a9b4800149456061->isDebug();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastModified(\Assetic\Asset\AssetInterface $asset)
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, 'getLastModified', array('asset' => $asset), $this->initializer5614d2a9b4be8451266602);

        return $this->valueHolder5614d2a9b4800149456061->getLastModified($asset);
    }

    /**
     * {@inheritDoc}
     */
    public function set($name, \Assetic\Asset\AssetInterface $asset)
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, 'set', array('name' => $name, 'asset' => $asset), $this->initializer5614d2a9b4be8451266602);

        return $this->valueHolder5614d2a9b4800149456061->set($name, $asset);
    }

    /**
     * {@inheritDoc}
     */
    public function clear()
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, 'clear', array(), $this->initializer5614d2a9b4be8451266602);

        return $this->valueHolder5614d2a9b4800149456061->clear();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2a9b4be8451266602 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, '__get', array('name' => $name), $this->initializer5614d2a9b4be8451266602);

        return $this->valueHolder5614d2a9b4800149456061->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2a9b4be8451266602);

        $this->valueHolder5614d2a9b4800149456061->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, '__isset', array('name' => $name), $this->initializer5614d2a9b4be8451266602);

        return isset($this->valueHolder5614d2a9b4800149456061->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, '__unset', array('name' => $name), $this->initializer5614d2a9b4be8451266602);

        unset($this->valueHolder5614d2a9b4800149456061->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, '__clone', array(), $this->initializer5614d2a9b4be8451266602);

        $this->valueHolder5614d2a9b4800149456061 = clone $this->valueHolder5614d2a9b4800149456061;
    }

    public function __sleep()
    {
        $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, '__sleep', array(), $this->initializer5614d2a9b4be8451266602);

        return array('valueHolder5614d2a9b4800149456061');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2a9b4be8451266602 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2a9b4be8451266602;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2a9b4be8451266602 && $this->initializer5614d2a9b4be8451266602->__invoke($this->valueHolder5614d2a9b4800149456061, $this, 'initializeProxy', array(), $this->initializer5614d2a9b4be8451266602);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2a9b4800149456061;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2a9b4800149456061;
    }


}

class DoctrineORMToolsResolveTargetEntityListener_000000002e47fa5e00000000e28c9ac7 extends \Doctrine\ORM\Tools\ResolveTargetEntityListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2a9db521801004717 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2a9db521760972437 = null;

    /**
     * {@inheritDoc}
     */
    public function getSubscribedEvents()
    {
        $this->initializer5614d2a9db521760972437 && $this->initializer5614d2a9db521760972437->__invoke($this->valueHolder5614d2a9db521801004717, $this, 'getSubscribedEvents', array(), $this->initializer5614d2a9db521760972437);

        return $this->valueHolder5614d2a9db521801004717->getSubscribedEvents();
    }

    /**
     * {@inheritDoc}
     */
    public function addResolveTargetEntity($originalEntity, $newEntity, array $mapping)
    {
        $this->initializer5614d2a9db521760972437 && $this->initializer5614d2a9db521760972437->__invoke($this->valueHolder5614d2a9db521801004717, $this, 'addResolveTargetEntity', array('originalEntity' => $originalEntity, 'newEntity' => $newEntity, 'mapping' => $mapping), $this->initializer5614d2a9db521760972437);

        return $this->valueHolder5614d2a9db521801004717->addResolveTargetEntity($originalEntity, $newEntity, $mapping);
    }

    /**
     * {@inheritDoc}
     */
    public function onClassMetadataNotFound(\Doctrine\ORM\Event\OnClassMetadataNotFoundEventArgs $args)
    {
        $this->initializer5614d2a9db521760972437 && $this->initializer5614d2a9db521760972437->__invoke($this->valueHolder5614d2a9db521801004717, $this, 'onClassMetadataNotFound', array('args' => $args), $this->initializer5614d2a9db521760972437);

        return $this->valueHolder5614d2a9db521801004717->onClassMetadataNotFound($args);
    }

    /**
     * {@inheritDoc}
     */
    public function loadClassMetadata(\Doctrine\ORM\Event\LoadClassMetadataEventArgs $args)
    {
        $this->initializer5614d2a9db521760972437 && $this->initializer5614d2a9db521760972437->__invoke($this->valueHolder5614d2a9db521801004717, $this, 'loadClassMetadata', array('args' => $args), $this->initializer5614d2a9db521760972437);

        return $this->valueHolder5614d2a9db521801004717->loadClassMetadata($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2a9db521760972437 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2a9db521760972437 && $this->initializer5614d2a9db521760972437->__invoke($this->valueHolder5614d2a9db521801004717, $this, '__get', array('name' => $name), $this->initializer5614d2a9db521760972437);

        return $this->valueHolder5614d2a9db521801004717->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2a9db521760972437 && $this->initializer5614d2a9db521760972437->__invoke($this->valueHolder5614d2a9db521801004717, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2a9db521760972437);

        $this->valueHolder5614d2a9db521801004717->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2a9db521760972437 && $this->initializer5614d2a9db521760972437->__invoke($this->valueHolder5614d2a9db521801004717, $this, '__isset', array('name' => $name), $this->initializer5614d2a9db521760972437);

        return isset($this->valueHolder5614d2a9db521801004717->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2a9db521760972437 && $this->initializer5614d2a9db521760972437->__invoke($this->valueHolder5614d2a9db521801004717, $this, '__unset', array('name' => $name), $this->initializer5614d2a9db521760972437);

        unset($this->valueHolder5614d2a9db521801004717->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2a9db521760972437 && $this->initializer5614d2a9db521760972437->__invoke($this->valueHolder5614d2a9db521801004717, $this, '__clone', array(), $this->initializer5614d2a9db521760972437);

        $this->valueHolder5614d2a9db521801004717 = clone $this->valueHolder5614d2a9db521801004717;
    }

    public function __sleep()
    {
        $this->initializer5614d2a9db521760972437 && $this->initializer5614d2a9db521760972437->__invoke($this->valueHolder5614d2a9db521801004717, $this, '__sleep', array(), $this->initializer5614d2a9db521760972437);

        return array('valueHolder5614d2a9db521801004717');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2a9db521760972437 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2a9db521760972437;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2a9db521760972437 && $this->initializer5614d2a9db521760972437->__invoke($this->valueHolder5614d2a9db521801004717, $this, 'initializeProxy', array(), $this->initializer5614d2a9db521760972437);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2a9db521801004717;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2a9db521801004717;
    }


}

class KnpMenuRendererTwigRenderer_000000002e47ff3d00000000e28c9ac7 extends \Knp\Menu\Renderer\TwigRenderer implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2a9ec695540811807 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2a9eca7d379278533 = null;

    /**
     * {@inheritDoc}
     */
    public function render(\Knp\Menu\ItemInterface $item, array $options = array())
    {
        $this->initializer5614d2a9eca7d379278533 && $this->initializer5614d2a9eca7d379278533->__invoke($this->valueHolder5614d2a9ec695540811807, $this, 'render', array('item' => $item, 'options' => $options), $this->initializer5614d2a9eca7d379278533);

        return $this->valueHolder5614d2a9ec695540811807->render($item, $options);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2a9eca7d379278533 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2a9eca7d379278533 && $this->initializer5614d2a9eca7d379278533->__invoke($this->valueHolder5614d2a9ec695540811807, $this, '__get', array('name' => $name), $this->initializer5614d2a9eca7d379278533);

        return $this->valueHolder5614d2a9ec695540811807->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2a9eca7d379278533 && $this->initializer5614d2a9eca7d379278533->__invoke($this->valueHolder5614d2a9ec695540811807, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2a9eca7d379278533);

        $this->valueHolder5614d2a9ec695540811807->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2a9eca7d379278533 && $this->initializer5614d2a9eca7d379278533->__invoke($this->valueHolder5614d2a9ec695540811807, $this, '__isset', array('name' => $name), $this->initializer5614d2a9eca7d379278533);

        return isset($this->valueHolder5614d2a9ec695540811807->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2a9eca7d379278533 && $this->initializer5614d2a9eca7d379278533->__invoke($this->valueHolder5614d2a9ec695540811807, $this, '__unset', array('name' => $name), $this->initializer5614d2a9eca7d379278533);

        unset($this->valueHolder5614d2a9ec695540811807->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2a9eca7d379278533 && $this->initializer5614d2a9eca7d379278533->__invoke($this->valueHolder5614d2a9ec695540811807, $this, '__clone', array(), $this->initializer5614d2a9eca7d379278533);

        $this->valueHolder5614d2a9ec695540811807 = clone $this->valueHolder5614d2a9ec695540811807;
    }

    public function __sleep()
    {
        $this->initializer5614d2a9eca7d379278533 && $this->initializer5614d2a9eca7d379278533->__invoke($this->valueHolder5614d2a9ec695540811807, $this, '__sleep', array(), $this->initializer5614d2a9eca7d379278533);

        return array('valueHolder5614d2a9ec695540811807');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2a9eca7d379278533 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2a9eca7d379278533;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2a9eca7d379278533 && $this->initializer5614d2a9eca7d379278533->__invoke($this->valueHolder5614d2a9ec695540811807, $this, 'initializeProxy', array(), $this->initializer5614d2a9eca7d379278533);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2a9ec695540811807;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2a9ec695540811807;
    }


}

class OroBundleOrganizationBundleOwnershipOwnerDeletionManager_000000002e47e79b00000000e28c9ac7 extends \Oro\Bundle\OrganizationBundle\Ownership\OwnerDeletionManager implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2a9ee9be327845149 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2a9eeda6330803343 = null;

    /**
     * {@inheritDoc}
     */
    public function registerAssignmentChecker($entityClassName, \Oro\Bundle\OrganizationBundle\Ownership\OwnerAssignmentCheckerInterface $checker)
    {
        $this->initializer5614d2a9eeda6330803343 && $this->initializer5614d2a9eeda6330803343->__invoke($this->valueHolder5614d2a9ee9be327845149, $this, 'registerAssignmentChecker', array('entityClassName' => $entityClassName, 'checker' => $checker), $this->initializer5614d2a9eeda6330803343);

        return $this->valueHolder5614d2a9ee9be327845149->registerAssignmentChecker($entityClassName, $checker);
    }

    /**
     * {@inheritDoc}
     */
    public function isOwner($entity)
    {
        $this->initializer5614d2a9eeda6330803343 && $this->initializer5614d2a9eeda6330803343->__invoke($this->valueHolder5614d2a9ee9be327845149, $this, 'isOwner', array('entity' => $entity), $this->initializer5614d2a9eeda6330803343);

        return $this->valueHolder5614d2a9ee9be327845149->isOwner($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function hasAssignments($owner)
    {
        $this->initializer5614d2a9eeda6330803343 && $this->initializer5614d2a9eeda6330803343->__invoke($this->valueHolder5614d2a9ee9be327845149, $this, 'hasAssignments', array('owner' => $owner), $this->initializer5614d2a9eeda6330803343);

        return $this->valueHolder5614d2a9ee9be327845149->hasAssignments($owner);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2a9eeda6330803343 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2a9eeda6330803343 && $this->initializer5614d2a9eeda6330803343->__invoke($this->valueHolder5614d2a9ee9be327845149, $this, '__get', array('name' => $name), $this->initializer5614d2a9eeda6330803343);

        return $this->valueHolder5614d2a9ee9be327845149->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2a9eeda6330803343 && $this->initializer5614d2a9eeda6330803343->__invoke($this->valueHolder5614d2a9ee9be327845149, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2a9eeda6330803343);

        $this->valueHolder5614d2a9ee9be327845149->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2a9eeda6330803343 && $this->initializer5614d2a9eeda6330803343->__invoke($this->valueHolder5614d2a9ee9be327845149, $this, '__isset', array('name' => $name), $this->initializer5614d2a9eeda6330803343);

        return isset($this->valueHolder5614d2a9ee9be327845149->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2a9eeda6330803343 && $this->initializer5614d2a9eeda6330803343->__invoke($this->valueHolder5614d2a9ee9be327845149, $this, '__unset', array('name' => $name), $this->initializer5614d2a9eeda6330803343);

        unset($this->valueHolder5614d2a9ee9be327845149->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2a9eeda6330803343 && $this->initializer5614d2a9eeda6330803343->__invoke($this->valueHolder5614d2a9ee9be327845149, $this, '__clone', array(), $this->initializer5614d2a9eeda6330803343);

        $this->valueHolder5614d2a9ee9be327845149 = clone $this->valueHolder5614d2a9ee9be327845149;
    }

    public function __sleep()
    {
        $this->initializer5614d2a9eeda6330803343 && $this->initializer5614d2a9eeda6330803343->__invoke($this->valueHolder5614d2a9ee9be327845149, $this, '__sleep', array(), $this->initializer5614d2a9eeda6330803343);

        return array('valueHolder5614d2a9ee9be327845149');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2a9eeda6330803343 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2a9eeda6330803343;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2a9eeda6330803343 && $this->initializer5614d2a9eeda6330803343->__invoke($this->valueHolder5614d2a9ee9be327845149, $this, 'initializeProxy', array(), $this->initializer5614d2a9eeda6330803343);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2a9ee9be327845149;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2a9ee9be327845149;
    }


}

class OroBundleOrganizationBundleEventRecordOwnerDataListener_000000002e47e7ef00000000e28c9ac7 extends \Oro\Bundle\OrganizationBundle\Event\RecordOwnerDataListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aa010f7574256908 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aa010f7028847797 = null;

    /**
     * {@inheritDoc}
     */
    public function prePersist(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2aa010f7028847797 && $this->initializer5614d2aa010f7028847797->__invoke($this->valueHolder5614d2aa010f7574256908, $this, 'prePersist', array('args' => $args), $this->initializer5614d2aa010f7028847797);

        return $this->valueHolder5614d2aa010f7574256908->prePersist($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aa010f7028847797 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aa010f7028847797 && $this->initializer5614d2aa010f7028847797->__invoke($this->valueHolder5614d2aa010f7574256908, $this, '__get', array('name' => $name), $this->initializer5614d2aa010f7028847797);

        return $this->valueHolder5614d2aa010f7574256908->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aa010f7028847797 && $this->initializer5614d2aa010f7028847797->__invoke($this->valueHolder5614d2aa010f7574256908, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aa010f7028847797);

        $this->valueHolder5614d2aa010f7574256908->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aa010f7028847797 && $this->initializer5614d2aa010f7028847797->__invoke($this->valueHolder5614d2aa010f7574256908, $this, '__isset', array('name' => $name), $this->initializer5614d2aa010f7028847797);

        return isset($this->valueHolder5614d2aa010f7574256908->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aa010f7028847797 && $this->initializer5614d2aa010f7028847797->__invoke($this->valueHolder5614d2aa010f7574256908, $this, '__unset', array('name' => $name), $this->initializer5614d2aa010f7028847797);

        unset($this->valueHolder5614d2aa010f7574256908->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aa010f7028847797 && $this->initializer5614d2aa010f7028847797->__invoke($this->valueHolder5614d2aa010f7574256908, $this, '__clone', array(), $this->initializer5614d2aa010f7028847797);

        $this->valueHolder5614d2aa010f7574256908 = clone $this->valueHolder5614d2aa010f7574256908;
    }

    public function __sleep()
    {
        $this->initializer5614d2aa010f7028847797 && $this->initializer5614d2aa010f7028847797->__invoke($this->valueHolder5614d2aa010f7574256908, $this, '__sleep', array(), $this->initializer5614d2aa010f7028847797);

        return array('valueHolder5614d2aa010f7574256908');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aa010f7028847797 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aa010f7028847797;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aa010f7028847797 && $this->initializer5614d2aa010f7028847797->__invoke($this->valueHolder5614d2aa010f7574256908, $this, 'initializeProxy', array(), $this->initializer5614d2aa010f7028847797);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aa010f7574256908;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aa010f7574256908;
    }


}

class OroBundleOrganizationBundleEventBusinessUnitListener_000000002e47e7ea00000000e28c9ac7 extends \Oro\Bundle\OrganizationBundle\Event\BusinessUnitListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aa03fd8801855070 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aa03fd8648200069 = null;

    /**
     * {@inheritDoc}
     */
    public function preRemove(\Doctrine\ORM\Event\LifecycleEventArgs $eventArgs)
    {
        $this->initializer5614d2aa03fd8648200069 && $this->initializer5614d2aa03fd8648200069->__invoke($this->valueHolder5614d2aa03fd8801855070, $this, 'preRemove', array('eventArgs' => $eventArgs), $this->initializer5614d2aa03fd8648200069);

        return $this->valueHolder5614d2aa03fd8801855070->preRemove($eventArgs);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aa03fd8648200069 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aa03fd8648200069 && $this->initializer5614d2aa03fd8648200069->__invoke($this->valueHolder5614d2aa03fd8801855070, $this, '__get', array('name' => $name), $this->initializer5614d2aa03fd8648200069);

        return $this->valueHolder5614d2aa03fd8801855070->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aa03fd8648200069 && $this->initializer5614d2aa03fd8648200069->__invoke($this->valueHolder5614d2aa03fd8801855070, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aa03fd8648200069);

        $this->valueHolder5614d2aa03fd8801855070->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aa03fd8648200069 && $this->initializer5614d2aa03fd8648200069->__invoke($this->valueHolder5614d2aa03fd8801855070, $this, '__isset', array('name' => $name), $this->initializer5614d2aa03fd8648200069);

        return isset($this->valueHolder5614d2aa03fd8801855070->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aa03fd8648200069 && $this->initializer5614d2aa03fd8648200069->__invoke($this->valueHolder5614d2aa03fd8801855070, $this, '__unset', array('name' => $name), $this->initializer5614d2aa03fd8648200069);

        unset($this->valueHolder5614d2aa03fd8801855070->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aa03fd8648200069 && $this->initializer5614d2aa03fd8648200069->__invoke($this->valueHolder5614d2aa03fd8801855070, $this, '__clone', array(), $this->initializer5614d2aa03fd8648200069);

        $this->valueHolder5614d2aa03fd8801855070 = clone $this->valueHolder5614d2aa03fd8801855070;
    }

    public function __sleep()
    {
        $this->initializer5614d2aa03fd8648200069 && $this->initializer5614d2aa03fd8648200069->__invoke($this->valueHolder5614d2aa03fd8801855070, $this, '__sleep', array(), $this->initializer5614d2aa03fd8648200069);

        return array('valueHolder5614d2aa03fd8801855070');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aa03fd8648200069 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aa03fd8648200069;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aa03fd8648200069 && $this->initializer5614d2aa03fd8648200069->__invoke($this->valueHolder5614d2aa03fd8801855070, $this, 'initializeProxy', array(), $this->initializer5614d2aa03fd8648200069);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aa03fd8801855070;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aa03fd8801855070;
    }


}

class OroBundleOrganizationBundleEventImportStrategyListener_000000002e47e7e800000000e28c9ac7 extends \Oro\Bundle\OrganizationBundle\Event\ImportStrategyListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aa05f18869671768 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aa05f18455700084 = null;

    /**
     * {@inheritDoc}
     */
    public function onProcessAfter(\Oro\Bundle\ImportExportBundle\Event\StrategyEvent $event)
    {
        $this->initializer5614d2aa05f18455700084 && $this->initializer5614d2aa05f18455700084->__invoke($this->valueHolder5614d2aa05f18869671768, $this, 'onProcessAfter', array('event' => $event), $this->initializer5614d2aa05f18455700084);

        return $this->valueHolder5614d2aa05f18869671768->onProcessAfter($event);
    }

    /**
     * {@inheritDoc}
     */
    public function onClear()
    {
        $this->initializer5614d2aa05f18455700084 && $this->initializer5614d2aa05f18455700084->__invoke($this->valueHolder5614d2aa05f18869671768, $this, 'onClear', array(), $this->initializer5614d2aa05f18455700084);

        return $this->valueHolder5614d2aa05f18869671768->onClear();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aa05f18455700084 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aa05f18455700084 && $this->initializer5614d2aa05f18455700084->__invoke($this->valueHolder5614d2aa05f18869671768, $this, '__get', array('name' => $name), $this->initializer5614d2aa05f18455700084);

        return $this->valueHolder5614d2aa05f18869671768->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aa05f18455700084 && $this->initializer5614d2aa05f18455700084->__invoke($this->valueHolder5614d2aa05f18869671768, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aa05f18455700084);

        $this->valueHolder5614d2aa05f18869671768->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aa05f18455700084 && $this->initializer5614d2aa05f18455700084->__invoke($this->valueHolder5614d2aa05f18869671768, $this, '__isset', array('name' => $name), $this->initializer5614d2aa05f18455700084);

        return isset($this->valueHolder5614d2aa05f18869671768->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aa05f18455700084 && $this->initializer5614d2aa05f18455700084->__invoke($this->valueHolder5614d2aa05f18869671768, $this, '__unset', array('name' => $name), $this->initializer5614d2aa05f18455700084);

        unset($this->valueHolder5614d2aa05f18869671768->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aa05f18455700084 && $this->initializer5614d2aa05f18455700084->__invoke($this->valueHolder5614d2aa05f18869671768, $this, '__clone', array(), $this->initializer5614d2aa05f18455700084);

        $this->valueHolder5614d2aa05f18869671768 = clone $this->valueHolder5614d2aa05f18869671768;
    }

    public function __sleep()
    {
        $this->initializer5614d2aa05f18455700084 && $this->initializer5614d2aa05f18455700084->__invoke($this->valueHolder5614d2aa05f18869671768, $this, '__sleep', array(), $this->initializer5614d2aa05f18455700084);

        return array('valueHolder5614d2aa05f18869671768');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aa05f18455700084 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aa05f18455700084;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aa05f18455700084 && $this->initializer5614d2aa05f18455700084->__invoke($this->valueHolder5614d2aa05f18869671768, $this, 'initializeProxy', array(), $this->initializer5614d2aa05f18455700084);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aa05f18869671768;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aa05f18869671768;
    }


}

class OroBundleOrganizationBundleAutocompleteOrganizationSearchHandler_000000002e47e7fa00000000e28c9ac7 extends \Oro\Bundle\OrganizationBundle\Autocomplete\OrganizationSearchHandler implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aa0ff43331420671 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aa1032b802478616 = null;

    /**
     * {@inheritDoc}
     */
    public function search($query, $page, $perPage, $searchById = false)
    {
        $this->initializer5614d2aa1032b802478616 && $this->initializer5614d2aa1032b802478616->__invoke($this->valueHolder5614d2aa0ff43331420671, $this, 'search', array('query' => $query, 'page' => $page, 'perPage' => $perPage, 'searchById' => $searchById), $this->initializer5614d2aa1032b802478616);

        return $this->valueHolder5614d2aa0ff43331420671->search($query, $page, $perPage, $searchById);
    }

    /**
     * {@inheritDoc}
     */
    public function getProperties()
    {
        $this->initializer5614d2aa1032b802478616 && $this->initializer5614d2aa1032b802478616->__invoke($this->valueHolder5614d2aa0ff43331420671, $this, 'getProperties', array(), $this->initializer5614d2aa1032b802478616);

        return $this->valueHolder5614d2aa0ff43331420671->getProperties();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityName()
    {
        $this->initializer5614d2aa1032b802478616 && $this->initializer5614d2aa1032b802478616->__invoke($this->valueHolder5614d2aa0ff43331420671, $this, 'getEntityName', array(), $this->initializer5614d2aa1032b802478616);

        return $this->valueHolder5614d2aa0ff43331420671->getEntityName();
    }

    /**
     * {@inheritDoc}
     */
    public function convertItem($item)
    {
        $this->initializer5614d2aa1032b802478616 && $this->initializer5614d2aa1032b802478616->__invoke($this->valueHolder5614d2aa0ff43331420671, $this, 'convertItem', array('item' => $item), $this->initializer5614d2aa1032b802478616);

        return $this->valueHolder5614d2aa0ff43331420671->convertItem($item);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aa1032b802478616 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aa1032b802478616 && $this->initializer5614d2aa1032b802478616->__invoke($this->valueHolder5614d2aa0ff43331420671, $this, '__get', array('name' => $name), $this->initializer5614d2aa1032b802478616);

        return $this->valueHolder5614d2aa0ff43331420671->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aa1032b802478616 && $this->initializer5614d2aa1032b802478616->__invoke($this->valueHolder5614d2aa0ff43331420671, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aa1032b802478616);

        $this->valueHolder5614d2aa0ff43331420671->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aa1032b802478616 && $this->initializer5614d2aa1032b802478616->__invoke($this->valueHolder5614d2aa0ff43331420671, $this, '__isset', array('name' => $name), $this->initializer5614d2aa1032b802478616);

        return isset($this->valueHolder5614d2aa0ff43331420671->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aa1032b802478616 && $this->initializer5614d2aa1032b802478616->__invoke($this->valueHolder5614d2aa0ff43331420671, $this, '__unset', array('name' => $name), $this->initializer5614d2aa1032b802478616);

        unset($this->valueHolder5614d2aa0ff43331420671->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aa1032b802478616 && $this->initializer5614d2aa1032b802478616->__invoke($this->valueHolder5614d2aa0ff43331420671, $this, '__clone', array(), $this->initializer5614d2aa1032b802478616);

        $this->valueHolder5614d2aa0ff43331420671 = clone $this->valueHolder5614d2aa0ff43331420671;
    }

    public function __sleep()
    {
        $this->initializer5614d2aa1032b802478616 && $this->initializer5614d2aa1032b802478616->__invoke($this->valueHolder5614d2aa0ff43331420671, $this, '__sleep', array(), $this->initializer5614d2aa1032b802478616);

        return array('valueHolder5614d2aa0ff43331420671');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aa1032b802478616 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aa1032b802478616;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aa1032b802478616 && $this->initializer5614d2aa1032b802478616->__invoke($this->valueHolder5614d2aa0ff43331420671, $this, 'initializeProxy', array(), $this->initializer5614d2aa1032b802478616);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aa0ff43331420671;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aa0ff43331420671;
    }


}

class OroBundleSecurityBundleEventListenerOwnerTreeListener_000000002e47e09700000000e28c9ac7 extends \Oro\Bundle\SecurityBundle\EventListener\OwnerTreeListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aa14d64583649422 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aa1514c716340058 = null;

    /**
     * {@inheritDoc}
     */
    public function setContainer(\Symfony\Component\DependencyInjection\ContainerInterface $container = null)
    {
        $this->initializer5614d2aa1514c716340058 && $this->initializer5614d2aa1514c716340058->__invoke($this->valueHolder5614d2aa14d64583649422, $this, 'setContainer', array('container' => $container), $this->initializer5614d2aa1514c716340058);

        return $this->valueHolder5614d2aa14d64583649422->setContainer($container);
    }

    /**
     * {@inheritDoc}
     */
    public function addSupportedClass($class)
    {
        $this->initializer5614d2aa1514c716340058 && $this->initializer5614d2aa1514c716340058->__invoke($this->valueHolder5614d2aa14d64583649422, $this, 'addSupportedClass', array('class' => $class), $this->initializer5614d2aa1514c716340058);

        return $this->valueHolder5614d2aa14d64583649422->addSupportedClass($class);
    }

    /**
     * {@inheritDoc}
     */
    public function onFlush(\Doctrine\ORM\Event\OnFlushEventArgs $args)
    {
        $this->initializer5614d2aa1514c716340058 && $this->initializer5614d2aa1514c716340058->__invoke($this->valueHolder5614d2aa14d64583649422, $this, 'onFlush', array('args' => $args), $this->initializer5614d2aa1514c716340058);

        return $this->valueHolder5614d2aa14d64583649422->onFlush($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aa1514c716340058 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aa1514c716340058 && $this->initializer5614d2aa1514c716340058->__invoke($this->valueHolder5614d2aa14d64583649422, $this, '__get', array('name' => $name), $this->initializer5614d2aa1514c716340058);

        return $this->valueHolder5614d2aa14d64583649422->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aa1514c716340058 && $this->initializer5614d2aa1514c716340058->__invoke($this->valueHolder5614d2aa14d64583649422, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aa1514c716340058);

        $this->valueHolder5614d2aa14d64583649422->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aa1514c716340058 && $this->initializer5614d2aa1514c716340058->__invoke($this->valueHolder5614d2aa14d64583649422, $this, '__isset', array('name' => $name), $this->initializer5614d2aa1514c716340058);

        return isset($this->valueHolder5614d2aa14d64583649422->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aa1514c716340058 && $this->initializer5614d2aa1514c716340058->__invoke($this->valueHolder5614d2aa14d64583649422, $this, '__unset', array('name' => $name), $this->initializer5614d2aa1514c716340058);

        unset($this->valueHolder5614d2aa14d64583649422->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aa1514c716340058 && $this->initializer5614d2aa1514c716340058->__invoke($this->valueHolder5614d2aa14d64583649422, $this, '__clone', array(), $this->initializer5614d2aa1514c716340058);

        $this->valueHolder5614d2aa14d64583649422 = clone $this->valueHolder5614d2aa14d64583649422;
    }

    public function __sleep()
    {
        $this->initializer5614d2aa1514c716340058 && $this->initializer5614d2aa1514c716340058->__invoke($this->valueHolder5614d2aa14d64583649422, $this, '__sleep', array(), $this->initializer5614d2aa1514c716340058);

        return array('valueHolder5614d2aa14d64583649422');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aa1514c716340058 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aa1514c716340058;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aa1514c716340058 && $this->initializer5614d2aa1514c716340058->__invoke($this->valueHolder5614d2aa14d64583649422, $this, 'initializeProxy', array(), $this->initializer5614d2aa1514c716340058);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aa14d64583649422;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aa14d64583649422;
    }


}

class OroBundleSecurityBundleEventListenerRefreshContextListener_000000002e47e0e300000000e28c9ac7 extends \Oro\Bundle\SecurityBundle\EventListener\RefreshContextListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aa1ce4e034855565 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aa1ce4e964104792 = null;

    /**
     * {@inheritDoc}
     */
    public function preClose(\Oro\Bundle\EntityBundle\ORM\Event\PreCloseEventArgs $event)
    {
        $this->initializer5614d2aa1ce4e964104792 && $this->initializer5614d2aa1ce4e964104792->__invoke($this->valueHolder5614d2aa1ce4e034855565, $this, 'preClose', array('event' => $event), $this->initializer5614d2aa1ce4e964104792);

        return $this->valueHolder5614d2aa1ce4e034855565->preClose($event);
    }

    /**
     * {@inheritDoc}
     */
    public function onClear(\Doctrine\ORM\Event\OnClearEventArgs $event)
    {
        $this->initializer5614d2aa1ce4e964104792 && $this->initializer5614d2aa1ce4e964104792->__invoke($this->valueHolder5614d2aa1ce4e034855565, $this, 'onClear', array('event' => $event), $this->initializer5614d2aa1ce4e964104792);

        return $this->valueHolder5614d2aa1ce4e034855565->onClear($event);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aa1ce4e964104792 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aa1ce4e964104792 && $this->initializer5614d2aa1ce4e964104792->__invoke($this->valueHolder5614d2aa1ce4e034855565, $this, '__get', array('name' => $name), $this->initializer5614d2aa1ce4e964104792);

        return $this->valueHolder5614d2aa1ce4e034855565->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aa1ce4e964104792 && $this->initializer5614d2aa1ce4e964104792->__invoke($this->valueHolder5614d2aa1ce4e034855565, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aa1ce4e964104792);

        $this->valueHolder5614d2aa1ce4e034855565->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aa1ce4e964104792 && $this->initializer5614d2aa1ce4e964104792->__invoke($this->valueHolder5614d2aa1ce4e034855565, $this, '__isset', array('name' => $name), $this->initializer5614d2aa1ce4e964104792);

        return isset($this->valueHolder5614d2aa1ce4e034855565->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aa1ce4e964104792 && $this->initializer5614d2aa1ce4e964104792->__invoke($this->valueHolder5614d2aa1ce4e034855565, $this, '__unset', array('name' => $name), $this->initializer5614d2aa1ce4e964104792);

        unset($this->valueHolder5614d2aa1ce4e034855565->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aa1ce4e964104792 && $this->initializer5614d2aa1ce4e964104792->__invoke($this->valueHolder5614d2aa1ce4e034855565, $this, '__clone', array(), $this->initializer5614d2aa1ce4e964104792);

        $this->valueHolder5614d2aa1ce4e034855565 = clone $this->valueHolder5614d2aa1ce4e034855565;
    }

    public function __sleep()
    {
        $this->initializer5614d2aa1ce4e964104792 && $this->initializer5614d2aa1ce4e964104792->__invoke($this->valueHolder5614d2aa1ce4e034855565, $this, '__sleep', array(), $this->initializer5614d2aa1ce4e964104792);

        return array('valueHolder5614d2aa1ce4e034855565');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aa1ce4e964104792 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aa1ce4e964104792;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aa1ce4e964104792 && $this->initializer5614d2aa1ce4e964104792->__invoke($this->valueHolder5614d2aa1ce4e034855565, $this, 'initializeProxy', array(), $this->initializer5614d2aa1ce4e964104792);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aa1ce4e034855565;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aa1ce4e034855565;
    }


}

class OroBundleAttachmentBundleEventListenerFileListener_000000002e47e0d900000000e28c9ac7 extends \Oro\Bundle\AttachmentBundle\EventListener\FileListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aa2243f791010580 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aa2243f425263436 = null;

    /**
     * {@inheritDoc}
     */
    public function prePersist(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2aa2243f425263436 && $this->initializer5614d2aa2243f425263436->__invoke($this->valueHolder5614d2aa2243f791010580, $this, 'prePersist', array('args' => $args), $this->initializer5614d2aa2243f425263436);

        return $this->valueHolder5614d2aa2243f791010580->prePersist($args);
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2aa2243f425263436 && $this->initializer5614d2aa2243f425263436->__invoke($this->valueHolder5614d2aa2243f791010580, $this, 'preUpdate', array('args' => $args), $this->initializer5614d2aa2243f425263436);

        return $this->valueHolder5614d2aa2243f791010580->preUpdate($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postPersist(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2aa2243f425263436 && $this->initializer5614d2aa2243f425263436->__invoke($this->valueHolder5614d2aa2243f791010580, $this, 'postPersist', array('args' => $args), $this->initializer5614d2aa2243f425263436);

        return $this->valueHolder5614d2aa2243f791010580->postPersist($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postUpdate(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2aa2243f425263436 && $this->initializer5614d2aa2243f425263436->__invoke($this->valueHolder5614d2aa2243f791010580, $this, 'postUpdate', array('args' => $args), $this->initializer5614d2aa2243f425263436);

        return $this->valueHolder5614d2aa2243f791010580->postUpdate($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aa2243f425263436 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aa2243f425263436 && $this->initializer5614d2aa2243f425263436->__invoke($this->valueHolder5614d2aa2243f791010580, $this, '__get', array('name' => $name), $this->initializer5614d2aa2243f425263436);

        return $this->valueHolder5614d2aa2243f791010580->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aa2243f425263436 && $this->initializer5614d2aa2243f425263436->__invoke($this->valueHolder5614d2aa2243f791010580, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aa2243f425263436);

        $this->valueHolder5614d2aa2243f791010580->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aa2243f425263436 && $this->initializer5614d2aa2243f425263436->__invoke($this->valueHolder5614d2aa2243f791010580, $this, '__isset', array('name' => $name), $this->initializer5614d2aa2243f425263436);

        return isset($this->valueHolder5614d2aa2243f791010580->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aa2243f425263436 && $this->initializer5614d2aa2243f425263436->__invoke($this->valueHolder5614d2aa2243f791010580, $this, '__unset', array('name' => $name), $this->initializer5614d2aa2243f425263436);

        unset($this->valueHolder5614d2aa2243f791010580->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aa2243f425263436 && $this->initializer5614d2aa2243f425263436->__invoke($this->valueHolder5614d2aa2243f791010580, $this, '__clone', array(), $this->initializer5614d2aa2243f425263436);

        $this->valueHolder5614d2aa2243f791010580 = clone $this->valueHolder5614d2aa2243f791010580;
    }

    public function __sleep()
    {
        $this->initializer5614d2aa2243f425263436 && $this->initializer5614d2aa2243f425263436->__invoke($this->valueHolder5614d2aa2243f791010580, $this, '__sleep', array(), $this->initializer5614d2aa2243f425263436);

        return array('valueHolder5614d2aa2243f791010580');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aa2243f425263436 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aa2243f425263436;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aa2243f425263436 && $this->initializer5614d2aa2243f425263436->__invoke($this->valueHolder5614d2aa2243f791010580, $this, 'initializeProxy', array(), $this->initializer5614d2aa2243f425263436);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aa2243f791010580;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aa2243f791010580;
    }


}

class OroBundleEmailBundleEventListenerEmailUserListener_000000002e47e1b000000000e28c9ac7 extends \Oro\Bundle\EmailBundle\EventListener\EmailUserListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aa27e18071537076 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aa27e18455258575 = null;

    /**
     * {@inheritDoc}
     */
    public function onFlush(\Doctrine\ORM\Event\OnFlushEventArgs $args)
    {
        $this->initializer5614d2aa27e18455258575 && $this->initializer5614d2aa27e18455258575->__invoke($this->valueHolder5614d2aa27e18071537076, $this, 'onFlush', array('args' => $args), $this->initializer5614d2aa27e18455258575);

        return $this->valueHolder5614d2aa27e18071537076->onFlush($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postFlush()
    {
        $this->initializer5614d2aa27e18455258575 && $this->initializer5614d2aa27e18455258575->__invoke($this->valueHolder5614d2aa27e18071537076, $this, 'postFlush', array(), $this->initializer5614d2aa27e18455258575);

        return $this->valueHolder5614d2aa27e18071537076->postFlush();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aa27e18455258575 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aa27e18455258575 && $this->initializer5614d2aa27e18455258575->__invoke($this->valueHolder5614d2aa27e18071537076, $this, '__get', array('name' => $name), $this->initializer5614d2aa27e18455258575);

        return $this->valueHolder5614d2aa27e18071537076->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aa27e18455258575 && $this->initializer5614d2aa27e18455258575->__invoke($this->valueHolder5614d2aa27e18071537076, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aa27e18455258575);

        $this->valueHolder5614d2aa27e18071537076->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aa27e18455258575 && $this->initializer5614d2aa27e18455258575->__invoke($this->valueHolder5614d2aa27e18071537076, $this, '__isset', array('name' => $name), $this->initializer5614d2aa27e18455258575);

        return isset($this->valueHolder5614d2aa27e18071537076->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aa27e18455258575 && $this->initializer5614d2aa27e18455258575->__invoke($this->valueHolder5614d2aa27e18071537076, $this, '__unset', array('name' => $name), $this->initializer5614d2aa27e18455258575);

        unset($this->valueHolder5614d2aa27e18071537076->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aa27e18455258575 && $this->initializer5614d2aa27e18455258575->__invoke($this->valueHolder5614d2aa27e18071537076, $this, '__clone', array(), $this->initializer5614d2aa27e18455258575);

        $this->valueHolder5614d2aa27e18071537076 = clone $this->valueHolder5614d2aa27e18071537076;
    }

    public function __sleep()
    {
        $this->initializer5614d2aa27e18455258575 && $this->initializer5614d2aa27e18455258575->__invoke($this->valueHolder5614d2aa27e18071537076, $this, '__sleep', array(), $this->initializer5614d2aa27e18455258575);

        return array('valueHolder5614d2aa27e18071537076');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aa27e18455258575 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aa27e18455258575;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aa27e18455258575 && $this->initializer5614d2aa27e18455258575->__invoke($this->valueHolder5614d2aa27e18071537076, $this, 'initializeProxy', array(), $this->initializer5614d2aa27e18455258575);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aa27e18071537076;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aa27e18071537076;
    }


}

class OroBundleEmailBundleEventListenerEntityListener_000000002e47e1ba00000000e28c9ac7 extends \Oro\Bundle\EmailBundle\EventListener\EntityListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aa2b4c9618402081 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aa2b4c9369743772 = null;

    /**
     * {@inheritDoc}
     */
    public function onFlush(\Doctrine\ORM\Event\OnFlushEventArgs $event)
    {
        $this->initializer5614d2aa2b4c9369743772 && $this->initializer5614d2aa2b4c9369743772->__invoke($this->valueHolder5614d2aa2b4c9618402081, $this, 'onFlush', array('event' => $event), $this->initializer5614d2aa2b4c9369743772);

        return $this->valueHolder5614d2aa2b4c9618402081->onFlush($event);
    }

    /**
     * {@inheritDoc}
     */
    public function postFlush(\Doctrine\ORM\Event\PostFlushEventArgs $event)
    {
        $this->initializer5614d2aa2b4c9369743772 && $this->initializer5614d2aa2b4c9369743772->__invoke($this->valueHolder5614d2aa2b4c9618402081, $this, 'postFlush', array('event' => $event), $this->initializer5614d2aa2b4c9369743772);

        return $this->valueHolder5614d2aa2b4c9618402081->postFlush($event);
    }

    /**
     * {@inheritDoc}
     */
    public function postRemove(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2aa2b4c9369743772 && $this->initializer5614d2aa2b4c9369743772->__invoke($this->valueHolder5614d2aa2b4c9618402081, $this, 'postRemove', array('args' => $args), $this->initializer5614d2aa2b4c9369743772);

        return $this->valueHolder5614d2aa2b4c9618402081->postRemove($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aa2b4c9369743772 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aa2b4c9369743772 && $this->initializer5614d2aa2b4c9369743772->__invoke($this->valueHolder5614d2aa2b4c9618402081, $this, '__get', array('name' => $name), $this->initializer5614d2aa2b4c9369743772);

        return $this->valueHolder5614d2aa2b4c9618402081->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aa2b4c9369743772 && $this->initializer5614d2aa2b4c9369743772->__invoke($this->valueHolder5614d2aa2b4c9618402081, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aa2b4c9369743772);

        $this->valueHolder5614d2aa2b4c9618402081->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aa2b4c9369743772 && $this->initializer5614d2aa2b4c9369743772->__invoke($this->valueHolder5614d2aa2b4c9618402081, $this, '__isset', array('name' => $name), $this->initializer5614d2aa2b4c9369743772);

        return isset($this->valueHolder5614d2aa2b4c9618402081->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aa2b4c9369743772 && $this->initializer5614d2aa2b4c9369743772->__invoke($this->valueHolder5614d2aa2b4c9618402081, $this, '__unset', array('name' => $name), $this->initializer5614d2aa2b4c9369743772);

        unset($this->valueHolder5614d2aa2b4c9618402081->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aa2b4c9369743772 && $this->initializer5614d2aa2b4c9369743772->__invoke($this->valueHolder5614d2aa2b4c9618402081, $this, '__clone', array(), $this->initializer5614d2aa2b4c9369743772);

        $this->valueHolder5614d2aa2b4c9618402081 = clone $this->valueHolder5614d2aa2b4c9618402081;
    }

    public function __sleep()
    {
        $this->initializer5614d2aa2b4c9369743772 && $this->initializer5614d2aa2b4c9369743772->__invoke($this->valueHolder5614d2aa2b4c9618402081, $this, '__sleep', array(), $this->initializer5614d2aa2b4c9369743772);

        return array('valueHolder5614d2aa2b4c9618402081');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aa2b4c9369743772 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aa2b4c9369743772;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aa2b4c9369743772 && $this->initializer5614d2aa2b4c9369743772->__invoke($this->valueHolder5614d2aa2b4c9618402081, $this, 'initializeProxy', array(), $this->initializer5614d2aa2b4c9369743772);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aa2b4c9618402081;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aa2b4c9618402081;
    }


}

class OroBundleEmailBundleEventListenerAutoResponseListener_000000002e47e18700000000e28c9ac7 extends \Oro\Bundle\EmailBundle\EventListener\AutoResponseListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aa306d2774966403 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aa306d2937466226 = null;

    /**
     * {@inheritDoc}
     */
    public function postFlush(\Doctrine\ORM\Event\PostFlushEventArgs $args)
    {
        $this->initializer5614d2aa306d2937466226 && $this->initializer5614d2aa306d2937466226->__invoke($this->valueHolder5614d2aa306d2774966403, $this, 'postFlush', array('args' => $args), $this->initializer5614d2aa306d2937466226);

        return $this->valueHolder5614d2aa306d2774966403->postFlush($args);
    }

    /**
     * {@inheritDoc}
     */
    public function onFlush(\Doctrine\ORM\Event\OnFlushEventArgs $args)
    {
        $this->initializer5614d2aa306d2937466226 && $this->initializer5614d2aa306d2937466226->__invoke($this->valueHolder5614d2aa306d2774966403, $this, 'onFlush', array('args' => $args), $this->initializer5614d2aa306d2937466226);

        return $this->valueHolder5614d2aa306d2774966403->onFlush($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aa306d2937466226 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aa306d2937466226 && $this->initializer5614d2aa306d2937466226->__invoke($this->valueHolder5614d2aa306d2774966403, $this, '__get', array('name' => $name), $this->initializer5614d2aa306d2937466226);

        return $this->valueHolder5614d2aa306d2774966403->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aa306d2937466226 && $this->initializer5614d2aa306d2937466226->__invoke($this->valueHolder5614d2aa306d2774966403, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aa306d2937466226);

        $this->valueHolder5614d2aa306d2774966403->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aa306d2937466226 && $this->initializer5614d2aa306d2937466226->__invoke($this->valueHolder5614d2aa306d2774966403, $this, '__isset', array('name' => $name), $this->initializer5614d2aa306d2937466226);

        return isset($this->valueHolder5614d2aa306d2774966403->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aa306d2937466226 && $this->initializer5614d2aa306d2937466226->__invoke($this->valueHolder5614d2aa306d2774966403, $this, '__unset', array('name' => $name), $this->initializer5614d2aa306d2937466226);

        unset($this->valueHolder5614d2aa306d2774966403->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aa306d2937466226 && $this->initializer5614d2aa306d2937466226->__invoke($this->valueHolder5614d2aa306d2774966403, $this, '__clone', array(), $this->initializer5614d2aa306d2937466226);

        $this->valueHolder5614d2aa306d2774966403 = clone $this->valueHolder5614d2aa306d2774966403;
    }

    public function __sleep()
    {
        $this->initializer5614d2aa306d2937466226 && $this->initializer5614d2aa306d2937466226->__invoke($this->valueHolder5614d2aa306d2774966403, $this, '__sleep', array(), $this->initializer5614d2aa306d2937466226);

        return array('valueHolder5614d2aa306d2774966403');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aa306d2937466226 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aa306d2937466226;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aa306d2937466226 && $this->initializer5614d2aa306d2937466226->__invoke($this->valueHolder5614d2aa306d2774966403, $this, 'initializeProxy', array(), $this->initializer5614d2aa306d2937466226);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aa306d2774966403;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aa306d2774966403;
    }


}

class OroBundleEmailBundleProviderEmailRenderer_000000002e47e19b00000000e28c9ac7 extends \Oro\Bundle\EmailBundle\Provider\EmailRenderer implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aa33d83825998565 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aa3416b570180183 = null;

    /**
     * {@inheritDoc}
     */
    public function compileMessage(\Oro\Bundle\EmailBundle\Model\EmailTemplateInterface $template, array $templateParams = array())
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'compileMessage', array('template' => $template, 'templateParams' => $templateParams), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->compileMessage($template, $templateParams);
    }

    /**
     * {@inheritDoc}
     */
    public function renderWithDefaultFilters($content, array $templateParams = array())
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'renderWithDefaultFilters', array('content' => $content, 'templateParams' => $templateParams), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->renderWithDefaultFilters($content, $templateParams);
    }

    /**
     * {@inheritDoc}
     */
    public function compilePreview(\Oro\Bundle\EmailBundle\Entity\EmailTemplate $entity, $locale = null)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'compilePreview', array('entity' => $entity, 'locale' => $locale), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->compilePreview($entity, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getBaseTemplateClass()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getBaseTemplateClass', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getBaseTemplateClass();
    }

    /**
     * {@inheritDoc}
     */
    public function setBaseTemplateClass($class)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'setBaseTemplateClass', array('class' => $class), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->setBaseTemplateClass($class);
    }

    /**
     * {@inheritDoc}
     */
    public function enableDebug()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'enableDebug', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->enableDebug();
    }

    /**
     * {@inheritDoc}
     */
    public function disableDebug()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'disableDebug', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->disableDebug();
    }

    /**
     * {@inheritDoc}
     */
    public function isDebug()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'isDebug', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->isDebug();
    }

    /**
     * {@inheritDoc}
     */
    public function enableAutoReload()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'enableAutoReload', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->enableAutoReload();
    }

    /**
     * {@inheritDoc}
     */
    public function disableAutoReload()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'disableAutoReload', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->disableAutoReload();
    }

    /**
     * {@inheritDoc}
     */
    public function isAutoReload()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'isAutoReload', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->isAutoReload();
    }

    /**
     * {@inheritDoc}
     */
    public function enableStrictVariables()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'enableStrictVariables', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->enableStrictVariables();
    }

    /**
     * {@inheritDoc}
     */
    public function disableStrictVariables()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'disableStrictVariables', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->disableStrictVariables();
    }

    /**
     * {@inheritDoc}
     */
    public function isStrictVariables()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'isStrictVariables', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->isStrictVariables();
    }

    /**
     * {@inheritDoc}
     */
    public function getCache()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getCache', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getCache();
    }

    /**
     * {@inheritDoc}
     */
    public function setCache($cache)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'setCache', array('cache' => $cache), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->setCache($cache);
    }

    /**
     * {@inheritDoc}
     */
    public function getCacheFilename($name)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getCacheFilename', array('name' => $name), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getCacheFilename($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplateClass($name, $index = null)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getTemplateClass', array('name' => $name, 'index' => $index), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getTemplateClass($name, $index);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplateClassPrefix()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getTemplateClassPrefix', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getTemplateClassPrefix();
    }

    /**
     * {@inheritDoc}
     */
    public function render($name, array $context = array())
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'render', array('name' => $name, 'context' => $context), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->render($name, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function display($name, array $context = array())
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'display', array('name' => $name, 'context' => $context), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->display($name, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function loadTemplate($name, $index = null)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'loadTemplate', array('name' => $name, 'index' => $index), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->loadTemplate($name, $index);
    }

    /**
     * {@inheritDoc}
     */
    public function createTemplate($template)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'createTemplate', array('template' => $template), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->createTemplate($template);
    }

    /**
     * {@inheritDoc}
     */
    public function isTemplateFresh($name, $time)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'isTemplateFresh', array('name' => $name, 'time' => $time), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->isTemplateFresh($name, $time);
    }

    /**
     * {@inheritDoc}
     */
    public function resolveTemplate($names)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'resolveTemplate', array('names' => $names), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->resolveTemplate($names);
    }

    /**
     * {@inheritDoc}
     */
    public function clearTemplateCache()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'clearTemplateCache', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->clearTemplateCache();
    }

    /**
     * {@inheritDoc}
     */
    public function clearCacheFiles()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'clearCacheFiles', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->clearCacheFiles();
    }

    /**
     * {@inheritDoc}
     */
    public function getLexer()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getLexer', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getLexer();
    }

    /**
     * {@inheritDoc}
     */
    public function setLexer(\Twig_LexerInterface $lexer)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'setLexer', array('lexer' => $lexer), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->setLexer($lexer);
    }

    /**
     * {@inheritDoc}
     */
    public function tokenize($source, $name = null)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'tokenize', array('source' => $source, 'name' => $name), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->tokenize($source, $name);
    }

    /**
     * {@inheritDoc}
     */
    public function getParser()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getParser', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getParser();
    }

    /**
     * {@inheritDoc}
     */
    public function setParser(\Twig_ParserInterface $parser)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'setParser', array('parser' => $parser), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->setParser($parser);
    }

    /**
     * {@inheritDoc}
     */
    public function parse(\Twig_TokenStream $stream)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'parse', array('stream' => $stream), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->parse($stream);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompiler()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getCompiler', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getCompiler();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompiler(\Twig_CompilerInterface $compiler)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'setCompiler', array('compiler' => $compiler), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->setCompiler($compiler);
    }

    /**
     * {@inheritDoc}
     */
    public function compile(\Twig_NodeInterface $node)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'compile', array('node' => $node), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->compile($node);
    }

    /**
     * {@inheritDoc}
     */
    public function compileSource($source, $name = null)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'compileSource', array('source' => $source, 'name' => $name), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->compileSource($source, $name);
    }

    /**
     * {@inheritDoc}
     */
    public function setLoader(\Twig_LoaderInterface $loader)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'setLoader', array('loader' => $loader), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->setLoader($loader);
    }

    /**
     * {@inheritDoc}
     */
    public function getLoader()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getLoader', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getLoader();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharset($charset)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'setCharset', array('charset' => $charset), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->setCharset($charset);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharset()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getCharset', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getCharset();
    }

    /**
     * {@inheritDoc}
     */
    public function initRuntime()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'initRuntime', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->initRuntime();
    }

    /**
     * {@inheritDoc}
     */
    public function hasExtension($name)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'hasExtension', array('name' => $name), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->hasExtension($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtension($name)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getExtension', array('name' => $name), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getExtension($name);
    }

    /**
     * {@inheritDoc}
     */
    public function addExtension(\Twig_ExtensionInterface $extension)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'addExtension', array('extension' => $extension), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->addExtension($extension);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExtension($name)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'removeExtension', array('name' => $name), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->removeExtension($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setExtensions(array $extensions)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'setExtensions', array('extensions' => $extensions), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->setExtensions($extensions);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtensions()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getExtensions', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getExtensions();
    }

    /**
     * {@inheritDoc}
     */
    public function addTokenParser(\Twig_TokenParserInterface $parser)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'addTokenParser', array('parser' => $parser), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->addTokenParser($parser);
    }

    /**
     * {@inheritDoc}
     */
    public function getTokenParsers()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getTokenParsers', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getTokenParsers();
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getTags', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function addNodeVisitor(\Twig_NodeVisitorInterface $visitor)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'addNodeVisitor', array('visitor' => $visitor), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->addNodeVisitor($visitor);
    }

    /**
     * {@inheritDoc}
     */
    public function getNodeVisitors()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getNodeVisitors', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getNodeVisitors();
    }

    /**
     * {@inheritDoc}
     */
    public function addFilter($name, $filter = null)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'addFilter', array('name' => $name, 'filter' => $filter), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->addFilter($name, $filter);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilter($name)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getFilter', array('name' => $name), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getFilter($name);
    }

    /**
     * {@inheritDoc}
     */
    public function registerUndefinedFilterCallback($callable)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'registerUndefinedFilterCallback', array('callable' => $callable), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->registerUndefinedFilterCallback($callable);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilters()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getFilters', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getFilters();
    }

    /**
     * {@inheritDoc}
     */
    public function addTest($name, $test = null)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'addTest', array('name' => $name, 'test' => $test), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->addTest($name, $test);
    }

    /**
     * {@inheritDoc}
     */
    public function getTests()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getTests', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getTests();
    }

    /**
     * {@inheritDoc}
     */
    public function getTest($name)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getTest', array('name' => $name), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getTest($name);
    }

    /**
     * {@inheritDoc}
     */
    public function addFunction($name, $function = null)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'addFunction', array('name' => $name, 'function' => $function), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->addFunction($name, $function);
    }

    /**
     * {@inheritDoc}
     */
    public function getFunction($name)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getFunction', array('name' => $name), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getFunction($name);
    }

    /**
     * {@inheritDoc}
     */
    public function registerUndefinedFunctionCallback($callable)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'registerUndefinedFunctionCallback', array('callable' => $callable), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->registerUndefinedFunctionCallback($callable);
    }

    /**
     * {@inheritDoc}
     */
    public function getFunctions()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getFunctions', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getFunctions();
    }

    /**
     * {@inheritDoc}
     */
    public function addGlobal($name, $value)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'addGlobal', array('name' => $name, 'value' => $value), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->addGlobal($name, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function getGlobals()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getGlobals', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getGlobals();
    }

    /**
     * {@inheritDoc}
     */
    public function mergeGlobals(array $context)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'mergeGlobals', array('context' => $context), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->mergeGlobals($context);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnaryOperators()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getUnaryOperators', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getUnaryOperators();
    }

    /**
     * {@inheritDoc}
     */
    public function getBinaryOperators()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'getBinaryOperators', array(), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->getBinaryOperators();
    }

    /**
     * {@inheritDoc}
     */
    public function computeAlternatives($name, $items)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'computeAlternatives', array('name' => $name, 'items' => $items), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->computeAlternatives($name, $items);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aa3416b570180183 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, '__get', array('name' => $name), $this->initializer5614d2aa3416b570180183);

        return $this->valueHolder5614d2aa33d83825998565->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aa3416b570180183);

        $this->valueHolder5614d2aa33d83825998565->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, '__isset', array('name' => $name), $this->initializer5614d2aa3416b570180183);

        return isset($this->valueHolder5614d2aa33d83825998565->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, '__unset', array('name' => $name), $this->initializer5614d2aa3416b570180183);

        unset($this->valueHolder5614d2aa33d83825998565->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, '__clone', array(), $this->initializer5614d2aa3416b570180183);

        $this->valueHolder5614d2aa33d83825998565 = clone $this->valueHolder5614d2aa33d83825998565;
    }

    public function __sleep()
    {
        $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, '__sleep', array(), $this->initializer5614d2aa3416b570180183);

        return array('valueHolder5614d2aa33d83825998565');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aa3416b570180183 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aa3416b570180183;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aa3416b570180183 && $this->initializer5614d2aa3416b570180183->__invoke($this->valueHolder5614d2aa33d83825998565, $this, 'initializeProxy', array(), $this->initializer5614d2aa3416b570180183);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aa33d83825998565;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aa33d83825998565;
    }


}

class OroBundleEmailBundleProviderEntityVariablesProvider_000000002e47e1e100000000e28c9ac7 extends \Oro\Bundle\EmailBundle\Provider\EntityVariablesProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aadbd2a541396348 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aadbd2a955162800 = null;

    /**
     * {@inheritDoc}
     */
    public function getVariableDefinitions($entityClass = null)
    {
        $this->initializer5614d2aadbd2a955162800 && $this->initializer5614d2aadbd2a955162800->__invoke($this->valueHolder5614d2aadbd2a541396348, $this, 'getVariableDefinitions', array('entityClass' => $entityClass), $this->initializer5614d2aadbd2a955162800);

        return $this->valueHolder5614d2aadbd2a541396348->getVariableDefinitions($entityClass);
    }

    /**
     * {@inheritDoc}
     */
    public function getVariableGetters($entityClass = null)
    {
        $this->initializer5614d2aadbd2a955162800 && $this->initializer5614d2aadbd2a955162800->__invoke($this->valueHolder5614d2aadbd2a541396348, $this, 'getVariableGetters', array('entityClass' => $entityClass), $this->initializer5614d2aadbd2a955162800);

        return $this->valueHolder5614d2aadbd2a541396348->getVariableGetters($entityClass);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aadbd2a955162800 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aadbd2a955162800 && $this->initializer5614d2aadbd2a955162800->__invoke($this->valueHolder5614d2aadbd2a541396348, $this, '__get', array('name' => $name), $this->initializer5614d2aadbd2a955162800);

        return $this->valueHolder5614d2aadbd2a541396348->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aadbd2a955162800 && $this->initializer5614d2aadbd2a955162800->__invoke($this->valueHolder5614d2aadbd2a541396348, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aadbd2a955162800);

        $this->valueHolder5614d2aadbd2a541396348->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aadbd2a955162800 && $this->initializer5614d2aadbd2a955162800->__invoke($this->valueHolder5614d2aadbd2a541396348, $this, '__isset', array('name' => $name), $this->initializer5614d2aadbd2a955162800);

        return isset($this->valueHolder5614d2aadbd2a541396348->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aadbd2a955162800 && $this->initializer5614d2aadbd2a955162800->__invoke($this->valueHolder5614d2aadbd2a541396348, $this, '__unset', array('name' => $name), $this->initializer5614d2aadbd2a955162800);

        unset($this->valueHolder5614d2aadbd2a541396348->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aadbd2a955162800 && $this->initializer5614d2aadbd2a955162800->__invoke($this->valueHolder5614d2aadbd2a541396348, $this, '__clone', array(), $this->initializer5614d2aadbd2a955162800);

        $this->valueHolder5614d2aadbd2a541396348 = clone $this->valueHolder5614d2aadbd2a541396348;
    }

    public function __sleep()
    {
        $this->initializer5614d2aadbd2a955162800 && $this->initializer5614d2aadbd2a955162800->__invoke($this->valueHolder5614d2aadbd2a541396348, $this, '__sleep', array(), $this->initializer5614d2aadbd2a955162800);

        return array('valueHolder5614d2aadbd2a541396348');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aadbd2a955162800 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aadbd2a955162800;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aadbd2a955162800 && $this->initializer5614d2aadbd2a955162800->__invoke($this->valueHolder5614d2aadbd2a541396348, $this, 'initializeProxy', array(), $this->initializer5614d2aadbd2a955162800);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aadbd2a541396348;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aadbd2a541396348;
    }


}

class OroBundleEmailBundleProviderSystemVariablesProvider_000000002e47e1eb00000000e28c9ac7 extends \Oro\Bundle\EmailBundle\Provider\SystemVariablesProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aadf7c3973838568 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aadf7c3213026951 = null;

    /**
     * {@inheritDoc}
     */
    public function getVariableDefinitions()
    {
        $this->initializer5614d2aadf7c3213026951 && $this->initializer5614d2aadf7c3213026951->__invoke($this->valueHolder5614d2aadf7c3973838568, $this, 'getVariableDefinitions', array(), $this->initializer5614d2aadf7c3213026951);

        return $this->valueHolder5614d2aadf7c3973838568->getVariableDefinitions();
    }

    /**
     * {@inheritDoc}
     */
    public function getVariableValues()
    {
        $this->initializer5614d2aadf7c3213026951 && $this->initializer5614d2aadf7c3213026951->__invoke($this->valueHolder5614d2aadf7c3973838568, $this, 'getVariableValues', array(), $this->initializer5614d2aadf7c3213026951);

        return $this->valueHolder5614d2aadf7c3973838568->getVariableValues();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aadf7c3213026951 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aadf7c3213026951 && $this->initializer5614d2aadf7c3213026951->__invoke($this->valueHolder5614d2aadf7c3973838568, $this, '__get', array('name' => $name), $this->initializer5614d2aadf7c3213026951);

        return $this->valueHolder5614d2aadf7c3973838568->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aadf7c3213026951 && $this->initializer5614d2aadf7c3213026951->__invoke($this->valueHolder5614d2aadf7c3973838568, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aadf7c3213026951);

        $this->valueHolder5614d2aadf7c3973838568->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aadf7c3213026951 && $this->initializer5614d2aadf7c3213026951->__invoke($this->valueHolder5614d2aadf7c3973838568, $this, '__isset', array('name' => $name), $this->initializer5614d2aadf7c3213026951);

        return isset($this->valueHolder5614d2aadf7c3973838568->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aadf7c3213026951 && $this->initializer5614d2aadf7c3213026951->__invoke($this->valueHolder5614d2aadf7c3973838568, $this, '__unset', array('name' => $name), $this->initializer5614d2aadf7c3213026951);

        unset($this->valueHolder5614d2aadf7c3973838568->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aadf7c3213026951 && $this->initializer5614d2aadf7c3213026951->__invoke($this->valueHolder5614d2aadf7c3973838568, $this, '__clone', array(), $this->initializer5614d2aadf7c3213026951);

        $this->valueHolder5614d2aadf7c3973838568 = clone $this->valueHolder5614d2aadf7c3973838568;
    }

    public function __sleep()
    {
        $this->initializer5614d2aadf7c3213026951 && $this->initializer5614d2aadf7c3213026951->__invoke($this->valueHolder5614d2aadf7c3973838568, $this, '__sleep', array(), $this->initializer5614d2aadf7c3213026951);

        return array('valueHolder5614d2aadf7c3973838568');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aadf7c3213026951 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aadf7c3213026951;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aadf7c3213026951 && $this->initializer5614d2aadf7c3213026951->__invoke($this->valueHolder5614d2aadf7c3973838568, $this, 'initializeProxy', array(), $this->initializer5614d2aadf7c3213026951);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aadf7c3973838568;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aadf7c3973838568;
    }


}

class OroBundleEmailBundleProviderLoggedUserVariablesProvider_000000002e47e1f700000000e28c9ac7 extends \Oro\Bundle\EmailBundle\Provider\LoggedUserVariablesProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aae325c626395292 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aae325c836946569 = null;

    /**
     * {@inheritDoc}
     */
    public function getVariableDefinitions()
    {
        $this->initializer5614d2aae325c836946569 && $this->initializer5614d2aae325c836946569->__invoke($this->valueHolder5614d2aae325c626395292, $this, 'getVariableDefinitions', array(), $this->initializer5614d2aae325c836946569);

        return $this->valueHolder5614d2aae325c626395292->getVariableDefinitions();
    }

    /**
     * {@inheritDoc}
     */
    public function getVariableValues()
    {
        $this->initializer5614d2aae325c836946569 && $this->initializer5614d2aae325c836946569->__invoke($this->valueHolder5614d2aae325c626395292, $this, 'getVariableValues', array(), $this->initializer5614d2aae325c836946569);

        return $this->valueHolder5614d2aae325c626395292->getVariableValues();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aae325c836946569 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aae325c836946569 && $this->initializer5614d2aae325c836946569->__invoke($this->valueHolder5614d2aae325c626395292, $this, '__get', array('name' => $name), $this->initializer5614d2aae325c836946569);

        return $this->valueHolder5614d2aae325c626395292->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aae325c836946569 && $this->initializer5614d2aae325c836946569->__invoke($this->valueHolder5614d2aae325c626395292, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aae325c836946569);

        $this->valueHolder5614d2aae325c626395292->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aae325c836946569 && $this->initializer5614d2aae325c836946569->__invoke($this->valueHolder5614d2aae325c626395292, $this, '__isset', array('name' => $name), $this->initializer5614d2aae325c836946569);

        return isset($this->valueHolder5614d2aae325c626395292->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aae325c836946569 && $this->initializer5614d2aae325c836946569->__invoke($this->valueHolder5614d2aae325c626395292, $this, '__unset', array('name' => $name), $this->initializer5614d2aae325c836946569);

        unset($this->valueHolder5614d2aae325c626395292->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aae325c836946569 && $this->initializer5614d2aae325c836946569->__invoke($this->valueHolder5614d2aae325c626395292, $this, '__clone', array(), $this->initializer5614d2aae325c836946569);

        $this->valueHolder5614d2aae325c626395292 = clone $this->valueHolder5614d2aae325c626395292;
    }

    public function __sleep()
    {
        $this->initializer5614d2aae325c836946569 && $this->initializer5614d2aae325c836946569->__invoke($this->valueHolder5614d2aae325c626395292, $this, '__sleep', array(), $this->initializer5614d2aae325c836946569);

        return array('valueHolder5614d2aae325c626395292');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aae325c836946569 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aae325c836946569;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aae325c836946569 && $this->initializer5614d2aae325c836946569->__invoke($this->valueHolder5614d2aae325c626395292, $this, 'initializeProxy', array(), $this->initializer5614d2aae325c836946569);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aae325c626395292;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aae325c626395292;
    }


}

class OroBundleEmailBundleEventListenerMailboxProcessTriggerListener_000000002e47e2ba00000000e28c9ac7 extends \Oro\Bundle\EmailBundle\EventListener\MailboxProcessTriggerListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aae613d584455147 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aae6525515198723 = null;

    /**
     * {@inheritDoc}
     */
    public function postFlush(\Doctrine\ORM\Event\PostFlushEventArgs $args)
    {
        $this->initializer5614d2aae6525515198723 && $this->initializer5614d2aae6525515198723->__invoke($this->valueHolder5614d2aae613d584455147, $this, 'postFlush', array('args' => $args), $this->initializer5614d2aae6525515198723);

        return $this->valueHolder5614d2aae613d584455147->postFlush($args);
    }

    /**
     * {@inheritDoc}
     */
    public function onFlush(\Doctrine\ORM\Event\OnFlushEventArgs $args)
    {
        $this->initializer5614d2aae6525515198723 && $this->initializer5614d2aae6525515198723->__invoke($this->valueHolder5614d2aae613d584455147, $this, 'onFlush', array('args' => $args), $this->initializer5614d2aae6525515198723);

        return $this->valueHolder5614d2aae613d584455147->onFlush($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aae6525515198723 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aae6525515198723 && $this->initializer5614d2aae6525515198723->__invoke($this->valueHolder5614d2aae613d584455147, $this, '__get', array('name' => $name), $this->initializer5614d2aae6525515198723);

        return $this->valueHolder5614d2aae613d584455147->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aae6525515198723 && $this->initializer5614d2aae6525515198723->__invoke($this->valueHolder5614d2aae613d584455147, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aae6525515198723);

        $this->valueHolder5614d2aae613d584455147->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aae6525515198723 && $this->initializer5614d2aae6525515198723->__invoke($this->valueHolder5614d2aae613d584455147, $this, '__isset', array('name' => $name), $this->initializer5614d2aae6525515198723);

        return isset($this->valueHolder5614d2aae613d584455147->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aae6525515198723 && $this->initializer5614d2aae6525515198723->__invoke($this->valueHolder5614d2aae613d584455147, $this, '__unset', array('name' => $name), $this->initializer5614d2aae6525515198723);

        unset($this->valueHolder5614d2aae613d584455147->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aae6525515198723 && $this->initializer5614d2aae6525515198723->__invoke($this->valueHolder5614d2aae613d584455147, $this, '__clone', array(), $this->initializer5614d2aae6525515198723);

        $this->valueHolder5614d2aae613d584455147 = clone $this->valueHolder5614d2aae613d584455147;
    }

    public function __sleep()
    {
        $this->initializer5614d2aae6525515198723 && $this->initializer5614d2aae6525515198723->__invoke($this->valueHolder5614d2aae613d584455147, $this, '__sleep', array(), $this->initializer5614d2aae6525515198723);

        return array('valueHolder5614d2aae613d584455147');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aae6525515198723 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aae6525515198723;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aae6525515198723 && $this->initializer5614d2aae6525515198723->__invoke($this->valueHolder5614d2aae613d584455147, $this, 'initializeProxy', array(), $this->initializer5614d2aae6525515198723);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aae613d584455147;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aae613d584455147;
    }


}

class OroBundleUserBundleEventListenerRoleListener_000000002e47e37000000000e28c9ac7 extends \Oro\Bundle\UserBundle\EventListener\RoleListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aae9fbe019762532 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aaeab76676208067 = null;

    /**
     * {@inheritDoc}
     */
    public function preUpdate(\Doctrine\ORM\Event\PreUpdateEventArgs $eventArgs)
    {
        $this->initializer5614d2aaeab76676208067 && $this->initializer5614d2aaeab76676208067->__invoke($this->valueHolder5614d2aae9fbe019762532, $this, 'preUpdate', array('eventArgs' => $eventArgs), $this->initializer5614d2aaeab76676208067);

        return $this->valueHolder5614d2aae9fbe019762532->preUpdate($eventArgs);
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2aaeab76676208067 && $this->initializer5614d2aaeab76676208067->__invoke($this->valueHolder5614d2aae9fbe019762532, $this, 'prePersist', array('args' => $args), $this->initializer5614d2aaeab76676208067);

        return $this->valueHolder5614d2aae9fbe019762532->prePersist($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aaeab76676208067 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aaeab76676208067 && $this->initializer5614d2aaeab76676208067->__invoke($this->valueHolder5614d2aae9fbe019762532, $this, '__get', array('name' => $name), $this->initializer5614d2aaeab76676208067);

        return $this->valueHolder5614d2aae9fbe019762532->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aaeab76676208067 && $this->initializer5614d2aaeab76676208067->__invoke($this->valueHolder5614d2aae9fbe019762532, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aaeab76676208067);

        $this->valueHolder5614d2aae9fbe019762532->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aaeab76676208067 && $this->initializer5614d2aaeab76676208067->__invoke($this->valueHolder5614d2aae9fbe019762532, $this, '__isset', array('name' => $name), $this->initializer5614d2aaeab76676208067);

        return isset($this->valueHolder5614d2aae9fbe019762532->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aaeab76676208067 && $this->initializer5614d2aaeab76676208067->__invoke($this->valueHolder5614d2aae9fbe019762532, $this, '__unset', array('name' => $name), $this->initializer5614d2aaeab76676208067);

        unset($this->valueHolder5614d2aae9fbe019762532->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aaeab76676208067 && $this->initializer5614d2aaeab76676208067->__invoke($this->valueHolder5614d2aae9fbe019762532, $this, '__clone', array(), $this->initializer5614d2aaeab76676208067);

        $this->valueHolder5614d2aae9fbe019762532 = clone $this->valueHolder5614d2aae9fbe019762532;
    }

    public function __sleep()
    {
        $this->initializer5614d2aaeab76676208067 && $this->initializer5614d2aaeab76676208067->__invoke($this->valueHolder5614d2aae9fbe019762532, $this, '__sleep', array(), $this->initializer5614d2aaeab76676208067);

        return array('valueHolder5614d2aae9fbe019762532');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aaeab76676208067 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aaeab76676208067;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aaeab76676208067 && $this->initializer5614d2aaeab76676208067->__invoke($this->valueHolder5614d2aae9fbe019762532, $this, 'initializeProxy', array(), $this->initializer5614d2aaeab76676208067);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aae9fbe019762532;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aae9fbe019762532;
    }


}

class OroBundleUserBundleAutocompleteUserAclHandler_000000002e47d23200000000e28c9ac7 extends \Oro\Bundle\UserBundle\Autocomplete\UserAclHandler implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ab01130952058073 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ab01130178122228 = null;

    /**
     * {@inheritDoc}
     */
    public function search($query, $page, $perPage, $searchById = false)
    {
        $this->initializer5614d2ab01130178122228 && $this->initializer5614d2ab01130178122228->__invoke($this->valueHolder5614d2ab01130952058073, $this, 'search', array('query' => $query, 'page' => $page, 'perPage' => $perPage, 'searchById' => $searchById), $this->initializer5614d2ab01130178122228);

        return $this->valueHolder5614d2ab01130952058073->search($query, $page, $perPage, $searchById);
    }

    /**
     * {@inheritDoc}
     */
    public function getProperties()
    {
        $this->initializer5614d2ab01130178122228 && $this->initializer5614d2ab01130178122228->__invoke($this->valueHolder5614d2ab01130952058073, $this, 'getProperties', array(), $this->initializer5614d2ab01130178122228);

        return $this->valueHolder5614d2ab01130952058073->getProperties();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityName()
    {
        $this->initializer5614d2ab01130178122228 && $this->initializer5614d2ab01130178122228->__invoke($this->valueHolder5614d2ab01130952058073, $this, 'getEntityName', array(), $this->initializer5614d2ab01130178122228);

        return $this->valueHolder5614d2ab01130952058073->getEntityName();
    }

    /**
     * {@inheritDoc}
     */
    public function setProperties(array $properties)
    {
        $this->initializer5614d2ab01130178122228 && $this->initializer5614d2ab01130178122228->__invoke($this->valueHolder5614d2ab01130952058073, $this, 'setProperties', array('properties' => $properties), $this->initializer5614d2ab01130178122228);

        return $this->valueHolder5614d2ab01130952058073->setProperties($properties);
    }

    /**
     * {@inheritDoc}
     */
    public function setEntityNameResolver(\Oro\Bundle\EntityBundle\Provider\EntityNameResolver $entityNameResolver)
    {
        $this->initializer5614d2ab01130178122228 && $this->initializer5614d2ab01130178122228->__invoke($this->valueHolder5614d2ab01130952058073, $this, 'setEntityNameResolver', array('entityNameResolver' => $entityNameResolver), $this->initializer5614d2ab01130178122228);

        return $this->valueHolder5614d2ab01130952058073->setEntityNameResolver($entityNameResolver);
    }

    /**
     * {@inheritDoc}
     */
    public function convertItem($user)
    {
        $this->initializer5614d2ab01130178122228 && $this->initializer5614d2ab01130178122228->__invoke($this->valueHolder5614d2ab01130952058073, $this, 'convertItem', array('user' => $user), $this->initializer5614d2ab01130178122228);

        return $this->valueHolder5614d2ab01130952058073->convertItem($user);
    }

    /**
     * {@inheritDoc}
     */
    public function decodeClassName($className)
    {
        $this->initializer5614d2ab01130178122228 && $this->initializer5614d2ab01130178122228->__invoke($this->valueHolder5614d2ab01130952058073, $this, 'decodeClassName', array('className' => $className), $this->initializer5614d2ab01130178122228);

        return $this->valueHolder5614d2ab01130952058073->decodeClassName($className);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ab01130178122228 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ab01130178122228 && $this->initializer5614d2ab01130178122228->__invoke($this->valueHolder5614d2ab01130952058073, $this, '__get', array('name' => $name), $this->initializer5614d2ab01130178122228);

        return $this->valueHolder5614d2ab01130952058073->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ab01130178122228 && $this->initializer5614d2ab01130178122228->__invoke($this->valueHolder5614d2ab01130952058073, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ab01130178122228);

        $this->valueHolder5614d2ab01130952058073->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ab01130178122228 && $this->initializer5614d2ab01130178122228->__invoke($this->valueHolder5614d2ab01130952058073, $this, '__isset', array('name' => $name), $this->initializer5614d2ab01130178122228);

        return isset($this->valueHolder5614d2ab01130952058073->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ab01130178122228 && $this->initializer5614d2ab01130178122228->__invoke($this->valueHolder5614d2ab01130952058073, $this, '__unset', array('name' => $name), $this->initializer5614d2ab01130178122228);

        unset($this->valueHolder5614d2ab01130952058073->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ab01130178122228 && $this->initializer5614d2ab01130178122228->__invoke($this->valueHolder5614d2ab01130952058073, $this, '__clone', array(), $this->initializer5614d2ab01130178122228);

        $this->valueHolder5614d2ab01130952058073 = clone $this->valueHolder5614d2ab01130952058073;
    }

    public function __sleep()
    {
        $this->initializer5614d2ab01130178122228 && $this->initializer5614d2ab01130178122228->__invoke($this->valueHolder5614d2ab01130952058073, $this, '__sleep', array(), $this->initializer5614d2ab01130178122228);

        return array('valueHolder5614d2ab01130952058073');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ab01130178122228 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ab01130178122228;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ab01130178122228 && $this->initializer5614d2ab01130178122228->__invoke($this->valueHolder5614d2ab01130952058073, $this, 'initializeProxy', array(), $this->initializer5614d2ab01130178122228);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ab01130952058073;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ab01130952058073;
    }


}

class OroBundleSSOBundleEventListenerUserEmailChangeListener_000000002e47f2f000000000e28c9ac7 extends \Oro\Bundle\SSOBundle\EventListener\UserEmailChangeListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ab10b34849240827 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ab10f1c154296565 = null;

    /**
     * {@inheritDoc}
     */
    public function preUpdate(\Doctrine\ORM\Event\PreUpdateEventArgs $args)
    {
        $this->initializer5614d2ab10f1c154296565 && $this->initializer5614d2ab10f1c154296565->__invoke($this->valueHolder5614d2ab10b34849240827, $this, 'preUpdate', array('args' => $args), $this->initializer5614d2ab10f1c154296565);

        return $this->valueHolder5614d2ab10b34849240827->preUpdate($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ab10f1c154296565 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ab10f1c154296565 && $this->initializer5614d2ab10f1c154296565->__invoke($this->valueHolder5614d2ab10b34849240827, $this, '__get', array('name' => $name), $this->initializer5614d2ab10f1c154296565);

        return $this->valueHolder5614d2ab10b34849240827->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ab10f1c154296565 && $this->initializer5614d2ab10f1c154296565->__invoke($this->valueHolder5614d2ab10b34849240827, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ab10f1c154296565);

        $this->valueHolder5614d2ab10b34849240827->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ab10f1c154296565 && $this->initializer5614d2ab10f1c154296565->__invoke($this->valueHolder5614d2ab10b34849240827, $this, '__isset', array('name' => $name), $this->initializer5614d2ab10f1c154296565);

        return isset($this->valueHolder5614d2ab10b34849240827->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ab10f1c154296565 && $this->initializer5614d2ab10f1c154296565->__invoke($this->valueHolder5614d2ab10b34849240827, $this, '__unset', array('name' => $name), $this->initializer5614d2ab10f1c154296565);

        unset($this->valueHolder5614d2ab10b34849240827->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ab10f1c154296565 && $this->initializer5614d2ab10f1c154296565->__invoke($this->valueHolder5614d2ab10b34849240827, $this, '__clone', array(), $this->initializer5614d2ab10f1c154296565);

        $this->valueHolder5614d2ab10b34849240827 = clone $this->valueHolder5614d2ab10b34849240827;
    }

    public function __sleep()
    {
        $this->initializer5614d2ab10f1c154296565 && $this->initializer5614d2ab10f1c154296565->__invoke($this->valueHolder5614d2ab10b34849240827, $this, '__sleep', array(), $this->initializer5614d2ab10f1c154296565);

        return array('valueHolder5614d2ab10b34849240827');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ab10f1c154296565 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ab10f1c154296565;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ab10f1c154296565 && $this->initializer5614d2ab10f1c154296565->__invoke($this->valueHolder5614d2ab10b34849240827, $this, 'initializeProxy', array(), $this->initializer5614d2ab10f1c154296565);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ab10b34849240827;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ab10b34849240827;
    }


}

class OroBundleEntityBundleEventListenerORMGeneratedValueStrategyListener_000000002e47f3e900000000e28c9ac7 extends \Oro\Bundle\EntityBundle\EventListener\ORM\GeneratedValueStrategyListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ab16cdd395763501 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ab16cdd850084903 = null;

    /**
     * {@inheritDoc}
     */
    public function loadClassMetadata(\Doctrine\ORM\Event\LoadClassMetadataEventArgs $event)
    {
        $this->initializer5614d2ab16cdd850084903 && $this->initializer5614d2ab16cdd850084903->__invoke($this->valueHolder5614d2ab16cdd395763501, $this, 'loadClassMetadata', array('event' => $event), $this->initializer5614d2ab16cdd850084903);

        return $this->valueHolder5614d2ab16cdd395763501->loadClassMetadata($event);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ab16cdd850084903 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ab16cdd850084903 && $this->initializer5614d2ab16cdd850084903->__invoke($this->valueHolder5614d2ab16cdd395763501, $this, '__get', array('name' => $name), $this->initializer5614d2ab16cdd850084903);

        return $this->valueHolder5614d2ab16cdd395763501->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ab16cdd850084903 && $this->initializer5614d2ab16cdd850084903->__invoke($this->valueHolder5614d2ab16cdd395763501, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ab16cdd850084903);

        $this->valueHolder5614d2ab16cdd395763501->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ab16cdd850084903 && $this->initializer5614d2ab16cdd850084903->__invoke($this->valueHolder5614d2ab16cdd395763501, $this, '__isset', array('name' => $name), $this->initializer5614d2ab16cdd850084903);

        return isset($this->valueHolder5614d2ab16cdd395763501->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ab16cdd850084903 && $this->initializer5614d2ab16cdd850084903->__invoke($this->valueHolder5614d2ab16cdd395763501, $this, '__unset', array('name' => $name), $this->initializer5614d2ab16cdd850084903);

        unset($this->valueHolder5614d2ab16cdd395763501->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ab16cdd850084903 && $this->initializer5614d2ab16cdd850084903->__invoke($this->valueHolder5614d2ab16cdd395763501, $this, '__clone', array(), $this->initializer5614d2ab16cdd850084903);

        $this->valueHolder5614d2ab16cdd395763501 = clone $this->valueHolder5614d2ab16cdd395763501;
    }

    public function __sleep()
    {
        $this->initializer5614d2ab16cdd850084903 && $this->initializer5614d2ab16cdd850084903->__invoke($this->valueHolder5614d2ab16cdd395763501, $this, '__sleep', array(), $this->initializer5614d2ab16cdd850084903);

        return array('valueHolder5614d2ab16cdd395763501');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ab16cdd850084903 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ab16cdd850084903;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ab16cdd850084903 && $this->initializer5614d2ab16cdd850084903->__invoke($this->valueHolder5614d2ab16cdd395763501, $this, 'initializeProxy', array(), $this->initializer5614d2ab16cdd850084903);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ab16cdd395763501;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ab16cdd395763501;
    }


}

class OroBundleEntityBundleORMEntityAliasResolver_000000002e47f31e00000000e28c9ac7 extends \Oro\Bundle\EntityBundle\ORM\EntityAliasResolver implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ab1a38e939663957 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ab1a38e872755485 = null;

    /**
     * {@inheritDoc}
     */
    public function getAlias($entityClass)
    {
        $this->initializer5614d2ab1a38e872755485 && $this->initializer5614d2ab1a38e872755485->__invoke($this->valueHolder5614d2ab1a38e939663957, $this, 'getAlias', array('entityClass' => $entityClass), $this->initializer5614d2ab1a38e872755485);

        return $this->valueHolder5614d2ab1a38e939663957->getAlias($entityClass);
    }

    /**
     * {@inheritDoc}
     */
    public function getPluralAlias($entityClass)
    {
        $this->initializer5614d2ab1a38e872755485 && $this->initializer5614d2ab1a38e872755485->__invoke($this->valueHolder5614d2ab1a38e939663957, $this, 'getPluralAlias', array('entityClass' => $entityClass), $this->initializer5614d2ab1a38e872755485);

        return $this->valueHolder5614d2ab1a38e939663957->getPluralAlias($entityClass);
    }

    /**
     * {@inheritDoc}
     */
    public function getClassByAlias($alias)
    {
        $this->initializer5614d2ab1a38e872755485 && $this->initializer5614d2ab1a38e872755485->__invoke($this->valueHolder5614d2ab1a38e939663957, $this, 'getClassByAlias', array('alias' => $alias), $this->initializer5614d2ab1a38e872755485);

        return $this->valueHolder5614d2ab1a38e939663957->getClassByAlias($alias);
    }

    /**
     * {@inheritDoc}
     */
    public function getClassByPluralAlias($pluralAlias)
    {
        $this->initializer5614d2ab1a38e872755485 && $this->initializer5614d2ab1a38e872755485->__invoke($this->valueHolder5614d2ab1a38e939663957, $this, 'getClassByPluralAlias', array('pluralAlias' => $pluralAlias), $this->initializer5614d2ab1a38e872755485);

        return $this->valueHolder5614d2ab1a38e939663957->getClassByPluralAlias($pluralAlias);
    }

    /**
     * {@inheritDoc}
     */
    public function getAll()
    {
        $this->initializer5614d2ab1a38e872755485 && $this->initializer5614d2ab1a38e872755485->__invoke($this->valueHolder5614d2ab1a38e939663957, $this, 'getAll', array(), $this->initializer5614d2ab1a38e872755485);

        return $this->valueHolder5614d2ab1a38e939663957->getAll();
    }

    /**
     * {@inheritDoc}
     */
    public function addProvider(\Oro\Bundle\EntityBundle\Provider\EntityAliasProviderInterface $provider)
    {
        $this->initializer5614d2ab1a38e872755485 && $this->initializer5614d2ab1a38e872755485->__invoke($this->valueHolder5614d2ab1a38e939663957, $this, 'addProvider', array('provider' => $provider), $this->initializer5614d2ab1a38e872755485);

        return $this->valueHolder5614d2ab1a38e939663957->addProvider($provider);
    }

    /**
     * {@inheritDoc}
     */
    public function warmUp($cacheDir)
    {
        $this->initializer5614d2ab1a38e872755485 && $this->initializer5614d2ab1a38e872755485->__invoke($this->valueHolder5614d2ab1a38e939663957, $this, 'warmUp', array('cacheDir' => $cacheDir), $this->initializer5614d2ab1a38e872755485);

        return $this->valueHolder5614d2ab1a38e939663957->warmUp($cacheDir);
    }

    /**
     * {@inheritDoc}
     */
    public function setDuplicateAliasHelpMessage($message)
    {
        $this->initializer5614d2ab1a38e872755485 && $this->initializer5614d2ab1a38e872755485->__invoke($this->valueHolder5614d2ab1a38e939663957, $this, 'setDuplicateAliasHelpMessage', array('message' => $message), $this->initializer5614d2ab1a38e872755485);

        return $this->valueHolder5614d2ab1a38e939663957->setDuplicateAliasHelpMessage($message);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ab1a38e872755485 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ab1a38e872755485 && $this->initializer5614d2ab1a38e872755485->__invoke($this->valueHolder5614d2ab1a38e939663957, $this, '__get', array('name' => $name), $this->initializer5614d2ab1a38e872755485);

        return $this->valueHolder5614d2ab1a38e939663957->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ab1a38e872755485 && $this->initializer5614d2ab1a38e872755485->__invoke($this->valueHolder5614d2ab1a38e939663957, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ab1a38e872755485);

        $this->valueHolder5614d2ab1a38e939663957->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ab1a38e872755485 && $this->initializer5614d2ab1a38e872755485->__invoke($this->valueHolder5614d2ab1a38e939663957, $this, '__isset', array('name' => $name), $this->initializer5614d2ab1a38e872755485);

        return isset($this->valueHolder5614d2ab1a38e939663957->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ab1a38e872755485 && $this->initializer5614d2ab1a38e872755485->__invoke($this->valueHolder5614d2ab1a38e939663957, $this, '__unset', array('name' => $name), $this->initializer5614d2ab1a38e872755485);

        unset($this->valueHolder5614d2ab1a38e939663957->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ab1a38e872755485 && $this->initializer5614d2ab1a38e872755485->__invoke($this->valueHolder5614d2ab1a38e939663957, $this, '__clone', array(), $this->initializer5614d2ab1a38e872755485);

        $this->valueHolder5614d2ab1a38e939663957 = clone $this->valueHolder5614d2ab1a38e939663957;
    }

    public function __sleep()
    {
        $this->initializer5614d2ab1a38e872755485 && $this->initializer5614d2ab1a38e872755485->__invoke($this->valueHolder5614d2ab1a38e939663957, $this, '__sleep', array(), $this->initializer5614d2ab1a38e872755485);

        return array('valueHolder5614d2ab1a38e939663957');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ab1a38e872755485 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ab1a38e872755485;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ab1a38e872755485 && $this->initializer5614d2ab1a38e872755485->__invoke($this->valueHolder5614d2ab1a38e939663957, $this, 'initializeProxy', array(), $this->initializer5614d2ab1a38e872755485);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ab1a38e939663957;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ab1a38e939663957;
    }


}

class OroBundleEntityConfigBundleEventListenerOptionSetListener_000000002e47f38900000000e28c9ac7 extends \Oro\Bundle\EntityConfigBundle\EventListener\OptionSetListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ab33dbc743008581 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ab33dbc073458252 = null;

    /**
     * {@inheritDoc}
     */
    public function postPersist(\Doctrine\ORM\Event\LifecycleEventArgs $event)
    {
        $this->initializer5614d2ab33dbc073458252 && $this->initializer5614d2ab33dbc073458252->__invoke($this->valueHolder5614d2ab33dbc743008581, $this, 'postPersist', array('event' => $event), $this->initializer5614d2ab33dbc073458252);

        return $this->valueHolder5614d2ab33dbc743008581->postPersist($event);
    }

    /**
     * {@inheritDoc}
     */
    public function postFlush(\Doctrine\ORM\Event\PostFlushEventArgs $eventArgs)
    {
        $this->initializer5614d2ab33dbc073458252 && $this->initializer5614d2ab33dbc073458252->__invoke($this->valueHolder5614d2ab33dbc743008581, $this, 'postFlush', array('eventArgs' => $eventArgs), $this->initializer5614d2ab33dbc073458252);

        return $this->valueHolder5614d2ab33dbc743008581->postFlush($eventArgs);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ab33dbc073458252 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ab33dbc073458252 && $this->initializer5614d2ab33dbc073458252->__invoke($this->valueHolder5614d2ab33dbc743008581, $this, '__get', array('name' => $name), $this->initializer5614d2ab33dbc073458252);

        return $this->valueHolder5614d2ab33dbc743008581->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ab33dbc073458252 && $this->initializer5614d2ab33dbc073458252->__invoke($this->valueHolder5614d2ab33dbc743008581, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ab33dbc073458252);

        $this->valueHolder5614d2ab33dbc743008581->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ab33dbc073458252 && $this->initializer5614d2ab33dbc073458252->__invoke($this->valueHolder5614d2ab33dbc743008581, $this, '__isset', array('name' => $name), $this->initializer5614d2ab33dbc073458252);

        return isset($this->valueHolder5614d2ab33dbc743008581->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ab33dbc073458252 && $this->initializer5614d2ab33dbc073458252->__invoke($this->valueHolder5614d2ab33dbc743008581, $this, '__unset', array('name' => $name), $this->initializer5614d2ab33dbc073458252);

        unset($this->valueHolder5614d2ab33dbc743008581->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ab33dbc073458252 && $this->initializer5614d2ab33dbc073458252->__invoke($this->valueHolder5614d2ab33dbc743008581, $this, '__clone', array(), $this->initializer5614d2ab33dbc073458252);

        $this->valueHolder5614d2ab33dbc743008581 = clone $this->valueHolder5614d2ab33dbc743008581;
    }

    public function __sleep()
    {
        $this->initializer5614d2ab33dbc073458252 && $this->initializer5614d2ab33dbc073458252->__invoke($this->valueHolder5614d2ab33dbc743008581, $this, '__sleep', array(), $this->initializer5614d2ab33dbc073458252);

        return array('valueHolder5614d2ab33dbc743008581');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ab33dbc073458252 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ab33dbc073458252;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ab33dbc073458252 && $this->initializer5614d2ab33dbc073458252->__invoke($this->valueHolder5614d2ab33dbc743008581, $this, 'initializeProxy', array(), $this->initializer5614d2ab33dbc073458252);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ab33dbc743008581;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ab33dbc743008581;
    }


}

class OroBundleEntityExtendBundleEntityManagerAssociationManager_000000002e47fe9700000000e28c9ac7 extends \Oro\Bundle\EntityExtendBundle\Entity\Manager\AssociationManager implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ab39b7e671538116 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ab39b7e937672033 = null;

    /**
     * {@inheritDoc}
     */
    public function getAssociationTargets($associationOwnerClass, $filter, $associationType, $associationKind = null)
    {
        $this->initializer5614d2ab39b7e937672033 && $this->initializer5614d2ab39b7e937672033->__invoke($this->valueHolder5614d2ab39b7e671538116, $this, 'getAssociationTargets', array('associationOwnerClass' => $associationOwnerClass, 'filter' => $filter, 'associationType' => $associationType, 'associationKind' => $associationKind), $this->initializer5614d2ab39b7e937672033);

        return $this->valueHolder5614d2ab39b7e671538116->getAssociationTargets($associationOwnerClass, $filter, $associationType, $associationKind);
    }

    /**
     * {@inheritDoc}
     */
    public function getSingleOwnerFilter($scope, $attribute = 'enabled')
    {
        $this->initializer5614d2ab39b7e937672033 && $this->initializer5614d2ab39b7e937672033->__invoke($this->valueHolder5614d2ab39b7e671538116, $this, 'getSingleOwnerFilter', array('scope' => $scope, 'attribute' => $attribute), $this->initializer5614d2ab39b7e937672033);

        return $this->valueHolder5614d2ab39b7e671538116->getSingleOwnerFilter($scope, $attribute);
    }

    /**
     * {@inheritDoc}
     */
    public function getMultiOwnerFilter($scope, $attribute)
    {
        $this->initializer5614d2ab39b7e937672033 && $this->initializer5614d2ab39b7e937672033->__invoke($this->valueHolder5614d2ab39b7e671538116, $this, 'getMultiOwnerFilter', array('scope' => $scope, 'attribute' => $attribute), $this->initializer5614d2ab39b7e937672033);

        return $this->valueHolder5614d2ab39b7e671538116->getMultiOwnerFilter($scope, $attribute);
    }

    /**
     * {@inheritDoc}
     */
    public function getMultiAssociationsQueryBuilder($associationOwnerClass, $filters, $joins, $associationTargets, $limit = null, $page = null, $orderBy = null)
    {
        $this->initializer5614d2ab39b7e937672033 && $this->initializer5614d2ab39b7e937672033->__invoke($this->valueHolder5614d2ab39b7e671538116, $this, 'getMultiAssociationsQueryBuilder', array('associationOwnerClass' => $associationOwnerClass, 'filters' => $filters, 'joins' => $joins, 'associationTargets' => $associationTargets, 'limit' => $limit, 'page' => $page, 'orderBy' => $orderBy), $this->initializer5614d2ab39b7e937672033);

        return $this->valueHolder5614d2ab39b7e671538116->getMultiAssociationsQueryBuilder($associationOwnerClass, $filters, $joins, $associationTargets, $limit, $page, $orderBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getMultiAssociationOwnersQueryBuilder($associationTargetClass, $filters, $joins, $associationOwners, $limit = null, $page = null, $orderBy = null)
    {
        $this->initializer5614d2ab39b7e937672033 && $this->initializer5614d2ab39b7e937672033->__invoke($this->valueHolder5614d2ab39b7e671538116, $this, 'getMultiAssociationOwnersQueryBuilder', array('associationTargetClass' => $associationTargetClass, 'filters' => $filters, 'joins' => $joins, 'associationOwners' => $associationOwners, 'limit' => $limit, 'page' => $page, 'orderBy' => $orderBy), $this->initializer5614d2ab39b7e937672033);

        return $this->valueHolder5614d2ab39b7e671538116->getMultiAssociationOwnersQueryBuilder($associationTargetClass, $filters, $joins, $associationOwners, $limit, $page, $orderBy);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ab39b7e937672033 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ab39b7e937672033 && $this->initializer5614d2ab39b7e937672033->__invoke($this->valueHolder5614d2ab39b7e671538116, $this, '__get', array('name' => $name), $this->initializer5614d2ab39b7e937672033);

        return $this->valueHolder5614d2ab39b7e671538116->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ab39b7e937672033 && $this->initializer5614d2ab39b7e937672033->__invoke($this->valueHolder5614d2ab39b7e671538116, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ab39b7e937672033);

        $this->valueHolder5614d2ab39b7e671538116->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ab39b7e937672033 && $this->initializer5614d2ab39b7e937672033->__invoke($this->valueHolder5614d2ab39b7e671538116, $this, '__isset', array('name' => $name), $this->initializer5614d2ab39b7e937672033);

        return isset($this->valueHolder5614d2ab39b7e671538116->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ab39b7e937672033 && $this->initializer5614d2ab39b7e937672033->__invoke($this->valueHolder5614d2ab39b7e671538116, $this, '__unset', array('name' => $name), $this->initializer5614d2ab39b7e937672033);

        unset($this->valueHolder5614d2ab39b7e671538116->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ab39b7e937672033 && $this->initializer5614d2ab39b7e937672033->__invoke($this->valueHolder5614d2ab39b7e671538116, $this, '__clone', array(), $this->initializer5614d2ab39b7e937672033);

        $this->valueHolder5614d2ab39b7e671538116 = clone $this->valueHolder5614d2ab39b7e671538116;
    }

    public function __sleep()
    {
        $this->initializer5614d2ab39b7e937672033 && $this->initializer5614d2ab39b7e937672033->__invoke($this->valueHolder5614d2ab39b7e671538116, $this, '__sleep', array(), $this->initializer5614d2ab39b7e937672033);

        return array('valueHolder5614d2ab39b7e671538116');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ab39b7e937672033 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ab39b7e937672033;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ab39b7e937672033 && $this->initializer5614d2ab39b7e937672033->__invoke($this->valueHolder5614d2ab39b7e671538116, $this, 'initializeProxy', array(), $this->initializer5614d2ab39b7e937672033);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ab39b7e671538116;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ab39b7e671538116;
    }


}

class OroBundleEntityExtendBundleEventListenerDoctrineListener_000000002e47fe8400000000e28c9ac7 extends \Oro\Bundle\EntityExtendBundle\EventListener\DoctrineListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ab600cf081091960 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ab600cf747498153 = null;

    /**
     * {@inheritDoc}
     */
    public function loadClassMetadata(\Doctrine\ORM\Event\LoadClassMetadataEventArgs $event)
    {
        $this->initializer5614d2ab600cf747498153 && $this->initializer5614d2ab600cf747498153->__invoke($this->valueHolder5614d2ab600cf081091960, $this, 'loadClassMetadata', array('event' => $event), $this->initializer5614d2ab600cf747498153);

        return $this->valueHolder5614d2ab600cf081091960->loadClassMetadata($event);
    }

    /**
     * {@inheritDoc}
     */
    public function onFlush(\Doctrine\ORM\Event\OnFlushEventArgs $event)
    {
        $this->initializer5614d2ab600cf747498153 && $this->initializer5614d2ab600cf747498153->__invoke($this->valueHolder5614d2ab600cf081091960, $this, 'onFlush', array('event' => $event), $this->initializer5614d2ab600cf747498153);

        return $this->valueHolder5614d2ab600cf081091960->onFlush($event);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ab600cf747498153 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ab600cf747498153 && $this->initializer5614d2ab600cf747498153->__invoke($this->valueHolder5614d2ab600cf081091960, $this, '__get', array('name' => $name), $this->initializer5614d2ab600cf747498153);

        return $this->valueHolder5614d2ab600cf081091960->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ab600cf747498153 && $this->initializer5614d2ab600cf747498153->__invoke($this->valueHolder5614d2ab600cf081091960, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ab600cf747498153);

        $this->valueHolder5614d2ab600cf081091960->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ab600cf747498153 && $this->initializer5614d2ab600cf747498153->__invoke($this->valueHolder5614d2ab600cf081091960, $this, '__isset', array('name' => $name), $this->initializer5614d2ab600cf747498153);

        return isset($this->valueHolder5614d2ab600cf081091960->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ab600cf747498153 && $this->initializer5614d2ab600cf747498153->__invoke($this->valueHolder5614d2ab600cf081091960, $this, '__unset', array('name' => $name), $this->initializer5614d2ab600cf747498153);

        unset($this->valueHolder5614d2ab600cf081091960->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ab600cf747498153 && $this->initializer5614d2ab600cf747498153->__invoke($this->valueHolder5614d2ab600cf081091960, $this, '__clone', array(), $this->initializer5614d2ab600cf747498153);

        $this->valueHolder5614d2ab600cf081091960 = clone $this->valueHolder5614d2ab600cf081091960;
    }

    public function __sleep()
    {
        $this->initializer5614d2ab600cf747498153 && $this->initializer5614d2ab600cf747498153->__invoke($this->valueHolder5614d2ab600cf081091960, $this, '__sleep', array(), $this->initializer5614d2ab600cf747498153);

        return array('valueHolder5614d2ab600cf081091960');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ab600cf747498153 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ab600cf747498153;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ab600cf747498153 && $this->initializer5614d2ab600cf747498153->__invoke($this->valueHolder5614d2ab600cf081091960, $this, 'initializeProxy', array(), $this->initializer5614d2ab600cf747498153);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ab600cf081091960;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ab600cf081091960;
    }


}

class OroBundleIntegrationBundleImportExportJobExecutor_000000002e47ff2d00000000e28c9ac7 extends \Oro\Bundle\IntegrationBundle\ImportExport\Job\Executor implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ab66a48968221219 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ab66a48445316746 = null;

    /**
     * {@inheritDoc}
     */
    public function executeJob($jobType, $jobName, array $configuration = array())
    {
        $this->initializer5614d2ab66a48445316746 && $this->initializer5614d2ab66a48445316746->__invoke($this->valueHolder5614d2ab66a48968221219, $this, 'executeJob', array('jobType' => $jobType, 'jobName' => $jobName, 'configuration' => $configuration), $this->initializer5614d2ab66a48445316746);

        return $this->valueHolder5614d2ab66a48968221219->executeJob($jobType, $jobName, $configuration);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobErrors($jobCode)
    {
        $this->initializer5614d2ab66a48445316746 && $this->initializer5614d2ab66a48445316746->__invoke($this->valueHolder5614d2ab66a48968221219, $this, 'getJobErrors', array('jobCode' => $jobCode), $this->initializer5614d2ab66a48445316746);

        return $this->valueHolder5614d2ab66a48968221219->getJobErrors($jobCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobFailureExceptions($jobCode)
    {
        $this->initializer5614d2ab66a48445316746 && $this->initializer5614d2ab66a48445316746->__invoke($this->valueHolder5614d2ab66a48968221219, $this, 'getJobFailureExceptions', array('jobCode' => $jobCode), $this->initializer5614d2ab66a48445316746);

        return $this->valueHolder5614d2ab66a48968221219->getJobFailureExceptions($jobCode);
    }

    /**
     * {@inheritDoc}
     */
    public function setSkipClear($skipClear)
    {
        $this->initializer5614d2ab66a48445316746 && $this->initializer5614d2ab66a48445316746->__invoke($this->valueHolder5614d2ab66a48968221219, $this, 'setSkipClear', array('skipClear' => $skipClear), $this->initializer5614d2ab66a48445316746);

        return $this->valueHolder5614d2ab66a48968221219->setSkipClear($skipClear);
    }

    /**
     * {@inheritDoc}
     */
    public function isSkipClear()
    {
        $this->initializer5614d2ab66a48445316746 && $this->initializer5614d2ab66a48445316746->__invoke($this->valueHolder5614d2ab66a48968221219, $this, 'isSkipClear', array(), $this->initializer5614d2ab66a48445316746);

        return $this->valueHolder5614d2ab66a48968221219->isSkipClear();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidationMode($validationMode)
    {
        $this->initializer5614d2ab66a48445316746 && $this->initializer5614d2ab66a48445316746->__invoke($this->valueHolder5614d2ab66a48968221219, $this, 'setValidationMode', array('validationMode' => $validationMode), $this->initializer5614d2ab66a48445316746);

        return $this->valueHolder5614d2ab66a48968221219->setValidationMode($validationMode);
    }

    /**
     * {@inheritDoc}
     */
    public function isValidationMode()
    {
        $this->initializer5614d2ab66a48445316746 && $this->initializer5614d2ab66a48445316746->__invoke($this->valueHolder5614d2ab66a48968221219, $this, 'isValidationMode', array(), $this->initializer5614d2ab66a48445316746);

        return $this->valueHolder5614d2ab66a48968221219->isValidationMode();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ab66a48445316746 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ab66a48445316746 && $this->initializer5614d2ab66a48445316746->__invoke($this->valueHolder5614d2ab66a48968221219, $this, '__get', array('name' => $name), $this->initializer5614d2ab66a48445316746);

        return $this->valueHolder5614d2ab66a48968221219->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ab66a48445316746 && $this->initializer5614d2ab66a48445316746->__invoke($this->valueHolder5614d2ab66a48968221219, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ab66a48445316746);

        $this->valueHolder5614d2ab66a48968221219->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ab66a48445316746 && $this->initializer5614d2ab66a48445316746->__invoke($this->valueHolder5614d2ab66a48968221219, $this, '__isset', array('name' => $name), $this->initializer5614d2ab66a48445316746);

        return isset($this->valueHolder5614d2ab66a48968221219->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ab66a48445316746 && $this->initializer5614d2ab66a48445316746->__invoke($this->valueHolder5614d2ab66a48968221219, $this, '__unset', array('name' => $name), $this->initializer5614d2ab66a48445316746);

        unset($this->valueHolder5614d2ab66a48968221219->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ab66a48445316746 && $this->initializer5614d2ab66a48445316746->__invoke($this->valueHolder5614d2ab66a48968221219, $this, '__clone', array(), $this->initializer5614d2ab66a48445316746);

        $this->valueHolder5614d2ab66a48968221219 = clone $this->valueHolder5614d2ab66a48968221219;
    }

    public function __sleep()
    {
        $this->initializer5614d2ab66a48445316746 && $this->initializer5614d2ab66a48445316746->__invoke($this->valueHolder5614d2ab66a48968221219, $this, '__sleep', array(), $this->initializer5614d2ab66a48445316746);

        return array('valueHolder5614d2ab66a48968221219');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ab66a48445316746 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ab66a48445316746;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ab66a48445316746 && $this->initializer5614d2ab66a48445316746->__invoke($this->valueHolder5614d2ab66a48968221219, $this, 'initializeProxy', array(), $this->initializer5614d2ab66a48445316746);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ab66a48968221219;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ab66a48968221219;
    }


}

class OroBundleIntegrationBundleProviderSyncProcessor_000000002e47ffa300000000e28c9ac7 extends \Oro\Bundle\IntegrationBundle\Provider\SyncProcessor implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ab78774804566267 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ab78774788436873 = null;

    /**
     * {@inheritDoc}
     */
    public function process(\Oro\Bundle\IntegrationBundle\Entity\Channel $integration, $connector = null, array $parameters = array())
    {
        $this->initializer5614d2ab78774788436873 && $this->initializer5614d2ab78774788436873->__invoke($this->valueHolder5614d2ab78774804566267, $this, 'process', array('integration' => $integration, 'connector' => $connector, 'parameters' => $parameters), $this->initializer5614d2ab78774788436873);

        return $this->valueHolder5614d2ab78774804566267->process($integration, $connector, $parameters);
    }

    /**
     * {@inheritDoc}
     */
    public function getLoggerStrategy()
    {
        $this->initializer5614d2ab78774788436873 && $this->initializer5614d2ab78774788436873->__invoke($this->valueHolder5614d2ab78774804566267, $this, 'getLoggerStrategy', array(), $this->initializer5614d2ab78774788436873);

        return $this->valueHolder5614d2ab78774804566267->getLoggerStrategy();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogger(\Psr\Log\LoggerInterface $logger)
    {
        $this->initializer5614d2ab78774788436873 && $this->initializer5614d2ab78774788436873->__invoke($this->valueHolder5614d2ab78774804566267, $this, 'setLogger', array('logger' => $logger), $this->initializer5614d2ab78774788436873);

        return $this->valueHolder5614d2ab78774804566267->setLogger($logger);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ab78774788436873 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ab78774788436873 && $this->initializer5614d2ab78774788436873->__invoke($this->valueHolder5614d2ab78774804566267, $this, '__get', array('name' => $name), $this->initializer5614d2ab78774788436873);

        return $this->valueHolder5614d2ab78774804566267->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ab78774788436873 && $this->initializer5614d2ab78774788436873->__invoke($this->valueHolder5614d2ab78774804566267, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ab78774788436873);

        $this->valueHolder5614d2ab78774804566267->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ab78774788436873 && $this->initializer5614d2ab78774788436873->__invoke($this->valueHolder5614d2ab78774804566267, $this, '__isset', array('name' => $name), $this->initializer5614d2ab78774788436873);

        return isset($this->valueHolder5614d2ab78774804566267->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ab78774788436873 && $this->initializer5614d2ab78774788436873->__invoke($this->valueHolder5614d2ab78774804566267, $this, '__unset', array('name' => $name), $this->initializer5614d2ab78774788436873);

        unset($this->valueHolder5614d2ab78774804566267->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ab78774788436873 && $this->initializer5614d2ab78774788436873->__invoke($this->valueHolder5614d2ab78774804566267, $this, '__clone', array(), $this->initializer5614d2ab78774788436873);

        $this->valueHolder5614d2ab78774804566267 = clone $this->valueHolder5614d2ab78774804566267;
    }

    public function __sleep()
    {
        $this->initializer5614d2ab78774788436873 && $this->initializer5614d2ab78774788436873->__invoke($this->valueHolder5614d2ab78774804566267, $this, '__sleep', array(), $this->initializer5614d2ab78774788436873);

        return array('valueHolder5614d2ab78774804566267');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ab78774788436873 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ab78774788436873;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ab78774788436873 && $this->initializer5614d2ab78774788436873->__invoke($this->valueHolder5614d2ab78774804566267, $this, 'initializeProxy', array(), $this->initializer5614d2ab78774788436873);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ab78774804566267;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ab78774804566267;
    }


}

class OroBundleIntegrationBundleProviderReverseSyncProcessor_000000002e47fee900000000e28c9ac7 extends \Oro\Bundle\IntegrationBundle\Provider\ReverseSyncProcessor implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ab996d4595931638 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ab996d4904309255 = null;

    /**
     * {@inheritDoc}
     */
    public function process(\Oro\Bundle\IntegrationBundle\Entity\Channel $integration, $connector, array $parameters)
    {
        $this->initializer5614d2ab996d4904309255 && $this->initializer5614d2ab996d4904309255->__invoke($this->valueHolder5614d2ab996d4595931638, $this, 'process', array('integration' => $integration, 'connector' => $connector, 'parameters' => $parameters), $this->initializer5614d2ab996d4904309255);

        return $this->valueHolder5614d2ab996d4595931638->process($integration, $connector, $parameters);
    }

    /**
     * {@inheritDoc}
     */
    public function getLoggerStrategy()
    {
        $this->initializer5614d2ab996d4904309255 && $this->initializer5614d2ab996d4904309255->__invoke($this->valueHolder5614d2ab996d4595931638, $this, 'getLoggerStrategy', array(), $this->initializer5614d2ab996d4904309255);

        return $this->valueHolder5614d2ab996d4595931638->getLoggerStrategy();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogger(\Psr\Log\LoggerInterface $logger)
    {
        $this->initializer5614d2ab996d4904309255 && $this->initializer5614d2ab996d4904309255->__invoke($this->valueHolder5614d2ab996d4595931638, $this, 'setLogger', array('logger' => $logger), $this->initializer5614d2ab996d4904309255);

        return $this->valueHolder5614d2ab996d4595931638->setLogger($logger);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ab996d4904309255 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ab996d4904309255 && $this->initializer5614d2ab996d4904309255->__invoke($this->valueHolder5614d2ab996d4595931638, $this, '__get', array('name' => $name), $this->initializer5614d2ab996d4904309255);

        return $this->valueHolder5614d2ab996d4595931638->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ab996d4904309255 && $this->initializer5614d2ab996d4904309255->__invoke($this->valueHolder5614d2ab996d4595931638, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ab996d4904309255);

        $this->valueHolder5614d2ab996d4595931638->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ab996d4904309255 && $this->initializer5614d2ab996d4904309255->__invoke($this->valueHolder5614d2ab996d4595931638, $this, '__isset', array('name' => $name), $this->initializer5614d2ab996d4904309255);

        return isset($this->valueHolder5614d2ab996d4595931638->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ab996d4904309255 && $this->initializer5614d2ab996d4904309255->__invoke($this->valueHolder5614d2ab996d4595931638, $this, '__unset', array('name' => $name), $this->initializer5614d2ab996d4904309255);

        unset($this->valueHolder5614d2ab996d4595931638->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ab996d4904309255 && $this->initializer5614d2ab996d4904309255->__invoke($this->valueHolder5614d2ab996d4595931638, $this, '__clone', array(), $this->initializer5614d2ab996d4904309255);

        $this->valueHolder5614d2ab996d4595931638 = clone $this->valueHolder5614d2ab996d4595931638;
    }

    public function __sleep()
    {
        $this->initializer5614d2ab996d4904309255 && $this->initializer5614d2ab996d4904309255->__invoke($this->valueHolder5614d2ab996d4595931638, $this, '__sleep', array(), $this->initializer5614d2ab996d4904309255);

        return array('valueHolder5614d2ab996d4595931638');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ab996d4904309255 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ab996d4904309255;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ab996d4904309255 && $this->initializer5614d2ab996d4904309255->__invoke($this->valueHolder5614d2ab996d4595931638, $this, 'initializeProxy', array(), $this->initializer5614d2ab996d4904309255);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ab996d4595931638;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ab996d4595931638;
    }


}

class JMSJobQueueBundleEntityListenerManyToAnyListener_000000002e47fda200000000e28c9ac7 extends \JMS\JobQueueBundle\Entity\Listener\ManyToAnyListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ab9f0ad583451501 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ab9f495560046809 = null;

    /**
     * {@inheritDoc}
     */
    public function postLoad(\Doctrine\ORM\Event\LifecycleEventArgs $event)
    {
        $this->initializer5614d2ab9f495560046809 && $this->initializer5614d2ab9f495560046809->__invoke($this->valueHolder5614d2ab9f0ad583451501, $this, 'postLoad', array('event' => $event), $this->initializer5614d2ab9f495560046809);

        return $this->valueHolder5614d2ab9f0ad583451501->postLoad($event);
    }

    /**
     * {@inheritDoc}
     */
    public function preRemove(\Doctrine\ORM\Event\LifecycleEventArgs $event)
    {
        $this->initializer5614d2ab9f495560046809 && $this->initializer5614d2ab9f495560046809->__invoke($this->valueHolder5614d2ab9f0ad583451501, $this, 'preRemove', array('event' => $event), $this->initializer5614d2ab9f495560046809);

        return $this->valueHolder5614d2ab9f0ad583451501->preRemove($event);
    }

    /**
     * {@inheritDoc}
     */
    public function postPersist(\Doctrine\ORM\Event\LifecycleEventArgs $event)
    {
        $this->initializer5614d2ab9f495560046809 && $this->initializer5614d2ab9f495560046809->__invoke($this->valueHolder5614d2ab9f0ad583451501, $this, 'postPersist', array('event' => $event), $this->initializer5614d2ab9f495560046809);

        return $this->valueHolder5614d2ab9f0ad583451501->postPersist($event);
    }

    /**
     * {@inheritDoc}
     */
    public function postGenerateSchema(\Doctrine\ORM\Tools\Event\GenerateSchemaEventArgs $event)
    {
        $this->initializer5614d2ab9f495560046809 && $this->initializer5614d2ab9f495560046809->__invoke($this->valueHolder5614d2ab9f0ad583451501, $this, 'postGenerateSchema', array('event' => $event), $this->initializer5614d2ab9f495560046809);

        return $this->valueHolder5614d2ab9f0ad583451501->postGenerateSchema($event);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ab9f495560046809 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ab9f495560046809 && $this->initializer5614d2ab9f495560046809->__invoke($this->valueHolder5614d2ab9f0ad583451501, $this, '__get', array('name' => $name), $this->initializer5614d2ab9f495560046809);

        return $this->valueHolder5614d2ab9f0ad583451501->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ab9f495560046809 && $this->initializer5614d2ab9f495560046809->__invoke($this->valueHolder5614d2ab9f0ad583451501, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ab9f495560046809);

        $this->valueHolder5614d2ab9f0ad583451501->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ab9f495560046809 && $this->initializer5614d2ab9f495560046809->__invoke($this->valueHolder5614d2ab9f0ad583451501, $this, '__isset', array('name' => $name), $this->initializer5614d2ab9f495560046809);

        return isset($this->valueHolder5614d2ab9f0ad583451501->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ab9f495560046809 && $this->initializer5614d2ab9f495560046809->__invoke($this->valueHolder5614d2ab9f0ad583451501, $this, '__unset', array('name' => $name), $this->initializer5614d2ab9f495560046809);

        unset($this->valueHolder5614d2ab9f0ad583451501->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ab9f495560046809 && $this->initializer5614d2ab9f495560046809->__invoke($this->valueHolder5614d2ab9f0ad583451501, $this, '__clone', array(), $this->initializer5614d2ab9f495560046809);

        $this->valueHolder5614d2ab9f0ad583451501 = clone $this->valueHolder5614d2ab9f0ad583451501;
    }

    public function __sleep()
    {
        $this->initializer5614d2ab9f495560046809 && $this->initializer5614d2ab9f495560046809->__invoke($this->valueHolder5614d2ab9f0ad583451501, $this, '__sleep', array(), $this->initializer5614d2ab9f495560046809);

        return array('valueHolder5614d2ab9f0ad583451501');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ab9f495560046809 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ab9f495560046809;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ab9f495560046809 && $this->initializer5614d2ab9f495560046809->__invoke($this->valueHolder5614d2ab9f0ad583451501, $this, 'initializeProxy', array(), $this->initializer5614d2ab9f495560046809);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ab9f0ad583451501;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ab9f0ad583451501;
    }


}

class JMSJobQueueBundleEntityListenerStatisticsListener_000000002e47fe8f00000000e28c9ac7 extends \JMS\JobQueueBundle\Entity\Listener\StatisticsListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aba2b46126628229 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aba2b46300453538 = null;

    /**
     * {@inheritDoc}
     */
    public function postGenerateSchema(\Doctrine\ORM\Tools\Event\GenerateSchemaEventArgs $event)
    {
        $this->initializer5614d2aba2b46300453538 && $this->initializer5614d2aba2b46300453538->__invoke($this->valueHolder5614d2aba2b46126628229, $this, 'postGenerateSchema', array('event' => $event), $this->initializer5614d2aba2b46300453538);

        return $this->valueHolder5614d2aba2b46126628229->postGenerateSchema($event);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aba2b46300453538 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aba2b46300453538 && $this->initializer5614d2aba2b46300453538->__invoke($this->valueHolder5614d2aba2b46126628229, $this, '__get', array('name' => $name), $this->initializer5614d2aba2b46300453538);

        return $this->valueHolder5614d2aba2b46126628229->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aba2b46300453538 && $this->initializer5614d2aba2b46300453538->__invoke($this->valueHolder5614d2aba2b46126628229, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aba2b46300453538);

        $this->valueHolder5614d2aba2b46126628229->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aba2b46300453538 && $this->initializer5614d2aba2b46300453538->__invoke($this->valueHolder5614d2aba2b46126628229, $this, '__isset', array('name' => $name), $this->initializer5614d2aba2b46300453538);

        return isset($this->valueHolder5614d2aba2b46126628229->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aba2b46300453538 && $this->initializer5614d2aba2b46300453538->__invoke($this->valueHolder5614d2aba2b46126628229, $this, '__unset', array('name' => $name), $this->initializer5614d2aba2b46300453538);

        unset($this->valueHolder5614d2aba2b46126628229->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aba2b46300453538 && $this->initializer5614d2aba2b46300453538->__invoke($this->valueHolder5614d2aba2b46126628229, $this, '__clone', array(), $this->initializer5614d2aba2b46300453538);

        $this->valueHolder5614d2aba2b46126628229 = clone $this->valueHolder5614d2aba2b46126628229;
    }

    public function __sleep()
    {
        $this->initializer5614d2aba2b46300453538 && $this->initializer5614d2aba2b46300453538->__invoke($this->valueHolder5614d2aba2b46126628229, $this, '__sleep', array(), $this->initializer5614d2aba2b46300453538);

        return array('valueHolder5614d2aba2b46126628229');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aba2b46300453538 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aba2b46300453538;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aba2b46300453538 && $this->initializer5614d2aba2b46300453538->__invoke($this->valueHolder5614d2aba2b46126628229, $this, 'initializeProxy', array(), $this->initializer5614d2aba2b46300453538);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aba2b46126628229;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aba2b46126628229;
    }


}

class OroBundleActivityListBundleEventListenerActivityListListener_000000002e47e59600000000e28c9ac7 extends \Oro\Bundle\ActivityListBundle\EventListener\ActivityListListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aba469f208799930 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aba469f291823152 = null;

    /**
     * {@inheritDoc}
     */
    public function onFlush(\Doctrine\ORM\Event\OnFlushEventArgs $args)
    {
        $this->initializer5614d2aba469f291823152 && $this->initializer5614d2aba469f291823152->__invoke($this->valueHolder5614d2aba469f208799930, $this, 'onFlush', array('args' => $args), $this->initializer5614d2aba469f291823152);

        return $this->valueHolder5614d2aba469f208799930->onFlush($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postFlush(\Doctrine\ORM\Event\PostFlushEventArgs $args)
    {
        $this->initializer5614d2aba469f291823152 && $this->initializer5614d2aba469f291823152->__invoke($this->valueHolder5614d2aba469f208799930, $this, 'postFlush', array('args' => $args), $this->initializer5614d2aba469f291823152);

        return $this->valueHolder5614d2aba469f208799930->postFlush($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aba469f291823152 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aba469f291823152 && $this->initializer5614d2aba469f291823152->__invoke($this->valueHolder5614d2aba469f208799930, $this, '__get', array('name' => $name), $this->initializer5614d2aba469f291823152);

        return $this->valueHolder5614d2aba469f208799930->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aba469f291823152 && $this->initializer5614d2aba469f291823152->__invoke($this->valueHolder5614d2aba469f208799930, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aba469f291823152);

        $this->valueHolder5614d2aba469f208799930->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aba469f291823152 && $this->initializer5614d2aba469f291823152->__invoke($this->valueHolder5614d2aba469f208799930, $this, '__isset', array('name' => $name), $this->initializer5614d2aba469f291823152);

        return isset($this->valueHolder5614d2aba469f208799930->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aba469f291823152 && $this->initializer5614d2aba469f291823152->__invoke($this->valueHolder5614d2aba469f208799930, $this, '__unset', array('name' => $name), $this->initializer5614d2aba469f291823152);

        unset($this->valueHolder5614d2aba469f208799930->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aba469f291823152 && $this->initializer5614d2aba469f291823152->__invoke($this->valueHolder5614d2aba469f208799930, $this, '__clone', array(), $this->initializer5614d2aba469f291823152);

        $this->valueHolder5614d2aba469f208799930 = clone $this->valueHolder5614d2aba469f208799930;
    }

    public function __sleep()
    {
        $this->initializer5614d2aba469f291823152 && $this->initializer5614d2aba469f291823152->__invoke($this->valueHolder5614d2aba469f208799930, $this, '__sleep', array(), $this->initializer5614d2aba469f291823152);

        return array('valueHolder5614d2aba469f208799930');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aba469f291823152 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aba469f291823152;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aba469f291823152 && $this->initializer5614d2aba469f291823152->__invoke($this->valueHolder5614d2aba469f208799930, $this, 'initializeProxy', array(), $this->initializer5614d2aba469f291823152);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aba469f208799930;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aba469f208799930;
    }


}

class OroBundleActivityListBundleEventListenerActivityListChangesListener_000000002e47e59000000000e28c9ac7 extends \Oro\Bundle\ActivityListBundle\EventListener\ActivityListChangesListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2abaac30374482884 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2abaac30337755661 = null;

    /**
     * {@inheritDoc}
     */
    public function prePersist(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2abaac30337755661 && $this->initializer5614d2abaac30337755661->__invoke($this->valueHolder5614d2abaac30374482884, $this, 'prePersist', array('args' => $args), $this->initializer5614d2abaac30337755661);

        return $this->valueHolder5614d2abaac30374482884->prePersist($args);
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate(\Doctrine\ORM\Event\PreUpdateEventArgs $args)
    {
        $this->initializer5614d2abaac30337755661 && $this->initializer5614d2abaac30337755661->__invoke($this->valueHolder5614d2abaac30374482884, $this, 'preUpdate', array('args' => $args), $this->initializer5614d2abaac30337755661);

        return $this->valueHolder5614d2abaac30374482884->preUpdate($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2abaac30337755661 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2abaac30337755661 && $this->initializer5614d2abaac30337755661->__invoke($this->valueHolder5614d2abaac30374482884, $this, '__get', array('name' => $name), $this->initializer5614d2abaac30337755661);

        return $this->valueHolder5614d2abaac30374482884->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2abaac30337755661 && $this->initializer5614d2abaac30337755661->__invoke($this->valueHolder5614d2abaac30374482884, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2abaac30337755661);

        $this->valueHolder5614d2abaac30374482884->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2abaac30337755661 && $this->initializer5614d2abaac30337755661->__invoke($this->valueHolder5614d2abaac30374482884, $this, '__isset', array('name' => $name), $this->initializer5614d2abaac30337755661);

        return isset($this->valueHolder5614d2abaac30374482884->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2abaac30337755661 && $this->initializer5614d2abaac30337755661->__invoke($this->valueHolder5614d2abaac30374482884, $this, '__unset', array('name' => $name), $this->initializer5614d2abaac30337755661);

        unset($this->valueHolder5614d2abaac30374482884->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2abaac30337755661 && $this->initializer5614d2abaac30337755661->__invoke($this->valueHolder5614d2abaac30374482884, $this, '__clone', array(), $this->initializer5614d2abaac30337755661);

        $this->valueHolder5614d2abaac30374482884 = clone $this->valueHolder5614d2abaac30374482884;
    }

    public function __sleep()
    {
        $this->initializer5614d2abaac30337755661 && $this->initializer5614d2abaac30337755661->__invoke($this->valueHolder5614d2abaac30374482884, $this, '__sleep', array(), $this->initializer5614d2abaac30337755661);

        return array('valueHolder5614d2abaac30374482884');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2abaac30337755661 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2abaac30337755661;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2abaac30337755661 && $this->initializer5614d2abaac30337755661->__invoke($this->valueHolder5614d2abaac30374482884, $this, 'initializeProxy', array(), $this->initializer5614d2abaac30337755661);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2abaac30374482884;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2abaac30374482884;
    }


}

class OroBundleCalendarBundleEventListenerEntityListener_000000002e47fa1300000000e28c9ac7 extends \Oro\Bundle\CalendarBundle\EventListener\EntityListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2abae2e1689766849 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2abae2e1093491260 = null;

    /**
     * {@inheritDoc}
     */
    public function preUpdate(\Doctrine\ORM\Event\PreUpdateEventArgs $args)
    {
        $this->initializer5614d2abae2e1093491260 && $this->initializer5614d2abae2e1093491260->__invoke($this->valueHolder5614d2abae2e1689766849, $this, 'preUpdate', array('args' => $args), $this->initializer5614d2abae2e1093491260);

        return $this->valueHolder5614d2abae2e1689766849->preUpdate($args);
    }

    /**
     * {@inheritDoc}
     */
    public function onFlush(\Doctrine\ORM\Event\OnFlushEventArgs $event)
    {
        $this->initializer5614d2abae2e1093491260 && $this->initializer5614d2abae2e1093491260->__invoke($this->valueHolder5614d2abae2e1689766849, $this, 'onFlush', array('event' => $event), $this->initializer5614d2abae2e1093491260);

        return $this->valueHolder5614d2abae2e1689766849->onFlush($event);
    }

    /**
     * {@inheritDoc}
     */
    public function postFlush(\Doctrine\ORM\Event\PostFlushEventArgs $event)
    {
        $this->initializer5614d2abae2e1093491260 && $this->initializer5614d2abae2e1093491260->__invoke($this->valueHolder5614d2abae2e1689766849, $this, 'postFlush', array('event' => $event), $this->initializer5614d2abae2e1093491260);

        return $this->valueHolder5614d2abae2e1689766849->postFlush($event);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2abae2e1093491260 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2abae2e1093491260 && $this->initializer5614d2abae2e1093491260->__invoke($this->valueHolder5614d2abae2e1689766849, $this, '__get', array('name' => $name), $this->initializer5614d2abae2e1093491260);

        return $this->valueHolder5614d2abae2e1689766849->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2abae2e1093491260 && $this->initializer5614d2abae2e1093491260->__invoke($this->valueHolder5614d2abae2e1689766849, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2abae2e1093491260);

        $this->valueHolder5614d2abae2e1689766849->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2abae2e1093491260 && $this->initializer5614d2abae2e1093491260->__invoke($this->valueHolder5614d2abae2e1689766849, $this, '__isset', array('name' => $name), $this->initializer5614d2abae2e1093491260);

        return isset($this->valueHolder5614d2abae2e1689766849->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2abae2e1093491260 && $this->initializer5614d2abae2e1093491260->__invoke($this->valueHolder5614d2abae2e1689766849, $this, '__unset', array('name' => $name), $this->initializer5614d2abae2e1093491260);

        unset($this->valueHolder5614d2abae2e1689766849->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2abae2e1093491260 && $this->initializer5614d2abae2e1093491260->__invoke($this->valueHolder5614d2abae2e1689766849, $this, '__clone', array(), $this->initializer5614d2abae2e1093491260);

        $this->valueHolder5614d2abae2e1689766849 = clone $this->valueHolder5614d2abae2e1689766849;
    }

    public function __sleep()
    {
        $this->initializer5614d2abae2e1093491260 && $this->initializer5614d2abae2e1093491260->__invoke($this->valueHolder5614d2abae2e1689766849, $this, '__sleep', array(), $this->initializer5614d2abae2e1093491260);

        return array('valueHolder5614d2abae2e1689766849');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2abae2e1093491260 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2abae2e1093491260;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2abae2e1093491260 && $this->initializer5614d2abae2e1093491260->__invoke($this->valueHolder5614d2abae2e1689766849, $this, 'initializeProxy', array(), $this->initializer5614d2abae2e1093491260);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2abae2e1689766849;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2abae2e1689766849;
    }


}

class OroBundleCalendarBundleAutocompleteUserCalendarHandler_000000002e47e5fd00000000e28c9ac7 extends \Oro\Bundle\CalendarBundle\Autocomplete\UserCalendarHandler implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2abb2d1a655875318 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2abb2d1a265661984 = null;

    /**
     * {@inheritDoc}
     */
    public function convertItem($calendar)
    {
        $this->initializer5614d2abb2d1a265661984 && $this->initializer5614d2abb2d1a265661984->__invoke($this->valueHolder5614d2abb2d1a655875318, $this, 'convertItem', array('calendar' => $calendar), $this->initializer5614d2abb2d1a265661984);

        return $this->valueHolder5614d2abb2d1a655875318->convertItem($calendar);
    }

    /**
     * {@inheritDoc}
     */
    public function search($query, $page, $perPage, $searchById = false)
    {
        $this->initializer5614d2abb2d1a265661984 && $this->initializer5614d2abb2d1a265661984->__invoke($this->valueHolder5614d2abb2d1a655875318, $this, 'search', array('query' => $query, 'page' => $page, 'perPage' => $perPage, 'searchById' => $searchById), $this->initializer5614d2abb2d1a265661984);

        return $this->valueHolder5614d2abb2d1a655875318->search($query, $page, $perPage, $searchById);
    }

    /**
     * {@inheritDoc}
     */
    public function getProperties()
    {
        $this->initializer5614d2abb2d1a265661984 && $this->initializer5614d2abb2d1a265661984->__invoke($this->valueHolder5614d2abb2d1a655875318, $this, 'getProperties', array(), $this->initializer5614d2abb2d1a265661984);

        return $this->valueHolder5614d2abb2d1a655875318->getProperties();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityName()
    {
        $this->initializer5614d2abb2d1a265661984 && $this->initializer5614d2abb2d1a265661984->__invoke($this->valueHolder5614d2abb2d1a655875318, $this, 'getEntityName', array(), $this->initializer5614d2abb2d1a265661984);

        return $this->valueHolder5614d2abb2d1a655875318->getEntityName();
    }

    /**
     * {@inheritDoc}
     */
    public function setProperties(array $properties)
    {
        $this->initializer5614d2abb2d1a265661984 && $this->initializer5614d2abb2d1a265661984->__invoke($this->valueHolder5614d2abb2d1a655875318, $this, 'setProperties', array('properties' => $properties), $this->initializer5614d2abb2d1a265661984);

        return $this->valueHolder5614d2abb2d1a655875318->setProperties($properties);
    }

    /**
     * {@inheritDoc}
     */
    public function setEntityNameResolver(\Oro\Bundle\EntityBundle\Provider\EntityNameResolver $entityNameResolver)
    {
        $this->initializer5614d2abb2d1a265661984 && $this->initializer5614d2abb2d1a265661984->__invoke($this->valueHolder5614d2abb2d1a655875318, $this, 'setEntityNameResolver', array('entityNameResolver' => $entityNameResolver), $this->initializer5614d2abb2d1a265661984);

        return $this->valueHolder5614d2abb2d1a655875318->setEntityNameResolver($entityNameResolver);
    }

    /**
     * {@inheritDoc}
     */
    public function decodeClassName($className)
    {
        $this->initializer5614d2abb2d1a265661984 && $this->initializer5614d2abb2d1a265661984->__invoke($this->valueHolder5614d2abb2d1a655875318, $this, 'decodeClassName', array('className' => $className), $this->initializer5614d2abb2d1a265661984);

        return $this->valueHolder5614d2abb2d1a655875318->decodeClassName($className);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2abb2d1a265661984 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2abb2d1a265661984 && $this->initializer5614d2abb2d1a265661984->__invoke($this->valueHolder5614d2abb2d1a655875318, $this, '__get', array('name' => $name), $this->initializer5614d2abb2d1a265661984);

        return $this->valueHolder5614d2abb2d1a655875318->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2abb2d1a265661984 && $this->initializer5614d2abb2d1a265661984->__invoke($this->valueHolder5614d2abb2d1a655875318, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2abb2d1a265661984);

        $this->valueHolder5614d2abb2d1a655875318->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2abb2d1a265661984 && $this->initializer5614d2abb2d1a265661984->__invoke($this->valueHolder5614d2abb2d1a655875318, $this, '__isset', array('name' => $name), $this->initializer5614d2abb2d1a265661984);

        return isset($this->valueHolder5614d2abb2d1a655875318->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2abb2d1a265661984 && $this->initializer5614d2abb2d1a265661984->__invoke($this->valueHolder5614d2abb2d1a655875318, $this, '__unset', array('name' => $name), $this->initializer5614d2abb2d1a265661984);

        unset($this->valueHolder5614d2abb2d1a655875318->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2abb2d1a265661984 && $this->initializer5614d2abb2d1a265661984->__invoke($this->valueHolder5614d2abb2d1a655875318, $this, '__clone', array(), $this->initializer5614d2abb2d1a265661984);

        $this->valueHolder5614d2abb2d1a655875318 = clone $this->valueHolder5614d2abb2d1a655875318;
    }

    public function __sleep()
    {
        $this->initializer5614d2abb2d1a265661984 && $this->initializer5614d2abb2d1a265661984->__invoke($this->valueHolder5614d2abb2d1a655875318, $this, '__sleep', array(), $this->initializer5614d2abb2d1a265661984);

        return array('valueHolder5614d2abb2d1a655875318');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2abb2d1a265661984 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2abb2d1a265661984;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2abb2d1a265661984 && $this->initializer5614d2abb2d1a265661984->__invoke($this->valueHolder5614d2abb2d1a655875318, $this, 'initializeProxy', array(), $this->initializer5614d2abb2d1a265661984);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2abb2d1a655875318;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2abb2d1a655875318;
    }


}

class OroBundleConfigBundleProviderSystemConfigurationFormProvider_000000002e47e3cb00000000e28c9ac7 extends \Oro\Bundle\ConfigBundle\Provider\SystemConfigurationFormProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2abbd514849719452 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2abbd514903024268 = null;

    /**
     * {@inheritDoc}
     */
    public function getTree()
    {
        $this->initializer5614d2abbd514903024268 && $this->initializer5614d2abbd514903024268->__invoke($this->valueHolder5614d2abbd514849719452, $this, 'getTree', array(), $this->initializer5614d2abbd514903024268);

        return $this->valueHolder5614d2abbd514849719452->getTree();
    }

    /**
     * {@inheritDoc}
     */
    public function getForm($group)
    {
        $this->initializer5614d2abbd514903024268 && $this->initializer5614d2abbd514903024268->__invoke($this->valueHolder5614d2abbd514849719452, $this, 'getForm', array('group' => $group), $this->initializer5614d2abbd514903024268);

        return $this->valueHolder5614d2abbd514849719452->getForm($group);
    }

    /**
     * {@inheritDoc}
     */
    public function chooseActiveGroups($activeGroup, $activeSubGroup)
    {
        $this->initializer5614d2abbd514903024268 && $this->initializer5614d2abbd514903024268->__invoke($this->valueHolder5614d2abbd514849719452, $this, 'chooseActiveGroups', array('activeGroup' => $activeGroup, 'activeSubGroup' => $activeSubGroup), $this->initializer5614d2abbd514903024268);

        return $this->valueHolder5614d2abbd514849719452->chooseActiveGroups($activeGroup, $activeSubGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiTree($path = null)
    {
        $this->initializer5614d2abbd514903024268 && $this->initializer5614d2abbd514903024268->__invoke($this->valueHolder5614d2abbd514849719452, $this, 'getApiTree', array('path' => $path), $this->initializer5614d2abbd514903024268);

        return $this->valueHolder5614d2abbd514849719452->getApiTree($path);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtree($subtreeRootName)
    {
        $this->initializer5614d2abbd514903024268 && $this->initializer5614d2abbd514903024268->__invoke($this->valueHolder5614d2abbd514849719452, $this, 'getSubtree', array('subtreeRootName' => $subtreeRootName), $this->initializer5614d2abbd514903024268);

        return $this->valueHolder5614d2abbd514849719452->getSubtree($subtreeRootName);
    }

    /**
     * {@inheritDoc}
     */
    public function getDataTransformer($key)
    {
        $this->initializer5614d2abbd514903024268 && $this->initializer5614d2abbd514903024268->__invoke($this->valueHolder5614d2abbd514849719452, $this, 'getDataTransformer', array('key' => $key), $this->initializer5614d2abbd514903024268);

        return $this->valueHolder5614d2abbd514849719452->getDataTransformer($key);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2abbd514903024268 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2abbd514903024268 && $this->initializer5614d2abbd514903024268->__invoke($this->valueHolder5614d2abbd514849719452, $this, '__get', array('name' => $name), $this->initializer5614d2abbd514903024268);

        return $this->valueHolder5614d2abbd514849719452->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2abbd514903024268 && $this->initializer5614d2abbd514903024268->__invoke($this->valueHolder5614d2abbd514849719452, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2abbd514903024268);

        $this->valueHolder5614d2abbd514849719452->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2abbd514903024268 && $this->initializer5614d2abbd514903024268->__invoke($this->valueHolder5614d2abbd514849719452, $this, '__isset', array('name' => $name), $this->initializer5614d2abbd514903024268);

        return isset($this->valueHolder5614d2abbd514849719452->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2abbd514903024268 && $this->initializer5614d2abbd514903024268->__invoke($this->valueHolder5614d2abbd514849719452, $this, '__unset', array('name' => $name), $this->initializer5614d2abbd514903024268);

        unset($this->valueHolder5614d2abbd514849719452->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2abbd514903024268 && $this->initializer5614d2abbd514903024268->__invoke($this->valueHolder5614d2abbd514849719452, $this, '__clone', array(), $this->initializer5614d2abbd514903024268);

        $this->valueHolder5614d2abbd514849719452 = clone $this->valueHolder5614d2abbd514849719452;
    }

    public function __sleep()
    {
        $this->initializer5614d2abbd514903024268 && $this->initializer5614d2abbd514903024268->__invoke($this->valueHolder5614d2abbd514849719452, $this, '__sleep', array(), $this->initializer5614d2abbd514903024268);

        return array('valueHolder5614d2abbd514849719452');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2abbd514903024268 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2abbd514903024268;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2abbd514903024268 && $this->initializer5614d2abbd514903024268->__invoke($this->valueHolder5614d2abbd514849719452, $this, 'initializeProxy', array(), $this->initializer5614d2abbd514903024268);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2abbd514849719452;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2abbd514849719452;
    }


}

class OroBundleConfigBundleConfigConfigApiManager_000000002e47e3dc00000000e28c9ac7 extends \Oro\Bundle\ConfigBundle\Config\ConfigApiManager implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2abc5216056840221 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2abc5216434674280 = null;

    /**
     * {@inheritDoc}
     */
    public function addConfigManager($scope, $manager)
    {
        $this->initializer5614d2abc5216434674280 && $this->initializer5614d2abc5216434674280->__invoke($this->valueHolder5614d2abc5216056840221, $this, 'addConfigManager', array('scope' => $scope, 'manager' => $manager), $this->initializer5614d2abc5216434674280);

        return $this->valueHolder5614d2abc5216056840221->addConfigManager($scope, $manager);
    }

    /**
     * {@inheritDoc}
     */
    public function getSections()
    {
        $this->initializer5614d2abc5216434674280 && $this->initializer5614d2abc5216434674280->__invoke($this->valueHolder5614d2abc5216056840221, $this, 'getSections', array(), $this->initializer5614d2abc5216434674280);

        return $this->valueHolder5614d2abc5216056840221->getSections();
    }

    /**
     * {@inheritDoc}
     */
    public function getData($path, $scope = 'user')
    {
        $this->initializer5614d2abc5216434674280 && $this->initializer5614d2abc5216434674280->__invoke($this->valueHolder5614d2abc5216056840221, $this, 'getData', array('path' => $path, 'scope' => $scope), $this->initializer5614d2abc5216434674280);

        return $this->valueHolder5614d2abc5216056840221->getData($path, $scope);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2abc5216434674280 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2abc5216434674280 && $this->initializer5614d2abc5216434674280->__invoke($this->valueHolder5614d2abc5216056840221, $this, '__get', array('name' => $name), $this->initializer5614d2abc5216434674280);

        return $this->valueHolder5614d2abc5216056840221->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2abc5216434674280 && $this->initializer5614d2abc5216434674280->__invoke($this->valueHolder5614d2abc5216056840221, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2abc5216434674280);

        $this->valueHolder5614d2abc5216056840221->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2abc5216434674280 && $this->initializer5614d2abc5216434674280->__invoke($this->valueHolder5614d2abc5216056840221, $this, '__isset', array('name' => $name), $this->initializer5614d2abc5216434674280);

        return isset($this->valueHolder5614d2abc5216056840221->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2abc5216434674280 && $this->initializer5614d2abc5216434674280->__invoke($this->valueHolder5614d2abc5216056840221, $this, '__unset', array('name' => $name), $this->initializer5614d2abc5216434674280);

        unset($this->valueHolder5614d2abc5216056840221->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2abc5216434674280 && $this->initializer5614d2abc5216434674280->__invoke($this->valueHolder5614d2abc5216056840221, $this, '__clone', array(), $this->initializer5614d2abc5216434674280);

        $this->valueHolder5614d2abc5216056840221 = clone $this->valueHolder5614d2abc5216056840221;
    }

    public function __sleep()
    {
        $this->initializer5614d2abc5216434674280 && $this->initializer5614d2abc5216434674280->__invoke($this->valueHolder5614d2abc5216056840221, $this, '__sleep', array(), $this->initializer5614d2abc5216434674280);

        return array('valueHolder5614d2abc5216056840221');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2abc5216434674280 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2abc5216434674280;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2abc5216434674280 && $this->initializer5614d2abc5216434674280->__invoke($this->valueHolder5614d2abc5216056840221, $this, 'initializeProxy', array(), $this->initializer5614d2abc5216434674280);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2abc5216056840221;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2abc5216056840221;
    }


}

class OroBundleDataAuditBundleEventListenerEntityListener_000000002e47ec0e00000000e28c9ac7 extends \Oro\Bundle\DataAuditBundle\EventListener\EntityListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2abcafd8386087760 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2abcafd8401699106 = null;

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled = true)
    {
        $this->initializer5614d2abcafd8401699106 && $this->initializer5614d2abcafd8401699106->__invoke($this->valueHolder5614d2abcafd8386087760, $this, 'setEnabled', array('enabled' => $enabled), $this->initializer5614d2abcafd8401699106);

        return $this->valueHolder5614d2abcafd8386087760->setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function onFlush(\Doctrine\ORM\Event\OnFlushEventArgs $event)
    {
        $this->initializer5614d2abcafd8401699106 && $this->initializer5614d2abcafd8401699106->__invoke($this->valueHolder5614d2abcafd8386087760, $this, 'onFlush', array('event' => $event), $this->initializer5614d2abcafd8401699106);

        return $this->valueHolder5614d2abcafd8386087760->onFlush($event);
    }

    /**
     * {@inheritDoc}
     */
    public function loadClassMetadata(\Doctrine\ORM\Event\LoadClassMetadataEventArgs $event)
    {
        $this->initializer5614d2abcafd8401699106 && $this->initializer5614d2abcafd8401699106->__invoke($this->valueHolder5614d2abcafd8386087760, $this, 'loadClassMetadata', array('event' => $event), $this->initializer5614d2abcafd8401699106);

        return $this->valueHolder5614d2abcafd8386087760->loadClassMetadata($event);
    }

    /**
     * {@inheritDoc}
     */
    public function postPersist(\Doctrine\ORM\Event\LifecycleEventArgs $event)
    {
        $this->initializer5614d2abcafd8401699106 && $this->initializer5614d2abcafd8401699106->__invoke($this->valueHolder5614d2abcafd8386087760, $this, 'postPersist', array('event' => $event), $this->initializer5614d2abcafd8401699106);

        return $this->valueHolder5614d2abcafd8386087760->postPersist($event);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2abcafd8401699106 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2abcafd8401699106 && $this->initializer5614d2abcafd8401699106->__invoke($this->valueHolder5614d2abcafd8386087760, $this, '__get', array('name' => $name), $this->initializer5614d2abcafd8401699106);

        return $this->valueHolder5614d2abcafd8386087760->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2abcafd8401699106 && $this->initializer5614d2abcafd8401699106->__invoke($this->valueHolder5614d2abcafd8386087760, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2abcafd8401699106);

        $this->valueHolder5614d2abcafd8386087760->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2abcafd8401699106 && $this->initializer5614d2abcafd8401699106->__invoke($this->valueHolder5614d2abcafd8386087760, $this, '__isset', array('name' => $name), $this->initializer5614d2abcafd8401699106);

        return isset($this->valueHolder5614d2abcafd8386087760->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2abcafd8401699106 && $this->initializer5614d2abcafd8401699106->__invoke($this->valueHolder5614d2abcafd8386087760, $this, '__unset', array('name' => $name), $this->initializer5614d2abcafd8401699106);

        unset($this->valueHolder5614d2abcafd8386087760->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2abcafd8401699106 && $this->initializer5614d2abcafd8401699106->__invoke($this->valueHolder5614d2abcafd8386087760, $this, '__clone', array(), $this->initializer5614d2abcafd8401699106);

        $this->valueHolder5614d2abcafd8386087760 = clone $this->valueHolder5614d2abcafd8386087760;
    }

    public function __sleep()
    {
        $this->initializer5614d2abcafd8401699106 && $this->initializer5614d2abcafd8401699106->__invoke($this->valueHolder5614d2abcafd8386087760, $this, '__sleep', array(), $this->initializer5614d2abcafd8401699106);

        return array('valueHolder5614d2abcafd8386087760');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2abcafd8401699106 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2abcafd8401699106;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2abcafd8401699106 && $this->initializer5614d2abcafd8401699106->__invoke($this->valueHolder5614d2abcafd8386087760, $this, 'initializeProxy', array(), $this->initializer5614d2abcafd8401699106);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2abcafd8386087760;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2abcafd8386087760;
    }


}

class OroBundleDataAuditBundleEventListenerDeprecatedAuditDataListener_000000002e47ec0800000000e28c9ac7 extends \Oro\Bundle\DataAuditBundle\EventListener\DeprecatedAuditDataListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2abd1951478740559 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2abd1951421304209 = null;

    /**
     * {@inheritDoc}
     */
    public function onFlush(\Doctrine\ORM\Event\OnFlushEventArgs $args)
    {
        $this->initializer5614d2abd1951421304209 && $this->initializer5614d2abd1951421304209->__invoke($this->valueHolder5614d2abd1951478740559, $this, 'onFlush', array('args' => $args), $this->initializer5614d2abd1951421304209);

        return $this->valueHolder5614d2abd1951478740559->onFlush($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postFlush(\Doctrine\ORM\Event\PostFlushEventArgs $args)
    {
        $this->initializer5614d2abd1951421304209 && $this->initializer5614d2abd1951421304209->__invoke($this->valueHolder5614d2abd1951478740559, $this, 'postFlush', array('args' => $args), $this->initializer5614d2abd1951421304209);

        return $this->valueHolder5614d2abd1951478740559->postFlush($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2abd1951421304209 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2abd1951421304209 && $this->initializer5614d2abd1951421304209->__invoke($this->valueHolder5614d2abd1951478740559, $this, '__get', array('name' => $name), $this->initializer5614d2abd1951421304209);

        return $this->valueHolder5614d2abd1951478740559->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2abd1951421304209 && $this->initializer5614d2abd1951421304209->__invoke($this->valueHolder5614d2abd1951478740559, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2abd1951421304209);

        $this->valueHolder5614d2abd1951478740559->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2abd1951421304209 && $this->initializer5614d2abd1951421304209->__invoke($this->valueHolder5614d2abd1951478740559, $this, '__isset', array('name' => $name), $this->initializer5614d2abd1951421304209);

        return isset($this->valueHolder5614d2abd1951478740559->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2abd1951421304209 && $this->initializer5614d2abd1951421304209->__invoke($this->valueHolder5614d2abd1951478740559, $this, '__unset', array('name' => $name), $this->initializer5614d2abd1951421304209);

        unset($this->valueHolder5614d2abd1951478740559->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2abd1951421304209 && $this->initializer5614d2abd1951421304209->__invoke($this->valueHolder5614d2abd1951478740559, $this, '__clone', array(), $this->initializer5614d2abd1951421304209);

        $this->valueHolder5614d2abd1951478740559 = clone $this->valueHolder5614d2abd1951478740559;
    }

    public function __sleep()
    {
        $this->initializer5614d2abd1951421304209 && $this->initializer5614d2abd1951421304209->__invoke($this->valueHolder5614d2abd1951478740559, $this, '__sleep', array(), $this->initializer5614d2abd1951421304209);

        return array('valueHolder5614d2abd1951478740559');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2abd1951421304209 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2abd1951421304209;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2abd1951421304209 && $this->initializer5614d2abd1951421304209->__invoke($this->valueHolder5614d2abd1951478740559, $this, 'initializeProxy', array(), $this->initializer5614d2abd1951421304209);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2abd1951478740559;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2abd1951478740559;
    }


}

class OroBundleDataGridBundleDatagridBuilder_000000002e47ec4700000000e28c9ac7 extends \Oro\Bundle\DataGridBundle\Datagrid\Builder implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2abd6b5a779245612 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2abd6b5a394998551 = null;

    /**
     * {@inheritDoc}
     */
    public function build(\Oro\Bundle\DataGridBundle\Datagrid\Common\DatagridConfiguration $config, \Oro\Bundle\DataGridBundle\Datagrid\ParameterBag $parameters)
    {
        $this->initializer5614d2abd6b5a394998551 && $this->initializer5614d2abd6b5a394998551->__invoke($this->valueHolder5614d2abd6b5a779245612, $this, 'build', array('config' => $config, 'parameters' => $parameters), $this->initializer5614d2abd6b5a394998551);

        return $this->valueHolder5614d2abd6b5a779245612->build($config, $parameters);
    }

    /**
     * {@inheritDoc}
     */
    public function registerDatasource($type, \Oro\Bundle\DataGridBundle\Datasource\DatasourceInterface $dataSource)
    {
        $this->initializer5614d2abd6b5a394998551 && $this->initializer5614d2abd6b5a394998551->__invoke($this->valueHolder5614d2abd6b5a779245612, $this, 'registerDatasource', array('type' => $type, 'dataSource' => $dataSource), $this->initializer5614d2abd6b5a394998551);

        return $this->valueHolder5614d2abd6b5a779245612->registerDatasource($type, $dataSource);
    }

    /**
     * {@inheritDoc}
     */
    public function registerExtension(\Oro\Bundle\DataGridBundle\Extension\ExtensionVisitorInterface $extension)
    {
        $this->initializer5614d2abd6b5a394998551 && $this->initializer5614d2abd6b5a394998551->__invoke($this->valueHolder5614d2abd6b5a779245612, $this, 'registerExtension', array('extension' => $extension), $this->initializer5614d2abd6b5a394998551);

        return $this->valueHolder5614d2abd6b5a779245612->registerExtension($extension);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2abd6b5a394998551 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2abd6b5a394998551 && $this->initializer5614d2abd6b5a394998551->__invoke($this->valueHolder5614d2abd6b5a779245612, $this, '__get', array('name' => $name), $this->initializer5614d2abd6b5a394998551);

        return $this->valueHolder5614d2abd6b5a779245612->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2abd6b5a394998551 && $this->initializer5614d2abd6b5a394998551->__invoke($this->valueHolder5614d2abd6b5a779245612, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2abd6b5a394998551);

        $this->valueHolder5614d2abd6b5a779245612->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2abd6b5a394998551 && $this->initializer5614d2abd6b5a394998551->__invoke($this->valueHolder5614d2abd6b5a779245612, $this, '__isset', array('name' => $name), $this->initializer5614d2abd6b5a394998551);

        return isset($this->valueHolder5614d2abd6b5a779245612->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2abd6b5a394998551 && $this->initializer5614d2abd6b5a394998551->__invoke($this->valueHolder5614d2abd6b5a779245612, $this, '__unset', array('name' => $name), $this->initializer5614d2abd6b5a394998551);

        unset($this->valueHolder5614d2abd6b5a779245612->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2abd6b5a394998551 && $this->initializer5614d2abd6b5a394998551->__invoke($this->valueHolder5614d2abd6b5a779245612, $this, '__clone', array(), $this->initializer5614d2abd6b5a394998551);

        $this->valueHolder5614d2abd6b5a779245612 = clone $this->valueHolder5614d2abd6b5a779245612;
    }

    public function __sleep()
    {
        $this->initializer5614d2abd6b5a394998551 && $this->initializer5614d2abd6b5a394998551->__invoke($this->valueHolder5614d2abd6b5a779245612, $this, '__sleep', array(), $this->initializer5614d2abd6b5a394998551);

        return array('valueHolder5614d2abd6b5a779245612');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2abd6b5a394998551 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2abd6b5a394998551;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2abd6b5a394998551 && $this->initializer5614d2abd6b5a394998551->__invoke($this->valueHolder5614d2abd6b5a779245612, $this, 'initializeProxy', array(), $this->initializer5614d2abd6b5a394998551);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2abd6b5a779245612;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2abd6b5a779245612;
    }


}

class OroBundleDataGridBundleExtensionFormatterFormatterExtension_000000002e47eca300000000e28c9ac7 extends \Oro\Bundle\DataGridBundle\Extension\Formatter\FormatterExtension implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2abef9d0385797939 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2abef9d0191101408 = null;

    /**
     * {@inheritDoc}
     */
    public function isApplicable(\Oro\Bundle\DataGridBundle\Datagrid\Common\DatagridConfiguration $config)
    {
        $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, 'isApplicable', array('config' => $config), $this->initializer5614d2abef9d0191101408);

        return $this->valueHolder5614d2abef9d0385797939->isApplicable($config);
    }

    /**
     * {@inheritDoc}
     */
    public function processConfigs(\Oro\Bundle\DataGridBundle\Datagrid\Common\DatagridConfiguration $config)
    {
        $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, 'processConfigs', array('config' => $config), $this->initializer5614d2abef9d0191101408);

        return $this->valueHolder5614d2abef9d0385797939->processConfigs($config);
    }

    /**
     * {@inheritDoc}
     */
    public function visitResult(\Oro\Bundle\DataGridBundle\Datagrid\Common\DatagridConfiguration $config, \Oro\Bundle\DataGridBundle\Datagrid\Common\ResultsObject $result)
    {
        $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, 'visitResult', array('config' => $config, 'result' => $result), $this->initializer5614d2abef9d0191101408);

        return $this->valueHolder5614d2abef9d0385797939->visitResult($config, $result);
    }

    /**
     * {@inheritDoc}
     */
    public function visitMetadata(\Oro\Bundle\DataGridBundle\Datagrid\Common\DatagridConfiguration $config, \Oro\Bundle\DataGridBundle\Datagrid\Common\MetadataObject $data)
    {
        $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, 'visitMetadata', array('config' => $config, 'data' => $data), $this->initializer5614d2abef9d0191101408);

        return $this->valueHolder5614d2abef9d0385797939->visitMetadata($config, $data);
    }

    /**
     * {@inheritDoc}
     */
    public function registerProperty($name, \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\PropertyInterface $property)
    {
        $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, 'registerProperty', array('name' => $name, 'property' => $property), $this->initializer5614d2abef9d0191101408);

        return $this->valueHolder5614d2abef9d0385797939->registerProperty($name, $property);
    }

    /**
     * {@inheritDoc}
     */
    public function visitDatasource(\Oro\Bundle\DataGridBundle\Datagrid\Common\DatagridConfiguration $config, \Oro\Bundle\DataGridBundle\Datasource\DatasourceInterface $datasource)
    {
        $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, 'visitDatasource', array('config' => $config, 'datasource' => $datasource), $this->initializer5614d2abef9d0191101408);

        return $this->valueHolder5614d2abef9d0385797939->visitDatasource($config, $datasource);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriority()
    {
        $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, 'getPriority', array(), $this->initializer5614d2abef9d0191101408);

        return $this->valueHolder5614d2abef9d0385797939->getPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function getParameters()
    {
        $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, 'getParameters', array(), $this->initializer5614d2abef9d0191101408);

        return $this->valueHolder5614d2abef9d0385797939->getParameters();
    }

    /**
     * {@inheritDoc}
     */
    public function setParameters(\Oro\Bundle\DataGridBundle\Datagrid\ParameterBag $parameters)
    {
        $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, 'setParameters', array('parameters' => $parameters), $this->initializer5614d2abef9d0191101408);

        return $this->valueHolder5614d2abef9d0385797939->setParameters($parameters);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2abef9d0191101408 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, '__get', array('name' => $name), $this->initializer5614d2abef9d0191101408);

        return $this->valueHolder5614d2abef9d0385797939->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2abef9d0191101408);

        $this->valueHolder5614d2abef9d0385797939->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, '__isset', array('name' => $name), $this->initializer5614d2abef9d0191101408);

        return isset($this->valueHolder5614d2abef9d0385797939->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, '__unset', array('name' => $name), $this->initializer5614d2abef9d0191101408);

        unset($this->valueHolder5614d2abef9d0385797939->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, '__clone', array(), $this->initializer5614d2abef9d0191101408);

        $this->valueHolder5614d2abef9d0385797939 = clone $this->valueHolder5614d2abef9d0385797939;
    }

    public function __sleep()
    {
        $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, '__sleep', array(), $this->initializer5614d2abef9d0191101408);

        return array('valueHolder5614d2abef9d0385797939');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2abef9d0191101408 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2abef9d0191101408;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2abef9d0191101408 && $this->initializer5614d2abef9d0191101408->__invoke($this->valueHolder5614d2abef9d0385797939, $this, 'initializeProxy', array(), $this->initializer5614d2abef9d0191101408);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2abef9d0385797939;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2abef9d0385797939;
    }


}

class OroBundleDistributionBundleManagerPackageManager_000000002e47eccc00000000e28c9ac7 extends \Oro\Bundle\DistributionBundle\Manager\PackageManager implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ac20571228062392 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ac20571246756563 = null;

    /**
     * {@inheritDoc}
     */
    public function getInstalled()
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, 'getInstalled', array(), $this->initializer5614d2ac20571246756563);

        return $this->valueHolder5614d2ac20571228062392->getInstalled();
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailable()
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, 'getAvailable', array(), $this->initializer5614d2ac20571246756563);

        return $this->valueHolder5614d2ac20571228062392->getAvailable();
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailableVersions($packageName)
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, 'getAvailableVersions', array('packageName' => $packageName), $this->initializer5614d2ac20571246756563);

        return $this->valueHolder5614d2ac20571228062392->getAvailableVersions($packageName);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreferredPackage($packageName, $version = null)
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, 'getPreferredPackage', array('packageName' => $packageName, 'version' => $version), $this->initializer5614d2ac20571246756563);

        return $this->valueHolder5614d2ac20571228062392->getPreferredPackage($packageName, $version);
    }

    /**
     * {@inheritDoc}
     */
    public function getRequirements($packageName, $packageVersion = null)
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, 'getRequirements', array('packageName' => $packageName, 'packageVersion' => $packageVersion), $this->initializer5614d2ac20571246756563);

        return $this->valueHolder5614d2ac20571228062392->getRequirements($packageName, $packageVersion);
    }

    /**
     * {@inheritDoc}
     */
    public function isPackageInstalled($packageName)
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, 'isPackageInstalled', array('packageName' => $packageName), $this->initializer5614d2ac20571246756563);

        return $this->valueHolder5614d2ac20571228062392->isPackageInstalled($packageName);
    }

    /**
     * {@inheritDoc}
     */
    public function install($packageName, $packageVersion = null, $loadDemoData = false)
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, 'install', array('packageName' => $packageName, 'packageVersion' => $packageVersion, 'loadDemoData' => $loadDemoData), $this->initializer5614d2ac20571246756563);

        return $this->valueHolder5614d2ac20571228062392->install($packageName, $packageVersion, $loadDemoData);
    }

    /**
     * {@inheritDoc}
     */
    public function getDependents($needleName)
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, 'getDependents', array('needleName' => $needleName), $this->initializer5614d2ac20571246756563);

        return $this->valueHolder5614d2ac20571228062392->getDependents($needleName);
    }

    /**
     * {@inheritDoc}
     */
    public function uninstall(array $packageNames)
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, 'uninstall', array('packageNames' => $packageNames), $this->initializer5614d2ac20571246756563);

        return $this->valueHolder5614d2ac20571228062392->uninstall($packageNames);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailableUpdates()
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, 'getAvailableUpdates', array(), $this->initializer5614d2ac20571246756563);

        return $this->valueHolder5614d2ac20571228062392->getAvailableUpdates();
    }

    /**
     * {@inheritDoc}
     */
    public function isUpdateAvailable($packageName)
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, 'isUpdateAvailable', array('packageName' => $packageName), $this->initializer5614d2ac20571246756563);

        return $this->valueHolder5614d2ac20571228062392->isUpdateAvailable($packageName);
    }

    /**
     * {@inheritDoc}
     */
    public function getPackageUpdate(\Composer\Package\PackageInterface $package)
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, 'getPackageUpdate', array('package' => $package), $this->initializer5614d2ac20571246756563);

        return $this->valueHolder5614d2ac20571228062392->getPackageUpdate($package);
    }

    /**
     * {@inheritDoc}
     */
    public function update($packageName)
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, 'update', array('packageName' => $packageName), $this->initializer5614d2ac20571246756563);

        return $this->valueHolder5614d2ac20571228062392->update($packageName);
    }

    /**
     * {@inheritDoc}
     */
    public function canBeDeleted($packageName)
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, 'canBeDeleted', array('packageName' => $packageName), $this->initializer5614d2ac20571246756563);

        return $this->valueHolder5614d2ac20571228062392->canBeDeleted($packageName);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ac20571246756563 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, '__get', array('name' => $name), $this->initializer5614d2ac20571246756563);

        return $this->valueHolder5614d2ac20571228062392->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ac20571246756563);

        $this->valueHolder5614d2ac20571228062392->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, '__isset', array('name' => $name), $this->initializer5614d2ac20571246756563);

        return isset($this->valueHolder5614d2ac20571228062392->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, '__unset', array('name' => $name), $this->initializer5614d2ac20571246756563);

        unset($this->valueHolder5614d2ac20571228062392->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, '__clone', array(), $this->initializer5614d2ac20571246756563);

        $this->valueHolder5614d2ac20571228062392 = clone $this->valueHolder5614d2ac20571228062392;
    }

    public function __sleep()
    {
        $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, '__sleep', array(), $this->initializer5614d2ac20571246756563);

        return array('valueHolder5614d2ac20571228062392');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ac20571246756563 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ac20571246756563;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ac20571246756563 && $this->initializer5614d2ac20571246756563->__invoke($this->valueHolder5614d2ac20571228062392, $this, 'initializeProxy', array(), $this->initializer5614d2ac20571246756563);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ac20571228062392;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ac20571228062392;
    }


}

class OroBundleImapBundleEventListenerUserEmailOriginListener_000000002e47ef7d00000000e28c9ac7 extends \Oro\Bundle\ImapBundle\EventListener\UserEmailOriginListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ac44f69509299010 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ac44f69074852590 = null;

    /**
     * {@inheritDoc}
     */
    public function prePersist(\Doctrine\Common\Persistence\Event\LifecycleEventArgs $event)
    {
        $this->initializer5614d2ac44f69074852590 && $this->initializer5614d2ac44f69074852590->__invoke($this->valueHolder5614d2ac44f69509299010, $this, 'prePersist', array('event' => $event), $this->initializer5614d2ac44f69074852590);

        return $this->valueHolder5614d2ac44f69509299010->prePersist($event);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ac44f69074852590 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ac44f69074852590 && $this->initializer5614d2ac44f69074852590->__invoke($this->valueHolder5614d2ac44f69509299010, $this, '__get', array('name' => $name), $this->initializer5614d2ac44f69074852590);

        return $this->valueHolder5614d2ac44f69509299010->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ac44f69074852590 && $this->initializer5614d2ac44f69074852590->__invoke($this->valueHolder5614d2ac44f69509299010, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ac44f69074852590);

        $this->valueHolder5614d2ac44f69509299010->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ac44f69074852590 && $this->initializer5614d2ac44f69074852590->__invoke($this->valueHolder5614d2ac44f69509299010, $this, '__isset', array('name' => $name), $this->initializer5614d2ac44f69074852590);

        return isset($this->valueHolder5614d2ac44f69509299010->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ac44f69074852590 && $this->initializer5614d2ac44f69074852590->__invoke($this->valueHolder5614d2ac44f69509299010, $this, '__unset', array('name' => $name), $this->initializer5614d2ac44f69074852590);

        unset($this->valueHolder5614d2ac44f69509299010->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ac44f69074852590 && $this->initializer5614d2ac44f69074852590->__invoke($this->valueHolder5614d2ac44f69509299010, $this, '__clone', array(), $this->initializer5614d2ac44f69074852590);

        $this->valueHolder5614d2ac44f69509299010 = clone $this->valueHolder5614d2ac44f69509299010;
    }

    public function __sleep()
    {
        $this->initializer5614d2ac44f69074852590 && $this->initializer5614d2ac44f69074852590->__invoke($this->valueHolder5614d2ac44f69509299010, $this, '__sleep', array(), $this->initializer5614d2ac44f69074852590);

        return array('valueHolder5614d2ac44f69509299010');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ac44f69074852590 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ac44f69074852590;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ac44f69074852590 && $this->initializer5614d2ac44f69074852590->__invoke($this->valueHolder5614d2ac44f69509299010, $this, 'initializeProxy', array(), $this->initializer5614d2ac44f69074852590);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ac44f69509299010;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ac44f69509299010;
    }


}

class OroBundleImportExportBundleJobJobExecutor_000000002e47ef9800000000e28c9ac7 extends \Oro\Bundle\ImportExportBundle\Job\JobExecutor implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ac48232877448079 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ac48232325779119 = null;

    /**
     * {@inheritDoc}
     */
    public function executeJob($jobType, $jobName, array $configuration = array())
    {
        $this->initializer5614d2ac48232325779119 && $this->initializer5614d2ac48232325779119->__invoke($this->valueHolder5614d2ac48232877448079, $this, 'executeJob', array('jobType' => $jobType, 'jobName' => $jobName, 'configuration' => $configuration), $this->initializer5614d2ac48232325779119);

        return $this->valueHolder5614d2ac48232877448079->executeJob($jobType, $jobName, $configuration);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobErrors($jobCode)
    {
        $this->initializer5614d2ac48232325779119 && $this->initializer5614d2ac48232325779119->__invoke($this->valueHolder5614d2ac48232877448079, $this, 'getJobErrors', array('jobCode' => $jobCode), $this->initializer5614d2ac48232325779119);

        return $this->valueHolder5614d2ac48232877448079->getJobErrors($jobCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobFailureExceptions($jobCode)
    {
        $this->initializer5614d2ac48232325779119 && $this->initializer5614d2ac48232325779119->__invoke($this->valueHolder5614d2ac48232877448079, $this, 'getJobFailureExceptions', array('jobCode' => $jobCode), $this->initializer5614d2ac48232325779119);

        return $this->valueHolder5614d2ac48232877448079->getJobFailureExceptions($jobCode);
    }

    /**
     * {@inheritDoc}
     */
    public function setSkipClear($skipClear)
    {
        $this->initializer5614d2ac48232325779119 && $this->initializer5614d2ac48232325779119->__invoke($this->valueHolder5614d2ac48232877448079, $this, 'setSkipClear', array('skipClear' => $skipClear), $this->initializer5614d2ac48232325779119);

        return $this->valueHolder5614d2ac48232877448079->setSkipClear($skipClear);
    }

    /**
     * {@inheritDoc}
     */
    public function isSkipClear()
    {
        $this->initializer5614d2ac48232325779119 && $this->initializer5614d2ac48232325779119->__invoke($this->valueHolder5614d2ac48232877448079, $this, 'isSkipClear', array(), $this->initializer5614d2ac48232325779119);

        return $this->valueHolder5614d2ac48232877448079->isSkipClear();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidationMode($validationMode)
    {
        $this->initializer5614d2ac48232325779119 && $this->initializer5614d2ac48232325779119->__invoke($this->valueHolder5614d2ac48232877448079, $this, 'setValidationMode', array('validationMode' => $validationMode), $this->initializer5614d2ac48232325779119);

        return $this->valueHolder5614d2ac48232877448079->setValidationMode($validationMode);
    }

    /**
     * {@inheritDoc}
     */
    public function isValidationMode()
    {
        $this->initializer5614d2ac48232325779119 && $this->initializer5614d2ac48232325779119->__invoke($this->valueHolder5614d2ac48232877448079, $this, 'isValidationMode', array(), $this->initializer5614d2ac48232325779119);

        return $this->valueHolder5614d2ac48232877448079->isValidationMode();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ac48232325779119 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ac48232325779119 && $this->initializer5614d2ac48232325779119->__invoke($this->valueHolder5614d2ac48232877448079, $this, '__get', array('name' => $name), $this->initializer5614d2ac48232325779119);

        return $this->valueHolder5614d2ac48232877448079->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ac48232325779119 && $this->initializer5614d2ac48232325779119->__invoke($this->valueHolder5614d2ac48232877448079, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ac48232325779119);

        $this->valueHolder5614d2ac48232877448079->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ac48232325779119 && $this->initializer5614d2ac48232325779119->__invoke($this->valueHolder5614d2ac48232877448079, $this, '__isset', array('name' => $name), $this->initializer5614d2ac48232325779119);

        return isset($this->valueHolder5614d2ac48232877448079->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ac48232325779119 && $this->initializer5614d2ac48232325779119->__invoke($this->valueHolder5614d2ac48232877448079, $this, '__unset', array('name' => $name), $this->initializer5614d2ac48232325779119);

        unset($this->valueHolder5614d2ac48232877448079->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ac48232325779119 && $this->initializer5614d2ac48232325779119->__invoke($this->valueHolder5614d2ac48232877448079, $this, '__clone', array(), $this->initializer5614d2ac48232325779119);

        $this->valueHolder5614d2ac48232877448079 = clone $this->valueHolder5614d2ac48232877448079;
    }

    public function __sleep()
    {
        $this->initializer5614d2ac48232325779119 && $this->initializer5614d2ac48232325779119->__invoke($this->valueHolder5614d2ac48232877448079, $this, '__sleep', array(), $this->initializer5614d2ac48232325779119);

        return array('valueHolder5614d2ac48232877448079');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ac48232325779119 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ac48232325779119;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ac48232325779119 && $this->initializer5614d2ac48232325779119->__invoke($this->valueHolder5614d2ac48232877448079, $this, 'initializeProxy', array(), $this->initializer5614d2ac48232325779119);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ac48232877448079;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ac48232877448079;
    }


}

class OroBundleImportExportBundleHandlerHttpImportHandler_000000002e47d26000000000e28c9ac7 extends \Oro\Bundle\ImportExportBundle\Handler\HttpImportHandler implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ac54585298371105 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ac54585923691977 = null;

    /**
     * {@inheritDoc}
     */
    public function setSession(\Symfony\Component\HttpFoundation\Session\SessionInterface $session)
    {
        $this->initializer5614d2ac54585923691977 && $this->initializer5614d2ac54585923691977->__invoke($this->valueHolder5614d2ac54585298371105, $this, 'setSession', array('session' => $session), $this->initializer5614d2ac54585923691977);

        return $this->valueHolder5614d2ac54585298371105->setSession($session);
    }

    /**
     * {@inheritDoc}
     */
    public function setRouter(\Symfony\Component\Routing\RouterInterface $router)
    {
        $this->initializer5614d2ac54585923691977 && $this->initializer5614d2ac54585923691977->__invoke($this->valueHolder5614d2ac54585298371105, $this, 'setRouter', array('router' => $router), $this->initializer5614d2ac54585923691977);

        return $this->valueHolder5614d2ac54585298371105->setRouter($router);
    }

    /**
     * {@inheritDoc}
     */
    public function handleImportValidation($jobName, $processorAlias, $inputFormat = 'csv', $inputFilePrefix = null, array $options = array())
    {
        $this->initializer5614d2ac54585923691977 && $this->initializer5614d2ac54585923691977->__invoke($this->valueHolder5614d2ac54585298371105, $this, 'handleImportValidation', array('jobName' => $jobName, 'processorAlias' => $processorAlias, 'inputFormat' => $inputFormat, 'inputFilePrefix' => $inputFilePrefix, 'options' => $options), $this->initializer5614d2ac54585923691977);

        return $this->valueHolder5614d2ac54585298371105->handleImportValidation($jobName, $processorAlias, $inputFormat, $inputFilePrefix, $options);
    }

    /**
     * {@inheritDoc}
     */
    public function handleImport($jobName, $processorAlias, $inputFormat = 'csv', $inputFilePrefix = null, array $options = array())
    {
        $this->initializer5614d2ac54585923691977 && $this->initializer5614d2ac54585923691977->__invoke($this->valueHolder5614d2ac54585298371105, $this, 'handleImport', array('jobName' => $jobName, 'processorAlias' => $processorAlias, 'inputFormat' => $inputFormat, 'inputFilePrefix' => $inputFilePrefix, 'options' => $options), $this->initializer5614d2ac54585923691977);

        return $this->valueHolder5614d2ac54585298371105->handleImport($jobName, $processorAlias, $inputFormat, $inputFilePrefix, $options);
    }

    /**
     * {@inheritDoc}
     */
    public function saveImportingFile(\Symfony\Component\HttpFoundation\File\File $file, $temporaryFilePrefix, $temporaryFileExtension)
    {
        $this->initializer5614d2ac54585923691977 && $this->initializer5614d2ac54585923691977->__invoke($this->valueHolder5614d2ac54585298371105, $this, 'saveImportingFile', array('file' => $file, 'temporaryFilePrefix' => $temporaryFilePrefix, 'temporaryFileExtension' => $temporaryFileExtension), $this->initializer5614d2ac54585923691977);

        return $this->valueHolder5614d2ac54585298371105->saveImportingFile($file, $temporaryFilePrefix, $temporaryFileExtension);
    }

    /**
     * {@inheritDoc}
     */
    public function setTranslator(\Symfony\Component\Translation\TranslatorInterface $translator)
    {
        $this->initializer5614d2ac54585923691977 && $this->initializer5614d2ac54585923691977->__invoke($this->valueHolder5614d2ac54585298371105, $this, 'setTranslator', array('translator' => $translator), $this->initializer5614d2ac54585923691977);

        return $this->valueHolder5614d2ac54585298371105->setTranslator($translator);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ac54585923691977 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ac54585923691977 && $this->initializer5614d2ac54585923691977->__invoke($this->valueHolder5614d2ac54585298371105, $this, '__get', array('name' => $name), $this->initializer5614d2ac54585923691977);

        return $this->valueHolder5614d2ac54585298371105->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ac54585923691977 && $this->initializer5614d2ac54585923691977->__invoke($this->valueHolder5614d2ac54585298371105, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ac54585923691977);

        $this->valueHolder5614d2ac54585298371105->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ac54585923691977 && $this->initializer5614d2ac54585923691977->__invoke($this->valueHolder5614d2ac54585298371105, $this, '__isset', array('name' => $name), $this->initializer5614d2ac54585923691977);

        return isset($this->valueHolder5614d2ac54585298371105->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ac54585923691977 && $this->initializer5614d2ac54585923691977->__invoke($this->valueHolder5614d2ac54585298371105, $this, '__unset', array('name' => $name), $this->initializer5614d2ac54585923691977);

        unset($this->valueHolder5614d2ac54585298371105->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ac54585923691977 && $this->initializer5614d2ac54585923691977->__invoke($this->valueHolder5614d2ac54585298371105, $this, '__clone', array(), $this->initializer5614d2ac54585923691977);

        $this->valueHolder5614d2ac54585298371105 = clone $this->valueHolder5614d2ac54585298371105;
    }

    public function __sleep()
    {
        $this->initializer5614d2ac54585923691977 && $this->initializer5614d2ac54585923691977->__invoke($this->valueHolder5614d2ac54585298371105, $this, '__sleep', array(), $this->initializer5614d2ac54585923691977);

        return array('valueHolder5614d2ac54585298371105');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ac54585923691977 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ac54585923691977;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ac54585923691977 && $this->initializer5614d2ac54585923691977->__invoke($this->valueHolder5614d2ac54585298371105, $this, 'initializeProxy', array(), $this->initializer5614d2ac54585923691977);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ac54585298371105;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ac54585298371105;
    }


}

class OroBundleImportExportBundleHandlerExportHandler_000000002e47d26100000000e28c9ac7 extends \Oro\Bundle\ImportExportBundle\Handler\ExportHandler implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ac66699138100468 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ac66699345527183 = null;

    /**
     * {@inheritDoc}
     */
    public function setMimeTypeGuesser(\Oro\Bundle\ImportExportBundle\MimeType\MimeTypeGuesser $mimeTypeGuesser)
    {
        $this->initializer5614d2ac66699345527183 && $this->initializer5614d2ac66699345527183->__invoke($this->valueHolder5614d2ac66699138100468, $this, 'setMimeTypeGuesser', array('mimeTypeGuesser' => $mimeTypeGuesser), $this->initializer5614d2ac66699345527183);

        return $this->valueHolder5614d2ac66699138100468->setMimeTypeGuesser($mimeTypeGuesser);
    }

    /**
     * {@inheritDoc}
     */
    public function setRouter(\Symfony\Component\Routing\RouterInterface $router)
    {
        $this->initializer5614d2ac66699345527183 && $this->initializer5614d2ac66699345527183->__invoke($this->valueHolder5614d2ac66699138100468, $this, 'setRouter', array('router' => $router), $this->initializer5614d2ac66699345527183);

        return $this->valueHolder5614d2ac66699138100468->setRouter($router);
    }

    /**
     * {@inheritDoc}
     */
    public function getExportResult($jobName, $processorAlias, $processorType = 'export', $outputFormat = 'csv', $outputFilePrefix = null, array $options = array())
    {
        $this->initializer5614d2ac66699345527183 && $this->initializer5614d2ac66699345527183->__invoke($this->valueHolder5614d2ac66699138100468, $this, 'getExportResult', array('jobName' => $jobName, 'processorAlias' => $processorAlias, 'processorType' => $processorType, 'outputFormat' => $outputFormat, 'outputFilePrefix' => $outputFilePrefix, 'options' => $options), $this->initializer5614d2ac66699345527183);

        return $this->valueHolder5614d2ac66699138100468->getExportResult($jobName, $processorAlias, $processorType, $outputFormat, $outputFilePrefix, $options);
    }

    /**
     * {@inheritDoc}
     */
    public function handleExport($jobName, $processorAlias, $exportType = 'export', $outputFormat = 'csv', $outputFilePrefix = null, array $options = array())
    {
        $this->initializer5614d2ac66699345527183 && $this->initializer5614d2ac66699345527183->__invoke($this->valueHolder5614d2ac66699138100468, $this, 'handleExport', array('jobName' => $jobName, 'processorAlias' => $processorAlias, 'exportType' => $exportType, 'outputFormat' => $outputFormat, 'outputFilePrefix' => $outputFilePrefix, 'options' => $options), $this->initializer5614d2ac66699345527183);

        return $this->valueHolder5614d2ac66699138100468->handleExport($jobName, $processorAlias, $exportType, $outputFormat, $outputFilePrefix, $options);
    }

    /**
     * {@inheritDoc}
     */
    public function handleDownloadExportResult($fileName)
    {
        $this->initializer5614d2ac66699345527183 && $this->initializer5614d2ac66699345527183->__invoke($this->valueHolder5614d2ac66699138100468, $this, 'handleDownloadExportResult', array('fileName' => $fileName), $this->initializer5614d2ac66699345527183);

        return $this->valueHolder5614d2ac66699138100468->handleDownloadExportResult($fileName);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ac66699345527183 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ac66699345527183 && $this->initializer5614d2ac66699345527183->__invoke($this->valueHolder5614d2ac66699138100468, $this, '__get', array('name' => $name), $this->initializer5614d2ac66699345527183);

        return $this->valueHolder5614d2ac66699138100468->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ac66699345527183 && $this->initializer5614d2ac66699345527183->__invoke($this->valueHolder5614d2ac66699138100468, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ac66699345527183);

        $this->valueHolder5614d2ac66699138100468->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ac66699345527183 && $this->initializer5614d2ac66699345527183->__invoke($this->valueHolder5614d2ac66699138100468, $this, '__isset', array('name' => $name), $this->initializer5614d2ac66699345527183);

        return isset($this->valueHolder5614d2ac66699138100468->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ac66699345527183 && $this->initializer5614d2ac66699345527183->__invoke($this->valueHolder5614d2ac66699138100468, $this, '__unset', array('name' => $name), $this->initializer5614d2ac66699345527183);

        unset($this->valueHolder5614d2ac66699138100468->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ac66699345527183 && $this->initializer5614d2ac66699345527183->__invoke($this->valueHolder5614d2ac66699138100468, $this, '__clone', array(), $this->initializer5614d2ac66699345527183);

        $this->valueHolder5614d2ac66699138100468 = clone $this->valueHolder5614d2ac66699138100468;
    }

    public function __sleep()
    {
        $this->initializer5614d2ac66699345527183 && $this->initializer5614d2ac66699345527183->__invoke($this->valueHolder5614d2ac66699138100468, $this, '__sleep', array(), $this->initializer5614d2ac66699345527183);

        return array('valueHolder5614d2ac66699138100468');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ac66699345527183 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ac66699345527183;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ac66699345527183 && $this->initializer5614d2ac66699345527183->__invoke($this->valueHolder5614d2ac66699138100468, $this, 'initializeProxy', array(), $this->initializer5614d2ac66699345527183);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ac66699138100468;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ac66699138100468;
    }


}

class OroBundleImportExportBundleHandlerCliImportHandler_000000002e47d26e00000000e28c9ac7 extends \Oro\Bundle\ImportExportBundle\Handler\CliImportHandler implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ac8a0f2387464125 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ac8a4da575335136 = null;

    /**
     * {@inheritDoc}
     */
    public function handleImportValidation($jobName, $processorAlias, $inputFormat = 'csv', $inputFilePrefix = null, array $options = array())
    {
        $this->initializer5614d2ac8a4da575335136 && $this->initializer5614d2ac8a4da575335136->__invoke($this->valueHolder5614d2ac8a0f2387464125, $this, 'handleImportValidation', array('jobName' => $jobName, 'processorAlias' => $processorAlias, 'inputFormat' => $inputFormat, 'inputFilePrefix' => $inputFilePrefix, 'options' => $options), $this->initializer5614d2ac8a4da575335136);

        return $this->valueHolder5614d2ac8a0f2387464125->handleImportValidation($jobName, $processorAlias, $inputFormat, $inputFilePrefix, $options);
    }

    /**
     * {@inheritDoc}
     */
    public function handleImport($jobName, $processorAlias, $inputFormat = 'csv', $inputFilePrefix = null, array $options = array())
    {
        $this->initializer5614d2ac8a4da575335136 && $this->initializer5614d2ac8a4da575335136->__invoke($this->valueHolder5614d2ac8a0f2387464125, $this, 'handleImport', array('jobName' => $jobName, 'processorAlias' => $processorAlias, 'inputFormat' => $inputFormat, 'inputFilePrefix' => $inputFilePrefix, 'options' => $options), $this->initializer5614d2ac8a4da575335136);

        return $this->valueHolder5614d2ac8a0f2387464125->handleImport($jobName, $processorAlias, $inputFormat, $inputFilePrefix, $options);
    }

    /**
     * {@inheritDoc}
     */
    public function setImportingFileName($fileName)
    {
        $this->initializer5614d2ac8a4da575335136 && $this->initializer5614d2ac8a4da575335136->__invoke($this->valueHolder5614d2ac8a0f2387464125, $this, 'setImportingFileName', array('fileName' => $fileName), $this->initializer5614d2ac8a4da575335136);

        return $this->valueHolder5614d2ac8a0f2387464125->setImportingFileName($fileName);
    }

    /**
     * {@inheritDoc}
     */
    public function setTranslator(\Symfony\Component\Translation\TranslatorInterface $translator)
    {
        $this->initializer5614d2ac8a4da575335136 && $this->initializer5614d2ac8a4da575335136->__invoke($this->valueHolder5614d2ac8a0f2387464125, $this, 'setTranslator', array('translator' => $translator), $this->initializer5614d2ac8a4da575335136);

        return $this->valueHolder5614d2ac8a0f2387464125->setTranslator($translator);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ac8a4da575335136 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ac8a4da575335136 && $this->initializer5614d2ac8a4da575335136->__invoke($this->valueHolder5614d2ac8a0f2387464125, $this, '__get', array('name' => $name), $this->initializer5614d2ac8a4da575335136);

        return $this->valueHolder5614d2ac8a0f2387464125->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ac8a4da575335136 && $this->initializer5614d2ac8a4da575335136->__invoke($this->valueHolder5614d2ac8a0f2387464125, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ac8a4da575335136);

        $this->valueHolder5614d2ac8a0f2387464125->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ac8a4da575335136 && $this->initializer5614d2ac8a4da575335136->__invoke($this->valueHolder5614d2ac8a0f2387464125, $this, '__isset', array('name' => $name), $this->initializer5614d2ac8a4da575335136);

        return isset($this->valueHolder5614d2ac8a0f2387464125->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ac8a4da575335136 && $this->initializer5614d2ac8a4da575335136->__invoke($this->valueHolder5614d2ac8a0f2387464125, $this, '__unset', array('name' => $name), $this->initializer5614d2ac8a4da575335136);

        unset($this->valueHolder5614d2ac8a0f2387464125->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ac8a4da575335136 && $this->initializer5614d2ac8a4da575335136->__invoke($this->valueHolder5614d2ac8a0f2387464125, $this, '__clone', array(), $this->initializer5614d2ac8a4da575335136);

        $this->valueHolder5614d2ac8a0f2387464125 = clone $this->valueHolder5614d2ac8a0f2387464125;
    }

    public function __sleep()
    {
        $this->initializer5614d2ac8a4da575335136 && $this->initializer5614d2ac8a4da575335136->__invoke($this->valueHolder5614d2ac8a0f2387464125, $this, '__sleep', array(), $this->initializer5614d2ac8a4da575335136);

        return array('valueHolder5614d2ac8a0f2387464125');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ac8a4da575335136 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ac8a4da575335136;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ac8a4da575335136 && $this->initializer5614d2ac8a4da575335136->__invoke($this->valueHolder5614d2ac8a0f2387464125, $this, 'initializeProxy', array(), $this->initializer5614d2ac8a4da575335136);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ac8a0f2387464125;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ac8a0f2387464125;
    }


}

class OroBundleImportExportBundleFieldDatabaseHelper_000000002e47effd00000000e28c9ac7 extends \Oro\Bundle\ImportExportBundle\Field\DatabaseHelper implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ac90a6b090565385 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ac90a6b495730229 = null;

    /**
     * {@inheritDoc}
     */
    public function findOneBy($entityName, array $criteria)
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, 'findOneBy', array('entityName' => $entityName, 'criteria' => $criteria), $this->initializer5614d2ac90a6b495730229);

        return $this->valueHolder5614d2ac90a6b090565385->findOneBy($entityName, $criteria);
    }

    /**
     * {@inheritDoc}
     */
    public function findOneByIdentity($entity)
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, 'findOneByIdentity', array('entity' => $entity), $this->initializer5614d2ac90a6b495730229);

        return $this->valueHolder5614d2ac90a6b090565385->findOneByIdentity($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityReference($entity)
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, 'getEntityReference', array('entity' => $entity), $this->initializer5614d2ac90a6b495730229);

        return $this->valueHolder5614d2ac90a6b090565385->getEntityReference($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function find($entityName, $identifier)
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, 'find', array('entityName' => $entityName, 'identifier' => $identifier), $this->initializer5614d2ac90a6b495730229);

        return $this->valueHolder5614d2ac90a6b090565385->find($entityName, $identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentifier($entity)
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, 'getIdentifier', array('entity' => $entity), $this->initializer5614d2ac90a6b495730229);

        return $this->valueHolder5614d2ac90a6b090565385->getIdentifier($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentifierFieldName($entityName)
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, 'getIdentifierFieldName', array('entityName' => $entityName), $this->initializer5614d2ac90a6b495730229);

        return $this->valueHolder5614d2ac90a6b090565385->getIdentifierFieldName($entityName);
    }

    /**
     * {@inheritDoc}
     */
    public function isCascadePersist($entityName, $fieldName)
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, 'isCascadePersist', array('entityName' => $entityName, 'fieldName' => $fieldName), $this->initializer5614d2ac90a6b495730229);

        return $this->valueHolder5614d2ac90a6b090565385->isCascadePersist($entityName, $fieldName);
    }

    /**
     * {@inheritDoc}
     */
    public function getInversedRelationFieldName($entityName, $fieldName)
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, 'getInversedRelationFieldName', array('entityName' => $entityName, 'fieldName' => $fieldName), $this->initializer5614d2ac90a6b495730229);

        return $this->valueHolder5614d2ac90a6b090565385->getInversedRelationFieldName($entityName, $fieldName);
    }

    /**
     * {@inheritDoc}
     */
    public function isSingleInversedRelation($entityName, $fieldName)
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, 'isSingleInversedRelation', array('entityName' => $entityName, 'fieldName' => $fieldName), $this->initializer5614d2ac90a6b495730229);

        return $this->valueHolder5614d2ac90a6b090565385->isSingleInversedRelation($entityName, $fieldName);
    }

    /**
     * {@inheritDoc}
     */
    public function resetIdentifier($entity)
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, 'resetIdentifier', array('entity' => $entity), $this->initializer5614d2ac90a6b495730229);

        return $this->valueHolder5614d2ac90a6b090565385->resetIdentifier($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function onClear()
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, 'onClear', array(), $this->initializer5614d2ac90a6b495730229);

        return $this->valueHolder5614d2ac90a6b090565385->onClear();
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistry()
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, 'getRegistry', array(), $this->initializer5614d2ac90a6b495730229);

        return $this->valueHolder5614d2ac90a6b090565385->getRegistry();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ac90a6b495730229 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, '__get', array('name' => $name), $this->initializer5614d2ac90a6b495730229);

        return $this->valueHolder5614d2ac90a6b090565385->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ac90a6b495730229);

        $this->valueHolder5614d2ac90a6b090565385->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, '__isset', array('name' => $name), $this->initializer5614d2ac90a6b495730229);

        return isset($this->valueHolder5614d2ac90a6b090565385->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, '__unset', array('name' => $name), $this->initializer5614d2ac90a6b495730229);

        unset($this->valueHolder5614d2ac90a6b090565385->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, '__clone', array(), $this->initializer5614d2ac90a6b495730229);

        $this->valueHolder5614d2ac90a6b090565385 = clone $this->valueHolder5614d2ac90a6b090565385;
    }

    public function __sleep()
    {
        $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, '__sleep', array(), $this->initializer5614d2ac90a6b495730229);

        return array('valueHolder5614d2ac90a6b090565385');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ac90a6b495730229 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ac90a6b495730229;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ac90a6b495730229 && $this->initializer5614d2ac90a6b495730229->__invoke($this->valueHolder5614d2ac90a6b090565385, $this, 'initializeProxy', array(), $this->initializer5614d2ac90a6b495730229);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ac90a6b090565385;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ac90a6b090565385;
    }


}

class OroBundleMigrationBundleToolsSchemaDumper_000000002e47e8d200000000e28c9ac7 extends \Oro\Bundle\MigrationBundle\Tools\SchemaDumper implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2aca3b20519147416 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2aca3b20978612819 = null;

    /**
     * {@inheritDoc}
     */
    public function acceptSchema(\Doctrine\DBAL\Schema\Schema $schema)
    {
        $this->initializer5614d2aca3b20978612819 && $this->initializer5614d2aca3b20978612819->__invoke($this->valueHolder5614d2aca3b20519147416, $this, 'acceptSchema', array('schema' => $schema), $this->initializer5614d2aca3b20978612819);

        return $this->valueHolder5614d2aca3b20519147416->acceptSchema($schema);
    }

    /**
     * {@inheritDoc}
     */
    public function dump(array $allowedTables = null, $namespace = null, $className = 'AllMigration', $version = 'v1_0', array $extendedOptions = null)
    {
        $this->initializer5614d2aca3b20978612819 && $this->initializer5614d2aca3b20978612819->__invoke($this->valueHolder5614d2aca3b20519147416, $this, 'dump', array('allowedTables' => $allowedTables, 'namespace' => $namespace, 'className' => $className, 'version' => $version, 'extendedOptions' => $extendedOptions), $this->initializer5614d2aca3b20978612819);

        return $this->valueHolder5614d2aca3b20519147416->dump($allowedTables, $namespace, $className, $version, $extendedOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function acceptNamespace($namespaceName)
    {
        $this->initializer5614d2aca3b20978612819 && $this->initializer5614d2aca3b20978612819->__invoke($this->valueHolder5614d2aca3b20519147416, $this, 'acceptNamespace', array('namespaceName' => $namespaceName), $this->initializer5614d2aca3b20978612819);

        return $this->valueHolder5614d2aca3b20519147416->acceptNamespace($namespaceName);
    }

    /**
     * {@inheritDoc}
     */
    public function acceptTable(\Doctrine\DBAL\Schema\Table $table)
    {
        $this->initializer5614d2aca3b20978612819 && $this->initializer5614d2aca3b20978612819->__invoke($this->valueHolder5614d2aca3b20519147416, $this, 'acceptTable', array('table' => $table), $this->initializer5614d2aca3b20978612819);

        return $this->valueHolder5614d2aca3b20519147416->acceptTable($table);
    }

    /**
     * {@inheritDoc}
     */
    public function acceptColumn(\Doctrine\DBAL\Schema\Table $table, \Doctrine\DBAL\Schema\Column $column)
    {
        $this->initializer5614d2aca3b20978612819 && $this->initializer5614d2aca3b20978612819->__invoke($this->valueHolder5614d2aca3b20519147416, $this, 'acceptColumn', array('table' => $table, 'column' => $column), $this->initializer5614d2aca3b20978612819);

        return $this->valueHolder5614d2aca3b20519147416->acceptColumn($table, $column);
    }

    /**
     * {@inheritDoc}
     */
    public function acceptForeignKey(\Doctrine\DBAL\Schema\Table $localTable, \Doctrine\DBAL\Schema\ForeignKeyConstraint $fkConstraint)
    {
        $this->initializer5614d2aca3b20978612819 && $this->initializer5614d2aca3b20978612819->__invoke($this->valueHolder5614d2aca3b20519147416, $this, 'acceptForeignKey', array('localTable' => $localTable, 'fkConstraint' => $fkConstraint), $this->initializer5614d2aca3b20978612819);

        return $this->valueHolder5614d2aca3b20519147416->acceptForeignKey($localTable, $fkConstraint);
    }

    /**
     * {@inheritDoc}
     */
    public function acceptIndex(\Doctrine\DBAL\Schema\Table $table, \Doctrine\DBAL\Schema\Index $index)
    {
        $this->initializer5614d2aca3b20978612819 && $this->initializer5614d2aca3b20978612819->__invoke($this->valueHolder5614d2aca3b20519147416, $this, 'acceptIndex', array('table' => $table, 'index' => $index), $this->initializer5614d2aca3b20978612819);

        return $this->valueHolder5614d2aca3b20519147416->acceptIndex($table, $index);
    }

    /**
     * {@inheritDoc}
     */
    public function acceptSequence(\Doctrine\DBAL\Schema\Sequence $sequence)
    {
        $this->initializer5614d2aca3b20978612819 && $this->initializer5614d2aca3b20978612819->__invoke($this->valueHolder5614d2aca3b20519147416, $this, 'acceptSequence', array('sequence' => $sequence), $this->initializer5614d2aca3b20978612819);

        return $this->valueHolder5614d2aca3b20519147416->acceptSequence($sequence);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2aca3b20978612819 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2aca3b20978612819 && $this->initializer5614d2aca3b20978612819->__invoke($this->valueHolder5614d2aca3b20519147416, $this, '__get', array('name' => $name), $this->initializer5614d2aca3b20978612819);

        return $this->valueHolder5614d2aca3b20519147416->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2aca3b20978612819 && $this->initializer5614d2aca3b20978612819->__invoke($this->valueHolder5614d2aca3b20519147416, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2aca3b20978612819);

        $this->valueHolder5614d2aca3b20519147416->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2aca3b20978612819 && $this->initializer5614d2aca3b20978612819->__invoke($this->valueHolder5614d2aca3b20519147416, $this, '__isset', array('name' => $name), $this->initializer5614d2aca3b20978612819);

        return isset($this->valueHolder5614d2aca3b20519147416->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2aca3b20978612819 && $this->initializer5614d2aca3b20978612819->__invoke($this->valueHolder5614d2aca3b20519147416, $this, '__unset', array('name' => $name), $this->initializer5614d2aca3b20978612819);

        unset($this->valueHolder5614d2aca3b20519147416->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2aca3b20978612819 && $this->initializer5614d2aca3b20978612819->__invoke($this->valueHolder5614d2aca3b20519147416, $this, '__clone', array(), $this->initializer5614d2aca3b20978612819);

        $this->valueHolder5614d2aca3b20519147416 = clone $this->valueHolder5614d2aca3b20519147416;
    }

    public function __sleep()
    {
        $this->initializer5614d2aca3b20978612819 && $this->initializer5614d2aca3b20978612819->__invoke($this->valueHolder5614d2aca3b20519147416, $this, '__sleep', array(), $this->initializer5614d2aca3b20978612819);

        return array('valueHolder5614d2aca3b20519147416');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2aca3b20978612819 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2aca3b20978612819;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2aca3b20978612819 && $this->initializer5614d2aca3b20978612819->__invoke($this->valueHolder5614d2aca3b20519147416, $this, 'initializeProxy', array(), $this->initializer5614d2aca3b20978612819);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2aca3b20519147416;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2aca3b20519147416;
    }


}

class OroBundleNoteBundleEventListenerNoteLifecycleListener_000000002e47e8d900000000e28c9ac7 extends \Oro\Bundle\NoteBundle\EventListener\NoteLifecycleListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2acc94b8483848179 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2acc98a0859320192 = null;

    /**
     * {@inheritDoc}
     */
    public function prePersist(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2acc98a0859320192 && $this->initializer5614d2acc98a0859320192->__invoke($this->valueHolder5614d2acc94b8483848179, $this, 'prePersist', array('args' => $args), $this->initializer5614d2acc98a0859320192);

        return $this->valueHolder5614d2acc94b8483848179->prePersist($args);
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate(\Doctrine\ORM\Event\PreUpdateEventArgs $args)
    {
        $this->initializer5614d2acc98a0859320192 && $this->initializer5614d2acc98a0859320192->__invoke($this->valueHolder5614d2acc94b8483848179, $this, 'preUpdate', array('args' => $args), $this->initializer5614d2acc98a0859320192);

        return $this->valueHolder5614d2acc94b8483848179->preUpdate($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2acc98a0859320192 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2acc98a0859320192 && $this->initializer5614d2acc98a0859320192->__invoke($this->valueHolder5614d2acc94b8483848179, $this, '__get', array('name' => $name), $this->initializer5614d2acc98a0859320192);

        return $this->valueHolder5614d2acc94b8483848179->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2acc98a0859320192 && $this->initializer5614d2acc98a0859320192->__invoke($this->valueHolder5614d2acc94b8483848179, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2acc98a0859320192);

        $this->valueHolder5614d2acc94b8483848179->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2acc98a0859320192 && $this->initializer5614d2acc98a0859320192->__invoke($this->valueHolder5614d2acc94b8483848179, $this, '__isset', array('name' => $name), $this->initializer5614d2acc98a0859320192);

        return isset($this->valueHolder5614d2acc94b8483848179->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2acc98a0859320192 && $this->initializer5614d2acc98a0859320192->__invoke($this->valueHolder5614d2acc94b8483848179, $this, '__unset', array('name' => $name), $this->initializer5614d2acc98a0859320192);

        unset($this->valueHolder5614d2acc94b8483848179->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2acc98a0859320192 && $this->initializer5614d2acc98a0859320192->__invoke($this->valueHolder5614d2acc94b8483848179, $this, '__clone', array(), $this->initializer5614d2acc98a0859320192);

        $this->valueHolder5614d2acc94b8483848179 = clone $this->valueHolder5614d2acc94b8483848179;
    }

    public function __sleep()
    {
        $this->initializer5614d2acc98a0859320192 && $this->initializer5614d2acc98a0859320192->__invoke($this->valueHolder5614d2acc94b8483848179, $this, '__sleep', array(), $this->initializer5614d2acc98a0859320192);

        return array('valueHolder5614d2acc94b8483848179');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2acc98a0859320192 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2acc98a0859320192;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2acc98a0859320192 && $this->initializer5614d2acc98a0859320192->__invoke($this->valueHolder5614d2acc94b8483848179, $this, 'initializeProxy', array(), $this->initializer5614d2acc98a0859320192);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2acc94b8483848179;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2acc94b8483848179;
    }


}

class OroBundleNotificationBundleProviderDoctrineListener_000000002e47e97500000000e28c9ac7 extends \Oro\Bundle\NotificationBundle\Provider\DoctrineListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2acccf51696271678 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2acccf51726030923 = null;

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled = true)
    {
        $this->initializer5614d2acccf51726030923 && $this->initializer5614d2acccf51726030923->__invoke($this->valueHolder5614d2acccf51696271678, $this, 'setEnabled', array('enabled' => $enabled), $this->initializer5614d2acccf51726030923);

        return $this->valueHolder5614d2acccf51696271678->setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function postFlush(\Doctrine\ORM\Event\PostFlushEventArgs $args)
    {
        $this->initializer5614d2acccf51726030923 && $this->initializer5614d2acccf51726030923->__invoke($this->valueHolder5614d2acccf51696271678, $this, 'postFlush', array('args' => $args), $this->initializer5614d2acccf51726030923);

        return $this->valueHolder5614d2acccf51696271678->postFlush($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postUpdate(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2acccf51726030923 && $this->initializer5614d2acccf51726030923->__invoke($this->valueHolder5614d2acccf51696271678, $this, 'postUpdate', array('args' => $args), $this->initializer5614d2acccf51726030923);

        return $this->valueHolder5614d2acccf51696271678->postUpdate($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postPersist(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2acccf51726030923 && $this->initializer5614d2acccf51726030923->__invoke($this->valueHolder5614d2acccf51696271678, $this, 'postPersist', array('args' => $args), $this->initializer5614d2acccf51726030923);

        return $this->valueHolder5614d2acccf51696271678->postPersist($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postRemove(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2acccf51726030923 && $this->initializer5614d2acccf51726030923->__invoke($this->valueHolder5614d2acccf51696271678, $this, 'postRemove', array('args' => $args), $this->initializer5614d2acccf51726030923);

        return $this->valueHolder5614d2acccf51696271678->postRemove($args);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotificationEvent(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2acccf51726030923 && $this->initializer5614d2acccf51726030923->__invoke($this->valueHolder5614d2acccf51696271678, $this, 'getNotificationEvent', array('args' => $args), $this->initializer5614d2acccf51726030923);

        return $this->valueHolder5614d2acccf51696271678->getNotificationEvent($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2acccf51726030923 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2acccf51726030923 && $this->initializer5614d2acccf51726030923->__invoke($this->valueHolder5614d2acccf51696271678, $this, '__get', array('name' => $name), $this->initializer5614d2acccf51726030923);

        return $this->valueHolder5614d2acccf51696271678->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2acccf51726030923 && $this->initializer5614d2acccf51726030923->__invoke($this->valueHolder5614d2acccf51696271678, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2acccf51726030923);

        $this->valueHolder5614d2acccf51696271678->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2acccf51726030923 && $this->initializer5614d2acccf51726030923->__invoke($this->valueHolder5614d2acccf51696271678, $this, '__isset', array('name' => $name), $this->initializer5614d2acccf51726030923);

        return isset($this->valueHolder5614d2acccf51696271678->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2acccf51726030923 && $this->initializer5614d2acccf51726030923->__invoke($this->valueHolder5614d2acccf51696271678, $this, '__unset', array('name' => $name), $this->initializer5614d2acccf51726030923);

        unset($this->valueHolder5614d2acccf51696271678->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2acccf51726030923 && $this->initializer5614d2acccf51726030923->__invoke($this->valueHolder5614d2acccf51696271678, $this, '__clone', array(), $this->initializer5614d2acccf51726030923);

        $this->valueHolder5614d2acccf51696271678 = clone $this->valueHolder5614d2acccf51696271678;
    }

    public function __sleep()
    {
        $this->initializer5614d2acccf51726030923 && $this->initializer5614d2acccf51726030923->__invoke($this->valueHolder5614d2acccf51696271678, $this, '__sleep', array(), $this->initializer5614d2acccf51726030923);

        return array('valueHolder5614d2acccf51696271678');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2acccf51726030923 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2acccf51726030923;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2acccf51726030923 && $this->initializer5614d2acccf51726030923->__invoke($this->valueHolder5614d2acccf51696271678, $this, 'initializeProxy', array(), $this->initializer5614d2acccf51726030923);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2acccf51696271678;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2acccf51696271678;
    }


}

class OroBundleNotificationBundleProviderNotificationManager_000000002e47e97000000000e28c9ac7 extends \Oro\Bundle\NotificationBundle\Provider\NotificationManager implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2acd8ad4320254790 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2acd8ebc049846928 = null;

    /**
     * {@inheritDoc}
     */
    public function addHandler(\Oro\Bundle\NotificationBundle\Event\Handler\EventHandlerInterface $handler)
    {
        $this->initializer5614d2acd8ebc049846928 && $this->initializer5614d2acd8ebc049846928->__invoke($this->valueHolder5614d2acd8ad4320254790, $this, 'addHandler', array('handler' => $handler), $this->initializer5614d2acd8ebc049846928);

        return $this->valueHolder5614d2acd8ad4320254790->addHandler($handler);
    }

    /**
     * {@inheritDoc}
     */
    public function process(\Oro\Bundle\NotificationBundle\Event\NotificationEvent $event)
    {
        $this->initializer5614d2acd8ebc049846928 && $this->initializer5614d2acd8ebc049846928->__invoke($this->valueHolder5614d2acd8ad4320254790, $this, 'process', array('event' => $event), $this->initializer5614d2acd8ebc049846928);

        return $this->valueHolder5614d2acd8ad4320254790->process($event);
    }

    /**
     * {@inheritDoc}
     */
    public function getHandlers()
    {
        $this->initializer5614d2acd8ebc049846928 && $this->initializer5614d2acd8ebc049846928->__invoke($this->valueHolder5614d2acd8ad4320254790, $this, 'getHandlers', array(), $this->initializer5614d2acd8ebc049846928);

        return $this->valueHolder5614d2acd8ad4320254790->getHandlers();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2acd8ebc049846928 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2acd8ebc049846928 && $this->initializer5614d2acd8ebc049846928->__invoke($this->valueHolder5614d2acd8ad4320254790, $this, '__get', array('name' => $name), $this->initializer5614d2acd8ebc049846928);

        return $this->valueHolder5614d2acd8ad4320254790->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2acd8ebc049846928 && $this->initializer5614d2acd8ebc049846928->__invoke($this->valueHolder5614d2acd8ad4320254790, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2acd8ebc049846928);

        $this->valueHolder5614d2acd8ad4320254790->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2acd8ebc049846928 && $this->initializer5614d2acd8ebc049846928->__invoke($this->valueHolder5614d2acd8ad4320254790, $this, '__isset', array('name' => $name), $this->initializer5614d2acd8ebc049846928);

        return isset($this->valueHolder5614d2acd8ad4320254790->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2acd8ebc049846928 && $this->initializer5614d2acd8ebc049846928->__invoke($this->valueHolder5614d2acd8ad4320254790, $this, '__unset', array('name' => $name), $this->initializer5614d2acd8ebc049846928);

        unset($this->valueHolder5614d2acd8ad4320254790->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2acd8ebc049846928 && $this->initializer5614d2acd8ebc049846928->__invoke($this->valueHolder5614d2acd8ad4320254790, $this, '__clone', array(), $this->initializer5614d2acd8ebc049846928);

        $this->valueHolder5614d2acd8ad4320254790 = clone $this->valueHolder5614d2acd8ad4320254790;
    }

    public function __sleep()
    {
        $this->initializer5614d2acd8ebc049846928 && $this->initializer5614d2acd8ebc049846928->__invoke($this->valueHolder5614d2acd8ad4320254790, $this, '__sleep', array(), $this->initializer5614d2acd8ebc049846928);

        return array('valueHolder5614d2acd8ad4320254790');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2acd8ebc049846928 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2acd8ebc049846928;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2acd8ebc049846928 && $this->initializer5614d2acd8ebc049846928->__invoke($this->valueHolder5614d2acd8ad4320254790, $this, 'initializeProxy', array(), $this->initializer5614d2acd8ebc049846928);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2acd8ad4320254790;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2acd8ad4320254790;
    }


}

class OroBundleNotificationBundleProviderEmailNotificationGridHelper_000000002e47e94b00000000e28c9ac7 extends \Oro\Bundle\NotificationBundle\Provider\EmailNotificationGridHelper implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2acdf836825900845 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2acdfc1e329469382 = null;

    /**
     * {@inheritDoc}
     */
    public function getRecipientUsersChoices()
    {
        $this->initializer5614d2acdfc1e329469382 && $this->initializer5614d2acdfc1e329469382->__invoke($this->valueHolder5614d2acdf836825900845, $this, 'getRecipientUsersChoices', array(), $this->initializer5614d2acdfc1e329469382);

        return $this->valueHolder5614d2acdf836825900845->getRecipientUsersChoices();
    }

    /**
     * {@inheritDoc}
     */
    public function getRecipientGroupsChoices()
    {
        $this->initializer5614d2acdfc1e329469382 && $this->initializer5614d2acdfc1e329469382->__invoke($this->valueHolder5614d2acdf836825900845, $this, 'getRecipientGroupsChoices', array(), $this->initializer5614d2acdfc1e329469382);

        return $this->valueHolder5614d2acdf836825900845->getRecipientGroupsChoices();
    }

    /**
     * {@inheritDoc}
     */
    public function getEventNameChoices()
    {
        $this->initializer5614d2acdfc1e329469382 && $this->initializer5614d2acdfc1e329469382->__invoke($this->valueHolder5614d2acdf836825900845, $this, 'getEventNameChoices', array(), $this->initializer5614d2acdfc1e329469382);

        return $this->valueHolder5614d2acdf836825900845->getEventNameChoices();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2acdfc1e329469382 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2acdfc1e329469382 && $this->initializer5614d2acdfc1e329469382->__invoke($this->valueHolder5614d2acdf836825900845, $this, '__get', array('name' => $name), $this->initializer5614d2acdfc1e329469382);

        return $this->valueHolder5614d2acdf836825900845->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2acdfc1e329469382 && $this->initializer5614d2acdfc1e329469382->__invoke($this->valueHolder5614d2acdf836825900845, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2acdfc1e329469382);

        $this->valueHolder5614d2acdf836825900845->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2acdfc1e329469382 && $this->initializer5614d2acdfc1e329469382->__invoke($this->valueHolder5614d2acdf836825900845, $this, '__isset', array('name' => $name), $this->initializer5614d2acdfc1e329469382);

        return isset($this->valueHolder5614d2acdf836825900845->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2acdfc1e329469382 && $this->initializer5614d2acdfc1e329469382->__invoke($this->valueHolder5614d2acdf836825900845, $this, '__unset', array('name' => $name), $this->initializer5614d2acdfc1e329469382);

        unset($this->valueHolder5614d2acdf836825900845->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2acdfc1e329469382 && $this->initializer5614d2acdfc1e329469382->__invoke($this->valueHolder5614d2acdf836825900845, $this, '__clone', array(), $this->initializer5614d2acdfc1e329469382);

        $this->valueHolder5614d2acdf836825900845 = clone $this->valueHolder5614d2acdf836825900845;
    }

    public function __sleep()
    {
        $this->initializer5614d2acdfc1e329469382 && $this->initializer5614d2acdfc1e329469382->__invoke($this->valueHolder5614d2acdf836825900845, $this, '__sleep', array(), $this->initializer5614d2acdfc1e329469382);

        return array('valueHolder5614d2acdf836825900845');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2acdfc1e329469382 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2acdfc1e329469382;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2acdfc1e329469382 && $this->initializer5614d2acdfc1e329469382->__invoke($this->valueHolder5614d2acdf836825900845, $this, 'initializeProxy', array(), $this->initializer5614d2acdfc1e329469382);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2acdf836825900845;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2acdf836825900845;
    }


}

class OroBundleNotificationBundleProviderEmailNotificationEntityProvider_000000002e47d27600000000e28c9ac7 extends \Oro\Bundle\NotificationBundle\Provider\EmailNotificationEntityProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ace3e87135581074 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ace3e87883675889 = null;

    /**
     * {@inheritDoc}
     */
    public function setExclusionProvider(\Oro\Bundle\EntityBundle\Provider\ExclusionProviderInterface $exclusionProvider)
    {
        $this->initializer5614d2ace3e87883675889 && $this->initializer5614d2ace3e87883675889->__invoke($this->valueHolder5614d2ace3e87135581074, $this, 'setExclusionProvider', array('exclusionProvider' => $exclusionProvider), $this->initializer5614d2ace3e87883675889);

        return $this->valueHolder5614d2ace3e87135581074->setExclusionProvider($exclusionProvider);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntities($sortByPluralLabel = true, $applyExclusions = true, $translate = true)
    {
        $this->initializer5614d2ace3e87883675889 && $this->initializer5614d2ace3e87883675889->__invoke($this->valueHolder5614d2ace3e87135581074, $this, 'getEntities', array('sortByPluralLabel' => $sortByPluralLabel, 'applyExclusions' => $applyExclusions, 'translate' => $translate), $this->initializer5614d2ace3e87883675889);

        return $this->valueHolder5614d2ace3e87135581074->getEntities($sortByPluralLabel, $applyExclusions, $translate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntity($entityName, $translate = true)
    {
        $this->initializer5614d2ace3e87883675889 && $this->initializer5614d2ace3e87883675889->__invoke($this->valueHolder5614d2ace3e87135581074, $this, 'getEntity', array('entityName' => $entityName, 'translate' => $translate), $this->initializer5614d2ace3e87883675889);

        return $this->valueHolder5614d2ace3e87135581074->getEntity($entityName, $translate);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ace3e87883675889 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ace3e87883675889 && $this->initializer5614d2ace3e87883675889->__invoke($this->valueHolder5614d2ace3e87135581074, $this, '__get', array('name' => $name), $this->initializer5614d2ace3e87883675889);

        return $this->valueHolder5614d2ace3e87135581074->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ace3e87883675889 && $this->initializer5614d2ace3e87883675889->__invoke($this->valueHolder5614d2ace3e87135581074, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ace3e87883675889);

        $this->valueHolder5614d2ace3e87135581074->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ace3e87883675889 && $this->initializer5614d2ace3e87883675889->__invoke($this->valueHolder5614d2ace3e87135581074, $this, '__isset', array('name' => $name), $this->initializer5614d2ace3e87883675889);

        return isset($this->valueHolder5614d2ace3e87135581074->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ace3e87883675889 && $this->initializer5614d2ace3e87883675889->__invoke($this->valueHolder5614d2ace3e87135581074, $this, '__unset', array('name' => $name), $this->initializer5614d2ace3e87883675889);

        unset($this->valueHolder5614d2ace3e87135581074->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ace3e87883675889 && $this->initializer5614d2ace3e87883675889->__invoke($this->valueHolder5614d2ace3e87135581074, $this, '__clone', array(), $this->initializer5614d2ace3e87883675889);

        $this->valueHolder5614d2ace3e87135581074 = clone $this->valueHolder5614d2ace3e87135581074;
    }

    public function __sleep()
    {
        $this->initializer5614d2ace3e87883675889 && $this->initializer5614d2ace3e87883675889->__invoke($this->valueHolder5614d2ace3e87135581074, $this, '__sleep', array(), $this->initializer5614d2ace3e87883675889);

        return array('valueHolder5614d2ace3e87135581074');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ace3e87883675889 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ace3e87883675889;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ace3e87883675889 && $this->initializer5614d2ace3e87883675889->__invoke($this->valueHolder5614d2ace3e87135581074, $this, 'initializeProxy', array(), $this->initializer5614d2ace3e87883675889);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ace3e87135581074;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ace3e87135581074;
    }


}

class OroBundleRequireJSBundleProviderConfig_000000002e47ea3500000000e28c9ac7 extends \Oro\Bundle\RequireJSBundle\Provider\Config implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2acefa09623483983 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2acefdf1808997853 = null;

    /**
     * {@inheritDoc}
     */
    public function setCache(\Doctrine\Common\Cache\CacheProvider $cache)
    {
        $this->initializer5614d2acefdf1808997853 && $this->initializer5614d2acefdf1808997853->__invoke($this->valueHolder5614d2acefa09623483983, $this, 'setCache', array('cache' => $cache), $this->initializer5614d2acefdf1808997853);

        return $this->valueHolder5614d2acefa09623483983->setCache($cache);
    }

    /**
     * {@inheritDoc}
     */
    public function getMainConfig()
    {
        $this->initializer5614d2acefdf1808997853 && $this->initializer5614d2acefdf1808997853->__invoke($this->valueHolder5614d2acefa09623483983, $this, 'getMainConfig', array(), $this->initializer5614d2acefdf1808997853);

        return $this->valueHolder5614d2acefa09623483983->getMainConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function generateMainConfig()
    {
        $this->initializer5614d2acefdf1808997853 && $this->initializer5614d2acefdf1808997853->__invoke($this->valueHolder5614d2acefa09623483983, $this, 'generateMainConfig', array(), $this->initializer5614d2acefdf1808997853);

        return $this->valueHolder5614d2acefa09623483983->generateMainConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function generateBuildConfig($configPath)
    {
        $this->initializer5614d2acefdf1808997853 && $this->initializer5614d2acefdf1808997853->__invoke($this->valueHolder5614d2acefa09623483983, $this, 'generateBuildConfig', array('configPath' => $configPath), $this->initializer5614d2acefdf1808997853);

        return $this->valueHolder5614d2acefa09623483983->generateBuildConfig($configPath);
    }

    /**
     * {@inheritDoc}
     */
    public function collectConfigs()
    {
        $this->initializer5614d2acefdf1808997853 && $this->initializer5614d2acefdf1808997853->__invoke($this->valueHolder5614d2acefa09623483983, $this, 'collectConfigs', array(), $this->initializer5614d2acefdf1808997853);

        return $this->valueHolder5614d2acefa09623483983->collectConfigs();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2acefdf1808997853 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2acefdf1808997853 && $this->initializer5614d2acefdf1808997853->__invoke($this->valueHolder5614d2acefa09623483983, $this, '__get', array('name' => $name), $this->initializer5614d2acefdf1808997853);

        return $this->valueHolder5614d2acefa09623483983->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2acefdf1808997853 && $this->initializer5614d2acefdf1808997853->__invoke($this->valueHolder5614d2acefa09623483983, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2acefdf1808997853);

        $this->valueHolder5614d2acefa09623483983->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2acefdf1808997853 && $this->initializer5614d2acefdf1808997853->__invoke($this->valueHolder5614d2acefa09623483983, $this, '__isset', array('name' => $name), $this->initializer5614d2acefdf1808997853);

        return isset($this->valueHolder5614d2acefa09623483983->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2acefdf1808997853 && $this->initializer5614d2acefdf1808997853->__invoke($this->valueHolder5614d2acefa09623483983, $this, '__unset', array('name' => $name), $this->initializer5614d2acefdf1808997853);

        unset($this->valueHolder5614d2acefa09623483983->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2acefdf1808997853 && $this->initializer5614d2acefdf1808997853->__invoke($this->valueHolder5614d2acefa09623483983, $this, '__clone', array(), $this->initializer5614d2acefdf1808997853);

        $this->valueHolder5614d2acefa09623483983 = clone $this->valueHolder5614d2acefa09623483983;
    }

    public function __sleep()
    {
        $this->initializer5614d2acefdf1808997853 && $this->initializer5614d2acefdf1808997853->__invoke($this->valueHolder5614d2acefa09623483983, $this, '__sleep', array(), $this->initializer5614d2acefdf1808997853);

        return array('valueHolder5614d2acefa09623483983');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2acefdf1808997853 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2acefdf1808997853;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2acefdf1808997853 && $this->initializer5614d2acefdf1808997853->__invoke($this->valueHolder5614d2acefa09623483983, $this, 'initializeProxy', array(), $this->initializer5614d2acefdf1808997853);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2acefa09623483983;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2acefa09623483983;
    }


}

class OroBundleSearchBundleEventListenerIndexListener_000000002e47e81200000000e28c9ac7 extends \Oro\Bundle\SearchBundle\EventListener\IndexListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad038b3465845963 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad03c9b260646436 = null;

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled = true)
    {
        $this->initializer5614d2ad03c9b260646436 && $this->initializer5614d2ad03c9b260646436->__invoke($this->valueHolder5614d2ad038b3465845963, $this, 'setEnabled', array('enabled' => $enabled), $this->initializer5614d2ad03c9b260646436);

        return $this->valueHolder5614d2ad038b3465845963->setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function setRealTimeUpdate($realTime)
    {
        $this->initializer5614d2ad03c9b260646436 && $this->initializer5614d2ad03c9b260646436->__invoke($this->valueHolder5614d2ad038b3465845963, $this, 'setRealTimeUpdate', array('realTime' => $realTime), $this->initializer5614d2ad03c9b260646436);

        return $this->valueHolder5614d2ad038b3465845963->setRealTimeUpdate($realTime);
    }

    /**
     * {@inheritDoc}
     */
    public function setEntitiesConfig(array $entities)
    {
        $this->initializer5614d2ad03c9b260646436 && $this->initializer5614d2ad03c9b260646436->__invoke($this->valueHolder5614d2ad038b3465845963, $this, 'setEntitiesConfig', array('entities' => $entities), $this->initializer5614d2ad03c9b260646436);

        return $this->valueHolder5614d2ad038b3465845963->setEntitiesConfig($entities);
    }

    /**
     * {@inheritDoc}
     */
    public function setMappingProvider(\Oro\Bundle\SearchBundle\Provider\SearchMappingProvider $mappingProvider)
    {
        $this->initializer5614d2ad03c9b260646436 && $this->initializer5614d2ad03c9b260646436->__invoke($this->valueHolder5614d2ad038b3465845963, $this, 'setMappingProvider', array('mappingProvider' => $mappingProvider), $this->initializer5614d2ad03c9b260646436);

        return $this->valueHolder5614d2ad038b3465845963->setMappingProvider($mappingProvider);
    }

    /**
     * {@inheritDoc}
     */
    public function onFlush(\Doctrine\ORM\Event\OnFlushEventArgs $args)
    {
        $this->initializer5614d2ad03c9b260646436 && $this->initializer5614d2ad03c9b260646436->__invoke($this->valueHolder5614d2ad038b3465845963, $this, 'onFlush', array('args' => $args), $this->initializer5614d2ad03c9b260646436);

        return $this->valueHolder5614d2ad038b3465845963->onFlush($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postFlush(\Doctrine\ORM\Event\PostFlushEventArgs $args)
    {
        $this->initializer5614d2ad03c9b260646436 && $this->initializer5614d2ad03c9b260646436->__invoke($this->valueHolder5614d2ad038b3465845963, $this, 'postFlush', array('args' => $args), $this->initializer5614d2ad03c9b260646436);

        return $this->valueHolder5614d2ad038b3465845963->postFlush($args);
    }

    /**
     * {@inheritDoc}
     */
    public function onClear(\Doctrine\ORM\Event\OnClearEventArgs $args)
    {
        $this->initializer5614d2ad03c9b260646436 && $this->initializer5614d2ad03c9b260646436->__invoke($this->valueHolder5614d2ad038b3465845963, $this, 'onClear', array('args' => $args), $this->initializer5614d2ad03c9b260646436);

        return $this->valueHolder5614d2ad038b3465845963->onClear($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad03c9b260646436 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad03c9b260646436 && $this->initializer5614d2ad03c9b260646436->__invoke($this->valueHolder5614d2ad038b3465845963, $this, '__get', array('name' => $name), $this->initializer5614d2ad03c9b260646436);

        return $this->valueHolder5614d2ad038b3465845963->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad03c9b260646436 && $this->initializer5614d2ad03c9b260646436->__invoke($this->valueHolder5614d2ad038b3465845963, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad03c9b260646436);

        $this->valueHolder5614d2ad038b3465845963->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad03c9b260646436 && $this->initializer5614d2ad03c9b260646436->__invoke($this->valueHolder5614d2ad038b3465845963, $this, '__isset', array('name' => $name), $this->initializer5614d2ad03c9b260646436);

        return isset($this->valueHolder5614d2ad038b3465845963->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad03c9b260646436 && $this->initializer5614d2ad03c9b260646436->__invoke($this->valueHolder5614d2ad038b3465845963, $this, '__unset', array('name' => $name), $this->initializer5614d2ad03c9b260646436);

        unset($this->valueHolder5614d2ad038b3465845963->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad03c9b260646436 && $this->initializer5614d2ad03c9b260646436->__invoke($this->valueHolder5614d2ad038b3465845963, $this, '__clone', array(), $this->initializer5614d2ad03c9b260646436);

        $this->valueHolder5614d2ad038b3465845963 = clone $this->valueHolder5614d2ad038b3465845963;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad03c9b260646436 && $this->initializer5614d2ad03c9b260646436->__invoke($this->valueHolder5614d2ad038b3465845963, $this, '__sleep', array(), $this->initializer5614d2ad03c9b260646436);

        return array('valueHolder5614d2ad038b3465845963');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad03c9b260646436 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad03c9b260646436;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad03c9b260646436 && $this->initializer5614d2ad03c9b260646436->__invoke($this->valueHolder5614d2ad038b3465845963, $this, 'initializeProxy', array(), $this->initializer5614d2ad03c9b260646436);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad038b3465845963;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad038b3465845963;
    }


}

class OroBundleSearchBundleProviderResultStatisticsProvider_000000002e47e80a00000000e28c9ac7 extends \Oro\Bundle\SearchBundle\Provider\ResultStatisticsProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad0d10e228482614 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad0d10e495139455 = null;

    /**
     * {@inheritDoc}
     */
    public function getResults($query)
    {
        $this->initializer5614d2ad0d10e495139455 && $this->initializer5614d2ad0d10e495139455->__invoke($this->valueHolder5614d2ad0d10e228482614, $this, 'getResults', array('query' => $query), $this->initializer5614d2ad0d10e495139455);

        return $this->valueHolder5614d2ad0d10e228482614->getResults($query);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupedResults($string)
    {
        $this->initializer5614d2ad0d10e495139455 && $this->initializer5614d2ad0d10e495139455->__invoke($this->valueHolder5614d2ad0d10e228482614, $this, 'getGroupedResults', array('string' => $string), $this->initializer5614d2ad0d10e495139455);

        return $this->valueHolder5614d2ad0d10e228482614->getGroupedResults($string);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad0d10e495139455 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad0d10e495139455 && $this->initializer5614d2ad0d10e495139455->__invoke($this->valueHolder5614d2ad0d10e228482614, $this, '__get', array('name' => $name), $this->initializer5614d2ad0d10e495139455);

        return $this->valueHolder5614d2ad0d10e228482614->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad0d10e495139455 && $this->initializer5614d2ad0d10e495139455->__invoke($this->valueHolder5614d2ad0d10e228482614, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad0d10e495139455);

        $this->valueHolder5614d2ad0d10e228482614->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad0d10e495139455 && $this->initializer5614d2ad0d10e495139455->__invoke($this->valueHolder5614d2ad0d10e228482614, $this, '__isset', array('name' => $name), $this->initializer5614d2ad0d10e495139455);

        return isset($this->valueHolder5614d2ad0d10e228482614->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad0d10e495139455 && $this->initializer5614d2ad0d10e495139455->__invoke($this->valueHolder5614d2ad0d10e228482614, $this, '__unset', array('name' => $name), $this->initializer5614d2ad0d10e495139455);

        unset($this->valueHolder5614d2ad0d10e228482614->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad0d10e495139455 && $this->initializer5614d2ad0d10e495139455->__invoke($this->valueHolder5614d2ad0d10e228482614, $this, '__clone', array(), $this->initializer5614d2ad0d10e495139455);

        $this->valueHolder5614d2ad0d10e228482614 = clone $this->valueHolder5614d2ad0d10e228482614;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad0d10e495139455 && $this->initializer5614d2ad0d10e495139455->__invoke($this->valueHolder5614d2ad0d10e228482614, $this, '__sleep', array(), $this->initializer5614d2ad0d10e495139455);

        return array('valueHolder5614d2ad0d10e228482614');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad0d10e495139455 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad0d10e495139455;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad0d10e495139455 && $this->initializer5614d2ad0d10e495139455->__invoke($this->valueHolder5614d2ad0d10e228482614, $this, 'initializeProxy', array(), $this->initializer5614d2ad0d10e495139455);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad0d10e228482614;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad0d10e228482614;
    }


}

class OroBundleSearchBundleEventListenerORMFulltextIndexListener_000000002e47e82e00000000e28c9ac7 extends \Oro\Bundle\SearchBundle\EventListener\ORM\FulltextIndexListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad11f2f428576599 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad11f2f675603292 = null;

    /**
     * {@inheritDoc}
     */
    public function loadClassMetadata(\Doctrine\ORM\Event\LoadClassMetadataEventArgs $event)
    {
        $this->initializer5614d2ad11f2f675603292 && $this->initializer5614d2ad11f2f675603292->__invoke($this->valueHolder5614d2ad11f2f428576599, $this, 'loadClassMetadata', array('event' => $event), $this->initializer5614d2ad11f2f675603292);

        return $this->valueHolder5614d2ad11f2f428576599->loadClassMetadata($event);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad11f2f675603292 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad11f2f675603292 && $this->initializer5614d2ad11f2f675603292->__invoke($this->valueHolder5614d2ad11f2f428576599, $this, '__get', array('name' => $name), $this->initializer5614d2ad11f2f675603292);

        return $this->valueHolder5614d2ad11f2f428576599->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad11f2f675603292 && $this->initializer5614d2ad11f2f675603292->__invoke($this->valueHolder5614d2ad11f2f428576599, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad11f2f675603292);

        $this->valueHolder5614d2ad11f2f428576599->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad11f2f675603292 && $this->initializer5614d2ad11f2f675603292->__invoke($this->valueHolder5614d2ad11f2f428576599, $this, '__isset', array('name' => $name), $this->initializer5614d2ad11f2f675603292);

        return isset($this->valueHolder5614d2ad11f2f428576599->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad11f2f675603292 && $this->initializer5614d2ad11f2f675603292->__invoke($this->valueHolder5614d2ad11f2f428576599, $this, '__unset', array('name' => $name), $this->initializer5614d2ad11f2f675603292);

        unset($this->valueHolder5614d2ad11f2f428576599->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad11f2f675603292 && $this->initializer5614d2ad11f2f675603292->__invoke($this->valueHolder5614d2ad11f2f428576599, $this, '__clone', array(), $this->initializer5614d2ad11f2f675603292);

        $this->valueHolder5614d2ad11f2f428576599 = clone $this->valueHolder5614d2ad11f2f428576599;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad11f2f675603292 && $this->initializer5614d2ad11f2f675603292->__invoke($this->valueHolder5614d2ad11f2f428576599, $this, '__sleep', array(), $this->initializer5614d2ad11f2f675603292);

        return array('valueHolder5614d2ad11f2f428576599');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad11f2f675603292 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad11f2f675603292;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad11f2f675603292 && $this->initializer5614d2ad11f2f675603292->__invoke($this->valueHolder5614d2ad11f2f428576599, $this, 'initializeProxy', array(), $this->initializer5614d2ad11f2f675603292);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad11f2f428576599;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad11f2f428576599;
    }


}

class OroBundleSegmentBundleEventListenerDoctrinePreRemoveListener_000000002e47ef2f00000000e28c9ac7 extends \Oro\Bundle\SegmentBundle\EventListener\DoctrinePreRemoveListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad14257530718646 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad1463f966142958 = null;

    /**
     * {@inheritDoc}
     */
    public function preRemove(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2ad1463f966142958 && $this->initializer5614d2ad1463f966142958->__invoke($this->valueHolder5614d2ad14257530718646, $this, 'preRemove', array('args' => $args), $this->initializer5614d2ad1463f966142958);

        return $this->valueHolder5614d2ad14257530718646->preRemove($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postFlush(\Doctrine\ORM\Event\PostFlushEventArgs $args)
    {
        $this->initializer5614d2ad1463f966142958 && $this->initializer5614d2ad1463f966142958->__invoke($this->valueHolder5614d2ad14257530718646, $this, 'postFlush', array('args' => $args), $this->initializer5614d2ad1463f966142958);

        return $this->valueHolder5614d2ad14257530718646->postFlush($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad1463f966142958 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad1463f966142958 && $this->initializer5614d2ad1463f966142958->__invoke($this->valueHolder5614d2ad14257530718646, $this, '__get', array('name' => $name), $this->initializer5614d2ad1463f966142958);

        return $this->valueHolder5614d2ad14257530718646->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad1463f966142958 && $this->initializer5614d2ad1463f966142958->__invoke($this->valueHolder5614d2ad14257530718646, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad1463f966142958);

        $this->valueHolder5614d2ad14257530718646->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad1463f966142958 && $this->initializer5614d2ad1463f966142958->__invoke($this->valueHolder5614d2ad14257530718646, $this, '__isset', array('name' => $name), $this->initializer5614d2ad1463f966142958);

        return isset($this->valueHolder5614d2ad14257530718646->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad1463f966142958 && $this->initializer5614d2ad1463f966142958->__invoke($this->valueHolder5614d2ad14257530718646, $this, '__unset', array('name' => $name), $this->initializer5614d2ad1463f966142958);

        unset($this->valueHolder5614d2ad14257530718646->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad1463f966142958 && $this->initializer5614d2ad1463f966142958->__invoke($this->valueHolder5614d2ad14257530718646, $this, '__clone', array(), $this->initializer5614d2ad1463f966142958);

        $this->valueHolder5614d2ad14257530718646 = clone $this->valueHolder5614d2ad14257530718646;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad1463f966142958 && $this->initializer5614d2ad1463f966142958->__invoke($this->valueHolder5614d2ad14257530718646, $this, '__sleep', array(), $this->initializer5614d2ad1463f966142958);

        return array('valueHolder5614d2ad14257530718646');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad1463f966142958 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad1463f966142958;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad1463f966142958 && $this->initializer5614d2ad1463f966142958->__invoke($this->valueHolder5614d2ad14257530718646, $this, 'initializeProxy', array(), $this->initializer5614d2ad1463f966142958);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad14257530718646;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad14257530718646;
    }


}

class OroBundleTagBundleEventListenerTagListener_000000002e47eeb800000000e28c9ac7 extends \Oro\Bundle\TagBundle\EventListener\TagListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad184c0232695503 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad184c0908902994 = null;

    /**
     * {@inheritDoc}
     */
    public function preRemove(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2ad184c0908902994 && $this->initializer5614d2ad184c0908902994->__invoke($this->valueHolder5614d2ad184c0232695503, $this, 'preRemove', array('args' => $args), $this->initializer5614d2ad184c0908902994);

        return $this->valueHolder5614d2ad184c0232695503->preRemove($args);
    }

    /**
     * {@inheritDoc}
     */
    public function setContainer(\Symfony\Component\DependencyInjection\ContainerInterface $container = null)
    {
        $this->initializer5614d2ad184c0908902994 && $this->initializer5614d2ad184c0908902994->__invoke($this->valueHolder5614d2ad184c0232695503, $this, 'setContainer', array('container' => $container), $this->initializer5614d2ad184c0908902994);

        return $this->valueHolder5614d2ad184c0232695503->setContainer($container);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad184c0908902994 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad184c0908902994 && $this->initializer5614d2ad184c0908902994->__invoke($this->valueHolder5614d2ad184c0232695503, $this, '__get', array('name' => $name), $this->initializer5614d2ad184c0908902994);

        return $this->valueHolder5614d2ad184c0232695503->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad184c0908902994 && $this->initializer5614d2ad184c0908902994->__invoke($this->valueHolder5614d2ad184c0232695503, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad184c0908902994);

        $this->valueHolder5614d2ad184c0232695503->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad184c0908902994 && $this->initializer5614d2ad184c0908902994->__invoke($this->valueHolder5614d2ad184c0232695503, $this, '__isset', array('name' => $name), $this->initializer5614d2ad184c0908902994);

        return isset($this->valueHolder5614d2ad184c0232695503->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad184c0908902994 && $this->initializer5614d2ad184c0908902994->__invoke($this->valueHolder5614d2ad184c0232695503, $this, '__unset', array('name' => $name), $this->initializer5614d2ad184c0908902994);

        unset($this->valueHolder5614d2ad184c0232695503->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad184c0908902994 && $this->initializer5614d2ad184c0908902994->__invoke($this->valueHolder5614d2ad184c0232695503, $this, '__clone', array(), $this->initializer5614d2ad184c0908902994);

        $this->valueHolder5614d2ad184c0232695503 = clone $this->valueHolder5614d2ad184c0232695503;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad184c0908902994 && $this->initializer5614d2ad184c0908902994->__invoke($this->valueHolder5614d2ad184c0232695503, $this, '__sleep', array(), $this->initializer5614d2ad184c0908902994);

        return array('valueHolder5614d2ad184c0232695503');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad184c0908902994 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad184c0908902994;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad184c0908902994 && $this->initializer5614d2ad184c0908902994->__invoke($this->valueHolder5614d2ad184c0232695503, $this, 'initializeProxy', array(), $this->initializer5614d2ad184c0908902994);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad184c0232695503;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad184c0232695503;
    }


}

class OroBundleTranslationBundleControllerController_000000002e47fa0900000000e28c9ac7 extends \Oro\Bundle\TranslationBundle\Controller\Controller implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad1bb71685983552 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad1bb71712938136 = null;

    /**
     * {@inheritDoc}
     */
    public function indexAction(\Symfony\Component\HttpFoundation\Request $request, $_locale)
    {
        $this->initializer5614d2ad1bb71712938136 && $this->initializer5614d2ad1bb71712938136->__invoke($this->valueHolder5614d2ad1bb71685983552, $this, 'indexAction', array('request' => $request, '_locale' => $_locale), $this->initializer5614d2ad1bb71712938136);

        return $this->valueHolder5614d2ad1bb71685983552->indexAction($request, $_locale);
    }

    /**
     * {@inheritDoc}
     */
    public function renderJsTranslationContent(array $domains, $locale, $debug = false)
    {
        $this->initializer5614d2ad1bb71712938136 && $this->initializer5614d2ad1bb71712938136->__invoke($this->valueHolder5614d2ad1bb71685983552, $this, 'renderJsTranslationContent', array('domains' => $domains, 'locale' => $locale, 'debug' => $debug), $this->initializer5614d2ad1bb71712938136);

        return $this->valueHolder5614d2ad1bb71685983552->renderJsTranslationContent($domains, $locale, $debug);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad1bb71712938136 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad1bb71712938136 && $this->initializer5614d2ad1bb71712938136->__invoke($this->valueHolder5614d2ad1bb71685983552, $this, '__get', array('name' => $name), $this->initializer5614d2ad1bb71712938136);

        return $this->valueHolder5614d2ad1bb71685983552->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad1bb71712938136 && $this->initializer5614d2ad1bb71712938136->__invoke($this->valueHolder5614d2ad1bb71685983552, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad1bb71712938136);

        $this->valueHolder5614d2ad1bb71685983552->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad1bb71712938136 && $this->initializer5614d2ad1bb71712938136->__invoke($this->valueHolder5614d2ad1bb71685983552, $this, '__isset', array('name' => $name), $this->initializer5614d2ad1bb71712938136);

        return isset($this->valueHolder5614d2ad1bb71685983552->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad1bb71712938136 && $this->initializer5614d2ad1bb71712938136->__invoke($this->valueHolder5614d2ad1bb71685983552, $this, '__unset', array('name' => $name), $this->initializer5614d2ad1bb71712938136);

        unset($this->valueHolder5614d2ad1bb71685983552->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad1bb71712938136 && $this->initializer5614d2ad1bb71712938136->__invoke($this->valueHolder5614d2ad1bb71685983552, $this, '__clone', array(), $this->initializer5614d2ad1bb71712938136);

        $this->valueHolder5614d2ad1bb71685983552 = clone $this->valueHolder5614d2ad1bb71685983552;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad1bb71712938136 && $this->initializer5614d2ad1bb71712938136->__invoke($this->valueHolder5614d2ad1bb71685983552, $this, '__sleep', array(), $this->initializer5614d2ad1bb71712938136);

        return array('valueHolder5614d2ad1bb71685983552');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad1bb71712938136 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad1bb71712938136;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad1bb71712938136 && $this->initializer5614d2ad1bb71712938136->__invoke($this->valueHolder5614d2ad1bb71685983552, $this, 'initializeProxy', array(), $this->initializer5614d2ad1bb71712938136);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad1bb71685983552;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad1bb71685983552;
    }


}

class OroBundleTranslationBundleProviderTranslationServiceProvider_000000002e47fa0c00000000e28c9ac7 extends \Oro\Bundle\TranslationBundle\Provider\TranslationServiceProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad21162112547655 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad21162729305725 = null;

    /**
     * {@inheritDoc}
     */
    public function update($dirs)
    {
        $this->initializer5614d2ad21162729305725 && $this->initializer5614d2ad21162729305725->__invoke($this->valueHolder5614d2ad21162112547655, $this, 'update', array('dirs' => $dirs), $this->initializer5614d2ad21162729305725);

        return $this->valueHolder5614d2ad21162112547655->update($dirs);
    }

    /**
     * {@inheritDoc}
     */
    public function upload($dir, $mode = 'add')
    {
        $this->initializer5614d2ad21162729305725 && $this->initializer5614d2ad21162729305725->__invoke($this->valueHolder5614d2ad21162112547655, $this, 'upload', array('dir' => $dir, 'mode' => $mode), $this->initializer5614d2ad21162729305725);

        return $this->valueHolder5614d2ad21162112547655->upload($dir, $mode);
    }

    /**
     * {@inheritDoc}
     */
    public function download($pathToSave, array $projects, $locale = null, $toApply = true)
    {
        $this->initializer5614d2ad21162729305725 && $this->initializer5614d2ad21162729305725->__invoke($this->valueHolder5614d2ad21162112547655, $this, 'download', array('pathToSave' => $pathToSave, 'projects' => $projects, 'locale' => $locale, 'toApply' => $toApply), $this->initializer5614d2ad21162729305725);

        return $this->valueHolder5614d2ad21162112547655->download($pathToSave, $projects, $locale, $toApply);
    }

    /**
     * {@inheritDoc}
     */
    public function setAdapter(\Oro\Bundle\TranslationBundle\Provider\APIAdapterInterface $adapter)
    {
        $this->initializer5614d2ad21162729305725 && $this->initializer5614d2ad21162729305725->__invoke($this->valueHolder5614d2ad21162112547655, $this, 'setAdapter', array('adapter' => $adapter), $this->initializer5614d2ad21162729305725);

        return $this->valueHolder5614d2ad21162112547655->setAdapter($adapter);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdapter()
    {
        $this->initializer5614d2ad21162729305725 && $this->initializer5614d2ad21162729305725->__invoke($this->valueHolder5614d2ad21162112547655, $this, 'getAdapter', array(), $this->initializer5614d2ad21162729305725);

        return $this->valueHolder5614d2ad21162112547655->getAdapter();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogger(\Psr\Log\LoggerInterface $logger)
    {
        $this->initializer5614d2ad21162729305725 && $this->initializer5614d2ad21162729305725->__invoke($this->valueHolder5614d2ad21162112547655, $this, 'setLogger', array('logger' => $logger), $this->initializer5614d2ad21162729305725);

        return $this->valueHolder5614d2ad21162112547655->setLogger($logger);
    }

    /**
     * {@inheritDoc}
     */
    public function getTmpDir($prefix)
    {
        $this->initializer5614d2ad21162729305725 && $this->initializer5614d2ad21162729305725->__invoke($this->valueHolder5614d2ad21162112547655, $this, 'getTmpDir', array('prefix' => $prefix), $this->initializer5614d2ad21162729305725);

        return $this->valueHolder5614d2ad21162112547655->getTmpDir($prefix);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad21162729305725 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad21162729305725 && $this->initializer5614d2ad21162729305725->__invoke($this->valueHolder5614d2ad21162112547655, $this, '__get', array('name' => $name), $this->initializer5614d2ad21162729305725);

        return $this->valueHolder5614d2ad21162112547655->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad21162729305725 && $this->initializer5614d2ad21162729305725->__invoke($this->valueHolder5614d2ad21162112547655, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad21162729305725);

        $this->valueHolder5614d2ad21162112547655->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad21162729305725 && $this->initializer5614d2ad21162729305725->__invoke($this->valueHolder5614d2ad21162112547655, $this, '__isset', array('name' => $name), $this->initializer5614d2ad21162729305725);

        return isset($this->valueHolder5614d2ad21162112547655->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad21162729305725 && $this->initializer5614d2ad21162729305725->__invoke($this->valueHolder5614d2ad21162112547655, $this, '__unset', array('name' => $name), $this->initializer5614d2ad21162729305725);

        unset($this->valueHolder5614d2ad21162112547655->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad21162729305725 && $this->initializer5614d2ad21162729305725->__invoke($this->valueHolder5614d2ad21162112547655, $this, '__clone', array(), $this->initializer5614d2ad21162729305725);

        $this->valueHolder5614d2ad21162112547655 = clone $this->valueHolder5614d2ad21162112547655;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad21162729305725 && $this->initializer5614d2ad21162729305725->__invoke($this->valueHolder5614d2ad21162112547655, $this, '__sleep', array(), $this->initializer5614d2ad21162729305725);

        return array('valueHolder5614d2ad21162112547655');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad21162729305725 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad21162729305725;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad21162729305725 && $this->initializer5614d2ad21162729305725->__invoke($this->valueHolder5614d2ad21162112547655, $this, 'initializeProxy', array(), $this->initializer5614d2ad21162729305725);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad21162112547655;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad21162112547655;
    }


}

class OroBundleTranslationBundleProviderJsTranslationDumper_000000002e47fa3300000000e28c9ac7 extends \Oro\Bundle\TranslationBundle\Provider\JsTranslationDumper implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad38480698462213 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad38868751066491 = null;

    /**
     * {@inheritDoc}
     */
    public function dumpTranslations($locales = array())
    {
        $this->initializer5614d2ad38868751066491 && $this->initializer5614d2ad38868751066491->__invoke($this->valueHolder5614d2ad38480698462213, $this, 'dumpTranslations', array('locales' => $locales), $this->initializer5614d2ad38868751066491);

        return $this->valueHolder5614d2ad38480698462213->dumpTranslations($locales);
    }

    /**
     * {@inheritDoc}
     */
    public function setLogger(\Psr\Log\LoggerInterface $logger)
    {
        $this->initializer5614d2ad38868751066491 && $this->initializer5614d2ad38868751066491->__invoke($this->valueHolder5614d2ad38480698462213, $this, 'setLogger', array('logger' => $logger), $this->initializer5614d2ad38868751066491);

        return $this->valueHolder5614d2ad38480698462213->setLogger($logger);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad38868751066491 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad38868751066491 && $this->initializer5614d2ad38868751066491->__invoke($this->valueHolder5614d2ad38480698462213, $this, '__get', array('name' => $name), $this->initializer5614d2ad38868751066491);

        return $this->valueHolder5614d2ad38480698462213->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad38868751066491 && $this->initializer5614d2ad38868751066491->__invoke($this->valueHolder5614d2ad38480698462213, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad38868751066491);

        $this->valueHolder5614d2ad38480698462213->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad38868751066491 && $this->initializer5614d2ad38868751066491->__invoke($this->valueHolder5614d2ad38480698462213, $this, '__isset', array('name' => $name), $this->initializer5614d2ad38868751066491);

        return isset($this->valueHolder5614d2ad38480698462213->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad38868751066491 && $this->initializer5614d2ad38868751066491->__invoke($this->valueHolder5614d2ad38480698462213, $this, '__unset', array('name' => $name), $this->initializer5614d2ad38868751066491);

        unset($this->valueHolder5614d2ad38480698462213->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad38868751066491 && $this->initializer5614d2ad38868751066491->__invoke($this->valueHolder5614d2ad38480698462213, $this, '__clone', array(), $this->initializer5614d2ad38868751066491);

        $this->valueHolder5614d2ad38480698462213 = clone $this->valueHolder5614d2ad38480698462213;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad38868751066491 && $this->initializer5614d2ad38868751066491->__invoke($this->valueHolder5614d2ad38480698462213, $this, '__sleep', array(), $this->initializer5614d2ad38868751066491);

        return array('valueHolder5614d2ad38480698462213');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad38868751066491 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad38868751066491;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad38868751066491 && $this->initializer5614d2ad38868751066491->__invoke($this->valueHolder5614d2ad38480698462213, $this, 'initializeProxy', array(), $this->initializer5614d2ad38868751066491);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad38480698462213;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad38480698462213;
    }


}

class OroBundleWorkflowBundleEventListenerProcessDataSerializeListener_000000002e47fdb700000000e28c9ac7 extends \Oro\Bundle\WorkflowBundle\EventListener\ProcessDataSerializeListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad3d2a1859924061 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad3d2a1935520626 = null;

    /**
     * {@inheritDoc}
     */
    public function onFlush(\Doctrine\ORM\Event\OnFlushEventArgs $args)
    {
        $this->initializer5614d2ad3d2a1935520626 && $this->initializer5614d2ad3d2a1935520626->__invoke($this->valueHolder5614d2ad3d2a1859924061, $this, 'onFlush', array('args' => $args), $this->initializer5614d2ad3d2a1935520626);

        return $this->valueHolder5614d2ad3d2a1859924061->onFlush($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postFlush(\Doctrine\ORM\Event\PostFlushEventArgs $args)
    {
        $this->initializer5614d2ad3d2a1935520626 && $this->initializer5614d2ad3d2a1935520626->__invoke($this->valueHolder5614d2ad3d2a1859924061, $this, 'postFlush', array('args' => $args), $this->initializer5614d2ad3d2a1935520626);

        return $this->valueHolder5614d2ad3d2a1859924061->postFlush($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postLoad(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2ad3d2a1935520626 && $this->initializer5614d2ad3d2a1935520626->__invoke($this->valueHolder5614d2ad3d2a1859924061, $this, 'postLoad', array('args' => $args), $this->initializer5614d2ad3d2a1935520626);

        return $this->valueHolder5614d2ad3d2a1859924061->postLoad($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad3d2a1935520626 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad3d2a1935520626 && $this->initializer5614d2ad3d2a1935520626->__invoke($this->valueHolder5614d2ad3d2a1859924061, $this, '__get', array('name' => $name), $this->initializer5614d2ad3d2a1935520626);

        return $this->valueHolder5614d2ad3d2a1859924061->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad3d2a1935520626 && $this->initializer5614d2ad3d2a1935520626->__invoke($this->valueHolder5614d2ad3d2a1859924061, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad3d2a1935520626);

        $this->valueHolder5614d2ad3d2a1859924061->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad3d2a1935520626 && $this->initializer5614d2ad3d2a1935520626->__invoke($this->valueHolder5614d2ad3d2a1859924061, $this, '__isset', array('name' => $name), $this->initializer5614d2ad3d2a1935520626);

        return isset($this->valueHolder5614d2ad3d2a1859924061->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad3d2a1935520626 && $this->initializer5614d2ad3d2a1935520626->__invoke($this->valueHolder5614d2ad3d2a1859924061, $this, '__unset', array('name' => $name), $this->initializer5614d2ad3d2a1935520626);

        unset($this->valueHolder5614d2ad3d2a1859924061->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad3d2a1935520626 && $this->initializer5614d2ad3d2a1935520626->__invoke($this->valueHolder5614d2ad3d2a1859924061, $this, '__clone', array(), $this->initializer5614d2ad3d2a1935520626);

        $this->valueHolder5614d2ad3d2a1859924061 = clone $this->valueHolder5614d2ad3d2a1859924061;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad3d2a1935520626 && $this->initializer5614d2ad3d2a1935520626->__invoke($this->valueHolder5614d2ad3d2a1859924061, $this, '__sleep', array(), $this->initializer5614d2ad3d2a1935520626);

        return array('valueHolder5614d2ad3d2a1859924061');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad3d2a1935520626 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad3d2a1935520626;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad3d2a1935520626 && $this->initializer5614d2ad3d2a1935520626->__invoke($this->valueHolder5614d2ad3d2a1859924061, $this, 'initializeProxy', array(), $this->initializer5614d2ad3d2a1935520626);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad3d2a1859924061;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad3d2a1859924061;
    }


}

class OroBundleWorkflowBundleEventListenerWorkflowDataSerializeListener_000000002e47fd5000000000e28c9ac7 extends \Oro\Bundle\WorkflowBundle\EventListener\WorkflowDataSerializeListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad42892546527029 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad42892544621508 = null;

    /**
     * {@inheritDoc}
     */
    public function onFlush(\Doctrine\ORM\Event\OnFlushEventArgs $args)
    {
        $this->initializer5614d2ad42892544621508 && $this->initializer5614d2ad42892544621508->__invoke($this->valueHolder5614d2ad42892546527029, $this, 'onFlush', array('args' => $args), $this->initializer5614d2ad42892544621508);

        return $this->valueHolder5614d2ad42892546527029->onFlush($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postFlush(\Doctrine\ORM\Event\PostFlushEventArgs $args)
    {
        $this->initializer5614d2ad42892544621508 && $this->initializer5614d2ad42892544621508->__invoke($this->valueHolder5614d2ad42892546527029, $this, 'postFlush', array('args' => $args), $this->initializer5614d2ad42892544621508);

        return $this->valueHolder5614d2ad42892546527029->postFlush($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postLoad(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2ad42892544621508 && $this->initializer5614d2ad42892544621508->__invoke($this->valueHolder5614d2ad42892546527029, $this, 'postLoad', array('args' => $args), $this->initializer5614d2ad42892544621508);

        return $this->valueHolder5614d2ad42892546527029->postLoad($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad42892544621508 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad42892544621508 && $this->initializer5614d2ad42892544621508->__invoke($this->valueHolder5614d2ad42892546527029, $this, '__get', array('name' => $name), $this->initializer5614d2ad42892544621508);

        return $this->valueHolder5614d2ad42892546527029->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad42892544621508 && $this->initializer5614d2ad42892544621508->__invoke($this->valueHolder5614d2ad42892546527029, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad42892544621508);

        $this->valueHolder5614d2ad42892546527029->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad42892544621508 && $this->initializer5614d2ad42892544621508->__invoke($this->valueHolder5614d2ad42892546527029, $this, '__isset', array('name' => $name), $this->initializer5614d2ad42892544621508);

        return isset($this->valueHolder5614d2ad42892546527029->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad42892544621508 && $this->initializer5614d2ad42892544621508->__invoke($this->valueHolder5614d2ad42892546527029, $this, '__unset', array('name' => $name), $this->initializer5614d2ad42892544621508);

        unset($this->valueHolder5614d2ad42892546527029->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad42892544621508 && $this->initializer5614d2ad42892544621508->__invoke($this->valueHolder5614d2ad42892546527029, $this, '__clone', array(), $this->initializer5614d2ad42892544621508);

        $this->valueHolder5614d2ad42892546527029 = clone $this->valueHolder5614d2ad42892546527029;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad42892544621508 && $this->initializer5614d2ad42892544621508->__invoke($this->valueHolder5614d2ad42892546527029, $this, '__sleep', array(), $this->initializer5614d2ad42892544621508);

        return array('valueHolder5614d2ad42892546527029');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad42892544621508 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad42892544621508;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad42892544621508 && $this->initializer5614d2ad42892544621508->__invoke($this->valueHolder5614d2ad42892546527029, $this, 'initializeProxy', array(), $this->initializer5614d2ad42892544621508);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad42892546527029;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad42892546527029;
    }


}

class OroBundleWorkflowBundleEventListenerWorkflowItemListener_000000002e47fd4100000000e28c9ac7 extends \Oro\Bundle\WorkflowBundle\EventListener\WorkflowItemListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad47a9b697452157 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad47a9b093368821 = null;

    /**
     * {@inheritDoc}
     */
    public function postPersist(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2ad47a9b093368821 && $this->initializer5614d2ad47a9b093368821->__invoke($this->valueHolder5614d2ad47a9b697452157, $this, 'postPersist', array('args' => $args), $this->initializer5614d2ad47a9b093368821);

        return $this->valueHolder5614d2ad47a9b697452157->postPersist($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postFlush()
    {
        $this->initializer5614d2ad47a9b093368821 && $this->initializer5614d2ad47a9b093368821->__invoke($this->valueHolder5614d2ad47a9b697452157, $this, 'postFlush', array(), $this->initializer5614d2ad47a9b093368821);

        return $this->valueHolder5614d2ad47a9b697452157->postFlush();
    }

    /**
     * {@inheritDoc}
     */
    public function preRemove(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2ad47a9b093368821 && $this->initializer5614d2ad47a9b093368821->__invoke($this->valueHolder5614d2ad47a9b697452157, $this, 'preRemove', array('args' => $args), $this->initializer5614d2ad47a9b093368821);

        return $this->valueHolder5614d2ad47a9b697452157->preRemove($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad47a9b093368821 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad47a9b093368821 && $this->initializer5614d2ad47a9b093368821->__invoke($this->valueHolder5614d2ad47a9b697452157, $this, '__get', array('name' => $name), $this->initializer5614d2ad47a9b093368821);

        return $this->valueHolder5614d2ad47a9b697452157->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad47a9b093368821 && $this->initializer5614d2ad47a9b093368821->__invoke($this->valueHolder5614d2ad47a9b697452157, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad47a9b093368821);

        $this->valueHolder5614d2ad47a9b697452157->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad47a9b093368821 && $this->initializer5614d2ad47a9b093368821->__invoke($this->valueHolder5614d2ad47a9b697452157, $this, '__isset', array('name' => $name), $this->initializer5614d2ad47a9b093368821);

        return isset($this->valueHolder5614d2ad47a9b697452157->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad47a9b093368821 && $this->initializer5614d2ad47a9b093368821->__invoke($this->valueHolder5614d2ad47a9b697452157, $this, '__unset', array('name' => $name), $this->initializer5614d2ad47a9b093368821);

        unset($this->valueHolder5614d2ad47a9b697452157->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad47a9b093368821 && $this->initializer5614d2ad47a9b093368821->__invoke($this->valueHolder5614d2ad47a9b697452157, $this, '__clone', array(), $this->initializer5614d2ad47a9b093368821);

        $this->valueHolder5614d2ad47a9b697452157 = clone $this->valueHolder5614d2ad47a9b697452157;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad47a9b093368821 && $this->initializer5614d2ad47a9b093368821->__invoke($this->valueHolder5614d2ad47a9b697452157, $this, '__sleep', array(), $this->initializer5614d2ad47a9b093368821);

        return array('valueHolder5614d2ad47a9b697452157');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad47a9b093368821 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad47a9b093368821;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad47a9b093368821 && $this->initializer5614d2ad47a9b093368821->__invoke($this->valueHolder5614d2ad47a9b697452157, $this, 'initializeProxy', array(), $this->initializer5614d2ad47a9b093368821);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad47a9b697452157;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad47a9b697452157;
    }


}

class OroBundleWorkflowBundleEventListenerProcessCollectorListener_000000002e47ff9c00000000e28c9ac7 extends \Oro\Bundle\WorkflowBundle\EventListener\ProcessCollectorListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad4c4d4120716603 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad4c4d4093191873 = null;

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled = true)
    {
        $this->initializer5614d2ad4c4d4093191873 && $this->initializer5614d2ad4c4d4093191873->__invoke($this->valueHolder5614d2ad4c4d4120716603, $this, 'setEnabled', array('enabled' => $enabled), $this->initializer5614d2ad4c4d4093191873);

        return $this->valueHolder5614d2ad4c4d4120716603->setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function setForceQueued($forceQueued)
    {
        $this->initializer5614d2ad4c4d4093191873 && $this->initializer5614d2ad4c4d4093191873->__invoke($this->valueHolder5614d2ad4c4d4120716603, $this, 'setForceQueued', array('forceQueued' => $forceQueued), $this->initializer5614d2ad4c4d4093191873);

        return $this->valueHolder5614d2ad4c4d4120716603->setForceQueued($forceQueued);
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2ad4c4d4093191873 && $this->initializer5614d2ad4c4d4093191873->__invoke($this->valueHolder5614d2ad4c4d4120716603, $this, 'prePersist', array('args' => $args), $this->initializer5614d2ad4c4d4093191873);

        return $this->valueHolder5614d2ad4c4d4120716603->prePersist($args);
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate(\Doctrine\ORM\Event\PreUpdateEventArgs $args)
    {
        $this->initializer5614d2ad4c4d4093191873 && $this->initializer5614d2ad4c4d4093191873->__invoke($this->valueHolder5614d2ad4c4d4120716603, $this, 'preUpdate', array('args' => $args), $this->initializer5614d2ad4c4d4093191873);

        return $this->valueHolder5614d2ad4c4d4120716603->preUpdate($args);
    }

    /**
     * {@inheritDoc}
     */
    public function preRemove(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2ad4c4d4093191873 && $this->initializer5614d2ad4c4d4093191873->__invoke($this->valueHolder5614d2ad4c4d4120716603, $this, 'preRemove', array('args' => $args), $this->initializer5614d2ad4c4d4093191873);

        return $this->valueHolder5614d2ad4c4d4120716603->preRemove($args);
    }

    /**
     * {@inheritDoc}
     */
    public function onClear(\Doctrine\ORM\Event\OnClearEventArgs $args)
    {
        $this->initializer5614d2ad4c4d4093191873 && $this->initializer5614d2ad4c4d4093191873->__invoke($this->valueHolder5614d2ad4c4d4120716603, $this, 'onClear', array('args' => $args), $this->initializer5614d2ad4c4d4093191873);

        return $this->valueHolder5614d2ad4c4d4120716603->onClear($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postFlush(\Doctrine\ORM\Event\PostFlushEventArgs $args)
    {
        $this->initializer5614d2ad4c4d4093191873 && $this->initializer5614d2ad4c4d4093191873->__invoke($this->valueHolder5614d2ad4c4d4120716603, $this, 'postFlush', array('args' => $args), $this->initializer5614d2ad4c4d4093191873);

        return $this->valueHolder5614d2ad4c4d4120716603->postFlush($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad4c4d4093191873 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad4c4d4093191873 && $this->initializer5614d2ad4c4d4093191873->__invoke($this->valueHolder5614d2ad4c4d4120716603, $this, '__get', array('name' => $name), $this->initializer5614d2ad4c4d4093191873);

        return $this->valueHolder5614d2ad4c4d4120716603->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad4c4d4093191873 && $this->initializer5614d2ad4c4d4093191873->__invoke($this->valueHolder5614d2ad4c4d4120716603, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad4c4d4093191873);

        $this->valueHolder5614d2ad4c4d4120716603->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad4c4d4093191873 && $this->initializer5614d2ad4c4d4093191873->__invoke($this->valueHolder5614d2ad4c4d4120716603, $this, '__isset', array('name' => $name), $this->initializer5614d2ad4c4d4093191873);

        return isset($this->valueHolder5614d2ad4c4d4120716603->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad4c4d4093191873 && $this->initializer5614d2ad4c4d4093191873->__invoke($this->valueHolder5614d2ad4c4d4120716603, $this, '__unset', array('name' => $name), $this->initializer5614d2ad4c4d4093191873);

        unset($this->valueHolder5614d2ad4c4d4120716603->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad4c4d4093191873 && $this->initializer5614d2ad4c4d4093191873->__invoke($this->valueHolder5614d2ad4c4d4120716603, $this, '__clone', array(), $this->initializer5614d2ad4c4d4093191873);

        $this->valueHolder5614d2ad4c4d4120716603 = clone $this->valueHolder5614d2ad4c4d4120716603;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad4c4d4093191873 && $this->initializer5614d2ad4c4d4093191873->__invoke($this->valueHolder5614d2ad4c4d4120716603, $this, '__sleep', array(), $this->initializer5614d2ad4c4d4093191873);

        return array('valueHolder5614d2ad4c4d4120716603');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad4c4d4093191873 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad4c4d4093191873;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad4c4d4093191873 && $this->initializer5614d2ad4c4d4093191873->__invoke($this->valueHolder5614d2ad4c4d4120716603, $this, 'initializeProxy', array(), $this->initializer5614d2ad4c4d4093191873);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad4c4d4120716603;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad4c4d4120716603;
    }


}

class OroBundleCommentBundleEventListenerCommentLifecycleListener_000000002e47f0b100000000e28c9ac7 extends \Oro\Bundle\CommentBundle\EventListener\CommentLifecycleListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad56117452113790 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad56117318100251 = null;

    /**
     * {@inheritDoc}
     */
    public function preUpdate(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2ad56117318100251 && $this->initializer5614d2ad56117318100251->__invoke($this->valueHolder5614d2ad56117452113790, $this, 'preUpdate', array('args' => $args), $this->initializer5614d2ad56117318100251);

        return $this->valueHolder5614d2ad56117452113790->preUpdate($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad56117318100251 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad56117318100251 && $this->initializer5614d2ad56117318100251->__invoke($this->valueHolder5614d2ad56117452113790, $this, '__get', array('name' => $name), $this->initializer5614d2ad56117318100251);

        return $this->valueHolder5614d2ad56117452113790->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad56117318100251 && $this->initializer5614d2ad56117318100251->__invoke($this->valueHolder5614d2ad56117452113790, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad56117318100251);

        $this->valueHolder5614d2ad56117452113790->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad56117318100251 && $this->initializer5614d2ad56117318100251->__invoke($this->valueHolder5614d2ad56117452113790, $this, '__isset', array('name' => $name), $this->initializer5614d2ad56117318100251);

        return isset($this->valueHolder5614d2ad56117452113790->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad56117318100251 && $this->initializer5614d2ad56117318100251->__invoke($this->valueHolder5614d2ad56117452113790, $this, '__unset', array('name' => $name), $this->initializer5614d2ad56117318100251);

        unset($this->valueHolder5614d2ad56117452113790->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad56117318100251 && $this->initializer5614d2ad56117318100251->__invoke($this->valueHolder5614d2ad56117452113790, $this, '__clone', array(), $this->initializer5614d2ad56117318100251);

        $this->valueHolder5614d2ad56117452113790 = clone $this->valueHolder5614d2ad56117452113790;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad56117318100251 && $this->initializer5614d2ad56117318100251->__invoke($this->valueHolder5614d2ad56117452113790, $this, '__sleep', array(), $this->initializer5614d2ad56117318100251);

        return array('valueHolder5614d2ad56117452113790');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad56117318100251 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad56117318100251;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad56117318100251 && $this->initializer5614d2ad56117318100251->__invoke($this->valueHolder5614d2ad56117452113790, $this, 'initializeProxy', array(), $this->initializer5614d2ad56117318100251);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad56117452113790;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad56117452113790;
    }


}

class OroBundleNavigationBundleEntityListenerPinbarPostPersist_000000002e47eb2f00000000e28c9ac7 extends \Oro\Bundle\NavigationBundle\Entity\Listener\PinbarPostPersist implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad58827814754426 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad58827164177582 = null;

    /**
     * {@inheritDoc}
     */
    public function setClassName($className)
    {
        $this->initializer5614d2ad58827164177582 && $this->initializer5614d2ad58827164177582->__invoke($this->valueHolder5614d2ad58827814754426, $this, 'setClassName', array('className' => $className), $this->initializer5614d2ad58827164177582);

        return $this->valueHolder5614d2ad58827814754426->setClassName($className);
    }

    /**
     * {@inheritDoc}
     */
    public function postPersist(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2ad58827164177582 && $this->initializer5614d2ad58827164177582->__invoke($this->valueHolder5614d2ad58827814754426, $this, 'postPersist', array('args' => $args), $this->initializer5614d2ad58827164177582);

        return $this->valueHolder5614d2ad58827814754426->postPersist($args);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad58827164177582 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad58827164177582 && $this->initializer5614d2ad58827164177582->__invoke($this->valueHolder5614d2ad58827814754426, $this, '__get', array('name' => $name), $this->initializer5614d2ad58827164177582);

        return $this->valueHolder5614d2ad58827814754426->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad58827164177582 && $this->initializer5614d2ad58827164177582->__invoke($this->valueHolder5614d2ad58827814754426, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad58827164177582);

        $this->valueHolder5614d2ad58827814754426->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad58827164177582 && $this->initializer5614d2ad58827164177582->__invoke($this->valueHolder5614d2ad58827814754426, $this, '__isset', array('name' => $name), $this->initializer5614d2ad58827164177582);

        return isset($this->valueHolder5614d2ad58827814754426->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad58827164177582 && $this->initializer5614d2ad58827164177582->__invoke($this->valueHolder5614d2ad58827814754426, $this, '__unset', array('name' => $name), $this->initializer5614d2ad58827164177582);

        unset($this->valueHolder5614d2ad58827814754426->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad58827164177582 && $this->initializer5614d2ad58827164177582->__invoke($this->valueHolder5614d2ad58827814754426, $this, '__clone', array(), $this->initializer5614d2ad58827164177582);

        $this->valueHolder5614d2ad58827814754426 = clone $this->valueHolder5614d2ad58827814754426;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad58827164177582 && $this->initializer5614d2ad58827164177582->__invoke($this->valueHolder5614d2ad58827814754426, $this, '__sleep', array(), $this->initializer5614d2ad58827164177582);

        return array('valueHolder5614d2ad58827814754426');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad58827164177582 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad58827164177582;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad58827164177582 && $this->initializer5614d2ad58827164177582->__invoke($this->valueHolder5614d2ad58827814754426, $this, 'initializeProxy', array(), $this->initializer5614d2ad58827164177582);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad58827814754426;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad58827814754426;
    }


}

class OroBundleNavigationBundleEventDoctrineTagEventListener_000000002e47eb0200000000e28c9ac7 extends \Oro\Bundle\NavigationBundle\Event\DoctrineTagEventListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad5bed8580923317 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad5bed8781399911 = null;

    /**
     * {@inheritDoc}
     */
    public function onFlush(\Doctrine\ORM\Event\OnFlushEventArgs $event)
    {
        $this->initializer5614d2ad5bed8781399911 && $this->initializer5614d2ad5bed8781399911->__invoke($this->valueHolder5614d2ad5bed8580923317, $this, 'onFlush', array('event' => $event), $this->initializer5614d2ad5bed8781399911);

        return $this->valueHolder5614d2ad5bed8580923317->onFlush($event);
    }

    /**
     * {@inheritDoc}
     */
    public function postFlush(\Doctrine\ORM\Event\PostFlushEventArgs $event)
    {
        $this->initializer5614d2ad5bed8781399911 && $this->initializer5614d2ad5bed8781399911->__invoke($this->valueHolder5614d2ad5bed8580923317, $this, 'postFlush', array('event' => $event), $this->initializer5614d2ad5bed8781399911);

        return $this->valueHolder5614d2ad5bed8580923317->postFlush($event);
    }

    /**
     * {@inheritDoc}
     */
    public function markSkipped($entityFQCN)
    {
        $this->initializer5614d2ad5bed8781399911 && $this->initializer5614d2ad5bed8781399911->__invoke($this->valueHolder5614d2ad5bed8580923317, $this, 'markSkipped', array('entityFQCN' => $entityFQCN), $this->initializer5614d2ad5bed8781399911);

        return $this->valueHolder5614d2ad5bed8580923317->markSkipped($entityFQCN);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad5bed8781399911 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad5bed8781399911 && $this->initializer5614d2ad5bed8781399911->__invoke($this->valueHolder5614d2ad5bed8580923317, $this, '__get', array('name' => $name), $this->initializer5614d2ad5bed8781399911);

        return $this->valueHolder5614d2ad5bed8580923317->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad5bed8781399911 && $this->initializer5614d2ad5bed8781399911->__invoke($this->valueHolder5614d2ad5bed8580923317, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad5bed8781399911);

        $this->valueHolder5614d2ad5bed8580923317->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad5bed8781399911 && $this->initializer5614d2ad5bed8781399911->__invoke($this->valueHolder5614d2ad5bed8580923317, $this, '__isset', array('name' => $name), $this->initializer5614d2ad5bed8781399911);

        return isset($this->valueHolder5614d2ad5bed8580923317->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad5bed8781399911 && $this->initializer5614d2ad5bed8781399911->__invoke($this->valueHolder5614d2ad5bed8580923317, $this, '__unset', array('name' => $name), $this->initializer5614d2ad5bed8781399911);

        unset($this->valueHolder5614d2ad5bed8580923317->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad5bed8781399911 && $this->initializer5614d2ad5bed8781399911->__invoke($this->valueHolder5614d2ad5bed8580923317, $this, '__clone', array(), $this->initializer5614d2ad5bed8781399911);

        $this->valueHolder5614d2ad5bed8580923317 = clone $this->valueHolder5614d2ad5bed8580923317;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad5bed8781399911 && $this->initializer5614d2ad5bed8781399911->__invoke($this->valueHolder5614d2ad5bed8580923317, $this, '__sleep', array(), $this->initializer5614d2ad5bed8781399911);

        return array('valueHolder5614d2ad5bed8580923317');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad5bed8781399911 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad5bed8781399911;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad5bed8781399911 && $this->initializer5614d2ad5bed8781399911->__invoke($this->valueHolder5614d2ad5bed8580923317, $this, 'initializeProxy', array(), $this->initializer5614d2ad5bed8781399911);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad5bed8580923317;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad5bed8580923317;
    }


}

class OroBundleReminderBundleEventListenerReminderListener_000000002e47eb8400000000e28c9ac7 extends \Oro\Bundle\ReminderBundle\EventListener\ReminderListener implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad618b1047314076 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad618b1931758981 = null;

    /**
     * {@inheritDoc}
     */
    public function postLoad(\Doctrine\ORM\Event\LifecycleEventArgs $args)
    {
        $this->initializer5614d2ad618b1931758981 && $this->initializer5614d2ad618b1931758981->__invoke($this->valueHolder5614d2ad618b1047314076, $this, 'postLoad', array('args' => $args), $this->initializer5614d2ad618b1931758981);

        return $this->valueHolder5614d2ad618b1047314076->postLoad($args);
    }

    /**
     * {@inheritDoc}
     */
    public function postPersist(\Doctrine\ORM\Event\LifecycleEventArgs $event)
    {
        $this->initializer5614d2ad618b1931758981 && $this->initializer5614d2ad618b1931758981->__invoke($this->valueHolder5614d2ad618b1047314076, $this, 'postPersist', array('event' => $event), $this->initializer5614d2ad618b1931758981);

        return $this->valueHolder5614d2ad618b1047314076->postPersist($event);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad618b1931758981 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad618b1931758981 && $this->initializer5614d2ad618b1931758981->__invoke($this->valueHolder5614d2ad618b1047314076, $this, '__get', array('name' => $name), $this->initializer5614d2ad618b1931758981);

        return $this->valueHolder5614d2ad618b1047314076->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad618b1931758981 && $this->initializer5614d2ad618b1931758981->__invoke($this->valueHolder5614d2ad618b1047314076, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad618b1931758981);

        $this->valueHolder5614d2ad618b1047314076->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad618b1931758981 && $this->initializer5614d2ad618b1931758981->__invoke($this->valueHolder5614d2ad618b1047314076, $this, '__isset', array('name' => $name), $this->initializer5614d2ad618b1931758981);

        return isset($this->valueHolder5614d2ad618b1047314076->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad618b1931758981 && $this->initializer5614d2ad618b1931758981->__invoke($this->valueHolder5614d2ad618b1047314076, $this, '__unset', array('name' => $name), $this->initializer5614d2ad618b1931758981);

        unset($this->valueHolder5614d2ad618b1047314076->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad618b1931758981 && $this->initializer5614d2ad618b1931758981->__invoke($this->valueHolder5614d2ad618b1047314076, $this, '__clone', array(), $this->initializer5614d2ad618b1931758981);

        $this->valueHolder5614d2ad618b1047314076 = clone $this->valueHolder5614d2ad618b1047314076;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad618b1931758981 && $this->initializer5614d2ad618b1931758981->__invoke($this->valueHolder5614d2ad618b1047314076, $this, '__sleep', array(), $this->initializer5614d2ad618b1931758981);

        return array('valueHolder5614d2ad618b1047314076');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad618b1931758981 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad618b1931758981;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad618b1931758981 && $this->initializer5614d2ad618b1931758981->__invoke($this->valueHolder5614d2ad618b1047314076, $this, 'initializeProxy', array(), $this->initializer5614d2ad618b1931758981);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad618b1047314076;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad618b1047314076;
    }


}

class OroBundleReminderBundleModelReminderSender_000000002e47eb9700000000e28c9ac7 extends \Oro\Bundle\ReminderBundle\Model\ReminderSender implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad65f02989785848 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad65f02026942005 = null;

    /**
     * {@inheritDoc}
     */
    public function push(\Oro\Bundle\ReminderBundle\Entity\Reminder $reminder)
    {
        $this->initializer5614d2ad65f02026942005 && $this->initializer5614d2ad65f02026942005->__invoke($this->valueHolder5614d2ad65f02989785848, $this, 'push', array('reminder' => $reminder), $this->initializer5614d2ad65f02026942005);

        return $this->valueHolder5614d2ad65f02989785848->push($reminder);
    }

    /**
     * {@inheritDoc}
     */
    public function send()
    {
        $this->initializer5614d2ad65f02026942005 && $this->initializer5614d2ad65f02026942005->__invoke($this->valueHolder5614d2ad65f02989785848, $this, 'send', array(), $this->initializer5614d2ad65f02026942005);

        return $this->valueHolder5614d2ad65f02989785848->send();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad65f02026942005 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad65f02026942005 && $this->initializer5614d2ad65f02026942005->__invoke($this->valueHolder5614d2ad65f02989785848, $this, '__get', array('name' => $name), $this->initializer5614d2ad65f02026942005);

        return $this->valueHolder5614d2ad65f02989785848->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad65f02026942005 && $this->initializer5614d2ad65f02026942005->__invoke($this->valueHolder5614d2ad65f02989785848, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad65f02026942005);

        $this->valueHolder5614d2ad65f02989785848->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad65f02026942005 && $this->initializer5614d2ad65f02026942005->__invoke($this->valueHolder5614d2ad65f02989785848, $this, '__isset', array('name' => $name), $this->initializer5614d2ad65f02026942005);

        return isset($this->valueHolder5614d2ad65f02989785848->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad65f02026942005 && $this->initializer5614d2ad65f02026942005->__invoke($this->valueHolder5614d2ad65f02989785848, $this, '__unset', array('name' => $name), $this->initializer5614d2ad65f02026942005);

        unset($this->valueHolder5614d2ad65f02989785848->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad65f02026942005 && $this->initializer5614d2ad65f02026942005->__invoke($this->valueHolder5614d2ad65f02989785848, $this, '__clone', array(), $this->initializer5614d2ad65f02026942005);

        $this->valueHolder5614d2ad65f02989785848 = clone $this->valueHolder5614d2ad65f02989785848;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad65f02026942005 && $this->initializer5614d2ad65f02026942005->__invoke($this->valueHolder5614d2ad65f02989785848, $this, '__sleep', array(), $this->initializer5614d2ad65f02026942005);

        return array('valueHolder5614d2ad65f02989785848');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad65f02026942005 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad65f02026942005;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad65f02026942005 && $this->initializer5614d2ad65f02026942005->__invoke($this->valueHolder5614d2ad65f02989785848, $this, 'initializeProxy', array(), $this->initializer5614d2ad65f02026942005);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad65f02989785848;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad65f02989785848;
    }


}

class SymfonyBundleFrameworkBundleTemplatingDelegatingEngine_000000002e47fc7e00000000e28c9ac7 extends \Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5614d2ad7be97273691433 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5614d2ad7be97659737254 = null;

    /**
     * {@inheritDoc}
     */
    public function getEngine($name)
    {
        $this->initializer5614d2ad7be97659737254 && $this->initializer5614d2ad7be97659737254->__invoke($this->valueHolder5614d2ad7be97273691433, $this, 'getEngine', array('name' => $name), $this->initializer5614d2ad7be97659737254);

        return $this->valueHolder5614d2ad7be97273691433->getEngine($name);
    }

    /**
     * {@inheritDoc}
     */
    public function renderResponse($view, array $parameters = array(), \Symfony\Component\HttpFoundation\Response $response = null)
    {
        $this->initializer5614d2ad7be97659737254 && $this->initializer5614d2ad7be97659737254->__invoke($this->valueHolder5614d2ad7be97273691433, $this, 'renderResponse', array('view' => $view, 'parameters' => $parameters, 'response' => $response), $this->initializer5614d2ad7be97659737254);

        return $this->valueHolder5614d2ad7be97273691433->renderResponse($view, $parameters, $response);
    }

    /**
     * {@inheritDoc}
     */
    public function render($name, array $parameters = array())
    {
        $this->initializer5614d2ad7be97659737254 && $this->initializer5614d2ad7be97659737254->__invoke($this->valueHolder5614d2ad7be97273691433, $this, 'render', array('name' => $name, 'parameters' => $parameters), $this->initializer5614d2ad7be97659737254);

        return $this->valueHolder5614d2ad7be97273691433->render($name, $parameters);
    }

    /**
     * {@inheritDoc}
     */
    public function stream($name, array $parameters = array())
    {
        $this->initializer5614d2ad7be97659737254 && $this->initializer5614d2ad7be97659737254->__invoke($this->valueHolder5614d2ad7be97273691433, $this, 'stream', array('name' => $name, 'parameters' => $parameters), $this->initializer5614d2ad7be97659737254);

        return $this->valueHolder5614d2ad7be97273691433->stream($name, $parameters);
    }

    /**
     * {@inheritDoc}
     */
    public function exists($name)
    {
        $this->initializer5614d2ad7be97659737254 && $this->initializer5614d2ad7be97659737254->__invoke($this->valueHolder5614d2ad7be97273691433, $this, 'exists', array('name' => $name), $this->initializer5614d2ad7be97659737254);

        return $this->valueHolder5614d2ad7be97273691433->exists($name);
    }

    /**
     * {@inheritDoc}
     */
    public function addEngine(\Symfony\Component\Templating\EngineInterface $engine)
    {
        $this->initializer5614d2ad7be97659737254 && $this->initializer5614d2ad7be97659737254->__invoke($this->valueHolder5614d2ad7be97273691433, $this, 'addEngine', array('engine' => $engine), $this->initializer5614d2ad7be97659737254);

        return $this->valueHolder5614d2ad7be97273691433->addEngine($engine);
    }

    /**
     * {@inheritDoc}
     */
    public function supports($name)
    {
        $this->initializer5614d2ad7be97659737254 && $this->initializer5614d2ad7be97659737254->__invoke($this->valueHolder5614d2ad7be97273691433, $this, 'supports', array('name' => $name), $this->initializer5614d2ad7be97659737254);

        return $this->valueHolder5614d2ad7be97273691433->supports($name);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer5614d2ad7be97659737254 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5614d2ad7be97659737254 && $this->initializer5614d2ad7be97659737254->__invoke($this->valueHolder5614d2ad7be97273691433, $this, '__get', array('name' => $name), $this->initializer5614d2ad7be97659737254);

        return $this->valueHolder5614d2ad7be97273691433->$name;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5614d2ad7be97659737254 && $this->initializer5614d2ad7be97659737254->__invoke($this->valueHolder5614d2ad7be97273691433, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5614d2ad7be97659737254);

        $this->valueHolder5614d2ad7be97273691433->$name = $value;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5614d2ad7be97659737254 && $this->initializer5614d2ad7be97659737254->__invoke($this->valueHolder5614d2ad7be97273691433, $this, '__isset', array('name' => $name), $this->initializer5614d2ad7be97659737254);

        return isset($this->valueHolder5614d2ad7be97273691433->$name);
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5614d2ad7be97659737254 && $this->initializer5614d2ad7be97659737254->__invoke($this->valueHolder5614d2ad7be97273691433, $this, '__unset', array('name' => $name), $this->initializer5614d2ad7be97659737254);

        unset($this->valueHolder5614d2ad7be97273691433->$name);
    }

    public function __clone()
    {
        $this->initializer5614d2ad7be97659737254 && $this->initializer5614d2ad7be97659737254->__invoke($this->valueHolder5614d2ad7be97273691433, $this, '__clone', array(), $this->initializer5614d2ad7be97659737254);

        $this->valueHolder5614d2ad7be97273691433 = clone $this->valueHolder5614d2ad7be97273691433;
    }

    public function __sleep()
    {
        $this->initializer5614d2ad7be97659737254 && $this->initializer5614d2ad7be97659737254->__invoke($this->valueHolder5614d2ad7be97273691433, $this, '__sleep', array(), $this->initializer5614d2ad7be97659737254);

        return array('valueHolder5614d2ad7be97273691433');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5614d2ad7be97659737254 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5614d2ad7be97659737254;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer5614d2ad7be97659737254 && $this->initializer5614d2ad7be97659737254->__invoke($this->valueHolder5614d2ad7be97273691433, $this, 'initializeProxy', array(), $this->initializer5614d2ad7be97659737254);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5614d2ad7be97273691433;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5614d2ad7be97273691433;
    }


}
